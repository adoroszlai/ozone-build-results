<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231212 10:57:55.183" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:21.255" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:21.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:21.257" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:38:21.253" endtime="20231212 10:38:21.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:21.258" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:38:21.258" endtime="20231212 10:38:21.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:21.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:21.258" endtime="20231212 10:38:21.259"/>
</kw>
<status status="PASS" starttime="20231212 10:38:21.253" endtime="20231212 10:38:21.259"/>
</kw>
<msg timestamp="20231212 10:38:21.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:21.253" endtime="20231212 10:38:21.259"/>
</kw>
<msg timestamp="20231212 10:38:21.259" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:38:21.252" endtime="20231212 10:38:21.259"/>
</kw>
<msg timestamp="20231212 10:38:21.259" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:38:21.252" endtime="20231212 10:38:21.259"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:38:21.260" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:38:21.259" endtime="20231212 10:38:21.260"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:21.263" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:21.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:21.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:38:21.261" endtime="20231212 10:38:21.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:21.306" level="INFO"/>
<status status="PASS" starttime="20231212 10:38:21.306" endtime="20231212 10:38:21.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:21.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:21.307" endtime="20231212 10:38:21.307"/>
</kw>
<status status="PASS" starttime="20231212 10:38:21.261" endtime="20231212 10:38:21.307"/>
</kw>
<msg timestamp="20231212 10:38:21.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:21.261" endtime="20231212 10:38:21.307"/>
</kw>
<status status="PASS" starttime="20231212 10:38:21.260" endtime="20231212 10:38:21.308"/>
</kw>
<status status="PASS" starttime="20231212 10:38:21.260" endtime="20231212 10:38:21.308"/>
</kw>
<status status="PASS" starttime="20231212 10:38:21.251" endtime="20231212 10:38:21.308"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231212 10:38:21.251" endtime="20231212 10:38:21.308"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231212 10:38:21.206" endtime="20231212 10:38:21.309"/>
</suite>
<suite id="s1-s2" name="Freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s2-s1" name="echoRPCLoad" source="/opt/hadoop/smoketest/freon/echoRPCLoad.robot">
<test id="s1-s2-s1-t1" name="[Read] Ozone Echo RPC Load Generator with request payload and response payload" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:24.711" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:28.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:28.780" level="INFO">${output} = 2023-12-12 10:38:26,767 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:26,903 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:24.709" endtime="20231212 10:38:28.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:28.781" level="INFO">2023-12-12 10:38:26,767 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:26,903 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:38:26,903 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:38:27,665 [main] INFO freon.BaseFreonGenerator: Executing test with prefix mlegieb7zt and number-of-tests 1
2023-12-12 10:38:27,703 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:38:28,705 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:38:28,741 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=498.015737, max=498.015737, mean=498.015737, stddev=0.0, median=498.015737, p75=498.015737, p95=498.015737, p98=498.015737, p99=498.015737, p999=498.015737, mean_rate=0.9686316195644372, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:38:28,742 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-12-12 10:38:28,742 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:38:28,742 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:38:28.781" endtime="20231212 10:38:28.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:28.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:28.782" endtime="20231212 10:38:28.782"/>
</kw>
<status status="PASS" starttime="20231212 10:38:24.709" endtime="20231212 10:38:28.782"/>
</kw>
<msg timestamp="20231212 10:38:28.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:24.708" endtime="20231212 10:38:28.782"/>
</kw>
<msg timestamp="20231212 10:38:28.783" level="INFO">${result} = 2023-12-12 10:38:26,767 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:26,903 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:24.708" endtime="20231212 10:38:28.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:38:28.783" endtime="20231212 10:38:28.783"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:24.707" endtime="20231212 10:38:28.783"/>
</test>
<test id="s1-s2-s1-t2" name="[Read] Ozone Echo RPC Load Generator with request payload and empty response payload" line="30">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:28.787" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:32.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:32.925" level="INFO">${output} = 2023-12-12 10:38:30,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:31,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:28.786" endtime="20231212 10:38:32.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:32.926" level="INFO">2023-12-12 10:38:30,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:31,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:38:31,017 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:38:31,821 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jmfnqhvzak and number-of-tests 1
2023-12-12 10:38:31,848 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:38:32,850 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:38:32,889 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=437.232624, max=437.232624, mean=437.232624, stddev=0.0, median=437.232624, p75=437.232624, p95=437.232624, p98=437.232624, p99=437.232624, p999=437.232624, mean_rate=0.9653888723559608, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:38:32,890 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-12-12 10:38:32,890 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:38:32,890 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:38:32.926" endtime="20231212 10:38:32.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:32.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:32.927" endtime="20231212 10:38:32.927"/>
</kw>
<status status="PASS" starttime="20231212 10:38:28.785" endtime="20231212 10:38:32.927"/>
</kw>
<msg timestamp="20231212 10:38:32.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:28.785" endtime="20231212 10:38:32.928"/>
</kw>
<msg timestamp="20231212 10:38:32.928" level="INFO">${result} = 2023-12-12 10:38:30,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:31,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:28.785" endtime="20231212 10:38:32.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:38:32.928" endtime="20231212 10:38:32.928"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:28.784" endtime="20231212 10:38:32.929"/>
</test>
<test id="s1-s2-s1-t3" name="[Read] Ozone Echo RPC Load Generator with empty request payload and response payload" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:32.933" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:36.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:36.857" level="INFO">${output} = 2023-12-12 10:38:35,045 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:35,138 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:32.931" endtime="20231212 10:38:36.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:36.859" level="INFO">2023-12-12 10:38:35,045 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:35,138 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:38:35,138 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:38:35,747 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ptswuuwgom and number-of-tests 1
2023-12-12 10:38:35,777 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:38:36,780 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:38:36,818 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=542.315729, max=542.315729, mean=542.315729, stddev=0.0, median=542.315729, p75=542.315729, p95=542.315729, p98=542.315729, p99=542.315729, p999=542.315729, mean_rate=0.966138357737151, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:38:36,818 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-12-12 10:38:36,819 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:38:36,819 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:38:36.858" endtime="20231212 10:38:36.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:36.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:36.859" endtime="20231212 10:38:36.860"/>
</kw>
<status status="PASS" starttime="20231212 10:38:32.931" endtime="20231212 10:38:36.860"/>
</kw>
<msg timestamp="20231212 10:38:36.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:32.930" endtime="20231212 10:38:36.860"/>
</kw>
<msg timestamp="20231212 10:38:36.860" level="INFO">${result} = 2023-12-12 10:38:35,045 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:35,138 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:32.930" endtime="20231212 10:38:36.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:38:36.860" endtime="20231212 10:38:36.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:32.929" endtime="20231212 10:38:36.861"/>
</test>
<test id="s1-s2-s1-t4" name="[Read] Ozone Echo RPC Load Generator with empty request payload and empty response payload" line="38">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:36.865" level="INFO">Running command 'ozone freon ome -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:40.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:40.803" level="INFO">${output} = 2023-12-12 10:38:38,833 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:38,932 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:36.863" endtime="20231212 10:38:40.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:40.804" level="INFO">2023-12-12 10:38:38,833 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:38,932 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:38:38,932 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:38:39,696 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nhoucot2ov and number-of-tests 1
2023-12-12 10:38:39,727 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:38:40,728 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:38:40,763 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=370.89253, max=370.89253, mean=370.89253, stddev=0.0, median=370.89253, p75=370.89253, p95=370.89253, p98=370.89253, p99=370.89253, p999=370.89253, mean_rate=0.9640609055773268, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:38:40,763 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-12-12 10:38:40,763 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:38:40,763 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:38:40.803" endtime="20231212 10:38:40.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:40.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:40.804" endtime="20231212 10:38:40.805"/>
</kw>
<status status="PASS" starttime="20231212 10:38:36.863" endtime="20231212 10:38:40.805"/>
</kw>
<msg timestamp="20231212 10:38:40.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:36.862" endtime="20231212 10:38:40.805"/>
</kw>
<msg timestamp="20231212 10:38:40.805" level="INFO">${result} = 2023-12-12 10:38:38,833 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:38,932 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:36.862" endtime="20231212 10:38:40.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:38:40.805" endtime="20231212 10:38:40.806"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:36.861" endtime="20231212 10:38:40.806"/>
</test>
<test id="s1-s2-s1-t5" name="[Write] Ozone Echo RPC Load Generator with request payload and response payload" line="42">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --payload-resp=1 --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:40.810" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --payload-resp=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:45.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:45.011" level="INFO">${output} = 2023-12-12 10:38:42,907 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:43,018 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:40.808" endtime="20231212 10:38:45.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:45.012" level="INFO">2023-12-12 10:38:42,907 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:43,018 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:38:43,018 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:38:43,883 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8cmuhiejys and number-of-tests 1
2023-12-12 10:38:43,921 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:38:44,922 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:38:44,967 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=685.312519, max=685.312519, mean=685.312519, stddev=0.0, median=685.312519, p75=685.312519, p95=685.312519, p98=685.312519, p99=685.312519, p999=685.312519, mean_rate=0.9547598638831323, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:38:44,967 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-12-12 10:38:44,967 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:38:44,967 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:38:45.011" endtime="20231212 10:38:45.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:45.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:45.012" endtime="20231212 10:38:45.013"/>
</kw>
<status status="PASS" starttime="20231212 10:38:40.808" endtime="20231212 10:38:45.013"/>
</kw>
<msg timestamp="20231212 10:38:45.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:40.808" endtime="20231212 10:38:45.013"/>
</kw>
<msg timestamp="20231212 10:38:45.013" level="INFO">${result} = 2023-12-12 10:38:42,907 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:43,018 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:40.807" endtime="20231212 10:38:45.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:38:45.013" endtime="20231212 10:38:45.014"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:40.806" endtime="20231212 10:38:45.014"/>
</test>
<test id="s1-s2-s1-t6" name="[Write] Ozone Echo RPC Load Generator with request payload and empty response payload" line="46">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:45.018" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:48.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:48.935" level="INFO">${output} = 2023-12-12 10:38:46,957 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:47,053 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:45.016" endtime="20231212 10:38:48.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:48.936" level="INFO">2023-12-12 10:38:46,957 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:47,053 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:38:47,054 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:38:47,823 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8rmjin5smi and number-of-tests 1
2023-12-12 10:38:47,857 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:38:48,861 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:38:48,897 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=469.653603, max=469.653603, mean=469.653603, stddev=0.0, median=469.653603, p75=469.653603, p95=469.653603, p98=469.653603, p99=469.653603, p999=469.653603, mean_rate=0.9595731192356308, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:38:48,897 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-12-12 10:38:48,898 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:38:48,898 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:38:48.936" endtime="20231212 10:38:48.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:48.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:48.937" endtime="20231212 10:38:48.937"/>
</kw>
<status status="PASS" starttime="20231212 10:38:45.016" endtime="20231212 10:38:48.937"/>
</kw>
<msg timestamp="20231212 10:38:48.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:45.016" endtime="20231212 10:38:48.937"/>
</kw>
<msg timestamp="20231212 10:38:48.938" level="INFO">${result} = 2023-12-12 10:38:46,957 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:47,053 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:45.015" endtime="20231212 10:38:48.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:38:48.938" endtime="20231212 10:38:48.938"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:45.014" endtime="20231212 10:38:48.938"/>
</test>
<test id="s1-s2-s1-t7" name="[Write] Ozone Echo RPC Load Generator with empty request payload and response payload" line="50">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-resp=1 --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:48.943" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-resp=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:53.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:53.004" level="INFO">${output} = 2023-12-12 10:38:51,030 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:51,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:48.941" endtime="20231212 10:38:53.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:53.005" level="INFO">2023-12-12 10:38:51,030 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:51,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:38:51,136 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:38:51,883 [main] INFO freon.BaseFreonGenerator: Executing test with prefix v1gi4k8edd and number-of-tests 1
2023-12-12 10:38:51,925 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:38:52,926 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:38:52,967 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=543.065452, max=543.065452, mean=543.065452, stddev=0.0, median=543.065452, p75=543.065452, p95=543.065452, p98=543.065452, p99=543.065452, p999=543.065452, mean_rate=0.9621440942402436, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:38:52,968 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-12-12 10:38:52,968 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:38:52,968 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:38:53.005" endtime="20231212 10:38:53.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:53.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:53.005" endtime="20231212 10:38:53.006"/>
</kw>
<status status="PASS" starttime="20231212 10:38:48.940" endtime="20231212 10:38:53.006"/>
</kw>
<msg timestamp="20231212 10:38:53.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:48.940" endtime="20231212 10:38:53.006"/>
</kw>
<msg timestamp="20231212 10:38:53.006" level="INFO">${result} = 2023-12-12 10:38:51,030 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:51,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:48.940" endtime="20231212 10:38:53.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:38:53.006" endtime="20231212 10:38:53.007"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:48.939" endtime="20231212 10:38:53.007"/>
</test>
<test id="s1-s2-s1-t8" name="[Write] Ozone Echo RPC Load Generator with empty request payload and empty response payload" line="54">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:53.011" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:38:57.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:38:57.151" level="INFO">${output} = 2023-12-12 10:38:55,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:55,202 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:53.009" endtime="20231212 10:38:57.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:38:57.152" level="INFO">2023-12-12 10:38:55,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:55,202 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:38:55,204 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:38:56,044 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wbm0bhhv2y and number-of-tests 1
2023-12-12 10:38:56,076 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:38:57,078 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:38:57,115 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=566.795041, max=566.795041, mean=566.795041, stddev=0.0, median=566.795041, p75=566.795041, p95=566.795041, p98=566.795041, p99=566.795041, p999=566.795041, mean_rate=0.9675116458651178, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:38:57,115 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-12-12 10:38:57,116 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:38:57,116 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:38:57.151" endtime="20231212 10:38:57.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:38:57.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:38:57.152" endtime="20231212 10:38:57.152"/>
</kw>
<status status="PASS" starttime="20231212 10:38:53.009" endtime="20231212 10:38:57.152"/>
</kw>
<msg timestamp="20231212 10:38:57.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:53.009" endtime="20231212 10:38:57.153"/>
</kw>
<msg timestamp="20231212 10:38:57.153" level="INFO">${result} = 2023-12-12 10:38:55,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:55,202 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:53.008" endtime="20231212 10:38:57.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:38:57.153" endtime="20231212 10:38:57.153"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:53.007" endtime="20231212 10:38:57.154"/>
</test>
<doc>Test freon echo RPC commands</doc>
<status status="PASS" starttime="20231212 10:38:24.687" endtime="20231212 10:38:57.155"/>
</suite>
<suite id="s1-s2-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:38:57.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:57.163" endtime="20231212 10:38:57.164"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20231212 10:38:57.165" endtime="20231212 10:38:57.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:38:57.165" endtime="20231212 10:38:57.165"/>
</kw>
<status status="PASS" starttime="20231212 10:38:57.162" endtime="20231212 10:38:57.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:57.162" endtime="20231212 10:38:57.165"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20231212 10:38:57.157" endtime="20231212 10:38:57.165"/>
</suite>
<suite id="s1-s2-s3" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s2-s3-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:38:57.175" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:39:04.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:39:04.911" level="INFO">${output} = 2023-12-12 10:38:59,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:59,276 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:57.173" endtime="20231212 10:39:04.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:39:04.912" level="INFO">2023-12-12 10:38:59,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:59,276 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:38:59,276 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:38:59,348 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2023-12-12 10:38:59,379 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:00,382 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:00,567 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:01,170 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-12-12 10:39:01,370 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-12-12 10:39:01,382 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:02,133 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 10:39:02,175 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-12-12 10:39:02,331 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 10:39:02,383 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:03,384 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:04,384 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:39:04,557 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2342.429027, max=2342.429027, mean=2342.429027, stddev=0.0, median=2342.429027, p75=2342.429027, p95=2342.429027, p98=2342.429027, p99=2342.429027, p999=2342.429027, mean_rate=0.32520222481651717, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:39:04,558 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-12-12 10:39:04,558 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:39:04,558 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:39:04.911" endtime="20231212 10:39:04.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:39:04.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:39:04.912" endtime="20231212 10:39:04.912"/>
</kw>
<status status="PASS" starttime="20231212 10:38:57.173" endtime="20231212 10:39:04.913"/>
</kw>
<msg timestamp="20231212 10:39:04.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:38:57.173" endtime="20231212 10:39:04.913"/>
</kw>
<msg timestamp="20231212 10:39:04.913" level="INFO">${result} = 2023-12-12 10:38:59,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:38:59,276 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:38:57.172" endtime="20231212 10:39:04.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:39:04.913" endtime="20231212 10:39:04.914"/>
</kw>
<status status="PASS" starttime="20231212 10:38:57.171" endtime="20231212 10:39:04.914"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:38:57.171" endtime="20231212 10:39:04.914"/>
</test>
<test id="s1-s2-s3-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:39:04.921" level="INFO">Running command 'ozone freon omkg --om-service-id=omservice -t 1 -n1 -p omkg  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:39:09.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:39:09.754" level="INFO">${output} = 2023-12-12 10:39:06,934 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:07,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:04.919" endtime="20231212 10:39:09.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:39:09.755" level="INFO">2023-12-12 10:39:06,934 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:07,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:39:07,040 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:39:07,108 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg and number-of-tests 1
2023-12-12 10:39:07,151 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:08,154 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:08,191 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:09,155 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:39:09,707 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=242.309912, max=242.309912, mean=242.309912, stddev=0.0, median=242.309912, p75=242.309912, p95=242.309912, p98=242.309912, p99=242.309912, p999=242.309912, mean_rate=0.945558505520538, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:39:09,708 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 10:39:09,708 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:39:09,708 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:39:09.754" endtime="20231212 10:39:09.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:39:09.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:39:09.755" endtime="20231212 10:39:09.755"/>
</kw>
<status status="PASS" starttime="20231212 10:39:04.918" endtime="20231212 10:39:09.756"/>
</kw>
<msg timestamp="20231212 10:39:09.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:39:04.918" endtime="20231212 10:39:09.756"/>
</kw>
<msg timestamp="20231212 10:39:09.756" level="INFO">${result} = 2023-12-12 10:39:06,934 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:07,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:04.917" endtime="20231212 10:39:09.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:39:09.756" endtime="20231212 10:39:09.756"/>
</kw>
<status status="PASS" starttime="20231212 10:39:04.915" endtime="20231212 10:39:09.757"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:39:04.915" endtime="20231212 10:39:09.757"/>
</test>
<test id="s1-s2-s3-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:39:09.762" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n1 -p ombg  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:39:14.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:39:14.857" level="INFO">${output} = 2023-12-12 10:39:11,788 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:11,893 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:09.760" endtime="20231212 10:39:14.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:39:14.858" level="INFO">2023-12-12 10:39:11,788 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:11,893 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:39:11,893 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:39:11,985 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg and number-of-tests 1
2023-12-12 10:39:12,026 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:13,034 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:13,290 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:14,035 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:39:14,815 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=64.923482, max=64.923482, mean=64.923482, stddev=0.0, median=64.923482, p75=64.923482, p95=64.923482, p98=64.923482, p99=64.923482, p999=64.923482, mean_rate=0.9663214302010953, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:39:14,816 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 10:39:14,816 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:39:14,816 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:39:14.857" endtime="20231212 10:39:14.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:39:14.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:39:14.858" endtime="20231212 10:39:14.859"/>
</kw>
<status status="PASS" starttime="20231212 10:39:09.760" endtime="20231212 10:39:14.859"/>
</kw>
<msg timestamp="20231212 10:39:14.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:39:09.759" endtime="20231212 10:39:14.859"/>
</kw>
<msg timestamp="20231212 10:39:14.859" level="INFO">${result} = 2023-12-12 10:39:11,788 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:11,893 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:09.759" endtime="20231212 10:39:14.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:39:14.859" endtime="20231212 10:39:14.860"/>
</kw>
<status status="PASS" starttime="20231212 10:39:09.758" endtime="20231212 10:39:14.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:39:09.757" endtime="20231212 10:39:14.860"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20231212 10:38:57.166" endtime="20231212 10:39:14.861"/>
</suite>
<suite id="s1-s2-s4" name="Read-Write-Key" source="/opt/hadoop/smoketest/freon/read-write-key.robot">
<test id="s1-s2-s4-t1" name="Pre-generate 100 keys of size 1 byte each to Ozone" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:39:14.871" level="INFO">Running command 'ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:39:31.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:39:31.503" level="INFO">${output} = 2023-12-12 10:39:16,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:17,072 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:14.869" endtime="20231212 10:39:31.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:39:31.503" level="INFO">2023-12-12 10:39:16,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:17,072 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:39:17,072 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:39:17,158 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 1
2023-12-12 10:39:17,205 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:18,206 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:18,347 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:18,828 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:18,857 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:18,884 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:18,906 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:18,933 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:18,951 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:18,972 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:18,986 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:19,006 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:19,053 [main] INFO rpc.RpcClient: Creating Volume: voltest, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-12-12 10:39:19,129 [main] INFO rpc.RpcClient: Creating Bucket: voltest/buckettest, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-12-12 10:39:19,207 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:39:19,400 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 10:39:19,471 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-12-12 10:39:19,704 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 10:39:20,697 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2023-12-12 10:39:31,164 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=1, min=11746.142016, max=11746.142016, mean=11746.142016, stddev=0.0, median=11746.142016, p75=11746.142016, p95=11746.142016, p98=11746.142016, p99=11746.142016, p999=11746.142016, mean_rate=0.08336483132459427, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:39:31,164 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 14
2023-12-12 10:39:31,164 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:39:31,164 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:39:31.503" endtime="20231212 10:39:31.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:39:31.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:39:31.504" endtime="20231212 10:39:31.504"/>
</kw>
<status status="PASS" starttime="20231212 10:39:14.869" endtime="20231212 10:39:31.504"/>
</kw>
<msg timestamp="20231212 10:39:31.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:39:14.868" endtime="20231212 10:39:31.504"/>
</kw>
<msg timestamp="20231212 10:39:31.505" level="INFO">${result} = 2023-12-12 10:39:16,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:17,072 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:14.868" endtime="20231212 10:39:31.505"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:39:14.867" endtime="20231212 10:39:31.505"/>
</test>
<test id="s1-s2-s4-t2" name="Read 10 keys from pre-generated keys" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:39:31.506" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20231212 10:39:31.506" endtime="20231212 10:39:31.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:39:31.509" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:39:38.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:39:38.513" level="INFO">${output} = 2023-12-12 10:39:33,788 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:33,900 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:31.508" endtime="20231212 10:39:38.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:39:38.514" level="INFO">2023-12-12 10:39:33,788 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:33,900 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:39:33,901 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:39:33,975 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-12-12 10:39:34,016 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:35,017 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:35,270 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:35,778 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:35,805 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:35,838 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:35,887 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:35,927 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:35,962 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:35,998 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:36,018 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:36,023 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:36,038 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:36,501 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 10:39:37,018 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:38,019 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-12-12 10:39:38,159 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=1683.772403, max=1743.085543, mean=1721.6199731000002, stddev=19.33105590175561, median=1719.813398, p75=1739.941656, p95=1743.085543, p98=1743.085543, p99=1743.085543, p999=1743.085543, mean_rate=4.792455405382943, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:39:38,160 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-12-12 10:39:38,160 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:39:38,160 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231212 10:39:38.513" endtime="20231212 10:39:38.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:39:38.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:39:38.514" endtime="20231212 10:39:38.514"/>
</kw>
<status status="PASS" starttime="20231212 10:39:31.507" endtime="20231212 10:39:38.515"/>
</kw>
<msg timestamp="20231212 10:39:38.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:39:31.507" endtime="20231212 10:39:38.515"/>
</kw>
<msg timestamp="20231212 10:39:38.515" level="INFO">${result} = 2023-12-12 10:39:33,788 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:33,900 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:31.507" endtime="20231212 10:39:38.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:39:38.515" endtime="20231212 10:39:38.515"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:39:31.505" endtime="20231212 10:39:38.516"/>
</test>
<test id="s1-s2-s4-t3" name="Read 10 keys metadata from pre-generated keys" line="34">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:39:38.517" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20231212 10:39:38.517" endtime="20231212 10:39:38.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:39:38.520" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:39:44.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:39:44.071" level="INFO">${output} = 2023-12-12 10:39:40,524 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:40,624 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:38.518" endtime="20231212 10:39:44.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:39:44.072" level="INFO">2023-12-12 10:39:40,524 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:40,624 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:39:40,624 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:39:40,705 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-12-12 10:39:40,744 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:41,752 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:42,149 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:42,707 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:42,730 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:42,752 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:42,753 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:42,785 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:42,813 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:42,843 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:42,864 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:42,886 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:42,910 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:43,752 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-12-12 10:39:44,035 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=103.129227, max=117.717983, mean=111.45516630000002, stddev=4.015506127588827, median=112.742857, p75=113.122155, p95=117.717983, p98=117.717983, p99=117.717983, p999=117.717983, mean_rate=9.282647904870815, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:39:44,035 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 10:39:44,036 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:39:44,036 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231212 10:39:44.071" endtime="20231212 10:39:44.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:39:44.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:39:44.072" endtime="20231212 10:39:44.073"/>
</kw>
<status status="PASS" starttime="20231212 10:39:38.518" endtime="20231212 10:39:44.073"/>
</kw>
<msg timestamp="20231212 10:39:44.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:39:38.518" endtime="20231212 10:39:44.073"/>
</kw>
<msg timestamp="20231212 10:39:44.073" level="INFO">${result} = 2023-12-12 10:39:40,524 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:40,624 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:38.517" endtime="20231212 10:39:44.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:39:44.073" endtime="20231212 10:39:44.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:39:38.516" endtime="20231212 10:39:44.074"/>
</test>
<test id="s1-s2-s4-t4" name="Read 10 keys when generate in linear manner" line="39">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:39:44.075" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20231212 10:39:44.075" endtime="20231212 10:39:44.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 1 -r 100 --size 0 -v voltest -b buckettest -p performanceTest --linear --percentage-read=0 --percentage-list=0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:39:44.079" level="INFO">Running command 'ozone freon ockrw -n 10 -t 1 -r 100 --size 0 -v voltest -b buckettest -p performanceTest --linear --percentage-read=0 --percentage-list=0 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:39:49.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:39:49.583" level="INFO">${output} = 2023-12-12 10:39:46,201 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:46,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:44.077" endtime="20231212 10:39:49.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:39:49.584" level="INFO">2023-12-12 10:39:46,201 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:46,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:39:46,368 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:39:46,450 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-12-12 10:39:46,492 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:47,493 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:47,689 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:48,502 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2023-12-12 10:39:49,502 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-12-12 10:39:49,543 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=29.586144, max=168.062327, mean=51.8134597, stddev=39.27109938699422, median=37.926221, p75=49.32077, p95=168.062327, p98=168.062327, p99=168.062327, p999=168.062327, mean_rate=7.682254221679098, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:39:49,544 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 10:39:49,544 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:39:49,544 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231212 10:39:49.584" endtime="20231212 10:39:49.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:39:49.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:39:49.585" endtime="20231212 10:39:49.585"/>
</kw>
<status status="PASS" starttime="20231212 10:39:44.077" endtime="20231212 10:39:49.585"/>
</kw>
<msg timestamp="20231212 10:39:49.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:39:44.076" endtime="20231212 10:39:49.585"/>
</kw>
<msg timestamp="20231212 10:39:49.586" level="INFO">${result} = 2023-12-12 10:39:46,201 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:46,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:44.076" endtime="20231212 10:39:49.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 1 -m -r 100 -v voltest -b buckettest -p performanceTest --linear --percentage-read=100 --percentage-list=0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:39:49.589" level="INFO">Running command 'ozone freon ockrw -n 10 -t 1 -m -r 100 -v voltest -b buckettest -p performanceTest --linear --percentage-read=100 --percentage-list=0 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:39:54.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:39:54.657" level="INFO">${output} = 2023-12-12 10:39:51,737 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:51,837 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:49.587" endtime="20231212 10:39:54.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:39:54.658" level="INFO">2023-12-12 10:39:51,737 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:51,837 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:39:51,838 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:39:51,910 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-12-12 10:39:51,941 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:52,947 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:52,987 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:53,947 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-12-12 10:39:54,608 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=2.320764, max=36.079762, mean=7.2875105, stddev=9.846594680355553, median=3.24201, p75=5.006588, p95=36.079762, p98=36.079762, p99=36.079762, p999=36.079762, mean_rate=9.384530630176092, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:39:54,609 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 10:39:54,609 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:39:54,610 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231212 10:39:54.657" endtime="20231212 10:39:54.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:39:54.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:39:54.658" endtime="20231212 10:39:54.659"/>
</kw>
<status status="PASS" starttime="20231212 10:39:49.587" endtime="20231212 10:39:54.659"/>
</kw>
<msg timestamp="20231212 10:39:54.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:39:49.586" endtime="20231212 10:39:54.659"/>
</kw>
<msg timestamp="20231212 10:39:54.659" level="INFO">${result} = 2023-12-12 10:39:51,737 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:51,837 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:49.586" endtime="20231212 10:39:54.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:39:54.659" endtime="20231212 10:39:54.660"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:39:44.074" endtime="20231212 10:39:54.660"/>
</test>
<test id="s1-s2-s4-t5" name="Write 10 keys of size 1 byte each from key index 0 to 99" line="45">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:39:54.661" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20231212 10:39:54.661" endtime="20231212 10:39:54.661"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:39:54.662" level="INFO">${size} = 1</msg>
<status status="PASS" starttime="20231212 10:39:54.661" endtime="20231212 10:39:54.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 0 --percentage-list 0 --size ${size} -r 100 -v voltest -b buckettest -p performanceTest --linear</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:39:54.664" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 0 --percentage-list 0 --size 1 -r 100 -v voltest -b buckettest -p performanceTest --linear 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:01.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:01.321" level="INFO">${output} = 2023-12-12 10:39:56,594 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:56,722 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:54.663" endtime="20231212 10:40:01.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:01.322" level="INFO">2023-12-12 10:39:56,594 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:56,722 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:39:56,722 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:39:56,795 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-12-12 10:39:56,824 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:57,831 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:57,923 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,449 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,485 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,506 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,537 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,563 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,589 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,610 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,632 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,656 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:39:58,831 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:39:59,132 [pool-2-thread-8] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 10:39:59,194 [pool-2-thread-9] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig3-
2023-12-12 10:39:59,194 [pool-2-thread-10] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig5-
2023-12-12 10:39:59,194 [pool-2-thread-6] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig9-
2023-12-12 10:39:59,195 [pool-2-thread-2] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig2-
2023-12-12 10:39:59,196 [pool-2-thread-8] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2023-12-12 10:39:59,196 [pool-2-thread-3] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-12-12 10:39:59,196 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig6-
2023-12-12 10:39:59,194 [pool-2-thread-5] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig4-
2023-12-12 10:39:59,200 [pool-2-thread-7] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig8-
2023-12-12 10:39:59,196 [pool-2-thread-4] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig7-
2023-12-12 10:39:59,380 [pool-2-thread-10] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 10:39:59,832 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:40:00,832 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-12-12 10:40:00,959 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=1625.237898, max=1713.630659, mean=1683.5510868000001, stddev=25.90477340497413, median=1694.287942, p75=1704.649555, p95=1713.630659, p98=1713.630659, p99=1713.630659, p999=1713.630659, mean_rate=4.414149882683505, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:40:00,959 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-12-12 10:40:00,959 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:40:00,959 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231212 10:40:01.322" endtime="20231212 10:40:01.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:01.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:01.323" endtime="20231212 10:40:01.323"/>
</kw>
<status status="PASS" starttime="20231212 10:39:54.662" endtime="20231212 10:40:01.323"/>
</kw>
<msg timestamp="20231212 10:40:01.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:39:54.662" endtime="20231212 10:40:01.323"/>
</kw>
<msg timestamp="20231212 10:40:01.324" level="INFO">${result} = 2023-12-12 10:39:56,594 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:39:56,722 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:39:54.662" endtime="20231212 10:40:01.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:40:01.324" endtime="20231212 10:40:01.324"/>
</kw>
<kw name="Execute" library="os">
<var>${keyName}</var>
<arg>echo -n '1' | md5sum | head -c 7</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:01.327" level="INFO">Running command 'echo -n '1' | md5sum | head -c 7 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:01.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:01.329" level="INFO">${output} = c4ca423</msg>
<status status="PASS" starttime="20231212 10:40:01.325" endtime="20231212 10:40:01.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:01.330" level="INFO">c4ca423</msg>
<status status="PASS" starttime="20231212 10:40:01.329" endtime="20231212 10:40:01.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:01.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:01.330" endtime="20231212 10:40:01.330"/>
</kw>
<status status="PASS" starttime="20231212 10:40:01.325" endtime="20231212 10:40:01.330"/>
</kw>
<msg timestamp="20231212 10:40:01.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:01.325" endtime="20231212 10:40:01.331"/>
</kw>
<msg timestamp="20231212 10:40:01.331" level="INFO">${keyName} = c4ca423</msg>
<status status="PASS" starttime="20231212 10:40:01.324" endtime="20231212 10:40:01.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /voltest/buckettest/performanceTest/${keyName}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:01.334" level="INFO">Running command 'ozone sh key info /voltest/buckettest/performanceTest/c4ca423 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:05.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:05.886" level="INFO">${output} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-12-12T10:39:20.559Z",
  "modificationTime" : "2023-12-12T1...</msg>
<status status="PASS" starttime="20231212 10:40:01.332" endtime="20231212 10:40:05.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:05.887" level="INFO">{
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-12-12T10:39:20.559Z",
  "modificationTime" : "2023-12-12T10:40:00.409Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200117,
    "length" : 1,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231212 10:40:05.887" endtime="20231212 10:40:05.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:05.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:05.888" endtime="20231212 10:40:05.888"/>
</kw>
<status status="PASS" starttime="20231212 10:40:01.332" endtime="20231212 10:40:05.888"/>
</kw>
<msg timestamp="20231212 10:40:05.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:01.331" endtime="20231212 10:40:05.888"/>
</kw>
<msg timestamp="20231212 10:40:05.889" level="INFO">${result} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-12-12T10:39:20.559Z",
  "modificationTime" : "2023-12-12T1...</msg>
<status status="PASS" starttime="20231212 10:40:01.331" endtime="20231212 10:40:05.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"dataSize\" : 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:40:05.889" endtime="20231212 10:40:05.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:39:54.660" endtime="20231212 10:40:05.889"/>
</test>
<test id="s1-s2-s4-t6" name="Run 90 % of read-key tasks and 10 % of write-key tasks for 10 keys from pre-generated keys" line="55">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:40:05.891" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20231212 10:40:05.890" endtime="20231212 10:40:05.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 90 --percentage-list 0 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:05.894" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 90 --percentage-list 0 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:12.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:12.490" level="INFO">${output} = 2023-12-12 10:40:07,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:07,959 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:05.892" endtime="20231212 10:40:12.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:12.491" level="INFO">2023-12-12 10:40:07,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:07,959 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:40:07,959 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:40:08,052 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-12-12 10:40:08,083 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:40:09,085 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:40:09,132 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:09,645 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:09,698 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:09,722 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:09,752 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:09,792 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:09,826 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:09,855 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:09,876 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:09,904 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:10,088 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:40:10,202 [pool-2-thread-8] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 10:40:11,089 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:40:12,089 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-12-12 10:40:12,149 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=1334.53987, max=1336.231813, mean=1335.3899459000002, stddev=0.5598847217696603, median=1335.378816, p75=1335.916846, p95=1336.231813, p98=1336.231813, p99=1336.231813, p999=1336.231813, mean_rate=4.619715593778705, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:40:12,149 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-12-12 10:40:12,149 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:40:12,149 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231212 10:40:12.490" endtime="20231212 10:40:12.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:12.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:12.491" endtime="20231212 10:40:12.492"/>
</kw>
<status status="PASS" starttime="20231212 10:40:05.892" endtime="20231212 10:40:12.492"/>
</kw>
<msg timestamp="20231212 10:40:12.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:05.891" endtime="20231212 10:40:12.492"/>
</kw>
<msg timestamp="20231212 10:40:12.492" level="INFO">${result} = 2023-12-12 10:40:07,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:07,959 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:05.891" endtime="20231212 10:40:12.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:40:12.492" endtime="20231212 10:40:12.493"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:40:05.890" endtime="20231212 10:40:12.493"/>
</test>
<test id="s1-s2-s4-t7" name="Run 50 % of read-key tasks, 40 % list-key tasks and 10 % of write-key tasks for 10 keys from pre-generated keys" line="60">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:40:12.494" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20231212 10:40:12.494" endtime="20231212 10:40:12.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 50 --percentage-list 40 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:12.497" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 50 --percentage-list 40 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:18.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:18.493" level="INFO">${output} = 2023-12-12 10:40:14,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:14,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:12.496" endtime="20231212 10:40:18.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:18.494" level="INFO">2023-12-12 10:40:14,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:14,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:40:14,482 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:40:14,558 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-12-12 10:40:14,590 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:40:15,592 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 10:40:15,743 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,243 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,262 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,284 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,305 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,329 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,358 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,380 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,412 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,432 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:16,592 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2023-12-12 10:40:16,790 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 10:40:16,911 [pool-2-thread-9] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2023-12-12 10:40:16,913 [pool-2-thread-8] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig2-
2023-12-12 10:40:16,911 [pool-2-thread-6] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-12-12 10:40:17,128 [pool-2-thread-8] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 10:40:17,592 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2023-12-12 10:40:18,138 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=54.432276, max=1480.65906, mean=627.2051319564433, stddev=692.2998223936885, median=63.092089, p75=1472.839663, p95=1480.65906, p98=1480.65906, p99=1480.65906, p999=1480.65906, mean_rate=5.982337740073868, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:40:18,139 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-12-12 10:40:18,139 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:40:18,139 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231212 10:40:18.493" endtime="20231212 10:40:18.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:18.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:18.494" endtime="20231212 10:40:18.495"/>
</kw>
<status status="PASS" starttime="20231212 10:40:12.495" endtime="20231212 10:40:18.495"/>
</kw>
<msg timestamp="20231212 10:40:18.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:12.495" endtime="20231212 10:40:18.495"/>
</kw>
<msg timestamp="20231212 10:40:18.495" level="INFO">${result} = 2023-12-12 10:40:14,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:14,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:12.495" endtime="20231212 10:40:18.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:40:18.495" endtime="20231212 10:40:18.496"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:40:12.493" endtime="20231212 10:40:18.496"/>
</test>
<doc>Test freon read/write key commands</doc>
<status status="PASS" starttime="20231212 10:39:14.862" endtime="20231212 10:40:18.496"/>
</suite>
<suite id="s1-s2-s5" name="Remove" source="/opt/hadoop/smoketest/freon/remove.robot">
<test id="s1-s2-s5-t1" name="Ozone Client Key Remover" line="26">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:18.507" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:25.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:25.039" level="INFO">${output} = 2023-12-12 10:40:20,384 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:20,490 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:18.506" endtime="20231212 10:40:25.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:25.040" level="INFO">2023-12-12 10:40:20,384 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:20,490 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:40:20,490 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:40:20,570 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2023-12-12 10:40:20,619 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:21,621 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:21,934 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:22,622 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:22,626 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 10:40:22,669 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-12-12 10:40:22,852 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 10:40:23,622 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:24,623 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:40:24,695 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1291.261892, max=1291.261892, mean=1291.261892, stddev=0.0, median=1291.261892, p75=1291.261892, p95=1291.261892, p98=1291.261892, p99=1291.261892, p999=1291.261892, mean_rate=0.4363776703964626, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:40:24,695 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-12-12 10:40:24,696 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:40:24,696 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:40:25.040" endtime="20231212 10:40:25.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:25.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:25.040" endtime="20231212 10:40:25.041"/>
</kw>
<status status="PASS" starttime="20231212 10:40:18.506" endtime="20231212 10:40:25.041"/>
</kw>
<msg timestamp="20231212 10:40:25.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:18.505" endtime="20231212 10:40:25.041"/>
</kw>
<msg timestamp="20231212 10:40:25.041" level="INFO">${result} = 2023-12-12 10:40:20,384 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:20,490 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:18.505" endtime="20231212 10:40:25.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:40:25.041" endtime="20231212 10:40:25.042"/>
</kw>
<status status="PASS" starttime="20231212 10:40:18.504" endtime="20231212 10:40:25.042"/>
</kw>
<kw name="Freon OCKR" library="freon">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:25.046" level="INFO">Running command 'ozone freon ockr --om-service-id=omservice -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:29.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:29.917" level="INFO">${output} = 2023-12-12 10:40:26,920 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:27,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:25.044" endtime="20231212 10:40:29.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:29.918" level="INFO">2023-12-12 10:40:26,920 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:27,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:40:27,017 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:40:27,112 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2023-12-12 10:40:27,146 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:28,150 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:28,254 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:29,150 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:40:29,878 [shutdown-hook-0] INFO metrics: type=TIMER, name=remove, count=1, min=85.43334, max=85.43334, mean=85.43334, stddev=0.0, median=85.43334, p75=85.43334, p95=85.43334, p98=85.43334, p99=85.43334, p999=85.43334, mean_rate=0.9498060805620274, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:40:29,878 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 10:40:29,879 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:40:29,879 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:40:29.918" endtime="20231212 10:40:29.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:29.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:29.918" endtime="20231212 10:40:29.919"/>
</kw>
<status status="PASS" starttime="20231212 10:40:25.044" endtime="20231212 10:40:29.919"/>
</kw>
<msg timestamp="20231212 10:40:29.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:25.044" endtime="20231212 10:40:29.919"/>
</kw>
<msg timestamp="20231212 10:40:29.919" level="INFO">${result} = 2023-12-12 10:40:26,920 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:27,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:25.043" endtime="20231212 10:40:29.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:40:29.920" endtime="20231212 10:40:29.920"/>
</kw>
<status status="PASS" starttime="20231212 10:40:25.042" endtime="20231212 10:40:29.920"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:40:18.503" endtime="20231212 10:40:29.920"/>
</test>
<test id="s1-s2-s5-t2" name="OM Bucket Remover" line="30">
<kw name="Freon OMBG" library="freon" type="SETUP">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:29.925" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:34.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:34.998" level="INFO">${output} = 2023-12-12 10:40:31,984 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:32,075 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:29.924" endtime="20231212 10:40:34.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:34.999" level="INFO">2023-12-12 10:40:31,984 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:32,075 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:40:32,075 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:40:32,141 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2023-12-12 10:40:32,177 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:33,192 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:33,347 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:34,192 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:40:34,943 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=40.086456, max=40.086456, mean=40.086456, stddev=0.0, median=40.086456, p75=40.086456, p95=40.086456, p98=40.086456, p99=40.086456, p999=40.086456, mean_rate=0.9466293639918968, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:40:34,943 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 10:40:34,943 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:40:34,943 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:40:34.998" endtime="20231212 10:40:34.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:34.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:34.999" endtime="20231212 10:40:35.000"/>
</kw>
<status status="PASS" starttime="20231212 10:40:29.924" endtime="20231212 10:40:35.000"/>
</kw>
<msg timestamp="20231212 10:40:35.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:29.923" endtime="20231212 10:40:35.000"/>
</kw>
<msg timestamp="20231212 10:40:35.000" level="INFO">${result} = 2023-12-12 10:40:31,984 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:32,075 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:29.923" endtime="20231212 10:40:35.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:40:35.000" endtime="20231212 10:40:35.001"/>
</kw>
<status status="PASS" starttime="20231212 10:40:29.921" endtime="20231212 10:40:35.001"/>
</kw>
<kw name="Freon OMBR" library="freon">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:35.005" level="INFO">Running command 'ozone freon ombr --om-service-id=omservice -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:39.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:39.337" level="INFO">${output} = 2023-12-12 10:40:37,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:37,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:35.003" endtime="20231212 10:40:39.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:39.338" level="INFO">2023-12-12 10:40:37,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:37,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:40:37,172 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:40:37,238 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2023-12-12 10:40:37,269 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:38,271 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:39,272 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:40:39,302 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-remove, count=1, min=500.076201, max=500.076201, mean=500.076201, stddev=0.0, median=500.076201, p75=500.076201, p95=500.076201, p98=500.076201, p99=500.076201, p999=500.076201, mean_rate=0.7164333342523024, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:40:39,302 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-12-12 10:40:39,303 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:40:39,303 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:40:39.338" endtime="20231212 10:40:39.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:39.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:39.339" endtime="20231212 10:40:39.339"/>
</kw>
<status status="PASS" starttime="20231212 10:40:35.003" endtime="20231212 10:40:39.339"/>
</kw>
<msg timestamp="20231212 10:40:39.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:35.003" endtime="20231212 10:40:39.339"/>
</kw>
<msg timestamp="20231212 10:40:39.340" level="INFO">${result} = 2023-12-12 10:40:37,073 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:37,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:35.002" endtime="20231212 10:40:39.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:40:39.340" endtime="20231212 10:40:39.340"/>
</kw>
<status status="PASS" starttime="20231212 10:40:35.001" endtime="20231212 10:40:39.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:40:29.921" endtime="20231212 10:40:39.340"/>
</test>
<doc>Test freon data remove commands</doc>
<status status="PASS" starttime="20231212 10:40:18.498" endtime="20231212 10:40:39.341"/>
</suite>
<suite id="s1-s2-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s2-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:40:39.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:39.349" endtime="20231212 10:40:39.350"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20231212 10:40:39.350" endtime="20231212 10:40:39.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:40:39.350" endtime="20231212 10:40:39.350"/>
</kw>
<status status="PASS" starttime="20231212 10:40:39.348" endtime="20231212 10:40:39.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:40:39.348" endtime="20231212 10:40:39.350"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20231212 10:40:39.342" endtime="20231212 10:40:39.351"/>
</suite>
<suite id="s1-s2-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:39.360" level="INFO">Running command 'ozone freon ockv --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:45.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:45.995" level="INFO">${output} = 2023-12-12 10:40:41,388 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:41,493 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:39.359" endtime="20231212 10:40:45.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:45.996" level="INFO">2023-12-12 10:40:41,388 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:41,493 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:40:41,493 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:40:41,588 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2023-12-12 10:40:41,638 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:42,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:42,960 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:40:43,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 10:40:43,679 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 10:40:44,643 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 10:40:45,648 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=46.604727, max=46.604727, mean=46.604727, stddev=0.0, median=46.604727, p75=46.604727, p95=46.604727, p98=46.604727, p99=46.604727, p999=46.604727, mean_rate=0.9473896310122404, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:40:45,648 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-12-12 10:40:45,649 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:40:45,649 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 10:40:45.996" endtime="20231212 10:40:45.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:40:45.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:40:45.996" endtime="20231212 10:40:45.997"/>
</kw>
<status status="PASS" starttime="20231212 10:40:39.358" endtime="20231212 10:40:45.997"/>
</kw>
<msg timestamp="20231212 10:40:45.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:40:39.358" endtime="20231212 10:40:45.997"/>
</kw>
<msg timestamp="20231212 10:40:45.997" level="INFO">${result} = 2023-12-12 10:40:41,388 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:40:41,493 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:40:39.357" endtime="20231212 10:40:45.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:40:45.998" endtime="20231212 10:40:45.998"/>
</kw>
<status status="PASS" starttime="20231212 10:40:39.357" endtime="20231212 10:40:45.998"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:40:39.356" endtime="20231212 10:40:45.998"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20231212 10:40:39.351" endtime="20231212 10:40:45.999"/>
</suite>
<status status="PASS" starttime="20231212 10:38:24.665" endtime="20231212 10:40:46.001"/>
</suite>
<suite id="s1-s3" name="ozonefs-o3fs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:40:49.339" level="INFO">${random} = 35775</msg>
<status status="PASS" starttime="20231212 10:40:49.339" endtime="20231212 10:40:49.339"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:40:49.340" level="INFO">${BUCKET} = 35775-link1-o3fs</msg>
<status status="PASS" starttime="20231212 10:40:49.340" endtime="20231212 10:40:49.340"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:40:49.341" level="INFO">${BUCKET2} = 35775-link2-o3fs</msg>
<status status="PASS" starttime="20231212 10:40:49.340" endtime="20231212 10:40:49.341"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:40:49.341" level="INFO">${BUCKET_IN_VOL2} = 35775-link3-o3fs</msg>
<status status="PASS" starttime="20231212 10:40:49.341" endtime="20231212 10:40:49.341"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20231212 10:40:49.344" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20231212 10:40:49.344" endtime="20231212 10:40:49.344"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231212 10:40:49.345" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20231212 10:40:49.344" endtime="20231212 10:40:49.345"/>
</kw>
<status status="PASS" starttime="20231212 10:40:49.344" endtime="20231212 10:40:49.345"/>
</kw>
<msg timestamp="20231212 10:40:49.345" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20231212 10:40:49.343" endtime="20231212 10:40:49.345"/>
</kw>
<status status="PASS" starttime="20231212 10:40:49.342" endtime="20231212 10:40:49.345"/>
</kw>
<msg timestamp="20231212 10:40:49.345" level="INFO">${url} = o3fs://35775-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20231212 10:40:49.342" endtime="20231212 10:40:49.345"/>
</kw>
<msg timestamp="20231212 10:40:49.346" level="INFO">${BASE_URL} = o3fs://35775-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20231212 10:40:49.341" endtime="20231212 10:40:49.346"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:40:49.346" level="INFO">${BASE_URL} = o3fs://35775-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20231212 10:40:49.346" endtime="20231212 10:40:49.346"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:40:49.347" level="INFO">${DEEP_URL} = o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir</msg>
<status status="PASS" starttime="20231212 10:40:49.346" endtime="20231212 10:40:49.347"/>
</kw>
<status status="PASS" starttime="20231212 10:40:49.339" endtime="20231212 10:40:49.347"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:49.350" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:53.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:53.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:40:49.348" endtime="20231212 10:40:53.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:53.559" level="INFO"/>
<status status="PASS" starttime="20231212 10:40:53.559" endtime="20231212 10:40:53.559"/>
</kw>
<status status="PASS" starttime="20231212 10:40:49.348" endtime="20231212 10:40:53.560"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:53.562" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:40:57.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:40:57.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:40:53.560" endtime="20231212 10:40:57.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:40:57.616" level="INFO"/>
<status status="PASS" starttime="20231212 10:40:57.616" endtime="20231212 10:40:57.616"/>
</kw>
<status status="PASS" starttime="20231212 10:40:53.560" endtime="20231212 10:40:57.616"/>
</kw>
<status status="PASS" starttime="20231212 10:40:49.348" endtime="20231212 10:40:57.616"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:40:57.622" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:01.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:01.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:40:57.620" endtime="20231212 10:41:01.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:01.518" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:01.517" endtime="20231212 10:41:01.518"/>
</kw>
<status status="PASS" starttime="20231212 10:40:57.620" endtime="20231212 10:41:01.518"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:01.520" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:05.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:05.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:01.519" endtime="20231212 10:41:05.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:05.600" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:05.600" endtime="20231212 10:41:05.600"/>
</kw>
<status status="PASS" starttime="20231212 10:41:01.518" endtime="20231212 10:41:05.601"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:05.603" level="INFO">Running command 'ozone sh bucket create fstest1-src/35775-link1-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:09.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:09.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:05.602" endtime="20231212 10:41:09.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:09.352" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:09.352" endtime="20231212 10:41:09.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:09.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:09.353" endtime="20231212 10:41:09.353"/>
</kw>
<status status="PASS" starttime="20231212 10:41:05.602" endtime="20231212 10:41:09.353"/>
</kw>
<msg timestamp="20231212 10:41:09.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:05.601" endtime="20231212 10:41:09.353"/>
</kw>
<status status="PASS" starttime="20231212 10:41:05.601" endtime="20231212 10:41:09.353"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:09.356" level="INFO">Running command 'ozone sh bucket create fstest1-src/35775-link2-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:13.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:13.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:09.355" endtime="20231212 10:41:13.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:13.606" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:13.606" endtime="20231212 10:41:13.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:13.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:13.606" endtime="20231212 10:41:13.607"/>
</kw>
<status status="PASS" starttime="20231212 10:41:09.354" endtime="20231212 10:41:13.607"/>
</kw>
<msg timestamp="20231212 10:41:13.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:09.354" endtime="20231212 10:41:13.607"/>
</kw>
<status status="PASS" starttime="20231212 10:41:09.354" endtime="20231212 10:41:13.607"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:13.611" level="INFO">Running command 'ozone sh bucket create fstest2-src/35775-link3-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:17.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:17.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:13.609" endtime="20231212 10:41:17.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:17.866" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:17.866" endtime="20231212 10:41:17.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:17.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:17.866" endtime="20231212 10:41:17.867"/>
</kw>
<status status="PASS" starttime="20231212 10:41:13.609" endtime="20231212 10:41:17.867"/>
</kw>
<msg timestamp="20231212 10:41:17.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:13.608" endtime="20231212 10:41:17.867"/>
</kw>
<status status="PASS" starttime="20231212 10:41:13.607" endtime="20231212 10:41:17.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:17.870" level="INFO">Running command 'ozone sh bucket link fstest1-src/35775-link1-o3fs-src fstest1/35775-link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:21.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:21.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:17.868" endtime="20231212 10:41:21.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:21.788" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:21.787" endtime="20231212 10:41:21.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:21.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:21.788" endtime="20231212 10:41:21.788"/>
</kw>
<status status="PASS" starttime="20231212 10:41:17.868" endtime="20231212 10:41:21.788"/>
</kw>
<msg timestamp="20231212 10:41:21.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:17.868" endtime="20231212 10:41:21.788"/>
</kw>
<status status="PASS" starttime="20231212 10:41:17.867" endtime="20231212 10:41:21.789"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:21.791" level="INFO">Running command 'ozone sh bucket link fstest1-src/35775-link2-o3fs-src fstest1/35775-link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:25.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:25.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:21.790" endtime="20231212 10:41:25.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:25.746" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:25.745" endtime="20231212 10:41:25.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:25.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:25.746" endtime="20231212 10:41:25.746"/>
</kw>
<status status="PASS" starttime="20231212 10:41:21.789" endtime="20231212 10:41:25.747"/>
</kw>
<msg timestamp="20231212 10:41:25.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:21.789" endtime="20231212 10:41:25.747"/>
</kw>
<status status="PASS" starttime="20231212 10:41:21.789" endtime="20231212 10:41:25.747"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:25.749" level="INFO">Running command 'ozone sh bucket link fstest2-src/35775-link3-o3fs-src fstest2/35775-link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:29.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:29.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:25.748" endtime="20231212 10:41:29.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:29.752" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:29.751" endtime="20231212 10:41:29.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:29.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:29.752" endtime="20231212 10:41:29.752"/>
</kw>
<status status="PASS" starttime="20231212 10:41:25.748" endtime="20231212 10:41:29.752"/>
</kw>
<msg timestamp="20231212 10:41:29.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:25.747" endtime="20231212 10:41:29.753"/>
</kw>
<status status="PASS" starttime="20231212 10:41:25.747" endtime="20231212 10:41:29.753"/>
</kw>
<status status="PASS" starttime="20231212 10:40:57.619" endtime="20231212 10:41:29.753"/>
</kw>
<status status="PASS" starttime="20231212 10:40:57.616" endtime="20231212 10:41:29.753"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:29.756" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:34.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:34.032" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231212 10:41:29.754" endtime="20231212 10:41:34.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:34.032" level="INFO">[ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-12-12T10:40:53.485Z",
  "modificationTime" : "2023-12-12T10:40:53.485Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-12-12T10:41:01.447Z",
  "modificationTime" : "2023-12-12T10:41:01.447Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T10:40:57.482Z",
  "modificationTime" : "2023-12-12T10:40:57.482Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T10:41:05.525Z",
  "modificationTime" : "2023-12-12T10:41:05.525Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "om",
  "owner" : "om",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-12-12T10:37:51.782Z",
  "modificationTime" : "2023-12-12T10:37:51.782Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-12-12T10:39:01.189Z",
  "modificationTime" : "2023-12-12T10:39:01.189Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "voltest",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T10:39:19.083Z",
  "modificationTime" : "2023-12-12T10:39:19.083Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20231212 10:41:34.032" endtime="20231212 10:41:34.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:34.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:34.033" endtime="20231212 10:41:34.033"/>
</kw>
<status status="PASS" starttime="20231212 10:41:29.754" endtime="20231212 10:41:34.033"/>
</kw>
<msg timestamp="20231212 10:41:34.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:29.754" endtime="20231212 10:41:34.033"/>
</kw>
<msg timestamp="20231212 10:41:34.034" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231212 10:41:29.753" endtime="20231212 10:41:34.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:41:34.034" endtime="20231212 10:41:34.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:41:34.034" endtime="20231212 10:41:34.034"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:41:34.035" endtime="20231212 10:41:34.035"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:34.038" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:38.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:38.469" level="INFO">${output} = [ {
  "volumeName" : "fstest1",
  "bucketName" : "35775-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "35775-link1-o3fs-src",
  "creationTime" : "2023-12-12T10:41:21.703Z",
  "modi...</msg>
<status status="PASS" starttime="20231212 10:41:34.036" endtime="20231212 10:41:38.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:38.470" level="INFO">[ {
  "volumeName" : "fstest1",
  "bucketName" : "35775-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "35775-link1-o3fs-src",
  "creationTime" : "2023-12-12T10:41:21.703Z",
  "modificationTime" : "2023-12-12T10:41:21.703Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "fstest1",
  "bucketName" : "35775-link2-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "35775-link2-o3fs-src",
  "creationTime" : "2023-12-12T10:41:25.582Z",
  "modificationTime" : "2023-12-12T10:41:25.582Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20231212 10:41:38.470" endtime="20231212 10:41:38.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:38.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:38.470" endtime="20231212 10:41:38.471"/>
</kw>
<status status="PASS" starttime="20231212 10:41:34.036" endtime="20231212 10:41:38.471"/>
</kw>
<msg timestamp="20231212 10:41:38.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:34.036" endtime="20231212 10:41:38.471"/>
</kw>
<msg timestamp="20231212 10:41:38.471" level="INFO">${result} = [ {
  "volumeName" : "fstest1",
  "bucketName" : "35775-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "35775-link1-o3fs-src",
  "creationTime" : "2023-12-12T10:41:21.703Z",
  "modi...</msg>
<status status="PASS" starttime="20231212 10:41:34.035" endtime="20231212 10:41:38.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:41:38.471" endtime="20231212 10:41:38.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:41:38.472" endtime="20231212 10:41:38.472"/>
</kw>
<status status="PASS" starttime="20231212 10:41:29.753" endtime="20231212 10:41:38.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:38.473" level="INFO">Completed setup for o3fs tests with links in fstest1/35775-link1-o3fs using FS base URL: o3fs://35775-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20231212 10:41:38.472" endtime="20231212 10:41:38.473"/>
</kw>
<status status="PASS" starttime="20231212 10:40:49.338" endtime="20231212 10:41:38.473"/>
</kw>
<test id="s1-s3-t1" name="List root" line="26">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20231212 10:41:38.478" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20231212 10:41:38.477" endtime="20231212 10:41:38.478"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231212 10:41:38.478" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20231212 10:41:38.478" endtime="20231212 10:41:38.478"/>
</kw>
<status status="PASS" starttime="20231212 10:41:38.477" endtime="20231212 10:41:38.478"/>
</kw>
<msg timestamp="20231212 10:41:38.478" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20231212 10:41:38.476" endtime="20231212 10:41:38.478"/>
</kw>
<status status="PASS" starttime="20231212 10:41:38.475" endtime="20231212 10:41:38.479"/>
</kw>
<msg timestamp="20231212 10:41:38.479" level="INFO">${url} = o3fs://35775-link1-o3fs.fstest1.omservice/</msg>
<status status="PASS" starttime="20231212 10:41:38.475" endtime="20231212 10:41:38.479"/>
</kw>
<msg timestamp="20231212 10:41:38.479" level="INFO">${root} = o3fs://35775-link1-o3fs.fstest1.omservice/</msg>
<status status="PASS" starttime="20231212 10:41:38.474" endtime="20231212 10:41:38.479"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:38.482" level="INFO">Running command 'ozone fs -ls o3fs://35775-link1-o3fs.fstest1.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:41.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:41.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:38.480" endtime="20231212 10:41:41.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:41.773" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:41.772" endtime="20231212 10:41:41.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:41.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:41.773" endtime="20231212 10:41:41.773"/>
</kw>
<status status="PASS" starttime="20231212 10:41:38.480" endtime="20231212 10:41:41.774"/>
</kw>
<msg timestamp="20231212 10:41:41.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:38.480" endtime="20231212 10:41:41.774"/>
</kw>
<status status="PASS" starttime="20231212 10:41:38.479" endtime="20231212 10:41:41.774"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:41:38.473" endtime="20231212 10:41:41.774"/>
</test>
<test id="s1-s3-t2" name="List non-existent volume" line="30">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20231212 10:41:41.779" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20231212 10:41:41.779" endtime="20231212 10:41:41.779"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231212 10:41:41.780" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20231212 10:41:41.779" endtime="20231212 10:41:41.780"/>
</kw>
<status status="PASS" starttime="20231212 10:41:41.778" endtime="20231212 10:41:41.780"/>
</kw>
<msg timestamp="20231212 10:41:41.780" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20231212 10:41:41.777" endtime="20231212 10:41:41.780"/>
</kw>
<status status="PASS" starttime="20231212 10:41:41.777" endtime="20231212 10:41:41.780"/>
</kw>
<msg timestamp="20231212 10:41:41.780" level="INFO">${url} = o3fs://35775-link1-o3fs.no-such-volume.omservice/</msg>
<status status="PASS" starttime="20231212 10:41:41.776" endtime="20231212 10:41:41.780"/>
</kw>
<msg timestamp="20231212 10:41:41.780" level="INFO">${url} = o3fs://35775-link1-o3fs.no-such-volume.omservice/</msg>
<status status="PASS" starttime="20231212 10:41:41.775" endtime="20231212 10:41:41.780"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:41.782" level="INFO">Running command 'ozone fs -ls o3fs://35775-link1-o3fs.no-such-volume.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:45.017" level="INFO">${rc} = 1</msg>
<msg timestamp="20231212 10:41:45.017" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20231212 10:41:41.781" endtime="20231212 10:41:45.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:45.018" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20231212 10:41:45.018" endtime="20231212 10:41:45.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:45.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:45.018" endtime="20231212 10:41:45.019"/>
</kw>
<msg timestamp="20231212 10:41:45.019" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20231212 10:41:41.781" endtime="20231212 10:41:45.019"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:41:45.019" endtime="20231212 10:41:45.020"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:41:41.775" endtime="20231212 10:41:45.020"/>
</test>
<test id="s1-s3-t3" name="List non-existent bucket" line="35">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20231212 10:41:45.025" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20231212 10:41:45.025" endtime="20231212 10:41:45.025"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231212 10:41:45.025" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20231212 10:41:45.025" endtime="20231212 10:41:45.025"/>
</kw>
<status status="PASS" starttime="20231212 10:41:45.024" endtime="20231212 10:41:45.026"/>
</kw>
<msg timestamp="20231212 10:41:45.026" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20231212 10:41:45.023" endtime="20231212 10:41:45.026"/>
</kw>
<status status="PASS" starttime="20231212 10:41:45.023" endtime="20231212 10:41:45.026"/>
</kw>
<msg timestamp="20231212 10:41:45.026" level="INFO">${url} = o3fs://no-such-bucket.fstest1.omservice/</msg>
<status status="PASS" starttime="20231212 10:41:45.022" endtime="20231212 10:41:45.026"/>
</kw>
<msg timestamp="20231212 10:41:45.026" level="INFO">${url} = o3fs://no-such-bucket.fstest1.omservice/</msg>
<status status="PASS" starttime="20231212 10:41:45.021" endtime="20231212 10:41:45.026"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:45.029" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:48.533" level="INFO">${rc} = 1</msg>
<msg timestamp="20231212 10:41:48.533" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20231212 10:41:45.027" endtime="20231212 10:41:48.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:48.534" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20231212 10:41:48.534" endtime="20231212 10:41:48.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:48.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:48.534" endtime="20231212 10:41:48.535"/>
</kw>
<msg timestamp="20231212 10:41:48.535" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20231212 10:41:45.027" endtime="20231212 10:41:48.535"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:41:48.535" endtime="20231212 10:41:48.536"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:41:45.021" endtime="20231212 10:41:48.536"/>
</test>
<test id="s1-s3-t4" name="Create dir with parents" line="40">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:48.540" level="INFO">Running command 'ozone fs -mkdir -p o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:52.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:52.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:48.538" endtime="20231212 10:41:52.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:52.162" level="INFO"/>
<status status="PASS" starttime="20231212 10:41:52.161" endtime="20231212 10:41:52.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:52.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:52.162" endtime="20231212 10:41:52.162"/>
</kw>
<status status="PASS" starttime="20231212 10:41:48.538" endtime="20231212 10:41:52.162"/>
</kw>
<msg timestamp="20231212 10:41:52.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:48.537" endtime="20231212 10:41:52.163"/>
</kw>
<status status="PASS" starttime="20231212 10:41:48.537" endtime="20231212 10:41:52.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:52.166" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:41:56.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:41:56.696" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20231212 10:41:52.164" endtime="20231212 10:41:56.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:41:56.698" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20231212 10:41:56.697" endtime="20231212 10:41:56.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:41:56.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:41:56.698" endtime="20231212 10:41:56.698"/>
</kw>
<status status="PASS" starttime="20231212 10:41:52.164" endtime="20231212 10:41:56.698"/>
</kw>
<msg timestamp="20231212 10:41:56.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:52.164" endtime="20231212 10:41:56.699"/>
</kw>
<msg timestamp="20231212 10:41:56.699" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20231212 10:41:52.163" endtime="20231212 10:41:56.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:41:56.699" endtime="20231212 10:41:56.699"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:41:48.536" endtime="20231212 10:41:56.699"/>
</test>
<test id="s1-s3-t5" name="Copy from local" line="45">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:41:56.703" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:02.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:02.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:41:56.702" endtime="20231212 10:42:02.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:02.358" level="INFO"/>
<status status="PASS" starttime="20231212 10:42:02.358" endtime="20231212 10:42:02.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:02.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:02.359" endtime="20231212 10:42:02.359"/>
</kw>
<status status="PASS" starttime="20231212 10:41:56.701" endtime="20231212 10:42:02.359"/>
</kw>
<msg timestamp="20231212 10:42:02.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:41:56.701" endtime="20231212 10:42:02.359"/>
</kw>
<status status="PASS" starttime="20231212 10:41:56.701" endtime="20231212 10:42:02.360"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:02.363" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:06.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:06.506" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:42:02.361" endtime="20231212 10:42:06.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:06.507" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:42:06.507" endtime="20231212 10:42:06.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:06.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:06.507" endtime="20231212 10:42:06.508"/>
</kw>
<status status="PASS" starttime="20231212 10:42:02.361" endtime="20231212 10:42:06.508"/>
</kw>
<msg timestamp="20231212 10:42:06.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:02.360" endtime="20231212 10:42:06.508"/>
</kw>
<msg timestamp="20231212 10:42:06.508" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:42:02.360" endtime="20231212 10:42:06.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:42:06.508" endtime="20231212 10:42:06.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:06.512" level="INFO">Running command 'ozone sh key info fstest1/35775-link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:10.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:10.839" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20231212 10:42:06.510" endtime="20231212 10:42:10.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:10.840" level="INFO">THREE</msg>
<status status="PASS" starttime="20231212 10:42:10.839" endtime="20231212 10:42:10.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:10.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:10.840" endtime="20231212 10:42:10.841"/>
</kw>
<status status="PASS" starttime="20231212 10:42:06.510" endtime="20231212 10:42:10.841"/>
</kw>
<msg timestamp="20231212 10:42:10.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:06.510" endtime="20231212 10:42:10.841"/>
</kw>
<msg timestamp="20231212 10:42:10.841" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20231212 10:42:06.509" endtime="20231212 10:42:10.841"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:42:10.842" endtime="20231212 10:42:10.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:41:56.700" endtime="20231212 10:42:10.842"/>
</test>
<test id="s1-s3-t6" name="Put" line="52">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:10.846" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:16.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:16.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:42:10.845" endtime="20231212 10:42:16.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:16.488" level="INFO"/>
<status status="PASS" starttime="20231212 10:42:16.487" endtime="20231212 10:42:16.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:16.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:16.488" endtime="20231212 10:42:16.488"/>
</kw>
<status status="PASS" starttime="20231212 10:42:10.844" endtime="20231212 10:42:16.488"/>
</kw>
<msg timestamp="20231212 10:42:16.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:10.844" endtime="20231212 10:42:16.489"/>
</kw>
<msg timestamp="20231212 10:42:16.489" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:42:10.843" endtime="20231212 10:42:16.489"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231212 10:42:16.489" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231212 10:42:16.489" endtime="20231212 10:42:16.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:16.492" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:20.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:20.774" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20231212 10:42:16.491" endtime="20231212 10:42:20.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:20.775" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20231212 10:42:20.774" endtime="20231212 10:42:20.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:20.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:20.775" endtime="20231212 10:42:20.775"/>
</kw>
<status status="PASS" starttime="20231212 10:42:16.490" endtime="20231212 10:42:20.776"/>
</kw>
<msg timestamp="20231212 10:42:20.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:16.490" endtime="20231212 10:42:20.776"/>
</kw>
<msg timestamp="20231212 10:42:20.776" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20231212 10:42:16.489" endtime="20231212 10:42:20.776"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:42:20.776" endtime="20231212 10:42:20.776"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:42:10.843" endtime="20231212 10:42:20.777"/>
</test>
<test id="s1-s3-t7" name="Check disk usage after create a file which uses RATIS replication type" line="59">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:42:20.778" level="INFO">${vol} = ipzjohba</msg>
<status status="PASS" starttime="20231212 10:42:20.778" endtime="20231212 10:42:20.778"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:42:20.779" level="INFO">${bucket} = apchleza</msg>
<status status="PASS" starttime="20231212 10:42:20.778" endtime="20231212 10:42:20.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:20.781" level="INFO">Running command 'ozone sh volume create /ipzjohba 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:25.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:25.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:42:20.780" endtime="20231212 10:42:25.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:25.013" level="INFO"/>
<status status="PASS" starttime="20231212 10:42:25.012" endtime="20231212 10:42:25.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:25.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:25.013" endtime="20231212 10:42:25.013"/>
</kw>
<status status="PASS" starttime="20231212 10:42:20.780" endtime="20231212 10:42:25.013"/>
</kw>
<msg timestamp="20231212 10:42:25.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:20.779" endtime="20231212 10:42:25.014"/>
</kw>
<status status="PASS" starttime="20231212 10:42:20.779" endtime="20231212 10:42:25.014"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type RATIS --replication 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:25.017" level="INFO">Running command 'ozone sh bucket create /ipzjohba/apchleza --type RATIS --replication 3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:28.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:28.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:42:25.015" endtime="20231212 10:42:28.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:28.977" level="INFO"/>
<status status="PASS" starttime="20231212 10:42:28.977" endtime="20231212 10:42:28.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:28.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:28.978" endtime="20231212 10:42:28.978"/>
</kw>
<status status="PASS" starttime="20231212 10:42:25.015" endtime="20231212 10:42:28.978"/>
</kw>
<msg timestamp="20231212 10:42:28.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:25.014" endtime="20231212 10:42:28.978"/>
</kw>
<status status="PASS" starttime="20231212 10:42:25.014" endtime="20231212 10:42:28.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE1.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:28.982" level="INFO">Running command 'ozone fs -put NOTICE.txt /ipzjohba/apchleza/PUTFILE1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:37.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:37.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:42:28.980" endtime="20231212 10:42:37.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:37.116" level="INFO"/>
<status status="PASS" starttime="20231212 10:42:37.115" endtime="20231212 10:42:37.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:37.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:37.116" endtime="20231212 10:42:37.117"/>
</kw>
<status status="PASS" starttime="20231212 10:42:28.980" endtime="20231212 10:42:37.117"/>
</kw>
<msg timestamp="20231212 10:42:37.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:28.979" endtime="20231212 10:42:37.117"/>
</kw>
<status status="PASS" starttime="20231212 10:42:28.979" endtime="20231212 10:42:37.117"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:37.120" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:37.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:37.122" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20231212 10:42:37.118" endtime="20231212 10:42:37.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:37.123" level="INFO">17289</msg>
<status status="PASS" starttime="20231212 10:42:37.123" endtime="20231212 10:42:37.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:37.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:37.123" endtime="20231212 10:42:37.124"/>
</kw>
<status status="PASS" starttime="20231212 10:42:37.118" endtime="20231212 10:42:37.124"/>
</kw>
<msg timestamp="20231212 10:42:37.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:37.118" endtime="20231212 10:42:37.124"/>
</kw>
<msg timestamp="20231212 10:42:37.124" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20231212 10:42:37.117" endtime="20231212 10:42:37.124"/>
</kw>
<kw name="Get Disk Usage of File with RATIS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} * ${replicationFactor}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:42:37.125" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20231212 10:42:37.125" endtime="20231212 10:42:37.125"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231212 10:42:37.126" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20231212 10:42:37.125" endtime="20231212 10:42:37.126"/>
</kw>
<msg timestamp="20231212 10:42:37.126" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20231212 10:42:37.124" endtime="20231212 10:42:37.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:37.128" level="INFO">Running command 'ozone fs -du /ipzjohba/apchleza 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:40.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:40.965" level="INFO">${output} = 17289  51867  /ipzjohba/apchleza/PUTFILE1.txt</msg>
<status status="PASS" starttime="20231212 10:42:37.127" endtime="20231212 10:42:40.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:40.966" level="INFO">17289  51867  /ipzjohba/apchleza/PUTFILE1.txt</msg>
<status status="PASS" starttime="20231212 10:42:40.965" endtime="20231212 10:42:40.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:40.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:40.966" endtime="20231212 10:42:40.966"/>
</kw>
<status status="PASS" starttime="20231212 10:42:37.127" endtime="20231212 10:42:40.967"/>
</kw>
<msg timestamp="20231212 10:42:40.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:37.126" endtime="20231212 10:42:40.967"/>
</kw>
<msg timestamp="20231212 10:42:40.967" level="INFO">${result} = 17289  51867  /ipzjohba/apchleza/PUTFILE1.txt</msg>
<status status="PASS" starttime="20231212 10:42:37.126" endtime="20231212 10:42:40.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE1.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:42:40.967" endtime="20231212 10:42:40.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:42:40.968" endtime="20231212 10:42:40.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:42:40.968" endtime="20231212 10:42:40.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:42:20.777" endtime="20231212 10:42:40.968"/>
</test>
<test id="s1-s3-t8" name="Put with Streaming" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ${DEEP_URL}/STREAMING.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:40.972" level="INFO">Running command 'ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/STREAMING.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:46.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:46.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:42:40.971" endtime="20231212 10:42:46.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:46.479" level="INFO"/>
<status status="PASS" starttime="20231212 10:42:46.478" endtime="20231212 10:42:46.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:46.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:46.479" endtime="20231212 10:42:46.479"/>
</kw>
<status status="PASS" starttime="20231212 10:42:40.970" endtime="20231212 10:42:46.479"/>
</kw>
<msg timestamp="20231212 10:42:46.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:40.970" endtime="20231212 10:42:46.480"/>
</kw>
<msg timestamp="20231212 10:42:46.480" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:42:40.969" endtime="20231212 10:42:46.480"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231212 10:42:46.480" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231212 10:42:46.480" endtime="20231212 10:42:46.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:46.484" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:51.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:51.125" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:42:46.482" endtime="20231212 10:42:51.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:51.126" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:42:51.126" endtime="20231212 10:42:51.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:51.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:51.127" endtime="20231212 10:42:51.127"/>
</kw>
<status status="PASS" starttime="20231212 10:42:46.481" endtime="20231212 10:42:51.127"/>
</kw>
<msg timestamp="20231212 10:42:51.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:46.481" endtime="20231212 10:42:51.127"/>
</kw>
<msg timestamp="20231212 10:42:51.128" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:42:46.480" endtime="20231212 10:42:51.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:42:51.128" endtime="20231212 10:42:51.128"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:42:40.969" endtime="20231212 10:42:51.128"/>
</test>
<test id="s1-s3-t9" name="List" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:51.133" level="INFO">Running command 'ozone fs -ls o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:54.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:54.783" level="INFO">${output} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:42 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:...</msg>
<status status="PASS" starttime="20231212 10:42:51.131" endtime="20231212 10:42:54.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:54.784" level="INFO">Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:42 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:42 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:42 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:42:54.783" endtime="20231212 10:42:54.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:54.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:54.784" endtime="20231212 10:42:54.785"/>
</kw>
<status status="PASS" starttime="20231212 10:42:51.131" endtime="20231212 10:42:54.785"/>
</kw>
<msg timestamp="20231212 10:42:54.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:51.130" endtime="20231212 10:42:54.785"/>
</kw>
<msg timestamp="20231212 10:42:54.785" level="INFO">${result} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:42 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:...</msg>
<status status="PASS" starttime="20231212 10:42:51.130" endtime="20231212 10:42:54.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:42:54.785" endtime="20231212 10:42:54.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:42:54.786" endtime="20231212 10:42:54.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:42:54.786" endtime="20231212 10:42:54.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:42:51.129" endtime="20231212 10:42:54.787"/>
</test>
<test id="s1-s3-t10" name="Move" line="86">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:54.791" level="INFO">Running command 'ozone fs -mv o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/NOTICE.txt o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:42:58.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:42:58.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:42:54.789" endtime="20231212 10:42:58.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:42:58.528" level="INFO"/>
<status status="PASS" starttime="20231212 10:42:58.528" endtime="20231212 10:42:58.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:42:58.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:42:58.528" endtime="20231212 10:42:58.529"/>
</kw>
<status status="PASS" starttime="20231212 10:42:54.789" endtime="20231212 10:42:58.529"/>
</kw>
<msg timestamp="20231212 10:42:58.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:54.788" endtime="20231212 10:42:58.529"/>
</kw>
<status status="PASS" starttime="20231212 10:42:54.788" endtime="20231212 10:42:58.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:42:58.532" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:02.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:02.937" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:42:58.530" endtime="20231212 10:43:02.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:02.938" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:43:02.938" endtime="20231212 10:43:02.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:02.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:02.938" endtime="20231212 10:43:02.939"/>
</kw>
<status status="PASS" starttime="20231212 10:42:58.530" endtime="20231212 10:43:02.939"/>
</kw>
<msg timestamp="20231212 10:43:02.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:42:58.530" endtime="20231212 10:43:02.939"/>
</kw>
<msg timestamp="20231212 10:43:02.939" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:42:58.529" endtime="20231212 10:43:02.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:02.940" endtime="20231212 10:43:02.940"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:02.940" endtime="20231212 10:43:02.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:42:54.787" endtime="20231212 10:43:02.941"/>
</test>
<test id="s1-s3-t11" name="Copy within FS" line="92">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:02.945" level="INFO">Running command 'ozone fs -mkdir -p o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:06.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:06.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:43:02.943" endtime="20231212 10:43:06.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:06.515" level="INFO"/>
<status status="PASS" starttime="20231212 10:43:06.514" endtime="20231212 10:43:06.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:06.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:06.515" endtime="20231212 10:43:06.515"/>
</kw>
<status status="PASS" starttime="20231212 10:43:02.943" endtime="20231212 10:43:06.515"/>
</kw>
<msg timestamp="20231212 10:43:06.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:02.942" endtime="20231212 10:43:06.516"/>
</kw>
<status status="PASS" starttime="20231212 10:43:02.942" endtime="20231212 10:43:06.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:06.519" level="INFO">Running command 'ozone fs -cp o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/MOVED.TXT o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:12.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:12.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:43:06.517" endtime="20231212 10:43:12.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:12.593" level="INFO"/>
<status status="PASS" starttime="20231212 10:43:12.593" endtime="20231212 10:43:12.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:12.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:12.593" endtime="20231212 10:43:12.594"/>
</kw>
<status status="PASS" starttime="20231212 10:43:06.517" endtime="20231212 10:43:12.594"/>
</kw>
<msg timestamp="20231212 10:43:12.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:06.516" endtime="20231212 10:43:12.594"/>
</kw>
<status status="PASS" starttime="20231212 10:43:06.516" endtime="20231212 10:43:12.594"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:12.597" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:16.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:16.744" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:43:12.596" endtime="20231212 10:43:16.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:16.745" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:43:16.744" endtime="20231212 10:43:16.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:16.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:16.745" endtime="20231212 10:43:16.745"/>
</kw>
<status status="PASS" starttime="20231212 10:43:12.595" endtime="20231212 10:43:16.746"/>
</kw>
<msg timestamp="20231212 10:43:16.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:12.595" endtime="20231212 10:43:16.746"/>
</kw>
<msg timestamp="20231212 10:43:16.746" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:43:12.594" endtime="20231212 10:43:16.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:16.746" endtime="20231212 10:43:16.746"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:16.749" level="INFO">Running command 'ozone fs -ls o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:20.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:20.126" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:43:16.748" endtime="20231212 10:43:20.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:20.127" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:43:20.127" endtime="20231212 10:43:20.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:20.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:20.128" endtime="20231212 10:43:20.128"/>
</kw>
<status status="PASS" starttime="20231212 10:43:16.747" endtime="20231212 10:43:20.128"/>
</kw>
<msg timestamp="20231212 10:43:20.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:16.747" endtime="20231212 10:43:20.128"/>
</kw>
<msg timestamp="20231212 10:43:20.129" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:43:16.747" endtime="20231212 10:43:20.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:20.129" endtime="20231212 10:43:20.129"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:20.129" endtime="20231212 10:43:20.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:43:02.941" endtime="20231212 10:43:20.130"/>
</test>
<test id="s1-s3-t12" name="Cat file" line="102">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:20.134" level="INFO">Running command 'ozone fs -cat o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:25.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:25.354" level="INFO">${output} = Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
----------------...</msg>
<status status="PASS" starttime="20231212 10:43:20.132" endtime="20231212 10:43:25.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:25.355" level="INFO">Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

ch.qos.reload4j:reload4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20231212 10:43:25.354" endtime="20231212 10:43:25.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:25.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:25.355" endtime="20231212 10:43:25.356"/>
</kw>
<status status="PASS" starttime="20231212 10:43:20.132" endtime="20231212 10:43:25.356"/>
</kw>
<msg timestamp="20231212 10:43:25.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:20.132" endtime="20231212 10:43:25.356"/>
</kw>
<status status="PASS" starttime="20231212 10:43:20.131" endtime="20231212 10:43:25.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:43:20.130" endtime="20231212 10:43:25.357"/>
</test>
<test id="s1-s3-t13" name="Delete file" line="105">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:25.361" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:28.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:28.812" level="INFO">${output} = Deleted o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:43:25.360" endtime="20231212 10:43:28.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:28.813" level="INFO">Deleted o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20231212 10:43:28.812" endtime="20231212 10:43:28.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:28.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:28.813" endtime="20231212 10:43:28.813"/>
</kw>
<status status="PASS" starttime="20231212 10:43:25.359" endtime="20231212 10:43:28.814"/>
</kw>
<msg timestamp="20231212 10:43:28.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:25.359" endtime="20231212 10:43:28.814"/>
</kw>
<status status="PASS" starttime="20231212 10:43:25.358" endtime="20231212 10:43:28.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:28.817" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:32.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:32.960" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20231212 10:43:28.815" endtime="20231212 10:43:32.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:32.961" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20231212 10:43:32.961" endtime="20231212 10:43:32.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:32.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:32.961" endtime="20231212 10:43:32.962"/>
</kw>
<status status="PASS" starttime="20231212 10:43:28.815" endtime="20231212 10:43:32.962"/>
</kw>
<msg timestamp="20231212 10:43:32.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:28.815" endtime="20231212 10:43:32.962"/>
</kw>
<msg timestamp="20231212 10:43:32.962" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20231212 10:43:28.814" endtime="20231212 10:43:32.962"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:32.963" endtime="20231212 10:43:32.963"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:43:25.358" endtime="20231212 10:43:32.963"/>
</test>
<test id="s1-s3-t14" name="Delete dir" line="110">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:32.967" level="INFO">Running command 'ozone fs -rmdir o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:36.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:36.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:43:32.965" endtime="20231212 10:43:36.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:36.362" level="INFO"/>
<status status="PASS" starttime="20231212 10:43:36.361" endtime="20231212 10:43:36.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:36.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:36.362" endtime="20231212 10:43:36.362"/>
</kw>
<status status="PASS" starttime="20231212 10:43:32.965" endtime="20231212 10:43:36.362"/>
</kw>
<msg timestamp="20231212 10:43:36.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:32.965" endtime="20231212 10:43:36.363"/>
</kw>
<msg timestamp="20231212 10:43:36.363" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:43:32.964" endtime="20231212 10:43:36.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:36.366" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:40.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:40.679" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:43:36.364" endtime="20231212 10:43:40.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:40.680" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:43:40.680" endtime="20231212 10:43:40.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:40.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:40.680" endtime="20231212 10:43:40.681"/>
</kw>
<status status="PASS" starttime="20231212 10:43:36.364" endtime="20231212 10:43:40.681"/>
</kw>
<msg timestamp="20231212 10:43:40.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:36.363" endtime="20231212 10:43:40.681"/>
</kw>
<msg timestamp="20231212 10:43:40.681" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20231212 10:43:36.363" endtime="20231212 10:43:40.681"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:40.681" endtime="20231212 10:43:40.682"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:43:32.964" endtime="20231212 10:43:40.682"/>
</test>
<test id="s1-s3-t15" name="Touch file" line="115">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:40.686" level="INFO">Running command 'ozone fs -touch o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:44.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:44.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:43:40.684" endtime="20231212 10:43:44.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:44.507" level="INFO"/>
<status status="PASS" starttime="20231212 10:43:44.506" endtime="20231212 10:43:44.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:44.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:44.507" endtime="20231212 10:43:44.507"/>
</kw>
<status status="PASS" starttime="20231212 10:43:40.684" endtime="20231212 10:43:44.507"/>
</kw>
<msg timestamp="20231212 10:43:44.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:40.683" endtime="20231212 10:43:44.508"/>
</kw>
<status status="PASS" starttime="20231212 10:43:40.683" endtime="20231212 10:43:44.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:44.510" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:48.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:48.620" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20231212 10:43:44.509" endtime="20231212 10:43:48.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:48.621" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20231212 10:43:48.621" endtime="20231212 10:43:48.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:48.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:48.622" endtime="20231212 10:43:48.622"/>
</kw>
<status status="PASS" starttime="20231212 10:43:44.509" endtime="20231212 10:43:48.622"/>
</kw>
<msg timestamp="20231212 10:43:48.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:44.508" endtime="20231212 10:43:48.623"/>
</kw>
<msg timestamp="20231212 10:43:48.623" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20231212 10:43:44.508" endtime="20231212 10:43:48.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:48.623" endtime="20231212 10:43:48.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:43:40.682" endtime="20231212 10:43:48.623"/>
</test>
<test id="s1-s3-t16" name="Delete file with Trash" line="120">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:48.628" level="INFO">Running command 'ozone fs -touch o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:52.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:52.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:43:48.626" endtime="20231212 10:43:52.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:52.349" level="INFO"/>
<status status="PASS" starttime="20231212 10:43:52.348" endtime="20231212 10:43:52.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:52.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:52.349" endtime="20231212 10:43:52.350"/>
</kw>
<status status="PASS" starttime="20231212 10:43:48.625" endtime="20231212 10:43:52.350"/>
</kw>
<msg timestamp="20231212 10:43:52.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:48.625" endtime="20231212 10:43:52.350"/>
</kw>
<status status="PASS" starttime="20231212 10:43:48.625" endtime="20231212 10:43:52.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:52.353" level="INFO">Running command 'ozone fs -rm o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:56.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:56.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:43:52.352" endtime="20231212 10:43:56.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:56.064" level="INFO"/>
<status status="PASS" starttime="20231212 10:43:56.064" endtime="20231212 10:43:56.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:56.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:56.064" endtime="20231212 10:43:56.065"/>
</kw>
<status status="PASS" starttime="20231212 10:43:52.351" endtime="20231212 10:43:56.065"/>
</kw>
<msg timestamp="20231212 10:43:56.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:52.351" endtime="20231212 10:43:56.065"/>
</kw>
<status status="PASS" starttime="20231212 10:43:52.350" endtime="20231212 10:43:56.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:56.068" level="INFO">Running command 'ozone fs -ls -R o3fs://35775-link1-o3fs.fstest1.omservice/// 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:43:59.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:43:59.477" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstes...</msg>
<status status="PASS" starttime="20231212 10:43:56.066" endtime="20231212 10:43:59.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:43:59.478" level="INFO">drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/.Trash/testuser/Current
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:41 o3fs://35775-link1-o3fs.fstest1.omservice/test
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:41 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:42 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:42 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:42 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/STREAMING.txt
-rw-rw-rw-   3 testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20231212 10:43:59.478" endtime="20231212 10:43:59.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:43:59.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:43:59.479" endtime="20231212 10:43:59.479"/>
</kw>
<status status="PASS" starttime="20231212 10:43:56.066" endtime="20231212 10:43:59.479"/>
</kw>
<msg timestamp="20231212 10:43:59.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:56.066" endtime="20231212 10:43:59.479"/>
</kw>
<msg timestamp="20231212 10:43:59.479" level="INFO">${result} = drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:43 o3fs://35775-link1-o3fs.fstes...</msg>
<status status="PASS" starttime="20231212 10:43:56.065" endtime="20231212 10:43:59.479"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:59.480" endtime="20231212 10:43:59.480"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231212 10:43:59.480" endtime="20231212 10:43:59.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:43:59.481" endtime="20231212 10:43:59.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:43:48.624" endtime="20231212 10:43:59.482"/>
</test>
<test id="s1-s3-t17" name="Delete recursively" line="128">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:43:59.487" level="INFO">Running command 'ozone fs -mkdir -p o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:03.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:03.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:43:59.485" endtime="20231212 10:44:03.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:03.035" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:03.034" endtime="20231212 10:44:03.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:03.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:03.035" endtime="20231212 10:44:03.035"/>
</kw>
<status status="PASS" starttime="20231212 10:43:59.484" endtime="20231212 10:44:03.036"/>
</kw>
<msg timestamp="20231212 10:44:03.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:43:59.484" endtime="20231212 10:44:03.036"/>
</kw>
<status status="PASS" starttime="20231212 10:43:59.484" endtime="20231212 10:44:03.036"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:03.039" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://35775-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:06.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:06.469" level="INFO">${output} = Deleted o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20231212 10:44:03.037" endtime="20231212 10:44:06.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:06.470" level="INFO">Deleted o3fs://35775-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20231212 10:44:06.470" endtime="20231212 10:44:06.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:06.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:06.471" endtime="20231212 10:44:06.471"/>
</kw>
<status status="PASS" starttime="20231212 10:44:03.037" endtime="20231212 10:44:06.471"/>
</kw>
<msg timestamp="20231212 10:44:06.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:03.037" endtime="20231212 10:44:06.471"/>
</kw>
<status status="PASS" starttime="20231212 10:44:03.036" endtime="20231212 10:44:06.471"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:06.475" level="INFO">Running command 'ozone sh key list fstest1/35775-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:10.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:10.768" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/231212104400/
.Trash/testuser/231212104400/test/
.Trash/testuser/231212104400/test/o3fs/
.Trash/testuser/231212104400/test/o3fs/dir/
.Trash/testuser/2312121044...</msg>
<status status="PASS" starttime="20231212 10:44:06.473" endtime="20231212 10:44:10.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:10.769" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/231212104400/
.Trash/testuser/231212104400/test/
.Trash/testuser/231212104400/test/o3fs/
.Trash/testuser/231212104400/test/o3fs/dir/
.Trash/testuser/231212104400/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20231212 10:44:10.769" endtime="20231212 10:44:10.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:10.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:10.769" endtime="20231212 10:44:10.770"/>
</kw>
<status status="PASS" starttime="20231212 10:44:06.472" endtime="20231212 10:44:10.770"/>
</kw>
<msg timestamp="20231212 10:44:10.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:06.472" endtime="20231212 10:44:10.770"/>
</kw>
<msg timestamp="20231212 10:44:10.770" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/231212104400/
.Trash/testuser/231212104400/test/
.Trash/testuser/231212104400/test/o3fs/
.Trash/testuser/231212104400/test/o3fs/dir/
.Trash/testuser/2312121044...</msg>
<status status="PASS" starttime="20231212 10:44:06.472" endtime="20231212 10:44:10.770"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:44:10.770" endtime="20231212 10:44:10.771"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:43:59.483" endtime="20231212 10:44:10.771"/>
</test>
<test id="s1-s3-t18" name="List recursively" line="134">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:10.775" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:10.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:10.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:10.774" endtime="20231212 10:44:10.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:10.778" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:10.777" endtime="20231212 10:44:10.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:10.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:10.778" endtime="20231212 10:44:10.778"/>
</kw>
<status status="PASS" starttime="20231212 10:44:10.773" endtime="20231212 10:44:10.778"/>
</kw>
<msg timestamp="20231212 10:44:10.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:10.773" endtime="20231212 10:44:10.779"/>
</kw>
<status status="PASS" starttime="20231212 10:44:10.773" endtime="20231212 10:44:10.779"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:10.781" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:10.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:10.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:10.780" endtime="20231212 10:44:10.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:10.784" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:10.784" endtime="20231212 10:44:10.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:10.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:10.784" endtime="20231212 10:44:10.785"/>
</kw>
<status status="PASS" starttime="20231212 10:44:10.780" endtime="20231212 10:44:10.785"/>
</kw>
<msg timestamp="20231212 10:44:10.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:10.779" endtime="20231212 10:44:10.785"/>
</kw>
<status status="PASS" starttime="20231212 10:44:10.779" endtime="20231212 10:44:10.785"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:10.788" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:10.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:10.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:10.786" endtime="20231212 10:44:10.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:10.790" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:10.790" endtime="20231212 10:44:10.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:10.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:10.791" endtime="20231212 10:44:10.791"/>
</kw>
<status status="PASS" starttime="20231212 10:44:10.786" endtime="20231212 10:44:10.791"/>
</kw>
<msg timestamp="20231212 10:44:10.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:10.786" endtime="20231212 10:44:10.791"/>
</kw>
<status status="PASS" starttime="20231212 10:44:10.785" endtime="20231212 10:44:10.791"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:10.795" level="INFO">Running command 'ozone fs -mkdir -p o3fs://35775-link1-o3fs.fstest1.omservice//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:14.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:14.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:10.793" endtime="20231212 10:44:14.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:14.256" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:14.255" endtime="20231212 10:44:14.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:14.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:14.256" endtime="20231212 10:44:14.257"/>
</kw>
<status status="PASS" starttime="20231212 10:44:10.792" endtime="20231212 10:44:14.257"/>
</kw>
<msg timestamp="20231212 10:44:14.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:10.792" endtime="20231212 10:44:14.257"/>
</kw>
<status status="PASS" starttime="20231212 10:44:10.792" endtime="20231212 10:44:14.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:14.260" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://35775-link1-o3fs.fstest1.omservice//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:19.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:19.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:14.259" endtime="20231212 10:44:19.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:19.776" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:19.775" endtime="20231212 10:44:19.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:19.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:19.776" endtime="20231212 10:44:19.776"/>
</kw>
<status status="PASS" starttime="20231212 10:44:14.258" endtime="20231212 10:44:19.777"/>
</kw>
<msg timestamp="20231212 10:44:19.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:14.258" endtime="20231212 10:44:19.777"/>
</kw>
<status status="PASS" starttime="20231212 10:44:14.257" endtime="20231212 10:44:19.777"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:19.780" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://35775-link1-o3fs.fstest1.omservice//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:25.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:25.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:19.778" endtime="20231212 10:44:25.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:25.318" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:25.318" endtime="20231212 10:44:25.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:25.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:25.318" endtime="20231212 10:44:25.319"/>
</kw>
<status status="PASS" starttime="20231212 10:44:19.778" endtime="20231212 10:44:25.319"/>
</kw>
<msg timestamp="20231212 10:44:25.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:19.777" endtime="20231212 10:44:25.319"/>
</kw>
<status status="PASS" starttime="20231212 10:44:19.777" endtime="20231212 10:44:25.319"/>
</kw>
<status status="PASS" starttime="20231212 10:44:10.772" endtime="20231212 10:44:25.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:25.322" level="INFO">Running command 'ozone fs -ls -R o3fs://35775-link1-o3fs.fstest1.omservice//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:28.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:28.755" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:44 o3fs://35775-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:44 o3fs://35775-lin...</msg>
<status status="PASS" starttime="20231212 10:44:25.320" endtime="20231212 10:44:28.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:28.756" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:44 o3fs://35775-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:44 o3fs://35775-link1-o3fs.fstest1.omservice/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:44 o3fs://35775-link1-o3fs.fstest1.omservice/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20231212 10:44:28.755" endtime="20231212 10:44:28.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:28.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:28.756" endtime="20231212 10:44:28.756"/>
</kw>
<status status="PASS" starttime="20231212 10:44:25.320" endtime="20231212 10:44:28.757"/>
</kw>
<msg timestamp="20231212 10:44:28.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:25.320" endtime="20231212 10:44:28.757"/>
</kw>
<msg timestamp="20231212 10:44:28.757" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:44 o3fs://35775-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-12-12 10:44 o3fs://35775-lin...</msg>
<status status="PASS" starttime="20231212 10:44:25.319" endtime="20231212 10:44:28.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:44:28.757" endtime="20231212 10:44:28.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:44:28.758" endtime="20231212 10:44:28.758"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:44:10.772" endtime="20231212 10:44:28.758"/>
</test>
<test id="s1-s3-t19" name="Copy to other bucket" line="140">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20231212 10:44:28.771" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20231212 10:44:28.762" endtime="20231212 10:44:28.772"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231212 10:44:28.772" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20231212 10:44:28.772" endtime="20231212 10:44:28.772"/>
</kw>
<status status="PASS" starttime="20231212 10:44:28.762" endtime="20231212 10:44:28.772"/>
</kw>
<msg timestamp="20231212 10:44:28.772" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20231212 10:44:28.761" endtime="20231212 10:44:28.772"/>
</kw>
<status status="PASS" starttime="20231212 10:44:28.760" endtime="20231212 10:44:28.773"/>
</kw>
<msg timestamp="20231212 10:44:28.773" level="INFO">${url} = o3fs://35775-link2-o3fs.fstest1.omservice/testdir2</msg>
<status status="PASS" starttime="20231212 10:44:28.760" endtime="20231212 10:44:28.773"/>
</kw>
<msg timestamp="20231212 10:44:28.773" level="INFO">${target} = o3fs://35775-link2-o3fs.fstest1.omservice/testdir2</msg>
<status status="PASS" starttime="20231212 10:44:28.759" endtime="20231212 10:44:28.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:28.776" level="INFO">Running command 'ozone fs -mkdir -p o3fs://35775-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:32.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:32.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:28.774" endtime="20231212 10:44:32.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:32.366" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:32.365" endtime="20231212 10:44:32.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:32.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:32.366" endtime="20231212 10:44:32.367"/>
</kw>
<status status="PASS" starttime="20231212 10:44:28.774" endtime="20231212 10:44:32.367"/>
</kw>
<msg timestamp="20231212 10:44:32.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:28.773" endtime="20231212 10:44:32.367"/>
</kw>
<status status="PASS" starttime="20231212 10:44:28.773" endtime="20231212 10:44:32.367"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:32.370" level="INFO">Running command 'ozone fs -cp o3fs://35775-link1-o3fs.fstest1.omservice///testdir1/localdir1 o3fs://35775-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:38.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:38.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:32.369" endtime="20231212 10:44:38.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:38.165" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:38.165" endtime="20231212 10:44:38.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:38.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:38.166" endtime="20231212 10:44:38.166"/>
</kw>
<status status="PASS" starttime="20231212 10:44:32.368" endtime="20231212 10:44:38.166"/>
</kw>
<msg timestamp="20231212 10:44:38.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:32.368" endtime="20231212 10:44:38.167"/>
</kw>
<status status="PASS" starttime="20231212 10:44:32.367" endtime="20231212 10:44:38.167"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:38.170" level="INFO">Running command 'ozone fs -rm -r o3fs://35775-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:41.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:41.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:38.168" endtime="20231212 10:44:41.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:41.887" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:41.886" endtime="20231212 10:44:41.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:41.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:41.887" endtime="20231212 10:44:41.887"/>
</kw>
<status status="PASS" starttime="20231212 10:44:38.168" endtime="20231212 10:44:41.888"/>
</kw>
<msg timestamp="20231212 10:44:41.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:38.167" endtime="20231212 10:44:41.888"/>
</kw>
<status status="PASS" starttime="20231212 10:44:38.167" endtime="20231212 10:44:41.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:44:28.759" endtime="20231212 10:44:41.888"/>
</test>
<test id="s1-s3-t20" name="Copy to other volume" line="146">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20231212 10:44:41.893" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20231212 10:44:41.892" endtime="20231212 10:44:41.893"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231212 10:44:41.893" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20231212 10:44:41.893" endtime="20231212 10:44:41.893"/>
</kw>
<status status="PASS" starttime="20231212 10:44:41.892" endtime="20231212 10:44:41.893"/>
</kw>
<msg timestamp="20231212 10:44:41.893" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20231212 10:44:41.891" endtime="20231212 10:44:41.893"/>
</kw>
<status status="PASS" starttime="20231212 10:44:41.890" endtime="20231212 10:44:41.894"/>
</kw>
<msg timestamp="20231212 10:44:41.894" level="INFO">${url} = o3fs://35775-link3-o3fs.fstest2.omservice/testdir3</msg>
<status status="PASS" starttime="20231212 10:44:41.890" endtime="20231212 10:44:41.894"/>
</kw>
<msg timestamp="20231212 10:44:41.894" level="INFO">${target} = o3fs://35775-link3-o3fs.fstest2.omservice/testdir3</msg>
<status status="PASS" starttime="20231212 10:44:41.889" endtime="20231212 10:44:41.894"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:41.897" level="INFO">Running command 'ozone fs -mkdir -p o3fs://35775-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:45.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:45.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:41.895" endtime="20231212 10:44:45.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:45.315" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:45.315" endtime="20231212 10:44:45.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:45.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:45.315" endtime="20231212 10:44:45.316"/>
</kw>
<status status="PASS" starttime="20231212 10:44:41.895" endtime="20231212 10:44:45.316"/>
</kw>
<msg timestamp="20231212 10:44:45.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:41.894" endtime="20231212 10:44:45.316"/>
</kw>
<status status="PASS" starttime="20231212 10:44:41.894" endtime="20231212 10:44:45.316"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:45.319" level="INFO">Running command 'ozone fs -cp o3fs://35775-link1-o3fs.fstest1.omservice///testdir1/localdir1 o3fs://35775-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:51.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:51.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:45.317" endtime="20231212 10:44:51.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:51.138" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:51.138" endtime="20231212 10:44:51.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:51.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:51.139" endtime="20231212 10:44:51.139"/>
</kw>
<status status="PASS" starttime="20231212 10:44:45.317" endtime="20231212 10:44:51.139"/>
</kw>
<msg timestamp="20231212 10:44:51.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:45.317" endtime="20231212 10:44:51.139"/>
</kw>
<status status="PASS" starttime="20231212 10:44:45.316" endtime="20231212 10:44:51.139"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:51.143" level="INFO">Running command 'ozone fs -rm -r o3fs://35775-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:44:54.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:44:54.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:51.141" endtime="20231212 10:44:54.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:44:54.637" level="INFO"/>
<status status="PASS" starttime="20231212 10:44:54.636" endtime="20231212 10:44:54.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:44:54.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:44:54.637" endtime="20231212 10:44:54.637"/>
</kw>
<status status="PASS" starttime="20231212 10:44:51.141" endtime="20231212 10:44:54.638"/>
</kw>
<msg timestamp="20231212 10:44:54.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:51.140" endtime="20231212 10:44:54.638"/>
</kw>
<status status="PASS" starttime="20231212 10:44:51.140" endtime="20231212 10:44:54.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:44:41.889" endtime="20231212 10:44:54.638"/>
</test>
<test id="s1-s3-t21" name="List file created via shell" line="152">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:44:54.642" level="INFO">Running command 'ozone sh key put fstest1/35775-link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:00.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:00.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:44:54.640" endtime="20231212 10:45:00.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:00.578" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:00.577" endtime="20231212 10:45:00.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:00.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:00.578" endtime="20231212 10:45:00.579"/>
</kw>
<status status="PASS" starttime="20231212 10:44:54.640" endtime="20231212 10:45:00.579"/>
</kw>
<msg timestamp="20231212 10:45:00.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:44:54.640" endtime="20231212 10:45:00.579"/>
</kw>
<status status="PASS" starttime="20231212 10:44:54.639" endtime="20231212 10:45:00.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:00.582" level="INFO">Running command 'ozone fs -ls o3fs://35775-link1-o3fs.fstest1.omservice//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:03.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:03.884" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:45 o3fs://35775-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20231212 10:45:00.581" endtime="20231212 10:45:03.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:03.885" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:45 o3fs://35775-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20231212 10:45:03.884" endtime="20231212 10:45:03.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:03.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:03.885" endtime="20231212 10:45:03.886"/>
</kw>
<status status="PASS" starttime="20231212 10:45:00.580" endtime="20231212 10:45:03.886"/>
</kw>
<msg timestamp="20231212 10:45:03.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:00.580" endtime="20231212 10:45:03.886"/>
</kw>
<msg timestamp="20231212 10:45:03.886" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2023-12-12 10:45 o3fs://35775-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20231212 10:45:00.579" endtime="20231212 10:45:03.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:45:03.886" endtime="20231212 10:45:03.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:44:54.639" endtime="20231212 10:45:03.887"/>
</test>
<test id="s1-s3-t22" name="Reject overwrite existing" line="157">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:03.890" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://35775-link1-o3fs.fstest1.omservice//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:07.434" level="INFO">${rc} = 1</msg>
<msg timestamp="20231212 10:45:07.434" level="INFO">${output} = copyFromLocal: `o3fs://35775-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20231212 10:45:03.888" endtime="20231212 10:45:07.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:07.435" level="INFO">copyFromLocal: `o3fs://35775-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20231212 10:45:07.434" endtime="20231212 10:45:07.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:07.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:07.435" endtime="20231212 10:45:07.435"/>
</kw>
<msg timestamp="20231212 10:45:07.436" level="INFO">${result} = copyFromLocal: `o3fs://35775-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20231212 10:45:03.888" endtime="20231212 10:45:07.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:45:07.436" endtime="20231212 10:45:07.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:45:03.887" endtime="20231212 10:45:07.436"/>
</test>
<test id="s1-s3-t23" name="Get file" line="161">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:07.440" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:07.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:07.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:07.439" endtime="20231212 10:45:07.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:07.444" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:07.443" endtime="20231212 10:45:07.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:07.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:07.444" endtime="20231212 10:45:07.445"/>
</kw>
<status status="PASS" starttime="20231212 10:45:07.438" endtime="20231212 10:45:07.445"/>
</kw>
<msg timestamp="20231212 10:45:07.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:07.438" endtime="20231212 10:45:07.445"/>
</kw>
<status status="PASS" starttime="20231212 10:45:07.437" endtime="20231212 10:45:07.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:07.448" level="INFO">Running command 'ozone fs -get o3fs://35775-link1-o3fs.fstest1.omservice//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:12.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:12.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:07.446" endtime="20231212 10:45:12.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:12.686" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:12.685" endtime="20231212 10:45:12.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:12.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:12.686" endtime="20231212 10:45:12.687"/>
</kw>
<status status="PASS" starttime="20231212 10:45:07.446" endtime="20231212 10:45:12.687"/>
</kw>
<msg timestamp="20231212 10:45:12.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:07.446" endtime="20231212 10:45:12.687"/>
</kw>
<status status="PASS" starttime="20231212 10:45:07.445" endtime="20231212 10:45:12.687"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20231212 10:45:12.688" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20231212 10:45:12.687" endtime="20231212 10:45:12.688"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:45:07.437" endtime="20231212 10:45:12.688"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20231212 10:40:49.287" endtime="20231212 10:45:12.690"/>
</suite>
<suite id="s1-s4" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:45:16.079" level="INFO">${random} = 53721</msg>
<status status="PASS" starttime="20231212 10:45:16.079" endtime="20231212 10:45:16.080"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:45:16.081" level="INFO">${source} = 53721-source</msg>
<status status="PASS" starttime="20231212 10:45:16.080" endtime="20231212 10:45:16.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:45:16.082" level="INFO">${target} = 53721-target</msg>
<status status="PASS" starttime="20231212 10:45:16.081" endtime="20231212 10:45:16.082"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:16.085" level="INFO">Running command 'ozone sh volume create 53721-source 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:19.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:19.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:16.083" endtime="20231212 10:45:19.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:19.957" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:19.956" endtime="20231212 10:45:19.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:19.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:19.957" endtime="20231212 10:45:19.957"/>
</kw>
<status status="PASS" starttime="20231212 10:45:16.083" endtime="20231212 10:45:19.957"/>
</kw>
<msg timestamp="20231212 10:45:19.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:16.083" endtime="20231212 10:45:19.958"/>
</kw>
<status status="PASS" starttime="20231212 10:45:16.082" endtime="20231212 10:45:19.958"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:19.960" level="INFO">Running command 'ozone sh volume create 53721-target 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:24.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:24.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:19.959" endtime="20231212 10:45:24.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:24.142" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:24.141" endtime="20231212 10:45:24.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:24.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:24.142" endtime="20231212 10:45:24.143"/>
</kw>
<status status="PASS" starttime="20231212 10:45:19.959" endtime="20231212 10:45:24.143"/>
</kw>
<msg timestamp="20231212 10:45:24.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:19.958" endtime="20231212 10:45:24.143"/>
</kw>
<status status="PASS" starttime="20231212 10:45:19.958" endtime="20231212 10:45:24.143"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:24.147" level="INFO">Running command 'ozone sh bucket create 53721-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:28.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:28.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:24.145" endtime="20231212 10:45:28.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:28.081" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:28.081" endtime="20231212 10:45:28.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:28.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:28.081" endtime="20231212 10:45:28.082"/>
</kw>
<status status="PASS" starttime="20231212 10:45:24.145" endtime="20231212 10:45:28.082"/>
</kw>
<msg timestamp="20231212 10:45:28.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:24.145" endtime="20231212 10:45:28.082"/>
</kw>
<status status="PASS" starttime="20231212 10:45:24.144" endtime="20231212 10:45:28.082"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:28.085" level="INFO">Running command 'ozone sh key put 53721-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:33.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:33.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:28.083" endtime="20231212 10:45:33.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:33.738" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:33.738" endtime="20231212 10:45:33.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:33.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:33.739" endtime="20231212 10:45:33.739"/>
</kw>
<status status="PASS" starttime="20231212 10:45:28.083" endtime="20231212 10:45:33.739"/>
</kw>
<msg timestamp="20231212 10:45:33.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:28.083" endtime="20231212 10:45:33.739"/>
</kw>
<status status="PASS" starttime="20231212 10:45:28.082" endtime="20231212 10:45:33.739"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:33.742" level="INFO">Running command 'ozone sh bucket create 53721-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:37.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:37.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:33.740" endtime="20231212 10:45:37.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:37.608" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:37.608" endtime="20231212 10:45:37.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:37.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:37.609" endtime="20231212 10:45:37.609"/>
</kw>
<status status="PASS" starttime="20231212 10:45:33.740" endtime="20231212 10:45:37.609"/>
</kw>
<msg timestamp="20231212 10:45:37.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:33.740" endtime="20231212 10:45:37.609"/>
</kw>
<status status="PASS" starttime="20231212 10:45:33.739" endtime="20231212 10:45:37.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:37.613" level="INFO">Running command 'ozone sh bucket link 53721-source/unreadable-bucket 53721-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:41.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:41.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:37.611" endtime="20231212 10:45:41.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:41.430" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:41.429" endtime="20231212 10:45:41.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:41.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:41.430" endtime="20231212 10:45:41.430"/>
</kw>
<status status="PASS" starttime="20231212 10:45:37.611" endtime="20231212 10:45:41.431"/>
</kw>
<msg timestamp="20231212 10:45:41.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:37.610" endtime="20231212 10:45:41.431"/>
</kw>
<status status="PASS" starttime="20231212 10:45:37.610" endtime="20231212 10:45:41.431"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:r[DEFAULT] ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:41.433" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:r[DEFAULT] 53721-target 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:45.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:45.445" level="INFO">${output} = ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20231212 10:45:41.432" endtime="20231212 10:45:45.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:45.446" level="INFO">ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20231212 10:45:45.446" endtime="20231212 10:45:45.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:45.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:45.446" endtime="20231212 10:45:45.447"/>
</kw>
<status status="PASS" starttime="20231212 10:45:41.432" endtime="20231212 10:45:45.447"/>
</kw>
<msg timestamp="20231212 10:45:45.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:41.431" endtime="20231212 10:45:45.447"/>
</kw>
<status status="PASS" starttime="20231212 10:45:41.431" endtime="20231212 10:45:45.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:45.450" level="INFO">Running command 'ozone sh bucket link 53721-source/readable-bucket 53721-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:49.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:49.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:45.448" endtime="20231212 10:45:49.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:49.710" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:49.709" endtime="20231212 10:45:49.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:49.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:49.710" endtime="20231212 10:45:49.710"/>
</kw>
<status status="PASS" starttime="20231212 10:45:45.448" endtime="20231212 10:45:49.710"/>
</kw>
<msg timestamp="20231212 10:45:49.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:45.448" endtime="20231212 10:45:49.711"/>
</kw>
<status status="PASS" starttime="20231212 10:45:45.447" endtime="20231212 10:45:49.711"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:49.714" level="INFO">Running command 'ozone sh bucket link 53721-source/readable-bucket 53721-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:53.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:53.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:45:49.712" endtime="20231212 10:45:53.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:53.989" level="INFO"/>
<status status="PASS" starttime="20231212 10:45:53.989" endtime="20231212 10:45:53.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:53.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:53.990" endtime="20231212 10:45:53.990"/>
</kw>
<status status="PASS" starttime="20231212 10:45:49.712" endtime="20231212 10:45:53.990"/>
</kw>
<msg timestamp="20231212 10:45:53.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:49.711" endtime="20231212 10:45:53.990"/>
</kw>
<status status="PASS" starttime="20231212 10:45:49.711" endtime="20231212 10:45:53.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:53.993" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:rl 53721-source 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:45:58.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:45:58.054" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:45:53.992" endtime="20231212 10:45:58.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:45:58.054" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:45:58.054" endtime="20231212 10:45:58.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:45:58.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:45:58.055" endtime="20231212 10:45:58.055"/>
</kw>
<status status="PASS" starttime="20231212 10:45:53.991" endtime="20231212 10:45:58.055"/>
</kw>
<msg timestamp="20231212 10:45:58.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:53.991" endtime="20231212 10:45:58.055"/>
</kw>
<status status="PASS" starttime="20231212 10:45:53.991" endtime="20231212 10:45:58.056"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:45:58.058" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2:rl 53721-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:02.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:02.094" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:45:58.057" endtime="20231212 10:46:02.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:02.095" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:46:02.094" endtime="20231212 10:46:02.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:02.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:02.095" endtime="20231212 10:46:02.095"/>
</kw>
<status status="PASS" starttime="20231212 10:45:58.056" endtime="20231212 10:46:02.095"/>
</kw>
<msg timestamp="20231212 10:46:02.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:45:58.056" endtime="20231212 10:46:02.095"/>
</kw>
<status status="PASS" starttime="20231212 10:45:58.056" endtime="20231212 10:46:02.096"/>
</kw>
<status status="PASS" starttime="20231212 10:45:24.144" endtime="20231212 10:46:02.096"/>
</kw>
<status status="PASS" starttime="20231212 10:45:24.144" endtime="20231212 10:46:02.096"/>
</kw>
<status status="PASS" starttime="20231212 10:45:16.079" endtime="20231212 10:46:02.096"/>
</kw>
<test id="s1-s4-t1" name="Link to non-existent bucket" line="94">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:02.101" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:02.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:02.103" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:02.099" endtime="20231212 10:46:02.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:02.104" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:46:02.103" endtime="20231212 10:46:02.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:02.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:02.104" endtime="20231212 10:46:02.104"/>
</kw>
<status status="PASS" starttime="20231212 10:46:02.099" endtime="20231212 10:46:02.105"/>
</kw>
<msg timestamp="20231212 10:46:02.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:02.098" endtime="20231212 10:46:02.105"/>
</kw>
<msg timestamp="20231212 10:46:02.105" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:02.098" endtime="20231212 10:46:02.105"/>
</kw>
<msg timestamp="20231212 10:46:02.105" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:02.098" endtime="20231212 10:46:02.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:46:02.106" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:02.105" endtime="20231212 10:46:02.106"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:02.109" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:02.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:02.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:02.107" endtime="20231212 10:46:02.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:02.154" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:02.153" endtime="20231212 10:46:02.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:02.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:02.154" endtime="20231212 10:46:02.155"/>
</kw>
<status status="PASS" starttime="20231212 10:46:02.107" endtime="20231212 10:46:02.155"/>
</kw>
<msg timestamp="20231212 10:46:02.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:02.107" endtime="20231212 10:46:02.155"/>
</kw>
<status status="PASS" starttime="20231212 10:46:02.106" endtime="20231212 10:46:02.155"/>
</kw>
<status status="PASS" starttime="20231212 10:46:02.106" endtime="20231212 10:46:02.155"/>
</kw>
<status status="PASS" starttime="20231212 10:46:02.097" endtime="20231212 10:46:02.155"/>
</kw>
<status status="PASS" starttime="20231212 10:46:02.097" endtime="20231212 10:46:02.155"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:02.158" level="INFO">Running command 'ozone sh bucket link 53721-source/no-such-bucket 53721-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:06.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:06.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:02.156" endtime="20231212 10:46:06.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:06.086" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:06.085" endtime="20231212 10:46:06.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:06.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:06.086" endtime="20231212 10:46:06.087"/>
</kw>
<status status="PASS" starttime="20231212 10:46:02.156" endtime="20231212 10:46:06.087"/>
</kw>
<msg timestamp="20231212 10:46:06.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:02.156" endtime="20231212 10:46:06.087"/>
</kw>
<status status="PASS" starttime="20231212 10:46:02.155" endtime="20231212 10:46:06.087"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:06.090" level="INFO">Running command 'ozone sh key list 53721-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:10.346" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:46:10.346" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: 53721-source/no-such-bucket</msg>
<status status="PASS" starttime="20231212 10:46:06.088" endtime="20231212 10:46:10.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:10.347" level="INFO">BUCKET_NOT_FOUND Bucket not found: 53721-source/no-such-bucket</msg>
<status status="PASS" starttime="20231212 10:46:10.346" endtime="20231212 10:46:10.347"/>
</kw>
<msg timestamp="20231212 10:46:10.347" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found: 53721-source/no-such-bucket</msg>
<status status="PASS" starttime="20231212 10:46:06.087" endtime="20231212 10:46:10.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:46:10.347" endtime="20231212 10:46:10.348"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:46:02.096" endtime="20231212 10:46:10.348"/>
</test>
<test id="s1-s4-t2" name="Key create passthrough" line="99">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:10.353" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:10.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:10.355" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:10.351" endtime="20231212 10:46:10.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:10.356" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:46:10.356" endtime="20231212 10:46:10.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:10.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:10.356" endtime="20231212 10:46:10.357"/>
</kw>
<status status="PASS" starttime="20231212 10:46:10.351" endtime="20231212 10:46:10.357"/>
</kw>
<msg timestamp="20231212 10:46:10.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:10.351" endtime="20231212 10:46:10.357"/>
</kw>
<msg timestamp="20231212 10:46:10.357" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:10.350" endtime="20231212 10:46:10.357"/>
</kw>
<msg timestamp="20231212 10:46:10.357" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:10.350" endtime="20231212 10:46:10.357"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:46:10.358" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:10.357" endtime="20231212 10:46:10.358"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:10.361" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:10.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:10.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:10.359" endtime="20231212 10:46:10.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:10.404" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:10.404" endtime="20231212 10:46:10.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:10.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:10.405" endtime="20231212 10:46:10.405"/>
</kw>
<status status="PASS" starttime="20231212 10:46:10.359" endtime="20231212 10:46:10.405"/>
</kw>
<msg timestamp="20231212 10:46:10.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:10.359" endtime="20231212 10:46:10.405"/>
</kw>
<status status="PASS" starttime="20231212 10:46:10.358" endtime="20231212 10:46:10.405"/>
</kw>
<status status="PASS" starttime="20231212 10:46:10.358" endtime="20231212 10:46:10.406"/>
</kw>
<status status="PASS" starttime="20231212 10:46:10.349" endtime="20231212 10:46:10.406"/>
</kw>
<status status="PASS" starttime="20231212 10:46:10.349" endtime="20231212 10:46:10.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:10.408" level="INFO">Running command 'ozone sh bucket link 53721-source/bucket1 53721-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:14.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:14.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:10.407" endtime="20231212 10:46:14.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:14.525" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:14.524" endtime="20231212 10:46:14.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:14.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:14.525" endtime="20231212 10:46:14.525"/>
</kw>
<status status="PASS" starttime="20231212 10:46:10.407" endtime="20231212 10:46:14.526"/>
</kw>
<msg timestamp="20231212 10:46:14.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:10.406" endtime="20231212 10:46:14.526"/>
</kw>
<status status="PASS" starttime="20231212 10:46:10.406" endtime="20231212 10:46:14.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:14.528" level="INFO">Running command 'ozone sh bucket create 53721-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:18.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:18.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:14.527" endtime="20231212 10:46:18.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:18.571" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:18.570" endtime="20231212 10:46:18.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:18.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:18.571" endtime="20231212 10:46:18.571"/>
</kw>
<status status="PASS" starttime="20231212 10:46:14.527" endtime="20231212 10:46:18.572"/>
</kw>
<msg timestamp="20231212 10:46:18.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:14.526" endtime="20231212 10:46:18.572"/>
</kw>
<status status="PASS" starttime="20231212 10:46:14.526" endtime="20231212 10:46:18.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:18.575" level="INFO">Running command 'ozone sh key put 53721-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:24.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:24.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:18.573" endtime="20231212 10:46:24.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:24.471" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:24.470" endtime="20231212 10:46:24.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:24.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:24.471" endtime="20231212 10:46:24.472"/>
</kw>
<status status="PASS" starttime="20231212 10:46:18.573" endtime="20231212 10:46:24.472"/>
</kw>
<msg timestamp="20231212 10:46:24.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:18.573" endtime="20231212 10:46:24.472"/>
</kw>
<status status="PASS" starttime="20231212 10:46:18.572" endtime="20231212 10:46:24.472"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:46:24.473" level="INFO">${postfix} = 94584</msg>
<status status="PASS" starttime="20231212 10:46:24.473" endtime="20231212 10:46:24.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:46:24.474" level="INFO">${tmpfile} = /tmp/tempkey-94584</msg>
<status status="PASS" starttime="20231212 10:46:24.473" endtime="20231212 10:46:24.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:24.476" level="INFO">Running command 'ozone sh key get 53721-target/link1/key1 /tmp/tempkey-94584 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:30.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:30.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:24.475" endtime="20231212 10:46:30.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:30.192" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:30.191" endtime="20231212 10:46:30.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:30.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:30.192" endtime="20231212 10:46:30.193"/>
</kw>
<status status="PASS" starttime="20231212 10:46:24.475" endtime="20231212 10:46:30.193"/>
</kw>
<msg timestamp="20231212 10:46:30.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:24.474" endtime="20231212 10:46:30.193"/>
</kw>
<status status="PASS" starttime="20231212 10:46:24.474" endtime="20231212 10:46:30.193"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231212 10:46:30.195" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-94584 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:30.197" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231212 10:46:30.193" endtime="20231212 10:46:30.197"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:30.200" level="INFO">Running command 'rm -f /tmp/tempkey-94584 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:30.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:30.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:30.199" endtime="20231212 10:46:30.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:30.203" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:30.203" endtime="20231212 10:46:30.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:30.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:30.203" endtime="20231212 10:46:30.204"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.199" endtime="20231212 10:46:30.204"/>
</kw>
<msg timestamp="20231212 10:46:30.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:30.198" endtime="20231212 10:46:30.204"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.198" endtime="20231212 10:46:30.204"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231212 10:46:30.205" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231212 10:46:30.204" endtime="20231212 10:46:30.205"/>
</kw>
<msg timestamp="20231212 10:46:30.205" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231212 10:46:24.473" endtime="20231212 10:46:30.205"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231212 10:46:30.205" endtime="20231212 10:46:30.205"/>
</kw>
<status status="PASS" starttime="20231212 10:46:24.472" endtime="20231212 10:46:30.206"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:46:10.348" endtime="20231212 10:46:30.206"/>
</test>
<test id="s1-s4-t3" name="Key read passthrough" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:30.210" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:30.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:30.213" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:30.209" endtime="20231212 10:46:30.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:30.213" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:46:30.213" endtime="20231212 10:46:30.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:30.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:30.214" endtime="20231212 10:46:30.214"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.209" endtime="20231212 10:46:30.214"/>
</kw>
<msg timestamp="20231212 10:46:30.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:30.208" endtime="20231212 10:46:30.214"/>
</kw>
<msg timestamp="20231212 10:46:30.215" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:30.208" endtime="20231212 10:46:30.215"/>
</kw>
<msg timestamp="20231212 10:46:30.215" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:30.208" endtime="20231212 10:46:30.215"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:46:30.215" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:30.215" endtime="20231212 10:46:30.216"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:30.219" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:30.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:30.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:30.217" endtime="20231212 10:46:30.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:30.270" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:30.270" endtime="20231212 10:46:30.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:30.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:30.271" endtime="20231212 10:46:30.271"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.217" endtime="20231212 10:46:30.271"/>
</kw>
<msg timestamp="20231212 10:46:30.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:30.217" endtime="20231212 10:46:30.271"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.216" endtime="20231212 10:46:30.272"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.216" endtime="20231212 10:46:30.272"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.207" endtime="20231212 10:46:30.272"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.207" endtime="20231212 10:46:30.272"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:30.275" level="INFO">Running command 'ozone sh key put 53721-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:36.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:36.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:30.273" endtime="20231212 10:46:36.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:36.307" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:36.306" endtime="20231212 10:46:36.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:36.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:36.307" endtime="20231212 10:46:36.307"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.273" endtime="20231212 10:46:36.308"/>
</kw>
<msg timestamp="20231212 10:46:36.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:30.272" endtime="20231212 10:46:36.308"/>
</kw>
<status status="PASS" starttime="20231212 10:46:30.272" endtime="20231212 10:46:36.308"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:46:36.309" level="INFO">${postfix} = 54828</msg>
<status status="PASS" starttime="20231212 10:46:36.309" endtime="20231212 10:46:36.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:46:36.310" level="INFO">${tmpfile} = /tmp/tempkey-54828</msg>
<status status="PASS" starttime="20231212 10:46:36.309" endtime="20231212 10:46:36.310"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:36.313" level="INFO">Running command 'ozone sh key get 53721-source/bucket1/key2 /tmp/tempkey-54828 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:41.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:41.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:36.311" endtime="20231212 10:46:41.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:41.899" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:41.899" endtime="20231212 10:46:41.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:41.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:41.899" endtime="20231212 10:46:41.900"/>
</kw>
<status status="PASS" starttime="20231212 10:46:36.311" endtime="20231212 10:46:41.900"/>
</kw>
<msg timestamp="20231212 10:46:41.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:36.310" endtime="20231212 10:46:41.900"/>
</kw>
<status status="PASS" starttime="20231212 10:46:36.310" endtime="20231212 10:46:41.900"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231212 10:46:41.902" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-54828 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:41.904" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231212 10:46:41.900" endtime="20231212 10:46:41.904"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:41.907" level="INFO">Running command 'rm -f /tmp/tempkey-54828 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:41.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:41.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:41.906" endtime="20231212 10:46:41.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:41.909" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:41.909" endtime="20231212 10:46:41.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:41.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:41.910" endtime="20231212 10:46:41.910"/>
</kw>
<status status="PASS" starttime="20231212 10:46:41.905" endtime="20231212 10:46:41.910"/>
</kw>
<msg timestamp="20231212 10:46:41.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:41.905" endtime="20231212 10:46:41.910"/>
</kw>
<status status="PASS" starttime="20231212 10:46:41.904" endtime="20231212 10:46:41.910"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231212 10:46:41.911" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231212 10:46:41.911" endtime="20231212 10:46:41.911"/>
</kw>
<msg timestamp="20231212 10:46:41.911" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231212 10:46:36.309" endtime="20231212 10:46:41.911"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231212 10:46:41.911" endtime="20231212 10:46:41.912"/>
</kw>
<status status="PASS" starttime="20231212 10:46:36.308" endtime="20231212 10:46:41.912"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:46:30.206" endtime="20231212 10:46:41.912"/>
</test>
<test id="s1-s4-t4" name="Key list passthrough" line="109">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:41.916" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:41.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:41.919" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:41.915" endtime="20231212 10:46:41.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:41.919" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:46:41.919" endtime="20231212 10:46:41.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:41.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:41.919" endtime="20231212 10:46:41.920"/>
</kw>
<status status="PASS" starttime="20231212 10:46:41.915" endtime="20231212 10:46:41.920"/>
</kw>
<msg timestamp="20231212 10:46:41.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:41.914" endtime="20231212 10:46:41.920"/>
</kw>
<msg timestamp="20231212 10:46:41.920" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:41.914" endtime="20231212 10:46:41.920"/>
</kw>
<msg timestamp="20231212 10:46:41.920" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:41.914" endtime="20231212 10:46:41.921"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:46:41.921" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:41.921" endtime="20231212 10:46:41.921"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:41.924" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:41.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:41.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:41.922" endtime="20231212 10:46:41.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:41.969" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:41.968" endtime="20231212 10:46:41.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:41.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:41.969" endtime="20231212 10:46:41.970"/>
</kw>
<status status="PASS" starttime="20231212 10:46:41.922" endtime="20231212 10:46:41.970"/>
</kw>
<msg timestamp="20231212 10:46:41.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:41.922" endtime="20231212 10:46:41.970"/>
</kw>
<status status="PASS" starttime="20231212 10:46:41.921" endtime="20231212 10:46:41.970"/>
</kw>
<status status="PASS" starttime="20231212 10:46:41.921" endtime="20231212 10:46:41.970"/>
</kw>
<status status="PASS" starttime="20231212 10:46:41.913" endtime="20231212 10:46:41.971"/>
</kw>
<status status="PASS" starttime="20231212 10:46:41.913" endtime="20231212 10:46:41.971"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:41.973" level="INFO">Running command 'ozone sh key list 53721-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:46.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:46.354" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20231212 10:46:41.972" endtime="20231212 10:46:46.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:46.355" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20231212 10:46:46.354" endtime="20231212 10:46:46.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:46.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:46.355" endtime="20231212 10:46:46.355"/>
</kw>
<status status="PASS" starttime="20231212 10:46:41.971" endtime="20231212 10:46:46.356"/>
</kw>
<msg timestamp="20231212 10:46:46.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:41.971" endtime="20231212 10:46:46.356"/>
</kw>
<msg timestamp="20231212 10:46:46.356" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20231212 10:46:41.971" endtime="20231212 10:46:46.356"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:46.359" level="INFO">Running command 'ozone sh key list 53721-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:50.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:50.455" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20231212 10:46:46.357" endtime="20231212 10:46:50.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:50.456" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20231212 10:46:50.455" endtime="20231212 10:46:50.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:50.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:50.456" endtime="20231212 10:46:50.456"/>
</kw>
<status status="PASS" starttime="20231212 10:46:46.357" endtime="20231212 10:46:50.457"/>
</kw>
<msg timestamp="20231212 10:46:50.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:46.357" endtime="20231212 10:46:50.457"/>
</kw>
<msg timestamp="20231212 10:46:50.457" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20231212 10:46:46.356" endtime="20231212 10:46:50.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:46:50.457" endtime="20231212 10:46:50.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:46:50.458" endtime="20231212 10:46:50.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:46:50.458" endtime="20231212 10:46:50.458"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:46:41.912" endtime="20231212 10:46:50.459"/>
</test>
<test id="s1-s4-t5" name="Key delete passthrough" line="116">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:50.464" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:50.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:50.466" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:50.462" endtime="20231212 10:46:50.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:50.467" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:46:50.466" endtime="20231212 10:46:50.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:50.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:50.467" endtime="20231212 10:46:50.467"/>
</kw>
<status status="PASS" starttime="20231212 10:46:50.461" endtime="20231212 10:46:50.467"/>
</kw>
<msg timestamp="20231212 10:46:50.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:50.461" endtime="20231212 10:46:50.468"/>
</kw>
<msg timestamp="20231212 10:46:50.468" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:50.461" endtime="20231212 10:46:50.468"/>
</kw>
<msg timestamp="20231212 10:46:50.468" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:50.461" endtime="20231212 10:46:50.468"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:46:50.468" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:50.468" endtime="20231212 10:46:50.468"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:50.471" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:50.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:50.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:50.470" endtime="20231212 10:46:50.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:50.508" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:50.508" endtime="20231212 10:46:50.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:50.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:50.508" endtime="20231212 10:46:50.509"/>
</kw>
<status status="PASS" starttime="20231212 10:46:50.470" endtime="20231212 10:46:50.509"/>
</kw>
<msg timestamp="20231212 10:46:50.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:50.469" endtime="20231212 10:46:50.509"/>
</kw>
<status status="PASS" starttime="20231212 10:46:50.469" endtime="20231212 10:46:50.509"/>
</kw>
<status status="PASS" starttime="20231212 10:46:50.469" endtime="20231212 10:46:50.509"/>
</kw>
<status status="PASS" starttime="20231212 10:46:50.460" endtime="20231212 10:46:50.509"/>
</kw>
<status status="PASS" starttime="20231212 10:46:50.460" endtime="20231212 10:46:50.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:50.513" level="INFO">Running command 'ozone sh key delete 53721-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:54.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:54.708" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20231212 10:46:50.511" endtime="20231212 10:46:54.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:54.709" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20231212 10:46:54.708" endtime="20231212 10:46:54.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:54.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:54.709" endtime="20231212 10:46:54.709"/>
</kw>
<status status="PASS" starttime="20231212 10:46:50.511" endtime="20231212 10:46:54.710"/>
</kw>
<msg timestamp="20231212 10:46:54.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:50.510" endtime="20231212 10:46:54.710"/>
</kw>
<status status="PASS" starttime="20231212 10:46:50.510" endtime="20231212 10:46:54.710"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket1keys}</var>
<arg>ozone sh key list ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:54.713" level="INFO">Running command 'ozone sh key list 53721-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:58.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:58.818" level="INFO">${output} = [ {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.622Z...</msg>
<status status="PASS" starttime="20231212 10:46:54.711" endtime="20231212 10:46:58.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:58.819" level="INFO">[ {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.622Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.622Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.640Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T10:46:34.411Z",
  "modificationTime" : "2023-12-12T10:46:35.896Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 988,
  "creationTime" : "2023-12-12T10:46:22.541Z",
  "modificationTime" : "2023-12-12T10:46:24.046Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20231212 10:46:58.819" endtime="20231212 10:46:58.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:58.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:58.820" endtime="20231212 10:46:58.820"/>
</kw>
<status status="PASS" starttime="20231212 10:46:54.711" endtime="20231212 10:46:58.820"/>
</kw>
<msg timestamp="20231212 10:46:58.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:54.711" endtime="20231212 10:46:58.820"/>
</kw>
<msg timestamp="20231212 10:46:58.820" level="INFO">${bucket1keys} = [ {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.622Z...</msg>
<status status="PASS" starttime="20231212 10:46:54.710" endtime="20231212 10:46:58.821"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:58.824" level="INFO">Running command 'echo '[ {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.622Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.622Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.640Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T10:46:34.411Z",
  "modificationTime" : "2023-12-12T10:46:35.896Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 988,
  "creationTime" : "2023-12-12T10:46:22.541Z",
  "modificationTime" : "2023-12-12T10:46:24.046Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:58.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:58.851" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20231212 10:46:58.822" endtime="20231212 10:46:58.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:58.852" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20231212 10:46:58.851" endtime="20231212 10:46:58.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:58.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:58.852" endtime="20231212 10:46:58.852"/>
</kw>
<status status="PASS" starttime="20231212 10:46:58.821" endtime="20231212 10:46:58.853"/>
</kw>
<msg timestamp="20231212 10:46:58.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:58.821" endtime="20231212 10:46:58.853"/>
</kw>
<msg timestamp="20231212 10:46:58.853" level="INFO">${source_list} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20231212 10:46:58.821" endtime="20231212 10:46:58.853"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${source_list}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231212 10:46:58.853" endtime="20231212 10:46:58.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:46:58.853" endtime="20231212 10:46:58.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:58.857" level="INFO">Running command 'echo '[ {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.622Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.622Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "dataSize" : 0,
  "creationTime" : "2023-12-12T10:46:54.622Z",
  "modificationTime" : "2023-12-12T10:46:54.640Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T10:46:34.411Z",
  "modificationTime" : "2023-12-12T10:46:35.896Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
}, {
  "volumeName" : "53721-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 988,
  "creationTime" : "2023-12-12T10:46:22.541Z",
  "modificationTime" : "2023-12-12T10:46:24.046Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:58.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:58.883" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20231212 10:46:58.855" endtime="20231212 10:46:58.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:58.884" level="INFO">key1</msg>
<status status="PASS" starttime="20231212 10:46:58.884" endtime="20231212 10:46:58.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:58.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:58.884" endtime="20231212 10:46:58.885"/>
</kw>
<status status="PASS" starttime="20231212 10:46:58.855" endtime="20231212 10:46:58.885"/>
</kw>
<msg timestamp="20231212 10:46:58.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:58.855" endtime="20231212 10:46:58.885"/>
</kw>
<msg timestamp="20231212 10:46:58.885" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20231212 10:46:58.854" endtime="20231212 10:46:58.885"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:46:58.885" endtime="20231212 10:46:58.886"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:46:50.459" endtime="20231212 10:46:58.886"/>
</test>
<test id="s1-s4-t6" name="Bucket list contains links" line="125">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:58.891" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:58.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:58.893" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:58.889" endtime="20231212 10:46:58.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:58.894" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:46:58.893" endtime="20231212 10:46:58.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:58.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:58.894" endtime="20231212 10:46:58.895"/>
</kw>
<status status="PASS" starttime="20231212 10:46:58.889" endtime="20231212 10:46:58.895"/>
</kw>
<msg timestamp="20231212 10:46:58.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:58.889" endtime="20231212 10:46:58.895"/>
</kw>
<msg timestamp="20231212 10:46:58.895" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:46:58.888" endtime="20231212 10:46:58.895"/>
</kw>
<msg timestamp="20231212 10:46:58.895" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:58.888" endtime="20231212 10:46:58.895"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:46:58.896" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:46:58.895" endtime="20231212 10:46:58.896"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:58.899" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:46:58.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:46:58.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:46:58.897" endtime="20231212 10:46:58.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:46:58.923" level="INFO"/>
<status status="PASS" starttime="20231212 10:46:58.922" endtime="20231212 10:46:58.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:46:58.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:46:58.923" endtime="20231212 10:46:58.924"/>
</kw>
<status status="PASS" starttime="20231212 10:46:58.897" endtime="20231212 10:46:58.924"/>
</kw>
<msg timestamp="20231212 10:46:58.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:58.897" endtime="20231212 10:46:58.925"/>
</kw>
<status status="PASS" starttime="20231212 10:46:58.896" endtime="20231212 10:46:58.925"/>
</kw>
<status status="PASS" starttime="20231212 10:46:58.896" endtime="20231212 10:46:58.925"/>
</kw>
<status status="PASS" starttime="20231212 10:46:58.887" endtime="20231212 10:46:58.925"/>
</kw>
<status status="PASS" starttime="20231212 10:46:58.887" endtime="20231212 10:46:58.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:46:58.927" level="INFO">Running command 'ozone sh bucket list 53721-target 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:03.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:03.148" level="INFO">${output} = [ {
  "volumeName" : "53721-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-12-12T10:46:06.014Z",
  "modific...</msg>
<status status="PASS" starttime="20231212 10:46:58.926" endtime="20231212 10:47:03.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:03.149" level="INFO">[ {
  "volumeName" : "53721-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-12-12T10:46:06.014Z",
  "modificationTime" : "2023-12-12T10:46:06.014Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "53721-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-12-12T10:45:41.360Z",
  "modificationTime" : "2023-12-12T10:45:41.360Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "53721-target",
  "bucketName" : "link1",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-12-12T10:46:14.457Z",
  "modificationTime" : "2023-12-12T10:46:14.457Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "53721-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-12-12T10:45:49.567Z",
  "modificationTime" : "2023-12-12T10:45:49.567Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "53721-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-12-12T10:45:53.917Z",
  "modificationTime" : "2023-12-12T10:45:53.917Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20231212 10:47:03.148" endtime="20231212 10:47:03.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:03.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:03.149" endtime="20231212 10:47:03.149"/>
</kw>
<status status="PASS" starttime="20231212 10:46:58.926" endtime="20231212 10:47:03.149"/>
</kw>
<msg timestamp="20231212 10:47:03.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:46:58.925" endtime="20231212 10:47:03.150"/>
</kw>
<msg timestamp="20231212 10:47:03.150" level="INFO">${result} = [ {
  "volumeName" : "53721-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-12-12T10:46:06.014Z",
  "modific...</msg>
<status status="PASS" starttime="20231212 10:46:58.925" endtime="20231212 10:47:03.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:47:03.150" endtime="20231212 10:47:03.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:47:03.150" endtime="20231212 10:47:03.151"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:46:58.886" endtime="20231212 10:47:03.151"/>
</test>
<test id="s1-s4-t7" name="Bucket info shows source" line="130">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:03.156" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:03.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:03.159" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:47:03.154" endtime="20231212 10:47:03.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:03.159" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:47:03.159" endtime="20231212 10:47:03.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:03.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:03.159" endtime="20231212 10:47:03.160"/>
</kw>
<status status="PASS" starttime="20231212 10:47:03.154" endtime="20231212 10:47:03.160"/>
</kw>
<msg timestamp="20231212 10:47:03.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:03.153" endtime="20231212 10:47:03.160"/>
</kw>
<msg timestamp="20231212 10:47:03.160" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:47:03.153" endtime="20231212 10:47:03.160"/>
</kw>
<msg timestamp="20231212 10:47:03.161" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:47:03.153" endtime="20231212 10:47:03.161"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:47:03.161" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:47:03.161" endtime="20231212 10:47:03.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:03.164" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:03.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:03.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:47:03.163" endtime="20231212 10:47:03.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:03.216" level="INFO"/>
<status status="PASS" starttime="20231212 10:47:03.216" endtime="20231212 10:47:03.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:03.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:03.217" endtime="20231212 10:47:03.217"/>
</kw>
<status status="PASS" starttime="20231212 10:47:03.162" endtime="20231212 10:47:03.217"/>
</kw>
<msg timestamp="20231212 10:47:03.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:03.162" endtime="20231212 10:47:03.217"/>
</kw>
<status status="PASS" starttime="20231212 10:47:03.162" endtime="20231212 10:47:03.217"/>
</kw>
<status status="PASS" starttime="20231212 10:47:03.161" endtime="20231212 10:47:03.218"/>
</kw>
<status status="PASS" starttime="20231212 10:47:03.152" endtime="20231212 10:47:03.218"/>
</kw>
<status status="PASS" starttime="20231212 10:47:03.152" endtime="20231212 10:47:03.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:03.230" level="INFO">Running command 'ozone sh bucket info 53721-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:07.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:07.404" level="INFO">${output} = {
  "volumeName" : "53721-target",
  "bucketName" : "link1",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-12-12T10:46:14.457Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20231212 10:47:03.228" endtime="20231212 10:47:07.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:07.405" level="INFO">{
  "volumeName" : "53721-target",
  "bucketName" : "link1",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-12-12T10:46:14.457Z",
  "modificationTime" : "2023-12-12T10:46:14.457Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20231212 10:47:07.405" endtime="20231212 10:47:07.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:07.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:07.405" endtime="20231212 10:47:07.406"/>
</kw>
<status status="PASS" starttime="20231212 10:47:03.227" endtime="20231212 10:47:07.406"/>
</kw>
<msg timestamp="20231212 10:47:07.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:03.218" endtime="20231212 10:47:07.406"/>
</kw>
<msg timestamp="20231212 10:47:07.406" level="INFO">${result} = {
  "volumeName" : "53721-target",
  "bucketName" : "link1",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-12-12T10:46:14.457Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20231212 10:47:03.218" endtime="20231212 10:47:07.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:47:07.407" endtime="20231212 10:47:07.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:47:07.407" endtime="20231212 10:47:07.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:47:07.407" endtime="20231212 10:47:07.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:47:07.408" endtime="20231212 10:47:07.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:47:07.408" endtime="20231212 10:47:07.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:47:07.409" endtime="20231212 10:47:07.409"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:47:07.409" endtime="20231212 10:47:07.409"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:47:03.151" endtime="20231212 10:47:07.410"/>
</test>
<test id="s1-s4-t8" name="Source and target bucket have different ACLs" line="140">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:07.415" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:07.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:07.417" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:47:07.413" endtime="20231212 10:47:07.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:07.418" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:47:07.417" endtime="20231212 10:47:07.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:07.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:07.418" endtime="20231212 10:47:07.418"/>
</kw>
<status status="PASS" starttime="20231212 10:47:07.413" endtime="20231212 10:47:07.418"/>
</kw>
<msg timestamp="20231212 10:47:07.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:07.412" endtime="20231212 10:47:07.419"/>
</kw>
<msg timestamp="20231212 10:47:07.419" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:47:07.412" endtime="20231212 10:47:07.419"/>
</kw>
<msg timestamp="20231212 10:47:07.419" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:47:07.412" endtime="20231212 10:47:07.419"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:47:07.419" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:47:07.419" endtime="20231212 10:47:07.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:07.422" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:07.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:07.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:47:07.421" endtime="20231212 10:47:07.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:07.450" level="INFO"/>
<status status="PASS" starttime="20231212 10:47:07.449" endtime="20231212 10:47:07.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:07.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:07.450" endtime="20231212 10:47:07.450"/>
</kw>
<status status="PASS" starttime="20231212 10:47:07.421" endtime="20231212 10:47:07.450"/>
</kw>
<msg timestamp="20231212 10:47:07.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:07.420" endtime="20231212 10:47:07.451"/>
</kw>
<status status="PASS" starttime="20231212 10:47:07.420" endtime="20231212 10:47:07.451"/>
</kw>
<status status="PASS" starttime="20231212 10:47:07.420" endtime="20231212 10:47:07.451"/>
</kw>
<status status="PASS" starttime="20231212 10:47:07.411" endtime="20231212 10:47:07.451"/>
</kw>
<status status="PASS" starttime="20231212 10:47:07.411" endtime="20231212 10:47:07.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:07.454" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 53721-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:11.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:11.418" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:47:07.452" endtime="20231212 10:47:11.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:11.419" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:47:11.419" endtime="20231212 10:47:11.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:11.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:11.420" endtime="20231212 10:47:11.420"/>
</kw>
<status status="PASS" starttime="20231212 10:47:07.452" endtime="20231212 10:47:11.420"/>
</kw>
<msg timestamp="20231212 10:47:11.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:07.452" endtime="20231212 10:47:11.420"/>
</kw>
<status status="PASS" starttime="20231212 10:47:07.451" endtime="20231212 10:47:11.421"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:11.425" level="INFO">Running command 'ozone sh bucket getacl 53721-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:15.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:15.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:47:11.423" endtime="20231212 10:47:15.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:15.314" level="INFO"/>
<status status="PASS" starttime="20231212 10:47:15.314" endtime="20231212 10:47:15.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:15.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:15.314" endtime="20231212 10:47:15.315"/>
</kw>
<status status="PASS" starttime="20231212 10:47:11.423" endtime="20231212 10:47:15.315"/>
</kw>
<msg timestamp="20231212 10:47:15.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:11.422" endtime="20231212 10:47:15.315"/>
</kw>
<msg timestamp="20231212 10:47:15.315" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20231212 10:47:11.422" endtime="20231212 10:47:15.315"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:47:15.315" endtime="20231212 10:47:15.316"/>
</kw>
<status status="PASS" starttime="20231212 10:47:11.421" endtime="20231212 10:47:15.316"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:15.320" level="INFO">Running command 'ozone sh bucket getacl --source=false 53721-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:19.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:19.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:47:15.319" endtime="20231212 10:47:19.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:19.300" level="INFO"/>
<status status="PASS" starttime="20231212 10:47:19.299" endtime="20231212 10:47:19.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:19.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:19.300" endtime="20231212 10:47:19.300"/>
</kw>
<status status="PASS" starttime="20231212 10:47:15.318" endtime="20231212 10:47:19.300"/>
</kw>
<msg timestamp="20231212 10:47:19.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:15.318" endtime="20231212 10:47:19.301"/>
</kw>
<msg timestamp="20231212 10:47:19.301" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20231212 10:47:15.317" endtime="20231212 10:47:19.301"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:47:19.301" endtime="20231212 10:47:19.301"/>
</kw>
<status status="PASS" starttime="20231212 10:47:15.316" endtime="20231212 10:47:19.301"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:19.305" level="INFO">Running command 'ozone sh bucket getacl --source 53721-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:23.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:23.378" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:47:19.303" endtime="20231212 10:47:23.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:23.379" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:47:23.378" endtime="20231212 10:47:23.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:23.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:23.379" endtime="20231212 10:47:23.379"/>
</kw>
<status status="PASS" starttime="20231212 10:47:19.303" endtime="20231212 10:47:23.379"/>
</kw>
<msg timestamp="20231212 10:47:23.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:19.303" endtime="20231212 10:47:23.380"/>
</kw>
<msg timestamp="20231212 10:47:23.380" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:47:19.302" endtime="20231212 10:47:23.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:47:23.380" endtime="20231212 10:47:23.380"/>
</kw>
<status status="PASS" starttime="20231212 10:47:19.301" endtime="20231212 10:47:23.380"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:23.384" level="INFO">Running command 'ozone sh bucket getacl 53721-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:27.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:27.402" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:47:23.382" endtime="20231212 10:47:27.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:27.403" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:47:27.403" endtime="20231212 10:47:27.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:27.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:27.404" endtime="20231212 10:47:27.404"/>
</kw>
<status status="PASS" starttime="20231212 10:47:23.382" endtime="20231212 10:47:27.404"/>
</kw>
<msg timestamp="20231212 10:47:27.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:23.382" endtime="20231212 10:47:27.404"/>
</kw>
<msg timestamp="20231212 10:47:27.404" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:47:23.381" endtime="20231212 10:47:27.404"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:47:27.405" endtime="20231212 10:47:27.405"/>
</kw>
<status status="PASS" starttime="20231212 10:47:23.380" endtime="20231212 10:47:27.405"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:27.408" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 53721-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:31.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:31.457" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20231212 10:47:27.406" endtime="20231212 10:47:31.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:31.459" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20231212 10:47:31.458" endtime="20231212 10:47:31.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:31.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:31.459" endtime="20231212 10:47:31.459"/>
</kw>
<status status="PASS" starttime="20231212 10:47:27.406" endtime="20231212 10:47:31.459"/>
</kw>
<msg timestamp="20231212 10:47:31.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:27.406" endtime="20231212 10:47:31.460"/>
</kw>
<status status="PASS" starttime="20231212 10:47:27.405" endtime="20231212 10:47:31.460"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:31.464" level="INFO">Running command 'ozone sh bucket getacl 53721-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:35.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:35.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:47:31.462" endtime="20231212 10:47:35.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:35.820" level="INFO"/>
<status status="PASS" starttime="20231212 10:47:35.820" endtime="20231212 10:47:35.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:35.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:35.821" endtime="20231212 10:47:35.821"/>
</kw>
<status status="PASS" starttime="20231212 10:47:31.462" endtime="20231212 10:47:35.821"/>
</kw>
<msg timestamp="20231212 10:47:35.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:31.461" endtime="20231212 10:47:35.821"/>
</kw>
<msg timestamp="20231212 10:47:35.821" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20231212 10:47:31.461" endtime="20231212 10:47:35.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:47:35.822" endtime="20231212 10:47:35.822"/>
</kw>
<status status="PASS" starttime="20231212 10:47:31.460" endtime="20231212 10:47:35.822"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:35.826" level="INFO">Running command 'ozone sh bucket getacl --source 53721-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:39.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:39.994" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20231212 10:47:35.824" endtime="20231212 10:47:39.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:39.995" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20231212 10:47:39.994" endtime="20231212 10:47:39.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:39.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:39.995" endtime="20231212 10:47:39.996"/>
</kw>
<status status="PASS" starttime="20231212 10:47:35.824" endtime="20231212 10:47:39.996"/>
</kw>
<msg timestamp="20231212 10:47:39.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:35.824" endtime="20231212 10:47:39.996"/>
</kw>
<msg timestamp="20231212 10:47:39.996" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20231212 10:47:35.823" endtime="20231212 10:47:39.996"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:47:39.996" endtime="20231212 10:47:39.996"/>
</kw>
<status status="PASS" starttime="20231212 10:47:35.822" endtime="20231212 10:47:39.997"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:39.999" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 53721-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:43.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:43.902" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20231212 10:47:39.998" endtime="20231212 10:47:43.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:43.903" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20231212 10:47:43.902" endtime="20231212 10:47:43.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:43.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:43.903" endtime="20231212 10:47:43.903"/>
</kw>
<status status="PASS" starttime="20231212 10:47:39.997" endtime="20231212 10:47:43.904"/>
</kw>
<msg timestamp="20231212 10:47:43.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:39.997" endtime="20231212 10:47:43.904"/>
</kw>
<status status="PASS" starttime="20231212 10:47:39.997" endtime="20231212 10:47:43.904"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:43.908" level="INFO">Running command 'ozone sh bucket getacl 53721-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:48.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:48.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:47:43.907" endtime="20231212 10:47:48.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:48.128" level="INFO"/>
<status status="PASS" starttime="20231212 10:47:48.128" endtime="20231212 10:47:48.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:48.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:48.129" endtime="20231212 10:47:48.129"/>
</kw>
<status status="PASS" starttime="20231212 10:47:43.906" endtime="20231212 10:47:48.129"/>
</kw>
<msg timestamp="20231212 10:47:48.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:43.906" endtime="20231212 10:47:48.129"/>
</kw>
<msg timestamp="20231212 10:47:48.130" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20231212 10:47:43.905" endtime="20231212 10:47:48.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:47:48.130" endtime="20231212 10:47:48.130"/>
</kw>
<status status="PASS" starttime="20231212 10:47:43.904" endtime="20231212 10:47:48.130"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:48.134" level="INFO">Running command 'ozone sh bucket getacl --source 53721-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:52.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:52.631" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20231212 10:47:48.132" endtime="20231212 10:47:52.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:52.632" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20231212 10:47:52.632" endtime="20231212 10:47:52.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:52.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:52.632" endtime="20231212 10:47:52.633"/>
</kw>
<status status="PASS" starttime="20231212 10:47:48.132" endtime="20231212 10:47:52.633"/>
</kw>
<msg timestamp="20231212 10:47:52.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:48.131" endtime="20231212 10:47:52.633"/>
</kw>
<msg timestamp="20231212 10:47:52.633" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20231212 10:47:48.131" endtime="20231212 10:47:52.633"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:47:52.634" endtime="20231212 10:47:52.634"/>
</kw>
<status status="PASS" starttime="20231212 10:47:48.130" endtime="20231212 10:47:52.634"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:52.637" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 53721-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:47:56.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:47:56.534" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:47:52.635" endtime="20231212 10:47:56.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:47:56.535" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:47:56.534" endtime="20231212 10:47:56.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:47:56.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:47:56.535" endtime="20231212 10:47:56.536"/>
</kw>
<status status="PASS" starttime="20231212 10:47:52.635" endtime="20231212 10:47:56.536"/>
</kw>
<msg timestamp="20231212 10:47:56.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:52.635" endtime="20231212 10:47:56.536"/>
</kw>
<status status="PASS" starttime="20231212 10:47:52.634" endtime="20231212 10:47:56.536"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:47:56.542" level="INFO">Running command 'ozone sh bucket getacl 53721-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:00.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:00.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:47:56.539" endtime="20231212 10:48:00.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:00.608" level="INFO"/>
<status status="PASS" starttime="20231212 10:48:00.607" endtime="20231212 10:48:00.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:00.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:00.608" endtime="20231212 10:48:00.608"/>
</kw>
<status status="PASS" starttime="20231212 10:47:56.539" endtime="20231212 10:48:00.609"/>
</kw>
<msg timestamp="20231212 10:48:00.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:47:56.539" endtime="20231212 10:48:00.609"/>
</kw>
<msg timestamp="20231212 10:48:00.609" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20231212 10:47:56.538" endtime="20231212 10:48:00.609"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:00.609" endtime="20231212 10:48:00.609"/>
</kw>
<status status="PASS" starttime="20231212 10:47:56.536" endtime="20231212 10:48:00.610"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:00.613" level="INFO">Running command 'ozone sh bucket getacl --source 53721-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:04.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:04.664" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20231212 10:48:00.612" endtime="20231212 10:48:04.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:04.665" level="INFO">READ</msg>
<status status="PASS" starttime="20231212 10:48:04.665" endtime="20231212 10:48:04.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:04.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:04.666" endtime="20231212 10:48:04.666"/>
</kw>
<status status="PASS" starttime="20231212 10:48:00.611" endtime="20231212 10:48:04.666"/>
</kw>
<msg timestamp="20231212 10:48:04.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:00.611" endtime="20231212 10:48:04.666"/>
</kw>
<msg timestamp="20231212 10:48:04.667" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20231212 10:48:00.610" endtime="20231212 10:48:04.667"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:04.667" endtime="20231212 10:48:04.667"/>
</kw>
<status status="PASS" starttime="20231212 10:48:00.610" endtime="20231212 10:48:04.667"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:47:07.410" endtime="20231212 10:48:04.667"/>
</test>
<test id="s1-s4-t9" name="Source and target key have same ACLs" line="159">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:04.672" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:04.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:04.675" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:48:04.671" endtime="20231212 10:48:04.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:04.676" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:48:04.675" endtime="20231212 10:48:04.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:04.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:04.676" endtime="20231212 10:48:04.676"/>
</kw>
<status status="PASS" starttime="20231212 10:48:04.670" endtime="20231212 10:48:04.676"/>
</kw>
<msg timestamp="20231212 10:48:04.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:04.670" endtime="20231212 10:48:04.676"/>
</kw>
<msg timestamp="20231212 10:48:04.677" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:48:04.670" endtime="20231212 10:48:04.677"/>
</kw>
<msg timestamp="20231212 10:48:04.677" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:48:04.669" endtime="20231212 10:48:04.677"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:48:04.677" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:48:04.677" endtime="20231212 10:48:04.677"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:04.680" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:04.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:04.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:48:04.679" endtime="20231212 10:48:04.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:04.716" level="INFO"/>
<status status="PASS" starttime="20231212 10:48:04.716" endtime="20231212 10:48:04.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:04.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:04.716" endtime="20231212 10:48:04.717"/>
</kw>
<status status="PASS" starttime="20231212 10:48:04.679" endtime="20231212 10:48:04.717"/>
</kw>
<msg timestamp="20231212 10:48:04.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:04.678" endtime="20231212 10:48:04.717"/>
</kw>
<status status="PASS" starttime="20231212 10:48:04.678" endtime="20231212 10:48:04.717"/>
</kw>
<status status="PASS" starttime="20231212 10:48:04.678" endtime="20231212 10:48:04.717"/>
</kw>
<status status="PASS" starttime="20231212 10:48:04.669" endtime="20231212 10:48:04.717"/>
</kw>
<status status="PASS" starttime="20231212 10:48:04.668" endtime="20231212 10:48:04.717"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:04.720" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 53721-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:08.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:08.806" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:48:04.719" endtime="20231212 10:48:08.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:08.807" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:48:08.807" endtime="20231212 10:48:08.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:08.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:08.808" endtime="20231212 10:48:08.808"/>
</kw>
<status status="PASS" starttime="20231212 10:48:04.718" endtime="20231212 10:48:08.808"/>
</kw>
<msg timestamp="20231212 10:48:08.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:04.718" endtime="20231212 10:48:08.808"/>
</kw>
<status status="PASS" starttime="20231212 10:48:04.718" endtime="20231212 10:48:08.808"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:08.812" level="INFO">Running command 'ozone sh key getacl 53721-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:12.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:12.911" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:48:08.810" endtime="20231212 10:48:12.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:12.912" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:48:12.911" endtime="20231212 10:48:12.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:12.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:12.912" endtime="20231212 10:48:12.912"/>
</kw>
<status status="PASS" starttime="20231212 10:48:08.810" endtime="20231212 10:48:12.912"/>
</kw>
<msg timestamp="20231212 10:48:12.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:08.810" endtime="20231212 10:48:12.913"/>
</kw>
<msg timestamp="20231212 10:48:12.913" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:48:08.809" endtime="20231212 10:48:12.913"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:12.913" endtime="20231212 10:48:12.913"/>
</kw>
<status status="PASS" starttime="20231212 10:48:08.809" endtime="20231212 10:48:12.913"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:12.917" level="INFO">Running command 'ozone sh key getacl 53721-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:16.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:16.985" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:48:12.915" endtime="20231212 10:48:16.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:16.986" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:48:16.985" endtime="20231212 10:48:16.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:16.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:16.986" endtime="20231212 10:48:16.987"/>
</kw>
<status status="PASS" starttime="20231212 10:48:12.915" endtime="20231212 10:48:16.987"/>
</kw>
<msg timestamp="20231212 10:48:16.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:12.915" endtime="20231212 10:48:16.987"/>
</kw>
<msg timestamp="20231212 10:48:16.987" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20231212 10:48:12.914" endtime="20231212 10:48:16.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:16.987" endtime="20231212 10:48:16.988"/>
</kw>
<status status="PASS" starttime="20231212 10:48:12.913" endtime="20231212 10:48:16.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:16.991" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 53721-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:20.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:20.849" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20231212 10:48:16.989" endtime="20231212 10:48:20.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:20.852" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20231212 10:48:20.850" endtime="20231212 10:48:20.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:20.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:20.852" endtime="20231212 10:48:20.853"/>
</kw>
<status status="PASS" starttime="20231212 10:48:16.989" endtime="20231212 10:48:20.853"/>
</kw>
<msg timestamp="20231212 10:48:20.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:16.989" endtime="20231212 10:48:20.853"/>
</kw>
<status status="PASS" starttime="20231212 10:48:16.988" endtime="20231212 10:48:20.853"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:20.870" level="INFO">Running command 'ozone sh key getacl 53721-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:25.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:25.094" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20231212 10:48:20.857" endtime="20231212 10:48:25.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:25.095" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20231212 10:48:25.095" endtime="20231212 10:48:25.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:25.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:25.095" endtime="20231212 10:48:25.096"/>
</kw>
<status status="PASS" starttime="20231212 10:48:20.856" endtime="20231212 10:48:25.096"/>
</kw>
<msg timestamp="20231212 10:48:25.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:20.855" endtime="20231212 10:48:25.096"/>
</kw>
<msg timestamp="20231212 10:48:25.096" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20231212 10:48:20.854" endtime="20231212 10:48:25.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:25.096" endtime="20231212 10:48:25.097"/>
</kw>
<status status="PASS" starttime="20231212 10:48:20.854" endtime="20231212 10:48:25.097"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:25.100" level="INFO">Running command 'ozone sh key getacl 53721-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:29.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:29.208" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20231212 10:48:25.099" endtime="20231212 10:48:29.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:29.209" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20231212 10:48:29.209" endtime="20231212 10:48:29.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:29.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:29.210" endtime="20231212 10:48:29.210"/>
</kw>
<status status="PASS" starttime="20231212 10:48:25.098" endtime="20231212 10:48:29.210"/>
</kw>
<msg timestamp="20231212 10:48:29.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:25.098" endtime="20231212 10:48:29.210"/>
</kw>
<msg timestamp="20231212 10:48:29.211" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20231212 10:48:25.098" endtime="20231212 10:48:29.211"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:29.211" endtime="20231212 10:48:29.211"/>
</kw>
<status status="PASS" starttime="20231212 10:48:25.097" endtime="20231212 10:48:29.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:29.214" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 53721-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:33.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:33.290" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20231212 10:48:29.213" endtime="20231212 10:48:33.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:33.291" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20231212 10:48:33.290" endtime="20231212 10:48:33.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:33.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:33.291" endtime="20231212 10:48:33.291"/>
</kw>
<status status="PASS" starttime="20231212 10:48:29.212" endtime="20231212 10:48:33.291"/>
</kw>
<msg timestamp="20231212 10:48:33.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:29.212" endtime="20231212 10:48:33.292"/>
</kw>
<status status="PASS" starttime="20231212 10:48:29.211" endtime="20231212 10:48:33.292"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:33.295" level="INFO">Running command 'ozone sh key getacl 53721-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:37.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:37.357" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20231212 10:48:33.294" endtime="20231212 10:48:37.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:37.358" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20231212 10:48:37.358" endtime="20231212 10:48:37.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:37.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:37.358" endtime="20231212 10:48:37.359"/>
</kw>
<status status="PASS" starttime="20231212 10:48:33.293" endtime="20231212 10:48:37.359"/>
</kw>
<msg timestamp="20231212 10:48:37.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:33.293" endtime="20231212 10:48:37.359"/>
</kw>
<msg timestamp="20231212 10:48:37.359" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20231212 10:48:33.292" endtime="20231212 10:48:37.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:37.360" endtime="20231212 10:48:37.360"/>
</kw>
<status status="PASS" starttime="20231212 10:48:33.292" endtime="20231212 10:48:37.360"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:37.364" level="INFO">Running command 'ozone sh key getacl 53721-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:41.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:41.555" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20231212 10:48:37.362" endtime="20231212 10:48:41.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:41.556" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20231212 10:48:41.556" endtime="20231212 10:48:41.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:41.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:41.557" endtime="20231212 10:48:41.557"/>
</kw>
<status status="PASS" starttime="20231212 10:48:37.362" endtime="20231212 10:48:41.557"/>
</kw>
<msg timestamp="20231212 10:48:41.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:37.362" endtime="20231212 10:48:41.558"/>
</kw>
<msg timestamp="20231212 10:48:41.558" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20231212 10:48:37.361" endtime="20231212 10:48:41.558"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:41.558" endtime="20231212 10:48:41.558"/>
</kw>
<status status="PASS" starttime="20231212 10:48:37.360" endtime="20231212 10:48:41.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:41.561" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 53721-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:45.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:45.488" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:48:41.560" endtime="20231212 10:48:45.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:45.489" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20231212 10:48:45.489" endtime="20231212 10:48:45.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:45.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:45.489" endtime="20231212 10:48:45.490"/>
</kw>
<status status="PASS" starttime="20231212 10:48:41.559" endtime="20231212 10:48:45.490"/>
</kw>
<msg timestamp="20231212 10:48:45.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:41.559" endtime="20231212 10:48:45.490"/>
</kw>
<status status="PASS" starttime="20231212 10:48:41.559" endtime="20231212 10:48:45.490"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:45.494" level="INFO">Running command 'ozone sh key getacl 53721-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:49.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:49.811" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20231212 10:48:45.492" endtime="20231212 10:48:49.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:49.812" level="INFO">READ</msg>
<status status="PASS" starttime="20231212 10:48:49.811" endtime="20231212 10:48:49.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:49.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:49.812" endtime="20231212 10:48:49.813"/>
</kw>
<status status="PASS" starttime="20231212 10:48:45.492" endtime="20231212 10:48:49.813"/>
</kw>
<msg timestamp="20231212 10:48:49.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:45.492" endtime="20231212 10:48:49.813"/>
</kw>
<msg timestamp="20231212 10:48:49.813" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20231212 10:48:45.491" endtime="20231212 10:48:49.813"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:49.813" endtime="20231212 10:48:49.814"/>
</kw>
<status status="PASS" starttime="20231212 10:48:45.491" endtime="20231212 10:48:49.814"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:49.817" level="INFO">Running command 'ozone sh key getacl 53721-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:54.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:54.051" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20231212 10:48:49.816" endtime="20231212 10:48:54.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:54.052" level="INFO">READ</msg>
<status status="PASS" starttime="20231212 10:48:54.051" endtime="20231212 10:48:54.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:54.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:54.052" endtime="20231212 10:48:54.052"/>
</kw>
<status status="PASS" starttime="20231212 10:48:49.815" endtime="20231212 10:48:54.052"/>
</kw>
<msg timestamp="20231212 10:48:54.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:49.815" endtime="20231212 10:48:54.053"/>
</kw>
<msg timestamp="20231212 10:48:54.053" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20231212 10:48:49.814" endtime="20231212 10:48:54.053"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:48:54.053" endtime="20231212 10:48:54.053"/>
</kw>
<status status="PASS" starttime="20231212 10:48:49.814" endtime="20231212 10:48:54.053"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:48:04.668" endtime="20231212 10:48:54.054"/>
</test>
<test id="s1-s4-t10" name="Buckets and links share namespace" line="174">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:54.059" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:54.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:54.061" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:48:54.057" endtime="20231212 10:48:54.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:54.062" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:48:54.062" endtime="20231212 10:48:54.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:54.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:54.062" endtime="20231212 10:48:54.063"/>
</kw>
<status status="PASS" starttime="20231212 10:48:54.057" endtime="20231212 10:48:54.063"/>
</kw>
<msg timestamp="20231212 10:48:54.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:54.056" endtime="20231212 10:48:54.063"/>
</kw>
<msg timestamp="20231212 10:48:54.063" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:48:54.056" endtime="20231212 10:48:54.063"/>
</kw>
<msg timestamp="20231212 10:48:54.063" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:48:54.056" endtime="20231212 10:48:54.063"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:48:54.064" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:48:54.064" endtime="20231212 10:48:54.064"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:54.067" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:54.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:54.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:48:54.066" endtime="20231212 10:48:54.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:54.092" level="INFO"/>
<status status="PASS" starttime="20231212 10:48:54.092" endtime="20231212 10:48:54.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:54.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:54.092" endtime="20231212 10:48:54.093"/>
</kw>
<status status="PASS" starttime="20231212 10:48:54.065" endtime="20231212 10:48:54.093"/>
</kw>
<msg timestamp="20231212 10:48:54.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:54.065" endtime="20231212 10:48:54.093"/>
</kw>
<status status="PASS" starttime="20231212 10:48:54.065" endtime="20231212 10:48:54.093"/>
</kw>
<status status="PASS" starttime="20231212 10:48:54.064" endtime="20231212 10:48:54.093"/>
</kw>
<status status="PASS" starttime="20231212 10:48:54.055" endtime="20231212 10:48:54.093"/>
</kw>
<status status="PASS" starttime="20231212 10:48:54.055" endtime="20231212 10:48:54.093"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:54.096" level="INFO">Running command 'ozone sh bucket link 53721-source/bucket2 53721-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:48:58.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:48:58.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:48:54.095" endtime="20231212 10:48:58.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:48:58.157" level="INFO"/>
<status status="PASS" starttime="20231212 10:48:58.156" endtime="20231212 10:48:58.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:48:58.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:48:58.157" endtime="20231212 10:48:58.157"/>
</kw>
<status status="PASS" starttime="20231212 10:48:54.094" endtime="20231212 10:48:58.157"/>
</kw>
<msg timestamp="20231212 10:48:58.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:48:54.094" endtime="20231212 10:48:58.158"/>
</kw>
<status status="PASS" starttime="20231212 10:48:54.094" endtime="20231212 10:48:58.158"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:48:58.160" level="INFO">Running command 'ozone sh bucket create 53721-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:01.994" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:49:01.994" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20231212 10:48:58.158" endtime="20231212 10:49:01.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:01.995" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20231212 10:49:01.994" endtime="20231212 10:49:01.995"/>
</kw>
<msg timestamp="20231212 10:49:01.995" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20231212 10:48:58.158" endtime="20231212 10:49:01.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:01.995" endtime="20231212 10:49:01.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:01.998" level="INFO">Running command 'ozone sh bucket create 53721-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:06.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:06.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:01.997" endtime="20231212 10:49:06.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:06.030" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:06.030" endtime="20231212 10:49:06.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:06.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:06.031" endtime="20231212 10:49:06.031"/>
</kw>
<status status="PASS" starttime="20231212 10:49:01.996" endtime="20231212 10:49:06.031"/>
</kw>
<msg timestamp="20231212 10:49:06.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:01.996" endtime="20231212 10:49:06.031"/>
</kw>
<status status="PASS" starttime="20231212 10:49:01.996" endtime="20231212 10:49:06.031"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:06.034" level="INFO">Running command 'ozone sh bucket link 53721-source/bucket1 53721-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:10.121" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:49:10.121" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20231212 10:49:06.032" endtime="20231212 10:49:10.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:10.122" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20231212 10:49:10.121" endtime="20231212 10:49:10.122"/>
</kw>
<msg timestamp="20231212 10:49:10.122" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20231212 10:49:06.032" endtime="20231212 10:49:10.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:10.123" endtime="20231212 10:49:10.123"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:48:54.054" endtime="20231212 10:49:10.123"/>
</test>
<test id="s1-s4-t11" name="Can follow link with read access" line="183">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:10.128" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:10.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:10.130" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:10.126" endtime="20231212 10:49:10.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:10.131" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:49:10.131" endtime="20231212 10:49:10.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:10.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:10.131" endtime="20231212 10:49:10.132"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.126" endtime="20231212 10:49:10.132"/>
</kw>
<msg timestamp="20231212 10:49:10.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:10.126" endtime="20231212 10:49:10.132"/>
</kw>
<msg timestamp="20231212 10:49:10.132" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:10.125" endtime="20231212 10:49:10.132"/>
</kw>
<msg timestamp="20231212 10:49:10.132" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:10.125" endtime="20231212 10:49:10.132"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:49:10.133" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:10.132" endtime="20231212 10:49:10.133"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:10.136" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:10.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:10.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:10.134" endtime="20231212 10:49:10.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:10.175" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:10.174" endtime="20231212 10:49:10.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:10.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:10.175" endtime="20231212 10:49:10.175"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.134" endtime="20231212 10:49:10.175"/>
</kw>
<msg timestamp="20231212 10:49:10.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:10.134" endtime="20231212 10:49:10.176"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.133" endtime="20231212 10:49:10.176"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.133" endtime="20231212 10:49:10.176"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.125" endtime="20231212 10:49:10.176"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.124" endtime="20231212 10:49:10.176"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:10.179" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:10.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:10.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:10.178" endtime="20231212 10:49:10.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:10.183" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:10.182" endtime="20231212 10:49:10.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:10.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:10.183" endtime="20231212 10:49:10.183"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.177" endtime="20231212 10:49:10.184"/>
</kw>
<msg timestamp="20231212 10:49:10.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:10.177" endtime="20231212 10:49:10.184"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.177" endtime="20231212 10:49:10.184"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:10.187" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:10.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:10.190" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:10.186" endtime="20231212 10:49:10.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:10.190" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:49:10.190" endtime="20231212 10:49:10.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:10.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:10.191" endtime="20231212 10:49:10.191"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.186" endtime="20231212 10:49:10.191"/>
</kw>
<msg timestamp="20231212 10:49:10.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:10.185" endtime="20231212 10:49:10.191"/>
</kw>
<msg timestamp="20231212 10:49:10.192" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:10.185" endtime="20231212 10:49:10.192"/>
</kw>
<msg timestamp="20231212 10:49:10.192" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:10.185" endtime="20231212 10:49:10.192"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:49:10.192" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:10.192" endtime="20231212 10:49:10.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:10.196" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:10.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:10.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:10.195" endtime="20231212 10:49:10.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:10.229" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:10.228" endtime="20231212 10:49:10.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:10.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:10.229" endtime="20231212 10:49:10.229"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.193" endtime="20231212 10:49:10.229"/>
</kw>
<msg timestamp="20231212 10:49:10.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:10.193" endtime="20231212 10:49:10.229"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.193" endtime="20231212 10:49:10.230"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.192" endtime="20231212 10:49:10.230"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.184" endtime="20231212 10:49:10.230"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.184" endtime="20231212 10:49:10.230"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:10.232" level="INFO">Running command 'ozone sh key list 53721-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:14.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:14.677" level="INFO">${output} = [ {
  "volumeName" : "53721-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-12-12T10:45:31.901Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20231212 10:49:10.231" endtime="20231212 10:49:14.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:14.678" level="INFO">[ {
  "volumeName" : "53721-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-12-12T10:45:31.901Z",
  "modificationTime" : "2023-12-12T10:45:33.350Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20231212 10:49:14.677" endtime="20231212 10:49:14.678"/>
</kw>
<msg timestamp="20231212 10:49:14.678" level="INFO">${result} = [ {
  "volumeName" : "53721-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-12-12T10:45:31.901Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20231212 10:49:10.230" endtime="20231212 10:49:14.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:14.678" endtime="20231212 10:49:14.679"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:14.681" level="INFO">Running command 'ozone sh key list 53721-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:19.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:19.211" level="INFO">${output} = [ {
  "volumeName" : "53721-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-12-12T10:45:31.901Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20231212 10:49:14.679" endtime="20231212 10:49:19.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:19.212" level="INFO">[ {
  "volumeName" : "53721-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-12-12T10:45:31.901Z",
  "modificationTime" : "2023-12-12T10:45:33.350Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20231212 10:49:19.212" endtime="20231212 10:49:19.212"/>
</kw>
<msg timestamp="20231212 10:49:19.212" level="INFO">${result} = [ {
  "volumeName" : "53721-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-12-12T10:45:31.901Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20231212 10:49:14.679" endtime="20231212 10:49:19.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:19.213" endtime="20231212 10:49:19.213"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.176" endtime="20231212 10:49:19.213"/>
</kw>
<status status="PASS" starttime="20231212 10:49:10.176" endtime="20231212 10:49:19.213"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:49:10.124" endtime="20231212 10:49:19.213"/>
</test>
<test id="s1-s4-t12" name="Cannot follow link without read access" line="186">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:19.218" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:19.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:19.221" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:19.216" endtime="20231212 10:49:19.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:19.221" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:49:19.221" endtime="20231212 10:49:19.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:19.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:19.221" endtime="20231212 10:49:19.222"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.216" endtime="20231212 10:49:19.222"/>
</kw>
<msg timestamp="20231212 10:49:19.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:19.216" endtime="20231212 10:49:19.222"/>
</kw>
<msg timestamp="20231212 10:49:19.222" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:19.216" endtime="20231212 10:49:19.222"/>
</kw>
<msg timestamp="20231212 10:49:19.223" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:19.215" endtime="20231212 10:49:19.223"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:49:19.223" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:19.223" endtime="20231212 10:49:19.223"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:19.226" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:19.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:19.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:19.225" endtime="20231212 10:49:19.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:19.253" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:19.252" endtime="20231212 10:49:19.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:19.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:19.253" endtime="20231212 10:49:19.254"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.224" endtime="20231212 10:49:19.254"/>
</kw>
<msg timestamp="20231212 10:49:19.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:19.224" endtime="20231212 10:49:19.254"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.224" endtime="20231212 10:49:19.254"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.223" endtime="20231212 10:49:19.254"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.215" endtime="20231212 10:49:19.254"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.214" endtime="20231212 10:49:19.254"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:19.258" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:19.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:19.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:19.257" endtime="20231212 10:49:19.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:19.261" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:19.261" endtime="20231212 10:49:19.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:19.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:19.262" endtime="20231212 10:49:19.262"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.256" endtime="20231212 10:49:19.262"/>
</kw>
<msg timestamp="20231212 10:49:19.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:19.256" endtime="20231212 10:49:19.262"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.255" endtime="20231212 10:49:19.262"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:19.266" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:19.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:19.268" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:19.264" endtime="20231212 10:49:19.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:19.269" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:49:19.268" endtime="20231212 10:49:19.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:19.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:19.269" endtime="20231212 10:49:19.269"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.264" endtime="20231212 10:49:19.269"/>
</kw>
<msg timestamp="20231212 10:49:19.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:19.264" endtime="20231212 10:49:19.269"/>
</kw>
<msg timestamp="20231212 10:49:19.270" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:19.264" endtime="20231212 10:49:19.270"/>
</kw>
<msg timestamp="20231212 10:49:19.270" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:19.263" endtime="20231212 10:49:19.270"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:49:19.270" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:19.270" endtime="20231212 10:49:19.270"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:19.273" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:19.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:19.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:19.272" endtime="20231212 10:49:19.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:19.299" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:19.298" endtime="20231212 10:49:19.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:19.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:19.299" endtime="20231212 10:49:19.299"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.272" endtime="20231212 10:49:19.299"/>
</kw>
<msg timestamp="20231212 10:49:19.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:19.271" endtime="20231212 10:49:19.299"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.271" endtime="20231212 10:49:19.300"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.271" endtime="20231212 10:49:19.300"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.263" endtime="20231212 10:49:19.300"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.263" endtime="20231212 10:49:19.300"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:19.302" level="INFO">Running command 'ozone sh key list 53721-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:23.370" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:49:23.370" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:53721-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20231212 10:49:19.300" endtime="20231212 10:49:23.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:23.371" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:53721-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20231212 10:49:23.370" endtime="20231212 10:49:23.371"/>
</kw>
<msg timestamp="20231212 10:49:23.371" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:53721-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20231212 10:49:19.300" endtime="20231212 10:49:23.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:23.371" endtime="20231212 10:49:23.372"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:23.374" level="INFO">Running command 'ozone sh key list 53721-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:27.224" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:49:27.225" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:53721-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20231212 10:49:23.372" endtime="20231212 10:49:27.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:27.225" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:53721-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20231212 10:49:27.225" endtime="20231212 10:49:27.226"/>
</kw>
<msg timestamp="20231212 10:49:27.226" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:53721-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20231212 10:49:23.372" endtime="20231212 10:49:27.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:27.226" endtime="20231212 10:49:27.226"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.255" endtime="20231212 10:49:27.226"/>
</kw>
<status status="PASS" starttime="20231212 10:49:19.255" endtime="20231212 10:49:27.226"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:49:19.214" endtime="20231212 10:49:27.227"/>
</test>
<test id="s1-s4-t13" name="ACL verified on source and target bucket" line="189">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:27.232" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:27.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:27.234" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:27.230" endtime="20231212 10:49:27.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:27.235" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:49:27.235" endtime="20231212 10:49:27.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:27.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:27.235" endtime="20231212 10:49:27.236"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.230" endtime="20231212 10:49:27.236"/>
</kw>
<msg timestamp="20231212 10:49:27.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:27.230" endtime="20231212 10:49:27.236"/>
</kw>
<msg timestamp="20231212 10:49:27.236" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:27.229" endtime="20231212 10:49:27.236"/>
</kw>
<msg timestamp="20231212 10:49:27.236" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:27.229" endtime="20231212 10:49:27.236"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:49:27.237" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:27.237" endtime="20231212 10:49:27.237"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:27.240" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:27.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:27.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:27.238" endtime="20231212 10:49:27.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:27.271" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:27.270" endtime="20231212 10:49:27.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:27.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:27.271" endtime="20231212 10:49:27.271"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.238" endtime="20231212 10:49:27.271"/>
</kw>
<msg timestamp="20231212 10:49:27.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:27.238" endtime="20231212 10:49:27.272"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.237" endtime="20231212 10:49:27.272"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.237" endtime="20231212 10:49:27.272"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.228" endtime="20231212 10:49:27.272"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.228" endtime="20231212 10:49:27.272"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source and target bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:27.275" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:27.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:27.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:27.274" endtime="20231212 10:49:27.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:27.278" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:27.278" endtime="20231212 10:49:27.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:27.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:27.278" endtime="20231212 10:49:27.279"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.273" endtime="20231212 10:49:27.279"/>
</kw>
<msg timestamp="20231212 10:49:27.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:27.273" endtime="20231212 10:49:27.279"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.273" endtime="20231212 10:49:27.279"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:27.283" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:27.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:27.285" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:27.282" endtime="20231212 10:49:27.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:27.286" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:49:27.285" endtime="20231212 10:49:27.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:27.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:27.286" endtime="20231212 10:49:27.287"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.281" endtime="20231212 10:49:27.287"/>
</kw>
<msg timestamp="20231212 10:49:27.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:27.281" endtime="20231212 10:49:27.287"/>
</kw>
<msg timestamp="20231212 10:49:27.287" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:27.281" endtime="20231212 10:49:27.287"/>
</kw>
<msg timestamp="20231212 10:49:27.287" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:27.280" endtime="20231212 10:49:27.287"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:49:27.288" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:27.287" endtime="20231212 10:49:27.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:27.291" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:27.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:27.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:27.289" endtime="20231212 10:49:27.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:27.309" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:27.308" endtime="20231212 10:49:27.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:27.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:27.309" endtime="20231212 10:49:27.309"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.289" endtime="20231212 10:49:27.309"/>
</kw>
<msg timestamp="20231212 10:49:27.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:27.289" endtime="20231212 10:49:27.310"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.288" endtime="20231212 10:49:27.310"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.288" endtime="20231212 10:49:27.310"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.280" endtime="20231212 10:49:27.310"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.279" endtime="20231212 10:49:27.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:27.313" level="INFO">Running command 'ozone sh bucket info 53721-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:31.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:31.447" level="INFO">${output} = {
  "volumeName" : "53721-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-12-12T10:45:41.360Z...</msg>
<status status="PASS" starttime="20231212 10:49:27.311" endtime="20231212 10:49:31.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:31.448" level="INFO">{
  "volumeName" : "53721-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-12-12T10:45:41.360Z",
  "modificationTime" : "2023-12-12T10:45:41.360Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20231212 10:49:31.448" endtime="20231212 10:49:31.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:31.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:31.449" endtime="20231212 10:49:31.449"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.311" endtime="20231212 10:49:31.449"/>
</kw>
<msg timestamp="20231212 10:49:31.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:27.310" endtime="20231212 10:49:31.450"/>
</kw>
<msg timestamp="20231212 10:49:31.450" level="INFO">${result} = {
  "volumeName" : "53721-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-12-12T10:45:41.360Z...</msg>
<status status="PASS" starttime="20231212 10:49:27.310" endtime="20231212 10:49:31.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:31.450" endtime="20231212 10:49:31.450"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:31.450" endtime="20231212 10:49:31.451"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:31.453" level="INFO">Running command 'ozone sh bucket info 53721-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:35.406" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:49:35.406" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:53721-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20231212 10:49:31.451" endtime="20231212 10:49:35.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:35.407" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:53721-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20231212 10:49:35.406" endtime="20231212 10:49:35.407"/>
</kw>
<msg timestamp="20231212 10:49:35.407" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:53721-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20231212 10:49:31.451" endtime="20231212 10:49:35.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:35.407" endtime="20231212 10:49:35.408"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.272" endtime="20231212 10:49:35.408"/>
</kw>
<status status="PASS" starttime="20231212 10:49:27.272" endtime="20231212 10:49:35.408"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:49:27.227" endtime="20231212 10:49:35.408"/>
</test>
<test id="s1-s4-t14" name="Loop in link chain is detected" line="192">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:35.414" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:35.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:35.416" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:35.412" endtime="20231212 10:49:35.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:35.417" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:49:35.416" endtime="20231212 10:49:35.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:35.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:35.417" endtime="20231212 10:49:35.417"/>
</kw>
<status status="PASS" starttime="20231212 10:49:35.411" endtime="20231212 10:49:35.417"/>
</kw>
<msg timestamp="20231212 10:49:35.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:35.411" endtime="20231212 10:49:35.418"/>
</kw>
<msg timestamp="20231212 10:49:35.418" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:49:35.411" endtime="20231212 10:49:35.418"/>
</kw>
<msg timestamp="20231212 10:49:35.418" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:35.410" endtime="20231212 10:49:35.418"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:49:35.418" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:49:35.418" endtime="20231212 10:49:35.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:35.421" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:35.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:35.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:35.420" endtime="20231212 10:49:35.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:35.448" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:35.447" endtime="20231212 10:49:35.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:35.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:35.448" endtime="20231212 10:49:35.448"/>
</kw>
<status status="PASS" starttime="20231212 10:49:35.420" endtime="20231212 10:49:35.448"/>
</kw>
<msg timestamp="20231212 10:49:35.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:35.419" endtime="20231212 10:49:35.449"/>
</kw>
<status status="PASS" starttime="20231212 10:49:35.419" endtime="20231212 10:49:35.449"/>
</kw>
<status status="PASS" starttime="20231212 10:49:35.419" endtime="20231212 10:49:35.449"/>
</kw>
<status status="PASS" starttime="20231212 10:49:35.410" endtime="20231212 10:49:35.449"/>
</kw>
<status status="PASS" starttime="20231212 10:49:35.410" endtime="20231212 10:49:35.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:35.452" level="INFO">Running command 'ozone sh bucket link 53721-target/loop1 53721-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:39.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:39.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:35.450" endtime="20231212 10:49:39.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:39.577" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:39.576" endtime="20231212 10:49:39.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:39.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:39.577" endtime="20231212 10:49:39.577"/>
</kw>
<status status="PASS" starttime="20231212 10:49:35.450" endtime="20231212 10:49:39.577"/>
</kw>
<msg timestamp="20231212 10:49:39.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:35.449" endtime="20231212 10:49:39.578"/>
</kw>
<status status="PASS" starttime="20231212 10:49:35.449" endtime="20231212 10:49:39.578"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:39.581" level="INFO">Running command 'ozone sh bucket link 53721-target/loop2 53721-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:43.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:43.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:39.579" endtime="20231212 10:49:43.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:43.615" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:43.614" endtime="20231212 10:49:43.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:43.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:43.615" endtime="20231212 10:49:43.615"/>
</kw>
<status status="PASS" starttime="20231212 10:49:39.579" endtime="20231212 10:49:43.616"/>
</kw>
<msg timestamp="20231212 10:49:43.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:39.578" endtime="20231212 10:49:43.616"/>
</kw>
<status status="PASS" starttime="20231212 10:49:39.578" endtime="20231212 10:49:43.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:43.619" level="INFO">Running command 'ozone sh bucket link 53721-target/loop3 53721-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:47.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:47.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:49:43.617" endtime="20231212 10:49:47.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:47.718" level="INFO"/>
<status status="PASS" starttime="20231212 10:49:47.717" endtime="20231212 10:49:47.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:47.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:47.718" endtime="20231212 10:49:47.719"/>
</kw>
<status status="PASS" starttime="20231212 10:49:43.617" endtime="20231212 10:49:47.719"/>
</kw>
<msg timestamp="20231212 10:49:47.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:43.617" endtime="20231212 10:49:47.719"/>
</kw>
<status status="PASS" starttime="20231212 10:49:43.616" endtime="20231212 10:49:47.719"/>
</kw>
<status status="PASS" starttime="20231212 10:49:35.409" endtime="20231212 10:49:47.719"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:47.722" level="INFO">Running command 'ozone sh key list 53721-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:51.746" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:49:51.746" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20231212 10:49:47.720" endtime="20231212 10:49:51.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:51.747" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20231212 10:49:51.747" endtime="20231212 10:49:51.747"/>
</kw>
<msg timestamp="20231212 10:49:51.748" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20231212 10:49:47.719" endtime="20231212 10:49:51.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:49:51.748" endtime="20231212 10:49:51.748"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:51.752" level="INFO">Running command 'ozone sh bucket delete 53721-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:49:56.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:49:56.044" level="INFO">${output} = Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20231212 10:49:51.750" endtime="20231212 10:49:56.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:49:56.045" level="INFO">Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20231212 10:49:56.045" endtime="20231212 10:49:56.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:49:56.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:49:56.046" endtime="20231212 10:49:56.046"/>
</kw>
<status status="PASS" starttime="20231212 10:49:51.750" endtime="20231212 10:49:56.046"/>
</kw>
<msg timestamp="20231212 10:49:56.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:51.749" endtime="20231212 10:49:56.046"/>
</kw>
<status status="PASS" starttime="20231212 10:49:51.749" endtime="20231212 10:49:56.046"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:49:56.050" level="INFO">Running command 'ozone sh bucket delete 53721-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:00.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:00.231" level="INFO">${output} = Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20231212 10:49:56.048" endtime="20231212 10:50:00.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:00.231" level="INFO">Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20231212 10:50:00.231" endtime="20231212 10:50:00.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:00.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:00.232" endtime="20231212 10:50:00.232"/>
</kw>
<status status="PASS" starttime="20231212 10:49:56.047" endtime="20231212 10:50:00.232"/>
</kw>
<msg timestamp="20231212 10:50:00.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:49:56.047" endtime="20231212 10:50:00.232"/>
</kw>
<status status="PASS" starttime="20231212 10:49:56.047" endtime="20231212 10:50:00.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:00.235" level="INFO">Running command 'ozone sh bucket delete 53721-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:04.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:04.125" level="INFO">${output} = Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20231212 10:50:00.234" endtime="20231212 10:50:04.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:04.126" level="INFO">Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20231212 10:50:04.126" endtime="20231212 10:50:04.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:04.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:04.126" endtime="20231212 10:50:04.127"/>
</kw>
<status status="PASS" starttime="20231212 10:50:00.233" endtime="20231212 10:50:04.127"/>
</kw>
<msg timestamp="20231212 10:50:04.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:00.233" endtime="20231212 10:50:04.127"/>
</kw>
<status status="PASS" starttime="20231212 10:50:00.232" endtime="20231212 10:50:04.127"/>
</kw>
<status status="PASS" starttime="20231212 10:49:51.748" endtime="20231212 10:50:04.127"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:49:35.409" endtime="20231212 10:50:04.127"/>
</test>
<test id="s1-s4-t15" name="Multiple links to same bucket are allowed" line="198">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:04.133" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:04.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:04.135" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:50:04.131" endtime="20231212 10:50:04.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:04.136" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:50:04.135" endtime="20231212 10:50:04.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:04.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:04.136" endtime="20231212 10:50:04.136"/>
</kw>
<status status="PASS" starttime="20231212 10:50:04.131" endtime="20231212 10:50:04.137"/>
</kw>
<msg timestamp="20231212 10:50:04.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:04.130" endtime="20231212 10:50:04.137"/>
</kw>
<msg timestamp="20231212 10:50:04.137" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:50:04.130" endtime="20231212 10:50:04.137"/>
</kw>
<msg timestamp="20231212 10:50:04.137" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:50:04.130" endtime="20231212 10:50:04.137"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:50:04.138" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:50:04.137" endtime="20231212 10:50:04.138"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:04.141" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:04.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:04.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:04.139" endtime="20231212 10:50:04.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:04.155" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:04.154" endtime="20231212 10:50:04.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:04.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:04.155" endtime="20231212 10:50:04.156"/>
</kw>
<status status="PASS" starttime="20231212 10:50:04.139" endtime="20231212 10:50:04.156"/>
</kw>
<msg timestamp="20231212 10:50:04.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:04.139" endtime="20231212 10:50:04.156"/>
</kw>
<status status="PASS" starttime="20231212 10:50:04.138" endtime="20231212 10:50:04.156"/>
</kw>
<status status="PASS" starttime="20231212 10:50:04.138" endtime="20231212 10:50:04.156"/>
</kw>
<status status="PASS" starttime="20231212 10:50:04.129" endtime="20231212 10:50:04.156"/>
</kw>
<status status="PASS" starttime="20231212 10:50:04.129" endtime="20231212 10:50:04.156"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:04.159" level="INFO">Running command 'ozone sh bucket link 53721-source/bucket1 53721-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:08.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:08.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:04.158" endtime="20231212 10:50:08.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:08.164" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:08.163" endtime="20231212 10:50:08.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:08.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:08.164" endtime="20231212 10:50:08.164"/>
</kw>
<status status="PASS" starttime="20231212 10:50:04.157" endtime="20231212 10:50:08.165"/>
</kw>
<msg timestamp="20231212 10:50:08.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:04.157" endtime="20231212 10:50:08.165"/>
</kw>
<status status="PASS" starttime="20231212 10:50:04.156" endtime="20231212 10:50:08.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:08.168" level="INFO">Running command 'ozone sh key put 53721-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:14.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:14.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:08.166" endtime="20231212 10:50:14.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:14.178" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:14.178" endtime="20231212 10:50:14.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:14.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:14.178" endtime="20231212 10:50:14.179"/>
</kw>
<status status="PASS" starttime="20231212 10:50:08.166" endtime="20231212 10:50:14.179"/>
</kw>
<msg timestamp="20231212 10:50:14.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:08.165" endtime="20231212 10:50:14.179"/>
</kw>
<status status="PASS" starttime="20231212 10:50:08.165" endtime="20231212 10:50:14.179"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:50:14.181" level="INFO">${postfix} = 47030</msg>
<status status="PASS" starttime="20231212 10:50:14.180" endtime="20231212 10:50:14.181"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:50:14.182" level="INFO">${tmpfile} = /tmp/tempkey-47030</msg>
<status status="PASS" starttime="20231212 10:50:14.181" endtime="20231212 10:50:14.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:14.185" level="INFO">Running command 'ozone sh key get 53721-target/link1/key3 /tmp/tempkey-47030 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:19.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:19.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:14.183" endtime="20231212 10:50:19.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:19.652" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:19.651" endtime="20231212 10:50:19.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:19.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:19.652" endtime="20231212 10:50:19.652"/>
</kw>
<status status="PASS" starttime="20231212 10:50:14.182" endtime="20231212 10:50:19.653"/>
</kw>
<msg timestamp="20231212 10:50:19.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:14.182" endtime="20231212 10:50:19.653"/>
</kw>
<status status="PASS" starttime="20231212 10:50:14.182" endtime="20231212 10:50:19.653"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231212 10:50:19.655" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-47030 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:19.657" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231212 10:50:19.653" endtime="20231212 10:50:19.657"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:19.660" level="INFO">Running command 'rm -f /tmp/tempkey-47030 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:19.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:19.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:19.658" endtime="20231212 10:50:19.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:19.662" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:19.662" endtime="20231212 10:50:19.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:19.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:19.662" endtime="20231212 10:50:19.663"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.658" endtime="20231212 10:50:19.663"/>
</kw>
<msg timestamp="20231212 10:50:19.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:19.658" endtime="20231212 10:50:19.663"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.657" endtime="20231212 10:50:19.663"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231212 10:50:19.664" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231212 10:50:19.663" endtime="20231212 10:50:19.664"/>
</kw>
<msg timestamp="20231212 10:50:19.664" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231212 10:50:14.180" endtime="20231212 10:50:19.664"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231212 10:50:19.664" endtime="20231212 10:50:19.664"/>
</kw>
<status status="PASS" starttime="20231212 10:50:14.180" endtime="20231212 10:50:19.664"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:50:04.128" endtime="20231212 10:50:19.665"/>
</test>
<test id="s1-s4-t16" name="Source bucket not affected by deleting link" line="203">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:19.669" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:19.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:19.672" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:50:19.668" endtime="20231212 10:50:19.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:19.672" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:50:19.672" endtime="20231212 10:50:19.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:19.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:19.673" endtime="20231212 10:50:19.673"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.668" endtime="20231212 10:50:19.673"/>
</kw>
<msg timestamp="20231212 10:50:19.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:19.667" endtime="20231212 10:50:19.673"/>
</kw>
<msg timestamp="20231212 10:50:19.673" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:50:19.667" endtime="20231212 10:50:19.673"/>
</kw>
<msg timestamp="20231212 10:50:19.674" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:50:19.667" endtime="20231212 10:50:19.674"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:50:19.674" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:50:19.674" endtime="20231212 10:50:19.674"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:19.677" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:19.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:19.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:19.676" endtime="20231212 10:50:19.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:19.691" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:19.690" endtime="20231212 10:50:19.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:19.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:19.691" endtime="20231212 10:50:19.691"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.676" endtime="20231212 10:50:19.692"/>
</kw>
<msg timestamp="20231212 10:50:19.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:19.675" endtime="20231212 10:50:19.692"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.675" endtime="20231212 10:50:19.692"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.674" endtime="20231212 10:50:19.692"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.666" endtime="20231212 10:50:19.692"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.666" endtime="20231212 10:50:19.692"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:19.695" level="INFO">Running command 'ozone sh bucket delete 53721-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:23.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:23.887" level="INFO">${output} = Bucket link1 is deleted</msg>
<status status="PASS" starttime="20231212 10:50:19.693" endtime="20231212 10:50:23.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:23.888" level="INFO">Bucket link1 is deleted</msg>
<status status="PASS" starttime="20231212 10:50:23.887" endtime="20231212 10:50:23.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:23.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:23.888" endtime="20231212 10:50:23.888"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.693" endtime="20231212 10:50:23.888"/>
</kw>
<msg timestamp="20231212 10:50:23.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:19.693" endtime="20231212 10:50:23.889"/>
</kw>
<status status="PASS" starttime="20231212 10:50:19.692" endtime="20231212 10:50:23.889"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:23.892" level="INFO">Running command 'ozone sh bucket list 53721-target 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:27.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:27.921" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "53721-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-12-1...</msg>
<status status="PASS" starttime="20231212 10:50:23.890" endtime="20231212 10:50:27.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:27.922" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "53721-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-12-12T10:49:05.949Z",
  "modificationTime" : "2023-12-12T10:49:05.949Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "53721-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-12-12T10:46:06.014Z",
  "modificationTime" : "2023-12-12T10:46:06.014Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "53721-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-12-12T10:45:41.360Z",
  "modificationTime" : "2023-12-12T10:45:41.360Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "53721-target",
  "bucketName" : "link2",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-12-12T10:48:58.069Z",
  "modificationTime" : "2023-12-12T10:48:58.069Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "53721-target",
  "bucketName" : "link3",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-12-12T10:50:08.099Z",
  "modificationTime" : "2023-12-12T10:50:08.099Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "53721-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-12-12T10:45:49.567Z",
  "modificationTime" : "2023-12-12T10:45:49.567Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "53721-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-12-12T10:45:53.917Z",
  "modificationTime" : "2023-12-12T10:45:53.917Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20231212 10:50:27.921" endtime="20231212 10:50:27.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:27.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:27.922" endtime="20231212 10:50:27.922"/>
</kw>
<status status="PASS" starttime="20231212 10:50:23.890" endtime="20231212 10:50:27.923"/>
</kw>
<msg timestamp="20231212 10:50:27.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:23.889" endtime="20231212 10:50:27.923"/>
</kw>
<msg timestamp="20231212 10:50:27.923" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "53721-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-12-1...</msg>
<status status="PASS" starttime="20231212 10:50:23.889" endtime="20231212 10:50:27.923"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:50:27.923" endtime="20231212 10:50:27.923"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:27.927" level="INFO">Running command 'ozone sh key list 53721-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:32.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:32.442" level="INFO">${output} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20231212 10:50:27.925" endtime="20231212 10:50:32.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:32.443" level="INFO">.Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20231212 10:50:32.442" endtime="20231212 10:50:32.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:32.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:32.443" endtime="20231212 10:50:32.444"/>
</kw>
<status status="PASS" starttime="20231212 10:50:27.924" endtime="20231212 10:50:32.444"/>
</kw>
<msg timestamp="20231212 10:50:32.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:27.924" endtime="20231212 10:50:32.444"/>
</kw>
<msg timestamp="20231212 10:50:32.444" level="INFO">${source_list} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20231212 10:50:27.924" endtime="20231212 10:50:32.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:50:32.444" endtime="20231212 10:50:32.445"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:50:19.665" endtime="20231212 10:50:32.445"/>
</test>
<test id="s1-s4-t17" name="Setting bucket property on link not allowed" line="210">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:32.450" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:32.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:32.452" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:50:32.449" endtime="20231212 10:50:32.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:32.453" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:50:32.453" endtime="20231212 10:50:32.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:32.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:32.453" endtime="20231212 10:50:32.454"/>
</kw>
<status status="PASS" starttime="20231212 10:50:32.448" endtime="20231212 10:50:32.454"/>
</kw>
<msg timestamp="20231212 10:50:32.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:32.448" endtime="20231212 10:50:32.454"/>
</kw>
<msg timestamp="20231212 10:50:32.454" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:50:32.447" endtime="20231212 10:50:32.454"/>
</kw>
<msg timestamp="20231212 10:50:32.455" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:50:32.447" endtime="20231212 10:50:32.455"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:50:32.455" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:50:32.455" endtime="20231212 10:50:32.455"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:32.458" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:32.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:32.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:32.457" endtime="20231212 10:50:32.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:32.487" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:32.487" endtime="20231212 10:50:32.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:32.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:32.487" endtime="20231212 10:50:32.488"/>
</kw>
<status status="PASS" starttime="20231212 10:50:32.456" endtime="20231212 10:50:32.488"/>
</kw>
<msg timestamp="20231212 10:50:32.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:32.456" endtime="20231212 10:50:32.488"/>
</kw>
<status status="PASS" starttime="20231212 10:50:32.456" endtime="20231212 10:50:32.488"/>
</kw>
<status status="PASS" starttime="20231212 10:50:32.455" endtime="20231212 10:50:32.488"/>
</kw>
<status status="PASS" starttime="20231212 10:50:32.446" endtime="20231212 10:50:32.488"/>
</kw>
<status status="PASS" starttime="20231212 10:50:32.446" endtime="20231212 10:50:32.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:32.492" level="INFO">Running command 'ozone sh bucket link 53721-source/bucket1 53721-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:36.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:36.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:32.490" endtime="20231212 10:50:36.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:36.323" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:36.322" endtime="20231212 10:50:36.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:36.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:36.323" endtime="20231212 10:50:36.323"/>
</kw>
<status status="PASS" starttime="20231212 10:50:32.489" endtime="20231212 10:50:36.324"/>
</kw>
<msg timestamp="20231212 10:50:36.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:32.489" endtime="20231212 10:50:36.324"/>
</kw>
<status status="PASS" starttime="20231212 10:50:32.489" endtime="20231212 10:50:36.324"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:36.326" level="INFO">Running command 'ozone sh bucket setquota 53721-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:40.419" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:50:40.419" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20231212 10:50:36.324" endtime="20231212 10:50:40.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:40.420" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20231212 10:50:40.420" endtime="20231212 10:50:40.420"/>
</kw>
<msg timestamp="20231212 10:50:40.420" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20231212 10:50:36.324" endtime="20231212 10:50:40.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:50:40.421" endtime="20231212 10:50:40.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:40.424" level="INFO">Running command 'ozone sh bucket info 53721-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:44.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:44.687" level="INFO">${output} = {
  "volumeName" : "53721-target",
  "bucketName" : "link4",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-12-12T10:50:36.241Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20231212 10:50:40.422" endtime="20231212 10:50:44.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:44.688" level="INFO">{
  "volumeName" : "53721-target",
  "bucketName" : "link4",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-12-12T10:50:36.241Z",
  "modificationTime" : "2023-12-12T10:50:36.241Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20231212 10:50:44.688" endtime="20231212 10:50:44.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:44.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:44.689" endtime="20231212 10:50:44.689"/>
</kw>
<status status="PASS" starttime="20231212 10:50:40.422" endtime="20231212 10:50:44.689"/>
</kw>
<msg timestamp="20231212 10:50:44.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:40.421" endtime="20231212 10:50:44.689"/>
</kw>
<msg timestamp="20231212 10:50:44.690" level="INFO">${result} = {
  "volumeName" : "53721-target",
  "bucketName" : "link4",
  "sourceVolume" : "53721-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-12-12T10:50:36.241Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20231212 10:50:40.421" endtime="20231212 10:50:44.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:50:44.690" endtime="20231212 10:50:44.690"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20231212 10:50:32.445" endtime="20231212 10:50:44.690"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20231212 10:45:16.026" endtime="20231212 10:50:44.692"/>
</suite>
<suite id="s1-s5" name="s3-encrypted" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:50:48.193" endtime="20231212 10:50:48.194"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:50:48.195" level="INFO">${randStr} = 1500231731</msg>
<status status="PASS" starttime="20231212 10:50:48.194" endtime="20231212 10:50:48.195"/>
</kw>
<msg timestamp="20231212 10:50:48.195" level="INFO">${random} = ozone-test-1500231731</msg>
<status status="PASS" starttime="20231212 10:50:48.194" endtime="20231212 10:50:48.195"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:50:48.196" level="INFO">${PREFIX} = ozone-test-1500231731</msg>
<status status="PASS" starttime="20231212 10:50:48.195" endtime="20231212 10:50:48.196"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.194" endtime="20231212 10:50:48.196"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.194" endtime="20231212 10:50:48.196"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:48.208" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:48.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:48.209" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20231212 10:50:48.197" endtime="20231212 10:50:48.209"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:50:48.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:48.209" endtime="20231212 10:50:48.209"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20231212 10:50:48.210" endtime="20231212 10:50:48.210"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:50:48.210" endtime="20231212 10:50:48.210"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20231212 10:50:48.210" endtime="20231212 10:50:48.210"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:50:48.210" endtime="20231212 10:50:48.210"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.197" endtime="20231212 10:50:48.210"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.196" endtime="20231212 10:50:48.210"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:48.215" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:48.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:48.217" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:50:48.213" endtime="20231212 10:50:48.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:48.218" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:50:48.217" endtime="20231212 10:50:48.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:48.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:48.218" endtime="20231212 10:50:48.218"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.213" endtime="20231212 10:50:48.218"/>
</kw>
<msg timestamp="20231212 10:50:48.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:48.212" endtime="20231212 10:50:48.219"/>
</kw>
<msg timestamp="20231212 10:50:48.219" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:50:48.212" endtime="20231212 10:50:48.219"/>
</kw>
<msg timestamp="20231212 10:50:48.219" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:50:48.212" endtime="20231212 10:50:48.219"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:50:48.219" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:50:48.219" endtime="20231212 10:50:48.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:48.222" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:48.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:48.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:48.221" endtime="20231212 10:50:48.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:48.243" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:48.243" endtime="20231212 10:50:48.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:48.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:48.243" endtime="20231212 10:50:48.244"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.221" endtime="20231212 10:50:48.244"/>
</kw>
<msg timestamp="20231212 10:50:48.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:48.220" endtime="20231212 10:50:48.244"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.220" endtime="20231212 10:50:48.244"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.220" endtime="20231212 10:50:48.244"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.211" endtime="20231212 10:50:48.244"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.211" endtime="20231212 10:50:48.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:48.247" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:51.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:51.789" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:50:48.245" endtime="20231212 10:50:51.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:51.790" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:50:51.789" endtime="20231212 10:50:51.790"/>
</kw>
<msg timestamp="20231212 10:50:51.790" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:50:48.245" endtime="20231212 10:50:51.790"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 10:50:51.791" level="FAIL">'awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324
isDeleted=false
transactionLogIndex=0' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231212 10:50:51.791" endtime="20231212 10:50:51.791"/>
</kw>
<msg timestamp="20231212 10:50:51.791" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231212 10:50:51.790" endtime="20231212 10:50:51.791"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231212 10:50:51.792" endtime="20231212 10:50:51.792"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231212 10:50:51.792" endtime="20231212 10:50:51.792"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:50:51.792" endtime="20231212 10:50:51.792"/>
</branch>
<status status="PASS" starttime="20231212 10:50:51.792" endtime="20231212 10:50:51.792"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231212 10:50:51.793" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231212 10:50:51.792" endtime="20231212 10:50:51.793"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231212 10:50:51.793" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231212 10:50:51.793" endtime="20231212 10:50:51.793"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231212 10:50:51.794" level="INFO">${secret} = ['96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324']</msg>
<status status="PASS" starttime="20231212 10:50:51.794" endtime="20231212 10:50:51.794"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:50:51.795" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:50:51.794" endtime="20231212 10:50:51.795"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:50:51.796" level="INFO">${secret} = 96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324</msg>
<status status="PASS" starttime="20231212 10:50:51.795" endtime="20231212 10:50:51.796"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:51.799" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:52.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:52.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:51.797" endtime="20231212 10:50:52.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:52.214" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:52.214" endtime="20231212 10:50:52.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:52.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:52.215" endtime="20231212 10:50:52.215"/>
</kw>
<status status="PASS" starttime="20231212 10:50:51.797" endtime="20231212 10:50:52.215"/>
</kw>
<msg timestamp="20231212 10:50:52.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:51.796" endtime="20231212 10:50:52.215"/>
</kw>
<status status="PASS" starttime="20231212 10:50:51.796" endtime="20231212 10:50:52.215"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:52.218" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:52.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:52.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:52.217" endtime="20231212 10:50:52.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:52.617" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:52.617" endtime="20231212 10:50:52.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:52.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:52.617" endtime="20231212 10:50:52.618"/>
</kw>
<status status="PASS" starttime="20231212 10:50:52.216" endtime="20231212 10:50:52.618"/>
</kw>
<msg timestamp="20231212 10:50:52.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:52.216" endtime="20231212 10:50:52.618"/>
</kw>
<status status="PASS" starttime="20231212 10:50:52.216" endtime="20231212 10:50:52.618"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:52.621" level="INFO">Running command 'aws configure set aws_secret_access_key 96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:53.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:53.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:52.619" endtime="20231212 10:50:53.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:53.016" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:53.015" endtime="20231212 10:50:53.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:53.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:53.016" endtime="20231212 10:50:53.016"/>
</kw>
<status status="PASS" starttime="20231212 10:50:52.619" endtime="20231212 10:50:53.016"/>
</kw>
<msg timestamp="20231212 10:50:53.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:52.619" endtime="20231212 10:50:53.017"/>
</kw>
<status status="PASS" starttime="20231212 10:50:52.618" endtime="20231212 10:50:53.017"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:53.019" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:53.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:53.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:53.018" endtime="20231212 10:50:53.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:53.416" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:53.416" endtime="20231212 10:50:53.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:53.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:53.417" endtime="20231212 10:50:53.417"/>
</kw>
<status status="PASS" starttime="20231212 10:50:53.017" endtime="20231212 10:50:53.417"/>
</kw>
<msg timestamp="20231212 10:50:53.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:53.017" endtime="20231212 10:50:53.417"/>
</kw>
<status status="PASS" starttime="20231212 10:50:53.017" endtime="20231212 10:50:53.417"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:53.420" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:53.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:50:53.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:53.419" endtime="20231212 10:50:53.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:50:53.817" level="INFO"/>
<status status="PASS" starttime="20231212 10:50:53.817" endtime="20231212 10:50:53.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:50:53.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:50:53.818" endtime="20231212 10:50:53.818"/>
</kw>
<status status="PASS" starttime="20231212 10:50:53.418" endtime="20231212 10:50:53.818"/>
</kw>
<msg timestamp="20231212 10:50:53.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:53.418" endtime="20231212 10:50:53.818"/>
</kw>
<status status="PASS" starttime="20231212 10:50:53.418" endtime="20231212 10:50:53.819"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.245" endtime="20231212 10:50:53.819"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.244" endtime="20231212 10:50:53.819"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:50:53.819" endtime="20231212 10:50:53.819"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.211" endtime="20231212 10:50:53.819"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.210" endtime="20231212 10:50:53.819"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:50:53.819" endtime="20231212 10:50:53.820"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:50:53.820" endtime="20231212 10:50:53.820"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:50:53.821" endtime="20231212 10:50:53.821"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:53.823" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://omservice/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:50:57.759" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:50:57.759" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20231212 10:50:53.822" endtime="20231212 10:50:57.759"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:50:57.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:57.760" endtime="20231212 10:50:57.760"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:50:57.760" endtime="20231212 10:50:57.761"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:50:57.761" endtime="20231212 10:50:57.761"/>
</kw>
<msg timestamp="20231212 10:50:57.761" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231212 10:50:53.821" endtime="20231212 10:50:57.761"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:50:57.761" endtime="20231212 10:50:57.761"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:50:57.764" level="INFO">Running command 'ozone sh bucket create -k key1 o3://omservice/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:02.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:02.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:50:57.763" endtime="20231212 10:51:02.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:02.264" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:02.264" endtime="20231212 10:51:02.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:02.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:02.264" endtime="20231212 10:51:02.265"/>
</kw>
<status status="PASS" starttime="20231212 10:50:57.762" endtime="20231212 10:51:02.265"/>
</kw>
<msg timestamp="20231212 10:51:02.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:50:57.762" endtime="20231212 10:51:02.265"/>
</kw>
<status status="PASS" starttime="20231212 10:50:57.761" endtime="20231212 10:51:02.265"/>
</kw>
<status status="PASS" starttime="20231212 10:50:53.821" endtime="20231212 10:51:02.265"/>
</kw>
<status status="PASS" starttime="20231212 10:50:53.820" endtime="20231212 10:51:02.265"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:51:02.265" endtime="20231212 10:51:02.266"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:51:02.266" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20231212 10:51:02.266" endtime="20231212 10:51:02.266"/>
</kw>
<status status="PASS" starttime="20231212 10:50:48.193" endtime="20231212 10:51:02.266"/>
</kw>
<suite id="s1-s5-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:51:02.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:02.276" endtime="20231212 10:51:02.276"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:02.276" endtime="20231212 10:51:02.276"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:02.276" endtime="20231212 10:51:02.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:02.276" endtime="20231212 10:51:02.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:02.276" endtime="20231212 10:51:02.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:02.277" endtime="20231212 10:51:02.277"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:02.277" endtime="20231212 10:51:02.277"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:02.277" endtime="20231212 10:51:02.277"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:51:02.277" endtime="20231212 10:51:02.277"/>
</kw>
<status status="PASS" starttime="20231212 10:51:02.275" endtime="20231212 10:51:02.277"/>
</kw>
<test id="s1-s5-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:02.281" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:51:02.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:02.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:02.279" endtime="20231212 10:51:02.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:02.284" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:02.283" endtime="20231212 10:51:02.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:02.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:02.284" endtime="20231212 10:51:02.284"/>
</kw>
<status status="PASS" starttime="20231212 10:51:02.279" endtime="20231212 10:51:02.284"/>
</kw>
<msg timestamp="20231212 10:51:02.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:02.278" endtime="20231212 10:51:02.285"/>
</kw>
<status status="PASS" starttime="20231212 10:51:02.278" endtime="20231212 10:51:02.285"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:02.288" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:06.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:06.162" level="INFO">${output} = Completed 29 Bytes/29 Bytes (8 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20231212 10:51:02.287" endtime="20231212 10:51:06.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:06.163" level="INFO">Completed 29 Bytes/29 Bytes (8 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20231212 10:51:06.163" endtime="20231212 10:51:06.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:06.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:06.164" endtime="20231212 10:51:06.164"/>
</kw>
<status status="PASS" starttime="20231212 10:51:02.286" endtime="20231212 10:51:06.164"/>
</kw>
<msg timestamp="20231212 10:51:06.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:02.286" endtime="20231212 10:51:06.164"/>
</kw>
<msg timestamp="20231212 10:51:06.164" level="INFO">${output} = Completed 29 Bytes/29 Bytes (8 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20231212 10:51:02.285" endtime="20231212 10:51:06.164"/>
</kw>
<msg timestamp="20231212 10:51:06.165" level="INFO">${result} = Completed 29 Bytes/29 Bytes (8 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20231212 10:51:02.285" endtime="20231212 10:51:06.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:06.165" endtime="20231212 10:51:06.165"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:06.168" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:06.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:06.712" level="INFO">${output} = Completed 29 Bytes/29 Bytes (303 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20231212 10:51:06.167" endtime="20231212 10:51:06.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:06.713" level="INFO">Completed 29 Bytes/29 Bytes (303 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20231212 10:51:06.712" endtime="20231212 10:51:06.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:06.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:06.713" endtime="20231212 10:51:06.714"/>
</kw>
<status status="PASS" starttime="20231212 10:51:06.166" endtime="20231212 10:51:06.714"/>
</kw>
<msg timestamp="20231212 10:51:06.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:06.166" endtime="20231212 10:51:06.714"/>
</kw>
<msg timestamp="20231212 10:51:06.714" level="INFO">${output} = Completed 29 Bytes/29 Bytes (303 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20231212 10:51:06.166" endtime="20231212 10:51:06.714"/>
</kw>
<msg timestamp="20231212 10:51:06.714" level="INFO">${result} = Completed 29 Bytes/29 Bytes (303 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20231212 10:51:06.165" endtime="20231212 10:51:06.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:06.715" endtime="20231212 10:51:06.715"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:06.718" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:07.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:07.228" level="INFO">${output} =                            PRE dir1/
2023-12-12 10:51:06         29 testfile</msg>
<status status="PASS" starttime="20231212 10:51:06.717" endtime="20231212 10:51:07.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:07.230" level="INFO">                           PRE dir1/
2023-12-12 10:51:06         29 testfile</msg>
<status status="PASS" starttime="20231212 10:51:07.229" endtime="20231212 10:51:07.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:07.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:07.230" endtime="20231212 10:51:07.230"/>
</kw>
<status status="PASS" starttime="20231212 10:51:06.716" endtime="20231212 10:51:07.231"/>
</kw>
<msg timestamp="20231212 10:51:07.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:06.716" endtime="20231212 10:51:07.231"/>
</kw>
<msg timestamp="20231212 10:51:07.231" level="INFO">${output} =                            PRE dir1/
2023-12-12 10:51:06         29 testfile</msg>
<status status="PASS" starttime="20231212 10:51:06.716" endtime="20231212 10:51:07.231"/>
</kw>
<msg timestamp="20231212 10:51:07.231" level="INFO">${result} =                            PRE dir1/
2023-12-12 10:51:06         29 testfile</msg>
<status status="PASS" starttime="20231212 10:51:06.715" endtime="20231212 10:51:07.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:07.231" endtime="20231212 10:51:07.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:07.232" endtime="20231212 10:51:07.232"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:07.232" endtime="20231212 10:51:07.233"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:07.236" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:07.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:07.703" level="INFO">${output} =                            PRE dir2/
2023-12-12 10:51:06          0 </msg>
<status status="PASS" starttime="20231212 10:51:07.234" endtime="20231212 10:51:07.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:07.704" level="INFO">                           PRE dir2/
2023-12-12 10:51:06          0 </msg>
<status status="PASS" starttime="20231212 10:51:07.704" endtime="20231212 10:51:07.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:07.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:07.704" endtime="20231212 10:51:07.705"/>
</kw>
<status status="PASS" starttime="20231212 10:51:07.234" endtime="20231212 10:51:07.705"/>
</kw>
<msg timestamp="20231212 10:51:07.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:07.234" endtime="20231212 10:51:07.705"/>
</kw>
<msg timestamp="20231212 10:51:07.705" level="INFO">${output} =                            PRE dir2/
2023-12-12 10:51:06          0 </msg>
<status status="PASS" starttime="20231212 10:51:07.233" endtime="20231212 10:51:07.705"/>
</kw>
<msg timestamp="20231212 10:51:07.706" level="INFO">${result} =                            PRE dir2/
2023-12-12 10:51:06          0 </msg>
<status status="PASS" starttime="20231212 10:51:07.233" endtime="20231212 10:51:07.706"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:07.706" endtime="20231212 10:51:07.706"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:07.706" endtime="20231212 10:51:07.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:07.707" endtime="20231212 10:51:07.707"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:07.711" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:08.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:08.209" level="INFO">${output} = 2023-12-12 10:51:06         29 file</msg>
<status status="PASS" starttime="20231212 10:51:07.709" endtime="20231212 10:51:08.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:08.210" level="INFO">2023-12-12 10:51:06         29 file</msg>
<status status="PASS" starttime="20231212 10:51:08.210" endtime="20231212 10:51:08.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:08.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:08.211" endtime="20231212 10:51:08.211"/>
</kw>
<status status="PASS" starttime="20231212 10:51:07.708" endtime="20231212 10:51:08.211"/>
</kw>
<msg timestamp="20231212 10:51:08.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:07.708" endtime="20231212 10:51:08.212"/>
</kw>
<msg timestamp="20231212 10:51:08.212" level="INFO">${output} = 2023-12-12 10:51:06         29 file</msg>
<status status="PASS" starttime="20231212 10:51:07.708" endtime="20231212 10:51:08.212"/>
</kw>
<msg timestamp="20231212 10:51:08.212" level="INFO">${result} = 2023-12-12 10:51:06         29 file</msg>
<status status="PASS" starttime="20231212 10:51:07.707" endtime="20231212 10:51:08.212"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:08.212" endtime="20231212 10:51:08.212"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:08.213" endtime="20231212 10:51:08.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:08.213" endtime="20231212 10:51:08.213"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:02.277" endtime="20231212 10:51:08.213"/>
</test>
<test id="s1-s5-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:08.218" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:51:08.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:08.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:08.216" endtime="20231212 10:51:08.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:08.221" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:08.220" endtime="20231212 10:51:08.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:08.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:08.221" endtime="20231212 10:51:08.222"/>
</kw>
<status status="PASS" starttime="20231212 10:51:08.215" endtime="20231212 10:51:08.222"/>
</kw>
<msg timestamp="20231212 10:51:08.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:08.215" endtime="20231212 10:51:08.222"/>
</kw>
<status status="PASS" starttime="20231212 10:51:08.215" endtime="20231212 10:51:08.222"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:08.225" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:08.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:08.791" level="INFO">${output} = Completed 29 Bytes/29 Bytes (268 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20231212 10:51:08.224" endtime="20231212 10:51:08.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:08.792" level="INFO">Completed 29 Bytes/29 Bytes (268 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20231212 10:51:08.791" endtime="20231212 10:51:08.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:08.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:08.792" endtime="20231212 10:51:08.793"/>
</kw>
<status status="PASS" starttime="20231212 10:51:08.223" endtime="20231212 10:51:08.793"/>
</kw>
<msg timestamp="20231212 10:51:08.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:08.223" endtime="20231212 10:51:08.793"/>
</kw>
<msg timestamp="20231212 10:51:08.793" level="INFO">${output} = Completed 29 Bytes/29 Bytes (268 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20231212 10:51:08.223" endtime="20231212 10:51:08.793"/>
</kw>
<msg timestamp="20231212 10:51:08.793" level="INFO">${result} = Completed 29 Bytes/29 Bytes (268 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20231212 10:51:08.222" endtime="20231212 10:51:08.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:08.794" endtime="20231212 10:51:08.794"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:08.797" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:09.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:09.276" level="INFO">${output} = 2023-12-12 10:51:08          0 
2023-12-12 10:51:08         29 a+b</msg>
<status status="PASS" starttime="20231212 10:51:08.796" endtime="20231212 10:51:09.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:09.277" level="INFO">2023-12-12 10:51:08          0 
2023-12-12 10:51:08         29 a+b</msg>
<status status="PASS" starttime="20231212 10:51:09.276" endtime="20231212 10:51:09.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:09.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:09.277" endtime="20231212 10:51:09.278"/>
</kw>
<status status="PASS" starttime="20231212 10:51:08.795" endtime="20231212 10:51:09.278"/>
</kw>
<msg timestamp="20231212 10:51:09.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:08.795" endtime="20231212 10:51:09.278"/>
</kw>
<msg timestamp="20231212 10:51:09.278" level="INFO">${output} = 2023-12-12 10:51:08          0 
2023-12-12 10:51:08         29 a+b</msg>
<status status="PASS" starttime="20231212 10:51:08.795" endtime="20231212 10:51:09.278"/>
</kw>
<msg timestamp="20231212 10:51:09.278" level="INFO">${result} = 2023-12-12 10:51:08          0 
2023-12-12 10:51:08         29 a+b</msg>
<status status="PASS" starttime="20231212 10:51:08.794" endtime="20231212 10:51:09.278"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:09.279" endtime="20231212 10:51:09.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:09.279" endtime="20231212 10:51:09.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:08.214" endtime="20231212 10:51:09.280"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:51:02.266" endtime="20231212 10:51:09.280"/>
</suite>
<suite id="s1-s5-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:51:09.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:09.295" endtime="20231212 10:51:09.295"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:09.295" endtime="20231212 10:51:09.295"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:09.295" endtime="20231212 10:51:09.295"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:09.295" endtime="20231212 10:51:09.295"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:09.296" endtime="20231212 10:51:09.296"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:09.296" endtime="20231212 10:51:09.296"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:09.296" endtime="20231212 10:51:09.296"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:09.296" endtime="20231212 10:51:09.296"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:51:09.296" endtime="20231212 10:51:09.296"/>
</kw>
<status status="PASS" starttime="20231212 10:51:09.294" endtime="20231212 10:51:09.296"/>
</kw>
<test id="s1-s5-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:09.300" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:15.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:15.858" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20231212 10:51:09.298" endtime="20231212 10:51:15.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:15.859" level="INFO">test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To continue receiving service updates, bug fixes, and security updates please upgrade to Python 3.7 or later. More information can be found here: https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/
  warnings.warn(warning, PythonDeprecationWarning)
ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 6.318s

OK
{'ResponseMetadata': {'RequestId': 'bcbecd84-3ea4-43bf-9d0b-955f213cc8f5', 'HostId': 'HPtUmQQOdzM9', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:09 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:09 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-zxaigtfsgo', 'server': 'Ozone', 'x-amz-id-2': 'HPtUmQQOdzM9', 'x-amz-request-id': 'bcbecd84-3ea4-43bf-9d0b-955f213cc8f5', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-zxaigtfsgo'}
None
None
None
{'ResponseMetadata': {'RequestId': '8931fb65-6523-4a6f-9709-93d3d762bb02', 'HostId': 'k4enD96ci', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:13 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:13 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-twaamrkruk', 'server': 'Ozone', 'x-amz-id-2': 'k4enD96ci', 'x-amz-request-id': '8931fb65-6523-4a6f-9709-93d3d762bb02', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-twaamrkruk'}
{'ResponseMetadata': {'RequestId': '722b748f-2cb9-4b84-aee6-99637c10224d', 'HostId': '2MTXTylFOE', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:13 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:13 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '2MTXTylFOE', 'x-amz-request-id': '722b748f-2cb9-4b84-aee6-99637c10224d', 'content-length': '467'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-twaamrkruk', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 13, 903000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 1, 849000, tzinfo=tzlocal())}, {'Name': 'ozone-test-zxaigtfsgo', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 9, 647000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '7390f95d-6d1f-4a46-94e5-692caa5b3189', 'HostId': 'ToW0MGV1Lo60b', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:13 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:13 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'ToW0MGV1Lo60b', 'x-amz-request-id': '7390f95d-6d1f-4a46-94e5-692caa5b3189', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '8ce2e432-f03f-48a2-967d-70e8b8b02469', 'HostId': 'xE2XcQ8kxaW0LYY', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:13 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:13 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'xE2XcQ8kxaW0LYY', 'x-amz-request-id': '8ce2e432-f03f-48a2-967d-70e8b8b02469'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '070f003d-8a9f-4a8c-b3fe-5cb6689068c4', 'HostId': 'ZLdjbG9kwX1', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:14 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:14 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Tue, 12 Dec 2023 10:51:14 GMT', 'server': 'Ozone', 'x-amz-id-2': 'ZLdjbG9kwX1', 'x-amz-request-id': '070f003d-8a9f-4a8c-b3fe-5cb6689068c4', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 12, 12, 10, 51, 14, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 12, 12, 10, 51, 14, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'd7e0df1c-1c11-487c-b824-2e3da5623565', 'HostId': 'wlQjShz5fDWRm', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:14 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:14 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'wlQjShz5fDWRm', 'x-amz-request-id': 'd7e0df1c-1c11-487c-b824-2e3da5623565', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '547fd2f0-8153-430a-a9fb-2aff012e6fee', 'HostId': 'kVrMz94Ujxo', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:14 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:14 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Tue, 12 Dec 2023 10:51:09 GMT', 'server': 'Ozone', 'x-amz-id-2': 'kVrMz94Ujxo', 'x-amz-request-id': '547fd2f0-8153-430a-a9fb-2aff012e6fee', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 12, 12, 10, 51, 9, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 12, 12, 10, 51, 14, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'a8588b61-4512-45d9-b5b7-0000defe24e3', 'HostId': 'Aoopn1rw3z9Gxf', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:14 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:14 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Aoopn1rw3z9Gxf', 'x-amz-request-id': 'a8588b61-4512-45d9-b5b7-0000defe24e3', 'content-length': '289'}, 'RetryAttempts': 0}, 'Bucket': 'encrypted', 'Key': 'aeodgahlmn', 'UploadId': 'b8f93324-76f1-4d53-88d8-c9b2bec9260b-111567062587408540'}
{'ResponseMetadata': {'RequestId': '5af4e387-f921-4fb8-8dfc-1fc56cad82d2', 'HostId': 'ISVB5fTbWuzua', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:51:15 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:51:15 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'ISVB5fTbWuzua', 'x-amz-request-id': '5af4e387-f921-4fb8-8dfc-1fc56cad82d2', 'content-length': '292'}, 'RetryAttempts': 0}, 'Location': 'encrypted', 'Bucket': 'encrypted', 'Key': 'aeodgahlmn', 'ETag': '"24d794dfc756320ffadb905d526299bc-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20231212 10:51:15.858" endtime="20231212 10:51:15.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:15.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:15.859" endtime="20231212 10:51:15.860"/>
</kw>
<status status="PASS" starttime="20231212 10:51:09.298" endtime="20231212 10:51:15.860"/>
</kw>
<msg timestamp="20231212 10:51:15.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:09.298" endtime="20231212 10:51:15.860"/>
</kw>
<msg timestamp="20231212 10:51:15.861" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20231212 10:51:09.297" endtime="20231212 10:51:15.861"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20231212 10:51:09.297" endtime="20231212 10:51:15.861"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20231212 10:51:09.282" endtime="20231212 10:51:15.862"/>
</suite>
<suite id="s1-s5-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:51:15.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:15.873" endtime="20231212 10:51:15.874"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:15.874" endtime="20231212 10:51:15.874"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:15.874" endtime="20231212 10:51:15.874"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:15.874" endtime="20231212 10:51:15.874"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:15.874" endtime="20231212 10:51:15.874"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:15.874" endtime="20231212 10:51:15.875"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:15.875" endtime="20231212 10:51:15.875"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:15.875" endtime="20231212 10:51:15.875"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:51:15.875" endtime="20231212 10:51:15.875"/>
</kw>
<status status="PASS" starttime="20231212 10:51:15.873" endtime="20231212 10:51:15.875"/>
</kw>
<test id="s1-s5-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:15.877" level="INFO">${randStr} = 3420531212</msg>
<status status="PASS" starttime="20231212 10:51:15.876" endtime="20231212 10:51:15.877"/>
</kw>
<msg timestamp="20231212 10:51:15.877" level="INFO">${postfix} = ozone-test-3420531212</msg>
<status status="PASS" starttime="20231212 10:51:15.876" endtime="20231212 10:51:15.877"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:51:15.878" level="INFO">${bucket} = bucket-ozone-test-3420531212</msg>
<status status="PASS" starttime="20231212 10:51:15.877" endtime="20231212 10:51:15.878"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:15.883" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-3420531212 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:16.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:16.367" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3420531212"
}</msg>
<status status="PASS" starttime="20231212 10:51:15.881" endtime="20231212 10:51:16.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:16.368" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-3420531212"
}</msg>
<status status="PASS" starttime="20231212 10:51:16.367" endtime="20231212 10:51:16.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:16.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:16.368" endtime="20231212 10:51:16.369"/>
</kw>
<status status="PASS" starttime="20231212 10:51:15.879" endtime="20231212 10:51:16.369"/>
</kw>
<msg timestamp="20231212 10:51:16.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:15.879" endtime="20231212 10:51:16.369"/>
</kw>
<msg timestamp="20231212 10:51:16.369" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3420531212"
}</msg>
<status status="PASS" starttime="20231212 10:51:15.879" endtime="20231212 10:51:16.369"/>
</kw>
<msg timestamp="20231212 10:51:16.369" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3420531212"
}</msg>
<status status="PASS" starttime="20231212 10:51:15.878" endtime="20231212 10:51:16.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:16.370" endtime="20231212 10:51:16.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:16.370" endtime="20231212 10:51:16.371"/>
</kw>
<status status="PASS" starttime="20231212 10:51:15.878" endtime="20231212 10:51:16.371"/>
</kw>
<status status="PASS" starttime="20231212 10:51:15.876" endtime="20231212 10:51:16.371"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:15.875" endtime="20231212 10:51:16.371"/>
</test>
<test id="s1-s5-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:16.373" level="INFO">${randStr} = 5327802324</msg>
<status status="PASS" starttime="20231212 10:51:16.373" endtime="20231212 10:51:16.373"/>
</kw>
<msg timestamp="20231212 10:51:16.373" level="INFO">${postfix} = ozone-test-5327802324</msg>
<status status="PASS" starttime="20231212 10:51:16.373" endtime="20231212 10:51:16.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:51:16.374" level="INFO">${bucket} = bucket-ozone-test-5327802324</msg>
<status status="PASS" starttime="20231212 10:51:16.374" endtime="20231212 10:51:16.374"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:16.378" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-5327802324 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:16.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:16.876" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5327802324"
}</msg>
<status status="PASS" starttime="20231212 10:51:16.376" endtime="20231212 10:51:16.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:16.877" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-5327802324"
}</msg>
<status status="PASS" starttime="20231212 10:51:16.877" endtime="20231212 10:51:16.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:16.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:16.878" endtime="20231212 10:51:16.878"/>
</kw>
<status status="PASS" starttime="20231212 10:51:16.376" endtime="20231212 10:51:16.878"/>
</kw>
<msg timestamp="20231212 10:51:16.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:16.375" endtime="20231212 10:51:16.878"/>
</kw>
<msg timestamp="20231212 10:51:16.879" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5327802324"
}</msg>
<status status="PASS" starttime="20231212 10:51:16.375" endtime="20231212 10:51:16.879"/>
</kw>
<msg timestamp="20231212 10:51:16.879" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5327802324"
}</msg>
<status status="PASS" starttime="20231212 10:51:16.375" endtime="20231212 10:51:16.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:16.879" endtime="20231212 10:51:16.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:16.879" endtime="20231212 10:51:16.880"/>
</kw>
<status status="PASS" starttime="20231212 10:51:16.374" endtime="20231212 10:51:16.880"/>
</kw>
<msg timestamp="20231212 10:51:16.880" level="INFO">${bucket} = bucket-ozone-test-5327802324</msg>
<status status="PASS" starttime="20231212 10:51:16.372" endtime="20231212 10:51:16.880"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:16.883" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-5327802324 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:17.428" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:51:17.428" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231212 10:51:16.881" endtime="20231212 10:51:17.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:17.429" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231212 10:51:17.428" endtime="20231212 10:51:17.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:17.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:17.429" endtime="20231212 10:51:17.430"/>
</kw>
<msg timestamp="20231212 10:51:17.430" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231212 10:51:16.881" endtime="20231212 10:51:17.430"/>
</kw>
<msg timestamp="20231212 10:51:17.430" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231212 10:51:16.880" endtime="20231212 10:51:17.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:17.430" endtime="20231212 10:51:17.431"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:16.371" endtime="20231212 10:51:17.431"/>
</test>
<test id="s1-s5-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:17.433" level="INFO">${randStr} = 6462430134</msg>
<status status="PASS" starttime="20231212 10:51:17.432" endtime="20231212 10:51:17.433"/>
</kw>
<msg timestamp="20231212 10:51:17.433" level="INFO">${randStr} = ozone-test-6462430134</msg>
<status status="PASS" starttime="20231212 10:51:17.432" endtime="20231212 10:51:17.433"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:17.436" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-6462430134 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:17.907" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:51:17.908" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231212 10:51:17.434" endtime="20231212 10:51:17.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:17.908" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231212 10:51:17.908" endtime="20231212 10:51:17.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:17.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:17.909" endtime="20231212 10:51:17.909"/>
</kw>
<msg timestamp="20231212 10:51:17.909" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231212 10:51:17.433" endtime="20231212 10:51:17.909"/>
</kw>
<msg timestamp="20231212 10:51:17.910" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231212 10:51:17.433" endtime="20231212 10:51:17.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:17.910" endtime="20231212 10:51:17.910"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:17.431" endtime="20231212 10:51:17.910"/>
</test>
<test id="s1-s5-s3-t4" name="Create new bucket and check no group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:17.913" level="INFO">${randStr} = 5397555353</msg>
<status status="PASS" starttime="20231212 10:51:17.912" endtime="20231212 10:51:17.913"/>
</kw>
<msg timestamp="20231212 10:51:17.913" level="INFO">${postfix} = ozone-test-5397555353</msg>
<status status="PASS" starttime="20231212 10:51:17.912" endtime="20231212 10:51:17.913"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:51:17.913" level="INFO">${bucket} = bucket-ozone-test-5397555353</msg>
<status status="PASS" starttime="20231212 10:51:17.913" endtime="20231212 10:51:17.913"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:17.917" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-5397555353 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:18.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:18.418" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5397555353"
}</msg>
<status status="PASS" starttime="20231212 10:51:17.915" endtime="20231212 10:51:18.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:18.419" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-5397555353"
}</msg>
<status status="PASS" starttime="20231212 10:51:18.419" endtime="20231212 10:51:18.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:18.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:18.419" endtime="20231212 10:51:18.420"/>
</kw>
<status status="PASS" starttime="20231212 10:51:17.915" endtime="20231212 10:51:18.420"/>
</kw>
<msg timestamp="20231212 10:51:18.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:17.915" endtime="20231212 10:51:18.420"/>
</kw>
<msg timestamp="20231212 10:51:18.420" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5397555353"
}</msg>
<status status="PASS" starttime="20231212 10:51:17.914" endtime="20231212 10:51:18.420"/>
</kw>
<msg timestamp="20231212 10:51:18.421" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5397555353"
}</msg>
<status status="PASS" starttime="20231212 10:51:17.914" endtime="20231212 10:51:18.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:18.421" endtime="20231212 10:51:18.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:18.421" endtime="20231212 10:51:18.421"/>
</kw>
<status status="PASS" starttime="20231212 10:51:17.914" endtime="20231212 10:51:18.422"/>
</kw>
<msg timestamp="20231212 10:51:18.422" level="INFO">${bucket} = bucket-ozone-test-5397555353</msg>
<status status="PASS" starttime="20231212 10:51:17.912" endtime="20231212 10:51:18.422"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:18.425" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-5397555353 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:22.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:22.688" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/s3g@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20231212 10:51:18.423" endtime="20231212 10:51:22.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:22.690" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/s3g@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "NONE" ]
} ]</msg>
<status status="PASS" starttime="20231212 10:51:22.689" endtime="20231212 10:51:22.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:22.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:22.690" endtime="20231212 10:51:22.690"/>
</kw>
<status status="PASS" starttime="20231212 10:51:18.423" endtime="20231212 10:51:22.690"/>
</kw>
<msg timestamp="20231212 10:51:22.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:18.423" endtime="20231212 10:51:22.691"/>
</kw>
<msg timestamp="20231212 10:51:22.691" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "testuser/s3g@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20231212 10:51:18.422" endtime="20231212 10:51:22.691"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231212 10:51:22.692" level="INFO">${group} = ['"GROUP"']</msg>
<status status="PASS" starttime="20231212 10:51:22.691" endtime="20231212 10:51:22.692"/>
</kw>
<if>
<branch type="IF" condition="'${group}' is not '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:51:22.693" level="INFO">${json} = [{'type': 'USER', 'name': 'testuser/s3g@EXAMPLE.COM', 'aclScope': 'ACCESS', 'aclList': ['ALL']}, {'type': 'GROUP', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['NONE']}]</msg>
<status status="PASS" starttime="20231212 10:51:22.692" endtime="20231212 10:51:22.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:22.693" endtime="20231212 10:51:22.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>NONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:22.693" endtime="20231212 10:51:22.694"/>
</kw>
<status status="PASS" starttime="20231212 10:51:22.692" endtime="20231212 10:51:22.694"/>
</branch>
<status status="PASS" starttime="20231212 10:51:22.692" endtime="20231212 10:51:22.694"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:17.911" endtime="20231212 10:51:22.694"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:51:15.863" endtime="20231212 10:51:22.695"/>
</suite>
<suite id="s1-s5-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:51:22.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:22.706" endtime="20231212 10:51:22.706"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:22.706" endtime="20231212 10:51:22.706"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:22.706" endtime="20231212 10:51:22.706"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:22.707" endtime="20231212 10:51:22.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:22.707" endtime="20231212 10:51:22.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:22.707" endtime="20231212 10:51:22.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:22.707" endtime="20231212 10:51:22.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:22.707" endtime="20231212 10:51:22.707"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:51:22.707" endtime="20231212 10:51:22.707"/>
</kw>
<status status="PASS" starttime="20231212 10:51:22.705" endtime="20231212 10:51:22.708"/>
</kw>
<test id="s1-s5-s4-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:22.710" level="INFO">${randStr} = 4553884871</msg>
<status status="PASS" starttime="20231212 10:51:22.710" endtime="20231212 10:51:22.710"/>
</kw>
<msg timestamp="20231212 10:51:22.710" level="INFO">${postfix} = ozone-test-4553884871</msg>
<status status="PASS" starttime="20231212 10:51:22.709" endtime="20231212 10:51:22.710"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:51:22.711" level="INFO">${bucket} = bucket-ozone-test-4553884871</msg>
<status status="PASS" starttime="20231212 10:51:22.710" endtime="20231212 10:51:22.711"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:22.714" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-4553884871 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:23.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:23.190" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4553884871"
}</msg>
<status status="PASS" starttime="20231212 10:51:22.713" endtime="20231212 10:51:23.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:23.192" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-4553884871"
}</msg>
<status status="PASS" starttime="20231212 10:51:23.191" endtime="20231212 10:51:23.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:23.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:23.192" endtime="20231212 10:51:23.192"/>
</kw>
<status status="PASS" starttime="20231212 10:51:22.712" endtime="20231212 10:51:23.192"/>
</kw>
<msg timestamp="20231212 10:51:23.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:22.712" endtime="20231212 10:51:23.193"/>
</kw>
<msg timestamp="20231212 10:51:23.193" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4553884871"
}</msg>
<status status="PASS" starttime="20231212 10:51:22.712" endtime="20231212 10:51:23.193"/>
</kw>
<msg timestamp="20231212 10:51:23.193" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4553884871"
}</msg>
<status status="PASS" starttime="20231212 10:51:22.711" endtime="20231212 10:51:23.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:23.193" endtime="20231212 10:51:23.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:23.193" endtime="20231212 10:51:23.194"/>
</kw>
<status status="PASS" starttime="20231212 10:51:22.711" endtime="20231212 10:51:23.194"/>
</kw>
<status status="PASS" starttime="20231212 10:51:22.709" endtime="20231212 10:51:23.194"/>
</kw>
<status status="PASS" starttime="20231212 10:51:22.709" endtime="20231212 10:51:23.194"/>
</kw>
<msg timestamp="20231212 10:51:23.194" level="INFO">${bucket} = bucket-ozone-test-4553884871</msg>
<status status="PASS" starttime="20231212 10:51:22.708" endtime="20231212 10:51:23.194"/>
</kw>
<msg timestamp="20231212 10:51:23.194" level="INFO">${bucket} = bucket-ozone-test-4553884871</msg>
<status status="PASS" starttime="20231212 10:51:22.708" endtime="20231212 10:51:23.194"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:23.198" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-4553884871 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:23.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:23.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:23.196" endtime="20231212 10:51:23.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:23.687" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:23.686" endtime="20231212 10:51:23.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:23.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:23.687" endtime="20231212 10:51:23.687"/>
</kw>
<status status="PASS" starttime="20231212 10:51:23.196" endtime="20231212 10:51:23.688"/>
</kw>
<msg timestamp="20231212 10:51:23.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:23.196" endtime="20231212 10:51:23.688"/>
</kw>
<msg timestamp="20231212 10:51:23.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:23.195" endtime="20231212 10:51:23.688"/>
</kw>
<status status="PASS" starttime="20231212 10:51:23.195" endtime="20231212 10:51:23.688"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:22.708" endtime="20231212 10:51:23.688"/>
</test>
<test id="s1-s5-s4-t2" name="Delete non-existent bucket" line="41">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:23.690" level="INFO">${randStr} = 9852583655</msg>
<status status="PASS" starttime="20231212 10:51:23.690" endtime="20231212 10:51:23.690"/>
</kw>
<msg timestamp="20231212 10:51:23.690" level="INFO">${randStr} = ozone-test-9852583655</msg>
<status status="PASS" starttime="20231212 10:51:23.690" endtime="20231212 10:51:23.691"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:23.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-9852583655 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:24.170" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:51:24.170" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:51:23.692" endtime="20231212 10:51:24.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:24.171" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:51:24.170" endtime="20231212 10:51:24.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:24.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:24.171" endtime="20231212 10:51:24.171"/>
</kw>
<msg timestamp="20231212 10:51:24.172" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:51:23.691" endtime="20231212 10:51:24.172"/>
</kw>
<msg timestamp="20231212 10:51:24.172" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:51:23.691" endtime="20231212 10:51:24.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:24.172" endtime="20231212 10:51:24.172"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:23.689" endtime="20231212 10:51:24.173"/>
</test>
<test id="s1-s5-s4-t3" name="Delete bucket with incomplete multipart uploads" line="47">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:24.175" level="INFO">${randStr} = 5032472323</msg>
<status status="PASS" starttime="20231212 10:51:24.175" endtime="20231212 10:51:24.175"/>
</kw>
<msg timestamp="20231212 10:51:24.175" level="INFO">${postfix} = ozone-test-5032472323</msg>
<status status="PASS" starttime="20231212 10:51:24.174" endtime="20231212 10:51:24.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:51:24.176" level="INFO">${bucket} = bucket-ozone-test-5032472323</msg>
<status status="PASS" starttime="20231212 10:51:24.175" endtime="20231212 10:51:24.176"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:24.180" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-5032472323 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:24.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:24.660" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5032472323"
}</msg>
<status status="PASS" starttime="20231212 10:51:24.178" endtime="20231212 10:51:24.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:24.661" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-5032472323"
}</msg>
<status status="PASS" starttime="20231212 10:51:24.661" endtime="20231212 10:51:24.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:24.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:24.661" endtime="20231212 10:51:24.662"/>
</kw>
<status status="PASS" starttime="20231212 10:51:24.177" endtime="20231212 10:51:24.662"/>
</kw>
<msg timestamp="20231212 10:51:24.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:24.177" endtime="20231212 10:51:24.662"/>
</kw>
<msg timestamp="20231212 10:51:24.662" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5032472323"
}</msg>
<status status="PASS" starttime="20231212 10:51:24.177" endtime="20231212 10:51:24.662"/>
</kw>
<msg timestamp="20231212 10:51:24.662" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5032472323"
}</msg>
<status status="PASS" starttime="20231212 10:51:24.176" endtime="20231212 10:51:24.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:24.663" endtime="20231212 10:51:24.663"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:24.663" endtime="20231212 10:51:24.663"/>
</kw>
<status status="PASS" starttime="20231212 10:51:24.176" endtime="20231212 10:51:24.663"/>
</kw>
<msg timestamp="20231212 10:51:24.664" level="INFO">${bucket} = bucket-ozone-test-5032472323</msg>
<status status="PASS" starttime="20231212 10:51:24.174" endtime="20231212 10:51:24.664"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${initiate_result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key incomplete-multipartkey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:24.667" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-5032472323 --key incomplete-multipartkey 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:25.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:25.155" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-5032472323",
    "Key": "incomplete-multipartkey",
    "UploadId": "b51e8afe-b778-476f-ace1-880e1baa40c1-111567063292510367"
}</msg>
<status status="PASS" starttime="20231212 10:51:24.666" endtime="20231212 10:51:25.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:25.156" level="INFO">{
    "Bucket": "bucket-ozone-test-5032472323",
    "Key": "incomplete-multipartkey",
    "UploadId": "b51e8afe-b778-476f-ace1-880e1baa40c1-111567063292510367"
}</msg>
<status status="PASS" starttime="20231212 10:51:25.155" endtime="20231212 10:51:25.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:25.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:25.156" endtime="20231212 10:51:25.157"/>
</kw>
<status status="PASS" starttime="20231212 10:51:24.665" endtime="20231212 10:51:25.157"/>
</kw>
<msg timestamp="20231212 10:51:25.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:24.665" endtime="20231212 10:51:25.157"/>
</kw>
<msg timestamp="20231212 10:51:25.157" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-5032472323",
    "Key": "incomplete-multipartkey",
    "UploadId": "b51e8afe-b778-476f-ace1-880e1baa40c1-111567063292510367"
}</msg>
<status status="PASS" starttime="20231212 10:51:24.664" endtime="20231212 10:51:25.157"/>
</kw>
<msg timestamp="20231212 10:51:25.157" level="INFO">${initiate_result} = {
    "Bucket": "bucket-ozone-test-5032472323",
    "Key": "incomplete-multipartkey",
    "UploadId": "b51e8afe-b778-476f-ace1-880e1baa40c1-111567063292510367"
}</msg>
<status status="PASS" starttime="20231212 10:51:24.664" endtime="20231212 10:51:25.157"/>
</kw>
<kw name="Execute" library="os">
<var>${uploadID}</var>
<arg>echo '${initiate_result}' | jq -r '.UploadId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:25.161" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-5032472323",
    "Key": "incomplete-multipartkey",
    "UploadId": "b51e8afe-b778-476f-ace1-880e1baa40c1-111567063292510367"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:25.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:25.187" level="INFO">${output} = b51e8afe-b778-476f-ace1-880e1baa40c1-111567063292510367</msg>
<status status="PASS" starttime="20231212 10:51:25.159" endtime="20231212 10:51:25.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:25.188" level="INFO">b51e8afe-b778-476f-ace1-880e1baa40c1-111567063292510367</msg>
<status status="PASS" starttime="20231212 10:51:25.188" endtime="20231212 10:51:25.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:25.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:25.188" endtime="20231212 10:51:25.189"/>
</kw>
<status status="PASS" starttime="20231212 10:51:25.158" endtime="20231212 10:51:25.189"/>
</kw>
<msg timestamp="20231212 10:51:25.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:25.158" endtime="20231212 10:51:25.189"/>
</kw>
<msg timestamp="20231212 10:51:25.189" level="INFO">${uploadID} = b51e8afe-b778-476f-ace1-880e1baa40c1-111567063292510367</msg>
<status status="PASS" starttime="20231212 10:51:25.158" endtime="20231212 10:51:25.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:25.189" endtime="20231212 10:51:25.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>incomplete-multipartkey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:25.190" endtime="20231212 10:51:25.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:25.190" endtime="20231212 10:51:25.190"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:25.193" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-5032472323 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:25.666" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:51:25.666" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20231212 10:51:25.192" endtime="20231212 10:51:25.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:25.667" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20231212 10:51:25.667" endtime="20231212 10:51:25.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:25.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:25.668" endtime="20231212 10:51:25.668"/>
</kw>
<msg timestamp="20231212 10:51:25.668" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20231212 10:51:25.191" endtime="20231212 10:51:25.668"/>
</kw>
<msg timestamp="20231212 10:51:25.669" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20231212 10:51:25.191" endtime="20231212 10:51:25.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:25.669" endtime="20231212 10:51:25.669"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${abort_result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key incomplete-multipartkey --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:25.672" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-5032472323 --key incomplete-multipartkey --upload-id b51e8afe-b778-476f-ace1-880e1baa40c1-111567063292510367 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:26.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:26.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:25.670" endtime="20231212 10:51:26.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:26.144" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:26.143" endtime="20231212 10:51:26.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:26.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:26.144" endtime="20231212 10:51:26.145"/>
</kw>
<msg timestamp="20231212 10:51:26.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:25.670" endtime="20231212 10:51:26.145"/>
</kw>
<msg timestamp="20231212 10:51:26.145" level="INFO">${abort_result} = </msg>
<status status="PASS" starttime="20231212 10:51:25.669" endtime="20231212 10:51:26.145"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:26.148" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-5032472323 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:26.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:26.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:26.147" endtime="20231212 10:51:26.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:26.619" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:26.618" endtime="20231212 10:51:26.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:26.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:26.619" endtime="20231212 10:51:26.619"/>
</kw>
<msg timestamp="20231212 10:51:26.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:26.146" endtime="20231212 10:51:26.620"/>
</kw>
<msg timestamp="20231212 10:51:26.620" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20231212 10:51:26.146" endtime="20231212 10:51:26.620"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:24.173" endtime="20231212 10:51:26.620"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:51:22.696" endtime="20231212 10:51:26.621"/>
</suite>
<suite id="s1-s5-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:51:26.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:26.631" endtime="20231212 10:51:26.632"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:26.632" endtime="20231212 10:51:26.632"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:26.632" endtime="20231212 10:51:26.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:26.632" endtime="20231212 10:51:26.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:26.632" endtime="20231212 10:51:26.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:26.632" endtime="20231212 10:51:26.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:26.633" endtime="20231212 10:51:26.633"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:26.633" endtime="20231212 10:51:26.633"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:51:26.633" endtime="20231212 10:51:26.633"/>
</kw>
<status status="PASS" starttime="20231212 10:51:26.631" endtime="20231212 10:51:26.633"/>
</kw>
<test id="s1-s5-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:26.637" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:27.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:27.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:26.635" endtime="20231212 10:51:27.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:27.103" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:27.103" endtime="20231212 10:51:27.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:27.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:27.104" endtime="20231212 10:51:27.104"/>
</kw>
<status status="PASS" starttime="20231212 10:51:26.635" endtime="20231212 10:51:27.104"/>
</kw>
<msg timestamp="20231212 10:51:27.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:26.634" endtime="20231212 10:51:27.104"/>
</kw>
<msg timestamp="20231212 10:51:27.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:26.634" endtime="20231212 10:51:27.104"/>
</kw>
<msg timestamp="20231212 10:51:27.105" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:51:26.634" endtime="20231212 10:51:27.105"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:26.633" endtime="20231212 10:51:27.105"/>
</test>
<test id="s1-s5-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:27.107" level="INFO">${randStr} = 8977461969</msg>
<status status="PASS" starttime="20231212 10:51:27.106" endtime="20231212 10:51:27.107"/>
</kw>
<msg timestamp="20231212 10:51:27.107" level="INFO">${randStr} = ozone-test-8977461969</msg>
<status status="PASS" starttime="20231212 10:51:27.106" endtime="20231212 10:51:27.107"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:27.110" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-8977461969 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:27.604" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:51:27.604" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:51:27.108" endtime="20231212 10:51:27.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:27.606" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:51:27.605" endtime="20231212 10:51:27.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:27.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:27.606" endtime="20231212 10:51:27.606"/>
</kw>
<msg timestamp="20231212 10:51:27.607" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:51:27.108" endtime="20231212 10:51:27.607"/>
</kw>
<msg timestamp="20231212 10:51:27.607" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:51:27.107" endtime="20231212 10:51:27.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:27.607" endtime="20231212 10:51:27.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:27.608" endtime="20231212 10:51:27.608"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:27.105" endtime="20231212 10:51:27.608"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:51:26.622" endtime="20231212 10:51:27.609"/>
</suite>
<suite id="s1-s5-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:51:27.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:27.622" endtime="20231212 10:51:27.622"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:27.622" endtime="20231212 10:51:27.622"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:27.622" endtime="20231212 10:51:27.622"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:27.623" endtime="20231212 10:51:27.623"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:27.623" endtime="20231212 10:51:27.623"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:27.623" endtime="20231212 10:51:27.623"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:27.623" endtime="20231212 10:51:27.623"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:27.624" endtime="20231212 10:51:27.624"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:51:27.624" endtime="20231212 10:51:27.624"/>
</kw>
<status status="PASS" starttime="20231212 10:51:27.621" endtime="20231212 10:51:27.624"/>
</kw>
<test id="s1-s5-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:27.628" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:28.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:28.109" level="INFO">${output} = bucket-ozone-test-3420531212
bucket-ozone-test-5327802324
bucket-ozone-test-5397555353
bucket-twaamrkruk
encrypted</msg>
<status status="PASS" starttime="20231212 10:51:27.626" endtime="20231212 10:51:28.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:28.110" level="INFO">bucket-ozone-test-3420531212
bucket-ozone-test-5327802324
bucket-ozone-test-5397555353
bucket-twaamrkruk
encrypted</msg>
<status status="PASS" starttime="20231212 10:51:28.109" endtime="20231212 10:51:28.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:28.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:28.110" endtime="20231212 10:51:28.111"/>
</kw>
<status status="PASS" starttime="20231212 10:51:27.626" endtime="20231212 10:51:28.111"/>
</kw>
<msg timestamp="20231212 10:51:28.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:27.626" endtime="20231212 10:51:28.111"/>
</kw>
<msg timestamp="20231212 10:51:28.111" level="INFO">${output} = bucket-ozone-test-3420531212
bucket-ozone-test-5327802324
bucket-ozone-test-5397555353
bucket-twaamrkruk
encrypted</msg>
<status status="PASS" starttime="20231212 10:51:27.625" endtime="20231212 10:51:28.111"/>
</kw>
<msg timestamp="20231212 10:51:28.111" level="INFO">${result} = bucket-ozone-test-3420531212
bucket-ozone-test-5327802324
bucket-ozone-test-5397555353
bucket-twaamrkruk
encrypted</msg>
<status status="PASS" starttime="20231212 10:51:27.625" endtime="20231212 10:51:28.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:28.112" endtime="20231212 10:51:28.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:27.624" endtime="20231212 10:51:28.112"/>
</test>
<test id="s1-s5-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:51:28.113" endtime="20231212 10:51:28.114"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:28.117" level="INFO">Running command 'ozone sh bucket info /s3v/encrypted | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:32.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:32.494" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20231212 10:51:28.115" endtime="20231212 10:51:32.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:32.495" level="INFO">testuser</msg>
<status status="PASS" starttime="20231212 10:51:32.494" endtime="20231212 10:51:32.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:32.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:32.495" endtime="20231212 10:51:32.496"/>
</kw>
<status status="PASS" starttime="20231212 10:51:28.115" endtime="20231212 10:51:32.496"/>
</kw>
<msg timestamp="20231212 10:51:32.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:28.114" endtime="20231212 10:51:32.496"/>
</kw>
<msg timestamp="20231212 10:51:32.496" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20231212 10:51:28.114" endtime="20231212 10:51:32.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:51:32.496" endtime="20231212 10:51:32.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:28.113" endtime="20231212 10:51:32.497"/>
</test>
<test id="s1-s5-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:32.501" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:32.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:32.904" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:51:32.499" endtime="20231212 10:51:32.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:32.905" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:51:32.904" endtime="20231212 10:51:32.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:32.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:32.905" endtime="20231212 10:51:32.906"/>
</kw>
<status status="PASS" starttime="20231212 10:51:32.499" endtime="20231212 10:51:32.906"/>
</kw>
<msg timestamp="20231212 10:51:32.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:32.499" endtime="20231212 10:51:32.906"/>
</kw>
<msg timestamp="20231212 10:51:32.906" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:51:32.498" endtime="20231212 10:51:32.906"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231212 10:51:32.907" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:51:32.906" endtime="20231212 10:51:32.907"/>
</kw>
<status status="PASS" starttime="20231212 10:51:32.498" endtime="20231212 10:51:32.907"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:32.910" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:33.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:33.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:32.908" endtime="20231212 10:51:33.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:33.314" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:33.313" endtime="20231212 10:51:33.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:33.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:33.314" endtime="20231212 10:51:33.315"/>
</kw>
<status status="PASS" starttime="20231212 10:51:32.908" endtime="20231212 10:51:33.315"/>
</kw>
<msg timestamp="20231212 10:51:33.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:32.908" endtime="20231212 10:51:33.315"/>
</kw>
<status status="PASS" starttime="20231212 10:51:32.907" endtime="20231212 10:51:33.316"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:33.319" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:33.773" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:51:33.773" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231212 10:51:33.317" endtime="20231212 10:51:33.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:33.774" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231212 10:51:33.774" endtime="20231212 10:51:33.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:33.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:33.775" endtime="20231212 10:51:33.775"/>
</kw>
<msg timestamp="20231212 10:51:33.775" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231212 10:51:33.316" endtime="20231212 10:51:33.775"/>
</kw>
<msg timestamp="20231212 10:51:33.775" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231212 10:51:33.316" endtime="20231212 10:51:33.776"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:33.776" endtime="20231212 10:51:33.776"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:33.780" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:34.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:34.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:33.778" endtime="20231212 10:51:34.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:34.184" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:34.184" endtime="20231212 10:51:34.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:34.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:34.184" endtime="20231212 10:51:34.185"/>
</kw>
<status status="PASS" starttime="20231212 10:51:33.777" endtime="20231212 10:51:34.185"/>
</kw>
<msg timestamp="20231212 10:51:34.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:33.777" endtime="20231212 10:51:34.185"/>
</kw>
<status status="PASS" starttime="20231212 10:51:33.777" endtime="20231212 10:51:34.185"/>
</kw>
<status status="PASS" starttime="20231212 10:51:33.776" endtime="20231212 10:51:34.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:32.497" endtime="20231212 10:51:34.186"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:51:27.610" endtime="20231212 10:51:34.186"/>
</suite>
<suite id="s1-s5-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:51:34.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:34.198" endtime="20231212 10:51:34.199"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:34.199" endtime="20231212 10:51:34.199"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:34.199" endtime="20231212 10:51:34.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:34.199" endtime="20231212 10:51:34.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:34.199" endtime="20231212 10:51:34.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:34.200" endtime="20231212 10:51:34.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:34.200" endtime="20231212 10:51:34.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:34.200" endtime="20231212 10:51:34.200"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:51:34.200" endtime="20231212 10:51:34.200"/>
</kw>
<status status="PASS" starttime="20231212 10:51:34.198" endtime="20231212 10:51:34.200"/>
</kw>
<test id="s1-s5-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:34.204" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:34.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:34.608" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:51:34.202" endtime="20231212 10:51:34.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:34.609" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:51:34.609" endtime="20231212 10:51:34.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:34.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:34.609" endtime="20231212 10:51:34.610"/>
</kw>
<status status="PASS" starttime="20231212 10:51:34.202" endtime="20231212 10:51:34.610"/>
</kw>
<msg timestamp="20231212 10:51:34.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:34.202" endtime="20231212 10:51:34.610"/>
</kw>
<msg timestamp="20231212 10:51:34.610" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:51:34.201" endtime="20231212 10:51:34.610"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:34.614" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:35.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:35.015" level="INFO">${output} = 96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324</msg>
<status status="PASS" starttime="20231212 10:51:34.612" endtime="20231212 10:51:35.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:35.016" level="INFO">96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324</msg>
<status status="PASS" starttime="20231212 10:51:35.015" endtime="20231212 10:51:35.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:35.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:35.016" endtime="20231212 10:51:35.016"/>
</kw>
<status status="PASS" starttime="20231212 10:51:34.611" endtime="20231212 10:51:35.016"/>
</kw>
<msg timestamp="20231212 10:51:35.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:34.611" endtime="20231212 10:51:35.017"/>
</kw>
<msg timestamp="20231212 10:51:35.017" level="INFO">${secret} = 96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324</msg>
<status status="PASS" starttime="20231212 10:51:34.611" endtime="20231212 10:51:35.017"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20231212 10:51:35.017" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value '96792142dc9ce9d6fb0db712c9cfc4ca4830920ee30538438c208735ea13e324'.</msg>
<status status="PASS" starttime="20231212 10:51:35.017" endtime="20231212 10:51:35.017"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20231212 10:51:35.018" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20231212 10:51:35.017" endtime="20231212 10:51:35.018"/>
</kw>
<status status="PASS" starttime="20231212 10:51:34.201" endtime="20231212 10:51:35.018"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:35.022" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-encrypted  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:40.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:40.196" level="INFO">${output} = 2023-12-12 10:51:37,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:51:37,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:51:35.021" endtime="20231212 10:51:40.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:40.197" level="INFO">2023-12-12 10:51:37,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:51:37,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:51:37,247 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:51:37,327 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-encrypted and number-of-tests 100
2023-12-12 10:51:37,371 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 10:51:38,374 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 10:51:39,374 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-12 10:51:40,153 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=28.475884, max=348.023846, mean=117.31712285336371, stddev=74.21880519592567, median=95.182916, p75=144.665272, p95=290.757759, p98=310.656576, p99=310.836331, p999=348.023846, mean_rate=48.00240402951726, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:51:40,153 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 10:51:40,153 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:51:40,153 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231212 10:51:40.197" endtime="20231212 10:51:40.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:40.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:40.197" endtime="20231212 10:51:40.198"/>
</kw>
<status status="PASS" starttime="20231212 10:51:35.020" endtime="20231212 10:51:40.198"/>
</kw>
<msg timestamp="20231212 10:51:40.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:35.020" endtime="20231212 10:51:40.198"/>
</kw>
<msg timestamp="20231212 10:51:40.198" level="INFO">${result} = 2023-12-12 10:51:37,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:51:37,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:51:35.019" endtime="20231212 10:51:40.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:40.199" endtime="20231212 10:51:40.199"/>
</kw>
<status status="PASS" starttime="20231212 10:51:35.018" endtime="20231212 10:51:40.199"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20231212 10:51:34.200" endtime="20231212 10:51:40.199"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:51:34.188" endtime="20231212 10:51:40.200"/>
</suite>
<suite id="s1-s5-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:51:40.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:40.212" endtime="20231212 10:51:40.212"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:40.212" endtime="20231212 10:51:40.212"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:51:40.213" endtime="20231212 10:51:40.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:40.213" endtime="20231212 10:51:40.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:40.213" endtime="20231212 10:51:40.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:40.213" endtime="20231212 10:51:40.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:40.213" endtime="20231212 10:51:40.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:51:40.213" endtime="20231212 10:51:40.213"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:51:40.214" endtime="20231212 10:51:40.214"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.212" endtime="20231212 10:51:40.214"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:40.217" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:40.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:40.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:40.215" endtime="20231212 10:51:40.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:40.245" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:40.244" endtime="20231212 10:51:40.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:40.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:40.245" endtime="20231212 10:51:40.246"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.215" endtime="20231212 10:51:40.246"/>
</kw>
<msg timestamp="20231212 10:51:40.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:40.215" endtime="20231212 10:51:40.246"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.214" endtime="20231212 10:51:40.246"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.214" endtime="20231212 10:51:40.246"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:40.249" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:40.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:40.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:40.248" endtime="20231212 10:51:40.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:40.257" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:40.256" endtime="20231212 10:51:40.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:40.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:40.257" endtime="20231212 10:51:40.257"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.247" endtime="20231212 10:51:40.257"/>
</kw>
<msg timestamp="20231212 10:51:40.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:40.247" endtime="20231212 10:51:40.258"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.247" endtime="20231212 10:51:40.258"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.246" endtime="20231212 10:51:40.258"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.212" endtime="20231212 10:51:40.258"/>
</kw>
<test id="s1-s5-s8-t1" name="Test Multipart Upload With Adjusted Length" line="57">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:40.260" level="INFO">${randStr} = 2836306267</msg>
<status status="PASS" starttime="20231212 10:51:40.259" endtime="20231212 10:51:40.260"/>
</kw>
<msg timestamp="20231212 10:51:40.260" level="INFO">${random} = ozone-test-2836306267</msg>
<status status="PASS" starttime="20231212 10:51:40.259" endtime="20231212 10:51:40.260"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:51:40.261" level="INFO">${PREFIX} = ozone-test-2836306267</msg>
<status status="PASS" starttime="20231212 10:51:40.260" endtime="20231212 10:51:40.261"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.259" endtime="20231212 10:51:40.261"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:40.264" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-2836306267 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:40.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:40.761" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2836306267",
    "UploadId": "79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000"
}</msg>
<status status="PASS" starttime="20231212 10:51:40.263" endtime="20231212 10:51:40.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:40.762" level="INFO">{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2836306267",
    "UploadId": "79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000"
}</msg>
<status status="PASS" starttime="20231212 10:51:40.762" endtime="20231212 10:51:40.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:40.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:40.763" endtime="20231212 10:51:40.763"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.262" endtime="20231212 10:51:40.763"/>
</kw>
<msg timestamp="20231212 10:51:40.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:40.262" endtime="20231212 10:51:40.764"/>
</kw>
<msg timestamp="20231212 10:51:40.764" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2836306267",
    "UploadId": "79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000"
}</msg>
<status status="PASS" starttime="20231212 10:51:40.262" endtime="20231212 10:51:40.764"/>
</kw>
<msg timestamp="20231212 10:51:40.764" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2836306267",
    "UploadId": "79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000"
}</msg>
<status status="PASS" starttime="20231212 10:51:40.261" endtime="20231212 10:51:40.764"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:40.767" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2836306267",
    "UploadId": "79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:40.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:40.795" level="INFO">${output} = 79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000</msg>
<status status="PASS" starttime="20231212 10:51:40.765" endtime="20231212 10:51:40.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:40.796" level="INFO">79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000</msg>
<status status="PASS" starttime="20231212 10:51:40.795" endtime="20231212 10:51:40.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:40.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:40.796" endtime="20231212 10:51:40.796"/>
</kw>
<msg timestamp="20231212 10:51:40.797" level="INFO">${upload_id} = 79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000</msg>
<status status="PASS" starttime="20231212 10:51:40.764" endtime="20231212 10:51:40.797"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20231212 10:51:40.797" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20231212 10:51:40.797" endtime="20231212 10:51:40.797"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:51:40.798" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20231212 10:51:40.798" endtime="20231212 10:51:40.798"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:40.802" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-2836306267 --part-number 1 --body /tmp/part1 --upload-id 79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:41.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:41.971" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:40.800" endtime="20231212 10:51:41.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:41.972" level="INFO">{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:41.972" endtime="20231212 10:51:41.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:41.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:41.973" endtime="20231212 10:51:41.973"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.800" endtime="20231212 10:51:41.973"/>
</kw>
<msg timestamp="20231212 10:51:41.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:40.800" endtime="20231212 10:51:41.973"/>
</kw>
<msg timestamp="20231212 10:51:41.974" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:40.799" endtime="20231212 10:51:41.974"/>
</kw>
<msg timestamp="20231212 10:51:41.974" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:40.798" endtime="20231212 10:51:41.974"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:41.977" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:42.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:42.005" level="INFO">${output} = /s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1</msg>
<status status="PASS" starttime="20231212 10:51:41.975" endtime="20231212 10:51:42.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:42.006" level="INFO">/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1</msg>
<status status="PASS" starttime="20231212 10:51:42.005" endtime="20231212 10:51:42.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:42.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:42.006" endtime="20231212 10:51:42.007"/>
</kw>
<status status="PASS" starttime="20231212 10:51:41.975" endtime="20231212 10:51:42.007"/>
</kw>
<msg timestamp="20231212 10:51:42.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:41.974" endtime="20231212 10:51:42.007"/>
</kw>
<msg timestamp="20231212 10:51:42.007" level="INFO">${etag} = /s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1</msg>
<status status="PASS" starttime="20231212 10:51:41.974" endtime="20231212 10:51:42.007"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20231212 10:51:42.007" endtime="20231212 10:51:42.008"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.798" endtime="20231212 10:51:42.008"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:51:42.009" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20231212 10:51:42.008" endtime="20231212 10:51:42.009"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:42.013" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-2836306267 --part-number 2 --body /tmp/part2 --upload-id 79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:42.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:42.751" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:42.011" endtime="20231212 10:51:42.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:42.752" level="INFO">{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:42.751" endtime="20231212 10:51:42.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:42.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:42.752" endtime="20231212 10:51:42.753"/>
</kw>
<status status="PASS" starttime="20231212 10:51:42.010" endtime="20231212 10:51:42.753"/>
</kw>
<msg timestamp="20231212 10:51:42.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:42.010" endtime="20231212 10:51:42.753"/>
</kw>
<msg timestamp="20231212 10:51:42.753" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:42.009" endtime="20231212 10:51:42.753"/>
</kw>
<msg timestamp="20231212 10:51:42.753" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:42.009" endtime="20231212 10:51:42.753"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:42.756" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:42.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:42.783" level="INFO">${output} = /s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-2</msg>
<status status="PASS" starttime="20231212 10:51:42.755" endtime="20231212 10:51:42.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:42.784" level="INFO">/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-2</msg>
<status status="PASS" starttime="20231212 10:51:42.784" endtime="20231212 10:51:42.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:42.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:42.784" endtime="20231212 10:51:42.785"/>
</kw>
<status status="PASS" starttime="20231212 10:51:42.754" endtime="20231212 10:51:42.785"/>
</kw>
<msg timestamp="20231212 10:51:42.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:42.754" endtime="20231212 10:51:42.785"/>
</kw>
<msg timestamp="20231212 10:51:42.785" level="INFO">${etag} = /s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-2</msg>
<status status="PASS" starttime="20231212 10:51:42.754" endtime="20231212 10:51:42.785"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20231212 10:51:42.785" endtime="20231212 10:51:42.786"/>
</kw>
<status status="PASS" starttime="20231212 10:51:42.008" endtime="20231212 10:51:42.786"/>
</iter>
<status status="PASS" starttime="20231212 10:51:40.797" endtime="20231212 10:51:42.786"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231212 10:51:42.786" level="INFO">${parts} = {ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1,PartNumber=1},{ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-2...</msg>
<status status="PASS" starttime="20231212 10:51:42.786" endtime="20231212 10:51:42.786"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:42.790" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-2836306267 --upload-id 79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-1,PartNumber=1},{ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-2836306267-79d284b4-b29f-483f-b956-c558be4b906c-111567064314020000-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:43.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:43.284" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2836306267",
    "ETag": "\"5645a4a8b69c16ce0676f1d6f75d9987-2\""
}</msg>
<status status="PASS" starttime="20231212 10:51:42.788" endtime="20231212 10:51:43.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:43.285" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2836306267",
    "ETag": "\"5645a4a8b69c16ce0676f1d6f75d9987-2\""
}</msg>
<status status="PASS" starttime="20231212 10:51:43.285" endtime="20231212 10:51:43.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:43.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:43.286" endtime="20231212 10:51:43.286"/>
</kw>
<status status="PASS" starttime="20231212 10:51:42.788" endtime="20231212 10:51:43.287"/>
</kw>
<msg timestamp="20231212 10:51:43.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:42.788" endtime="20231212 10:51:43.287"/>
</kw>
<msg timestamp="20231212 10:51:43.287" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2836306267",
    "ETag": "\"5645a4a8b69c16ce0676f1d6f75d9987-2\""
}</msg>
<status status="PASS" starttime="20231212 10:51:42.787" endtime="20231212 10:51:43.287"/>
</kw>
<status status="PASS" starttime="20231212 10:51:42.787" endtime="20231212 10:51:43.287"/>
</kw>
<status status="PASS" starttime="20231212 10:51:40.261" endtime="20231212 10:51:43.287"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:43.289" level="INFO">${randStr} = 8035581841</msg>
<status status="PASS" starttime="20231212 10:51:43.289" endtime="20231212 10:51:43.290"/>
</kw>
<msg timestamp="20231212 10:51:43.290" level="INFO">${random} = ozone-test-8035581841</msg>
<status status="PASS" starttime="20231212 10:51:43.288" endtime="20231212 10:51:43.290"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:43.295" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key multipart/adjusted_length_ozone-test-2836306267 /tmp/verifyozone-test-8035581841 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:44.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:44.070" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"5645a4a8b69c16ce0676f1d6f75d9987-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:51:43.292" endtime="20231212 10:51:44.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:44.071" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"5645a4a8b69c16ce0676f1d6f75d9987-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:51:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:51:44.070" endtime="20231212 10:51:44.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:44.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:44.071" endtime="20231212 10:51:44.072"/>
</kw>
<status status="PASS" starttime="20231212 10:51:43.292" endtime="20231212 10:51:44.072"/>
</kw>
<msg timestamp="20231212 10:51:44.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:43.291" endtime="20231212 10:51:44.072"/>
</kw>
<msg timestamp="20231212 10:51:44.072" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"5645a4a8b69c16ce0676f1d6f75d9987-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:51:43.291" endtime="20231212 10:51:44.072"/>
</kw>
<status status="PASS" starttime="20231212 10:51:43.290" endtime="20231212 10:51:44.073"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231212 10:51:44.073" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20231212 10:51:44.073" endtime="20231212 10:51:44.073"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:44.078" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-8035581841'.</msg>
<msg timestamp="20231212 10:51:44.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:44.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:44.075" endtime="20231212 10:51:44.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:44.086" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:44.085" endtime="20231212 10:51:44.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:44.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:44.086" endtime="20231212 10:51:44.087"/>
</kw>
<status status="PASS" starttime="20231212 10:51:44.075" endtime="20231212 10:51:44.087"/>
</kw>
<msg timestamp="20231212 10:51:44.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:44.074" endtime="20231212 10:51:44.087"/>
</kw>
<status status="PASS" starttime="20231212 10:51:44.073" endtime="20231212 10:51:44.087"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:44.092" level="INFO">Running command 'md5sum /tmp/originalozone-test-8035581841 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:44.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:44.106" level="INFO">${output} = 376758a35881ffa6760dcc0b46762b03</msg>
<status status="PASS" starttime="20231212 10:51:44.090" endtime="20231212 10:51:44.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:44.108" level="INFO">376758a35881ffa6760dcc0b46762b03</msg>
<status status="PASS" starttime="20231212 10:51:44.107" endtime="20231212 10:51:44.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:44.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:44.108" endtime="20231212 10:51:44.109"/>
</kw>
<status status="PASS" starttime="20231212 10:51:44.089" endtime="20231212 10:51:44.109"/>
</kw>
<msg timestamp="20231212 10:51:44.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:44.089" endtime="20231212 10:51:44.109"/>
</kw>
<msg timestamp="20231212 10:51:44.109" level="INFO">${checksumbefore} = 376758a35881ffa6760dcc0b46762b03</msg>
<status status="PASS" starttime="20231212 10:51:44.088" endtime="20231212 10:51:44.109"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:44.114" level="INFO">Running command 'md5sum /tmp/verifyozone-test-8035581841 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:44.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:44.127" level="INFO">${output} = 376758a35881ffa6760dcc0b46762b03</msg>
<status status="PASS" starttime="20231212 10:51:44.111" endtime="20231212 10:51:44.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:44.129" level="INFO">376758a35881ffa6760dcc0b46762b03</msg>
<status status="PASS" starttime="20231212 10:51:44.128" endtime="20231212 10:51:44.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:44.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:44.129" endtime="20231212 10:51:44.129"/>
</kw>
<status status="PASS" starttime="20231212 10:51:44.111" endtime="20231212 10:51:44.130"/>
</kw>
<msg timestamp="20231212 10:51:44.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:44.110" endtime="20231212 10:51:44.130"/>
</kw>
<msg timestamp="20231212 10:51:44.130" level="INFO">${checksumafter} = 376758a35881ffa6760dcc0b46762b03</msg>
<status status="PASS" starttime="20231212 10:51:44.110" endtime="20231212 10:51:44.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:51:44.130" endtime="20231212 10:51:44.131"/>
</kw>
<status status="PASS" starttime="20231212 10:51:44.088" endtime="20231212 10:51:44.131"/>
</kw>
<status status="PASS" starttime="20231212 10:51:43.288" endtime="20231212 10:51:44.131"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:40.258" endtime="20231212 10:51:44.131"/>
</test>
<test id="s1-s5-s8-t2" name="Test Multipart Upload" line="61">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:44.134" level="INFO">${randStr} = 4415659866</msg>
<status status="PASS" starttime="20231212 10:51:44.133" endtime="20231212 10:51:44.134"/>
</kw>
<msg timestamp="20231212 10:51:44.134" level="INFO">${random} = ozone-test-4415659866</msg>
<status status="PASS" starttime="20231212 10:51:44.133" endtime="20231212 10:51:44.134"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:51:44.134" level="INFO">${PREFIX} = ozone-test-4415659866</msg>
<status status="PASS" starttime="20231212 10:51:44.134" endtime="20231212 10:51:44.135"/>
</kw>
<status status="PASS" starttime="20231212 10:51:44.132" endtime="20231212 10:51:44.135"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:44.139" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4415659866/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:44.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:44.627" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "a2f42158-a990-419d-84e1-ed27d07b3515-111567064568758435"
}</msg>
<status status="PASS" starttime="20231212 10:51:44.137" endtime="20231212 10:51:44.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:44.628" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "a2f42158-a990-419d-84e1-ed27d07b3515-111567064568758435"
}</msg>
<status status="PASS" starttime="20231212 10:51:44.627" endtime="20231212 10:51:44.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:44.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:44.628" endtime="20231212 10:51:44.629"/>
</kw>
<status status="PASS" starttime="20231212 10:51:44.136" endtime="20231212 10:51:44.629"/>
</kw>
<msg timestamp="20231212 10:51:44.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:44.136" endtime="20231212 10:51:44.629"/>
</kw>
<msg timestamp="20231212 10:51:44.629" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "a2f42158-a990-419d-84e1-ed27d07b3515-111567064568758435"
}</msg>
<status status="PASS" starttime="20231212 10:51:44.135" endtime="20231212 10:51:44.629"/>
</kw>
<msg timestamp="20231212 10:51:44.629" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "a2f42158-a990-419d-84e1-ed27d07b3515-111567064568758435"
}</msg>
<status status="PASS" starttime="20231212 10:51:44.135" endtime="20231212 10:51:44.629"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:44.632" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "a2f42158-a990-419d-84e1-ed27d07b3515-111567064568758435"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:44.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:44.659" level="INFO">${output} = a2f42158-a990-419d-84e1-ed27d07b3515-111567064568758435</msg>
<status status="PASS" starttime="20231212 10:51:44.630" endtime="20231212 10:51:44.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:44.660" level="INFO">a2f42158-a990-419d-84e1-ed27d07b3515-111567064568758435</msg>
<status status="PASS" starttime="20231212 10:51:44.660" endtime="20231212 10:51:44.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:44.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:44.661" endtime="20231212 10:51:44.661"/>
</kw>
<msg timestamp="20231212 10:51:44.661" level="INFO">${uploadID} = a2f42158-a990-419d-84e1-ed27d07b3515-111567064568758435</msg>
<status status="PASS" starttime="20231212 10:51:44.630" endtime="20231212 10:51:44.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:44.661" endtime="20231212 10:51:44.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:44.662" endtime="20231212 10:51:44.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:44.662" endtime="20231212 10:51:44.663"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:44.666" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4415659866/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:45.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:45.181" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236"
}</msg>
<status status="PASS" starttime="20231212 10:51:44.665" endtime="20231212 10:51:45.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:45.182" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236"
}</msg>
<status status="PASS" starttime="20231212 10:51:45.181" endtime="20231212 10:51:45.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:45.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:45.182" endtime="20231212 10:51:45.182"/>
</kw>
<status status="PASS" starttime="20231212 10:51:44.664" endtime="20231212 10:51:45.183"/>
</kw>
<msg timestamp="20231212 10:51:45.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:44.664" endtime="20231212 10:51:45.183"/>
</kw>
<msg timestamp="20231212 10:51:45.183" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236"
}</msg>
<status status="PASS" starttime="20231212 10:51:44.663" endtime="20231212 10:51:45.183"/>
</kw>
<msg timestamp="20231212 10:51:45.183" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236"
}</msg>
<status status="PASS" starttime="20231212 10:51:44.663" endtime="20231212 10:51:45.183"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:45.186" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4415659866/multipartKey",
    "UploadId": "8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:45.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:45.214" level="INFO">${output} = 8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236</msg>
<status status="PASS" starttime="20231212 10:51:45.184" endtime="20231212 10:51:45.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:45.215" level="INFO">8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236</msg>
<status status="PASS" starttime="20231212 10:51:45.214" endtime="20231212 10:51:45.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:45.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:45.215" endtime="20231212 10:51:45.215"/>
</kw>
<msg timestamp="20231212 10:51:45.216" level="INFO">${nextUploadID} = 8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236</msg>
<status status="PASS" starttime="20231212 10:51:45.184" endtime="20231212 10:51:45.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:45.216" endtime="20231212 10:51:45.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:45.216" endtime="20231212 10:51:45.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:45.217" endtime="20231212 10:51:45.217"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20231212 10:51:45.217" endtime="20231212 10:51:45.218"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:45.222" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:45.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:45.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:45.220" endtime="20231212 10:51:45.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:45.243" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:45.242" endtime="20231212 10:51:45.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:45.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:45.243" endtime="20231212 10:51:45.243"/>
</kw>
<status status="PASS" starttime="20231212 10:51:45.219" endtime="20231212 10:51:45.243"/>
</kw>
<msg timestamp="20231212 10:51:45.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:45.219" endtime="20231212 10:51:45.244"/>
</kw>
<status status="PASS" starttime="20231212 10:51:45.218" endtime="20231212 10:51:45.244"/>
</kw>
<status status="PASS" starttime="20231212 10:51:45.218" endtime="20231212 10:51:45.244"/>
</kw>
<status status="PASS" starttime="20231212 10:51:45.218" endtime="20231212 10:51:45.244"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:45.248" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4415659866/multipartKey --part-number 1 --body /tmp/part1 --upload-id 8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:46.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:46.441" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4415659866/multipartKey-8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:45.246" endtime="20231212 10:51:46.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:46.443" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-4415659866/multipartKey-8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:46.442" endtime="20231212 10:51:46.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:46.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:46.443" endtime="20231212 10:51:46.443"/>
</kw>
<status status="PASS" starttime="20231212 10:51:45.245" endtime="20231212 10:51:46.443"/>
</kw>
<msg timestamp="20231212 10:51:46.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:45.245" endtime="20231212 10:51:46.444"/>
</kw>
<msg timestamp="20231212 10:51:46.444" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4415659866/multipartKey-8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:45.245" endtime="20231212 10:51:46.444"/>
</kw>
<msg timestamp="20231212 10:51:46.444" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-4415659866/multipartKey-8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:45.244" endtime="20231212 10:51:46.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:46.444" endtime="20231212 10:51:46.444"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:46.448" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:46.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:46.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:46.447" endtime="20231212 10:51:46.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:46.469" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:46.469" endtime="20231212 10:51:46.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:46.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:46.470" endtime="20231212 10:51:46.470"/>
</kw>
<status status="PASS" starttime="20231212 10:51:46.446" endtime="20231212 10:51:46.470"/>
</kw>
<msg timestamp="20231212 10:51:46.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:46.446" endtime="20231212 10:51:46.471"/>
</kw>
<status status="PASS" starttime="20231212 10:51:46.445" endtime="20231212 10:51:46.471"/>
</kw>
<status status="PASS" starttime="20231212 10:51:46.445" endtime="20231212 10:51:46.471"/>
</kw>
<status status="PASS" starttime="20231212 10:51:46.445" endtime="20231212 10:51:46.471"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:46.474" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4415659866/multipartKey --part-number 1 --body /tmp/part1 --upload-id 8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:47.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:47.769" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4415659866/multipartKey-8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:46.473" endtime="20231212 10:51:47.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:47.770" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-4415659866/multipartKey-8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:47.769" endtime="20231212 10:51:47.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:47.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:47.770" endtime="20231212 10:51:47.770"/>
</kw>
<status status="PASS" starttime="20231212 10:51:46.472" endtime="20231212 10:51:47.771"/>
</kw>
<msg timestamp="20231212 10:51:47.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:46.472" endtime="20231212 10:51:47.771"/>
</kw>
<msg timestamp="20231212 10:51:47.771" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4415659866/multipartKey-8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:46.472" endtime="20231212 10:51:47.771"/>
</kw>
<msg timestamp="20231212 10:51:47.771" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-4415659866/multipartKey-8a175fef-3153-4079-bf26-05d67f3b26b4-111567064604803236-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:46.471" endtime="20231212 10:51:47.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:47.771" endtime="20231212 10:51:47.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:44.132" endtime="20231212 10:51:47.772"/>
</test>
<test id="s1-s5-s8-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:47.774" level="INFO">${randStr} = 7858416323</msg>
<status status="PASS" starttime="20231212 10:51:47.774" endtime="20231212 10:51:47.774"/>
</kw>
<msg timestamp="20231212 10:51:47.774" level="INFO">${random} = ozone-test-7858416323</msg>
<status status="PASS" starttime="20231212 10:51:47.773" endtime="20231212 10:51:47.774"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:51:47.775" level="INFO">${PREFIX} = ozone-test-7858416323</msg>
<status status="PASS" starttime="20231212 10:51:47.775" endtime="20231212 10:51:47.775"/>
</kw>
<status status="PASS" starttime="20231212 10:51:47.773" endtime="20231212 10:51:47.775"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:47.778" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-7858416323/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:48.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:48.270" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7858416323/multipartKey1",
    "UploadId": "9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335"
}</msg>
<status status="PASS" starttime="20231212 10:51:47.777" endtime="20231212 10:51:48.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:48.271" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-7858416323/multipartKey1",
    "UploadId": "9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335"
}</msg>
<status status="PASS" starttime="20231212 10:51:48.271" endtime="20231212 10:51:48.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:48.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:48.271" endtime="20231212 10:51:48.272"/>
</kw>
<status status="PASS" starttime="20231212 10:51:47.776" endtime="20231212 10:51:48.272"/>
</kw>
<msg timestamp="20231212 10:51:48.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:47.776" endtime="20231212 10:51:48.272"/>
</kw>
<msg timestamp="20231212 10:51:48.272" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7858416323/multipartKey1",
    "UploadId": "9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335"
}</msg>
<status status="PASS" starttime="20231212 10:51:47.776" endtime="20231212 10:51:48.272"/>
</kw>
<msg timestamp="20231212 10:51:48.272" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7858416323/multipartKey1",
    "UploadId": "9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335"
}</msg>
<status status="PASS" starttime="20231212 10:51:47.775" endtime="20231212 10:51:48.272"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:48.275" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-7858416323/multipartKey1",
    "UploadId": "9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:48.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:48.302" level="INFO">${output} = 9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335</msg>
<status status="PASS" starttime="20231212 10:51:48.273" endtime="20231212 10:51:48.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:48.303" level="INFO">9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335</msg>
<status status="PASS" starttime="20231212 10:51:48.303" endtime="20231212 10:51:48.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:48.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:48.304" endtime="20231212 10:51:48.304"/>
</kw>
<msg timestamp="20231212 10:51:48.304" level="INFO">${uploadID} = 9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335</msg>
<status status="PASS" starttime="20231212 10:51:48.273" endtime="20231212 10:51:48.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:48.305" endtime="20231212 10:51:48.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:48.305" endtime="20231212 10:51:48.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:48.306" endtime="20231212 10:51:48.306"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:48.310" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:48.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:48.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:48.308" endtime="20231212 10:51:48.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:48.330" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:48.330" endtime="20231212 10:51:48.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:48.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:48.331" endtime="20231212 10:51:48.331"/>
</kw>
<status status="PASS" starttime="20231212 10:51:48.308" endtime="20231212 10:51:48.331"/>
</kw>
<msg timestamp="20231212 10:51:48.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:48.307" endtime="20231212 10:51:48.332"/>
</kw>
<status status="PASS" starttime="20231212 10:51:48.307" endtime="20231212 10:51:48.332"/>
</kw>
<status status="PASS" starttime="20231212 10:51:48.306" endtime="20231212 10:51:48.332"/>
</kw>
<status status="PASS" starttime="20231212 10:51:48.306" endtime="20231212 10:51:48.332"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:48.336" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-7858416323/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:49.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:49.494" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:48.334" endtime="20231212 10:51:49.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:49.495" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:49.495" endtime="20231212 10:51:49.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:49.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:49.495" endtime="20231212 10:51:49.496"/>
</kw>
<status status="PASS" starttime="20231212 10:51:48.333" endtime="20231212 10:51:49.496"/>
</kw>
<msg timestamp="20231212 10:51:49.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:48.333" endtime="20231212 10:51:49.496"/>
</kw>
<msg timestamp="20231212 10:51:49.496" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:48.333" endtime="20231212 10:51:49.496"/>
</kw>
<msg timestamp="20231212 10:51:49.496" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:48.332" endtime="20231212 10:51:49.496"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:49.499" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:49.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:49.525" level="INFO">${output} = /s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-1</msg>
<status status="PASS" starttime="20231212 10:51:49.497" endtime="20231212 10:51:49.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:49.526" level="INFO">/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-1</msg>
<status status="PASS" starttime="20231212 10:51:49.526" endtime="20231212 10:51:49.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:49.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:49.527" endtime="20231212 10:51:49.527"/>
</kw>
<msg timestamp="20231212 10:51:49.527" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-1</msg>
<status status="PASS" starttime="20231212 10:51:49.496" endtime="20231212 10:51:49.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:49.528" endtime="20231212 10:51:49.528"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:49.531" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231212 10:51:49.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:49.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:49.529" endtime="20231212 10:51:49.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:49.534" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:49.533" endtime="20231212 10:51:49.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:49.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:49.534" endtime="20231212 10:51:49.534"/>
</kw>
<status status="PASS" starttime="20231212 10:51:49.529" endtime="20231212 10:51:49.535"/>
</kw>
<msg timestamp="20231212 10:51:49.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:49.529" endtime="20231212 10:51:49.535"/>
</kw>
<status status="PASS" starttime="20231212 10:51:49.528" endtime="20231212 10:51:49.535"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:49.538" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-7858416323/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:50.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:50.185" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:49.537" endtime="20231212 10:51:50.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:50.186" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:50.186" endtime="20231212 10:51:50.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:50.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:50.187" endtime="20231212 10:51:50.187"/>
</kw>
<status status="PASS" starttime="20231212 10:51:49.536" endtime="20231212 10:51:50.187"/>
</kw>
<msg timestamp="20231212 10:51:50.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:49.536" endtime="20231212 10:51:50.187"/>
</kw>
<msg timestamp="20231212 10:51:50.188" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:49.536" endtime="20231212 10:51:50.188"/>
</kw>
<msg timestamp="20231212 10:51:50.188" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:49.535" endtime="20231212 10:51:50.188"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:50.190" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:50.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:50.219" level="INFO">${output} = /s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-2</msg>
<status status="PASS" starttime="20231212 10:51:50.189" endtime="20231212 10:51:50.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:50.220" level="INFO">/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-2</msg>
<status status="PASS" starttime="20231212 10:51:50.220" endtime="20231212 10:51:50.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:50.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:50.220" endtime="20231212 10:51:50.221"/>
</kw>
<msg timestamp="20231212 10:51:50.221" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-2</msg>
<status status="PASS" starttime="20231212 10:51:50.188" endtime="20231212 10:51:50.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:50.221" endtime="20231212 10:51:50.222"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:50.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335 --bucket encrypted --key ozone-test-7858416323/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-7858416323/multipartKey1-9c9f296e-ff2c-4d01-a1c9-09d6144ab40d-111567064807047335-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:50.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:50.719" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7858416323/multipartKey1",
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\""
}</msg>
<status status="PASS" starttime="20231212 10:51:50.224" endtime="20231212 10:51:50.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:50.720" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7858416323/multipartKey1",
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\""
}</msg>
<status status="PASS" starttime="20231212 10:51:50.720" endtime="20231212 10:51:50.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:50.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:50.721" endtime="20231212 10:51:50.721"/>
</kw>
<status status="PASS" starttime="20231212 10:51:50.223" endtime="20231212 10:51:50.721"/>
</kw>
<msg timestamp="20231212 10:51:50.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:50.223" endtime="20231212 10:51:50.721"/>
</kw>
<msg timestamp="20231212 10:51:50.722" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7858416323/multipartKey1",
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\""
}</msg>
<status status="PASS" starttime="20231212 10:51:50.223" endtime="20231212 10:51:50.722"/>
</kw>
<msg timestamp="20231212 10:51:50.722" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7858416323/multipartKey1",
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\""
}</msg>
<status status="PASS" starttime="20231212 10:51:50.222" endtime="20231212 10:51:50.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:50.722" endtime="20231212 10:51:50.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:50.722" endtime="20231212 10:51:50.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:50.723" endtime="20231212 10:51:50.723"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:50.727" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7858416323/multipartKey1 /tmp/ozone-test-7858416323-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:51.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:51.407" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 5242886,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:51:50.725" endtime="20231212 10:51:51.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:51.408" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 5242886,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:51:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:51:51.408" endtime="20231212 10:51:51.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:51.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:51.409" endtime="20231212 10:51:51.409"/>
</kw>
<status status="PASS" starttime="20231212 10:51:50.725" endtime="20231212 10:51:51.409"/>
</kw>
<msg timestamp="20231212 10:51:51.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:50.724" endtime="20231212 10:51:51.409"/>
</kw>
<msg timestamp="20231212 10:51:51.410" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 5242886,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:51:50.724" endtime="20231212 10:51:51.410"/>
</kw>
<msg timestamp="20231212 10:51:51.410" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 5242886,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:51:50.723" endtime="20231212 10:51:51.410"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:51.413" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-7858416323-multipartKey1'.</msg>
<msg timestamp="20231212 10:51:51.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:51.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:51.411" endtime="20231212 10:51:51.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:51.419" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:51.419" endtime="20231212 10:51:51.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:51.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:51.419" endtime="20231212 10:51:51.420"/>
</kw>
<status status="PASS" starttime="20231212 10:51:51.411" endtime="20231212 10:51:51.420"/>
</kw>
<msg timestamp="20231212 10:51:51.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:51.411" endtime="20231212 10:51:51.420"/>
</kw>
<status status="PASS" starttime="20231212 10:51:51.410" endtime="20231212 10:51:51.420"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:51.423" level="INFO">Running command 'md5sum /tmp/ozone-test-7858416323-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:51.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:51.434" level="INFO">${output} = 3260b78f196bc6d59865833d67b22426</msg>
<status status="PASS" starttime="20231212 10:51:51.422" endtime="20231212 10:51:51.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:51.435" level="INFO">3260b78f196bc6d59865833d67b22426</msg>
<status status="PASS" starttime="20231212 10:51:51.435" endtime="20231212 10:51:51.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:51.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:51.436" endtime="20231212 10:51:51.436"/>
</kw>
<status status="PASS" starttime="20231212 10:51:51.421" endtime="20231212 10:51:51.436"/>
</kw>
<msg timestamp="20231212 10:51:51.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:51.421" endtime="20231212 10:51:51.436"/>
</kw>
<msg timestamp="20231212 10:51:51.436" level="INFO">${checksumbefore} = 3260b78f196bc6d59865833d67b22426</msg>
<status status="PASS" starttime="20231212 10:51:51.421" endtime="20231212 10:51:51.437"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:51.442" level="INFO">Running command 'md5sum /tmp/ozone-test-7858416323-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:51.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:51.453" level="INFO">${output} = 3260b78f196bc6d59865833d67b22426</msg>
<status status="PASS" starttime="20231212 10:51:51.440" endtime="20231212 10:51:51.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:51.454" level="INFO">3260b78f196bc6d59865833d67b22426</msg>
<status status="PASS" starttime="20231212 10:51:51.454" endtime="20231212 10:51:51.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:51.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:51.455" endtime="20231212 10:51:51.455"/>
</kw>
<status status="PASS" starttime="20231212 10:51:51.438" endtime="20231212 10:51:51.455"/>
</kw>
<msg timestamp="20231212 10:51:51.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:51.437" endtime="20231212 10:51:51.455"/>
</kw>
<msg timestamp="20231212 10:51:51.455" level="INFO">${checksumafter} = 3260b78f196bc6d59865833d67b22426</msg>
<status status="PASS" starttime="20231212 10:51:51.437" endtime="20231212 10:51:51.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:51:51.456" endtime="20231212 10:51:51.456"/>
</kw>
<status status="PASS" starttime="20231212 10:51:51.420" endtime="20231212 10:51:51.456"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:51.460" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7858416323/multipartKey1 --part-number 1 /tmp/ozone-test-7858416323-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:52.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:52.054" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 5242880,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:51:51.458" endtime="20231212 10:51:52.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:52.055" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 5242880,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:51:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:51:52.055" endtime="20231212 10:51:52.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:52.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:52.056" endtime="20231212 10:51:52.056"/>
</kw>
<status status="PASS" starttime="20231212 10:51:51.458" endtime="20231212 10:51:52.056"/>
</kw>
<msg timestamp="20231212 10:51:52.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:51.457" endtime="20231212 10:51:52.057"/>
</kw>
<msg timestamp="20231212 10:51:52.057" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 5242880,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:51:51.457" endtime="20231212 10:51:52.057"/>
</kw>
<msg timestamp="20231212 10:51:52.057" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 5242880,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:51:51.456" endtime="20231212 10:51:52.057"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:52.061" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:52.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:52.072" level="INFO">${output} = 51875bd2a2075f6e64b644a0c9480383</msg>
<status status="PASS" starttime="20231212 10:51:52.059" endtime="20231212 10:51:52.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:52.074" level="INFO">51875bd2a2075f6e64b644a0c9480383</msg>
<status status="PASS" starttime="20231212 10:51:52.073" endtime="20231212 10:51:52.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:52.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:52.074" endtime="20231212 10:51:52.075"/>
</kw>
<status status="PASS" starttime="20231212 10:51:52.058" endtime="20231212 10:51:52.075"/>
</kw>
<msg timestamp="20231212 10:51:52.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:52.058" endtime="20231212 10:51:52.075"/>
</kw>
<msg timestamp="20231212 10:51:52.075" level="INFO">${checksumbefore} = 51875bd2a2075f6e64b644a0c9480383</msg>
<status status="PASS" starttime="20231212 10:51:52.058" endtime="20231212 10:51:52.075"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:52.079" level="INFO">Running command 'md5sum /tmp/ozone-test-7858416323-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:52.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:52.091" level="INFO">${output} = 51875bd2a2075f6e64b644a0c9480383</msg>
<status status="PASS" starttime="20231212 10:51:52.077" endtime="20231212 10:51:52.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:52.092" level="INFO">51875bd2a2075f6e64b644a0c9480383</msg>
<status status="PASS" starttime="20231212 10:51:52.091" endtime="20231212 10:51:52.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:52.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:52.092" endtime="20231212 10:51:52.093"/>
</kw>
<status status="PASS" starttime="20231212 10:51:52.076" endtime="20231212 10:51:52.093"/>
</kw>
<msg timestamp="20231212 10:51:52.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:52.076" endtime="20231212 10:51:52.093"/>
</kw>
<msg timestamp="20231212 10:51:52.093" level="INFO">${checksumafter} = 51875bd2a2075f6e64b644a0c9480383</msg>
<status status="PASS" starttime="20231212 10:51:52.075" endtime="20231212 10:51:52.093"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:51:52.094" endtime="20231212 10:51:52.094"/>
</kw>
<status status="PASS" starttime="20231212 10:51:52.057" endtime="20231212 10:51:52.094"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:52.099" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7858416323/multipartKey1 --part-number 2 /tmp/ozone-test-7858416323-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:52.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:52.603" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 6,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:51:52.097" endtime="20231212 10:51:52.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:52.604" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 6,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:51:52 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:51:52.603" endtime="20231212 10:51:52.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:52.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:52.604" endtime="20231212 10:51:52.604"/>
</kw>
<status status="PASS" starttime="20231212 10:51:52.096" endtime="20231212 10:51:52.605"/>
</kw>
<msg timestamp="20231212 10:51:52.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:52.096" endtime="20231212 10:51:52.605"/>
</kw>
<msg timestamp="20231212 10:51:52.605" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 6,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:51:52.095" endtime="20231212 10:51:52.605"/>
</kw>
<msg timestamp="20231212 10:51:52.605" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:51:50 GMT",
    "ContentLength": 6,
    "ETag": "\"5eab1c28e136a8663f13c44d00551e00-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:51:52.094" endtime="20231212 10:51:52.605"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:52.609" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:52.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:52.611" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:51:52.607" endtime="20231212 10:51:52.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:52.612" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:51:52.612" endtime="20231212 10:51:52.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:52.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:52.612" endtime="20231212 10:51:52.613"/>
</kw>
<status status="PASS" starttime="20231212 10:51:52.607" endtime="20231212 10:51:52.613"/>
</kw>
<msg timestamp="20231212 10:51:52.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:52.606" endtime="20231212 10:51:52.613"/>
</kw>
<msg timestamp="20231212 10:51:52.614" level="INFO">${checksumbefore} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:51:52.606" endtime="20231212 10:51:52.614"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:52.617" level="INFO">Running command 'md5sum /tmp/ozone-test-7858416323-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:52.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:52.619" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:51:52.615" endtime="20231212 10:51:52.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:52.620" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:51:52.620" endtime="20231212 10:51:52.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:52.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:52.620" endtime="20231212 10:51:52.621"/>
</kw>
<status status="PASS" starttime="20231212 10:51:52.615" endtime="20231212 10:51:52.621"/>
</kw>
<msg timestamp="20231212 10:51:52.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:52.614" endtime="20231212 10:51:52.621"/>
</kw>
<msg timestamp="20231212 10:51:52.621" level="INFO">${checksumafter} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:51:52.614" endtime="20231212 10:51:52.621"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:51:52.622" endtime="20231212 10:51:52.622"/>
</kw>
<status status="PASS" starttime="20231212 10:51:52.605" endtime="20231212 10:51:52.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:47.772" endtime="20231212 10:51:52.622"/>
</test>
<test id="s1-s5-s8-t4" name="Test Multipart Upload Complete Entity too small" line="124">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:52.625" level="INFO">${randStr} = 9385793312</msg>
<status status="PASS" starttime="20231212 10:51:52.624" endtime="20231212 10:51:52.625"/>
</kw>
<msg timestamp="20231212 10:51:52.625" level="INFO">${random} = ozone-test-9385793312</msg>
<status status="PASS" starttime="20231212 10:51:52.624" endtime="20231212 10:51:52.625"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:51:52.625" level="INFO">${PREFIX} = ozone-test-9385793312</msg>
<status status="PASS" starttime="20231212 10:51:52.625" endtime="20231212 10:51:52.625"/>
</kw>
<status status="PASS" starttime="20231212 10:51:52.623" endtime="20231212 10:51:52.625"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:52.629" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9385793312/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:53.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:53.127" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9385793312/multipartKey2",
    "UploadId": "a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546"
}</msg>
<status status="PASS" starttime="20231212 10:51:52.627" endtime="20231212 10:51:53.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:53.129" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9385793312/multipartKey2",
    "UploadId": "a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546"
}</msg>
<status status="PASS" starttime="20231212 10:51:53.127" endtime="20231212 10:51:53.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:53.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:53.129" endtime="20231212 10:51:53.129"/>
</kw>
<status status="PASS" starttime="20231212 10:51:52.627" endtime="20231212 10:51:53.130"/>
</kw>
<msg timestamp="20231212 10:51:53.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:52.626" endtime="20231212 10:51:53.130"/>
</kw>
<msg timestamp="20231212 10:51:53.130" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9385793312/multipartKey2",
    "UploadId": "a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546"
}</msg>
<status status="PASS" starttime="20231212 10:51:52.626" endtime="20231212 10:51:53.130"/>
</kw>
<msg timestamp="20231212 10:51:53.130" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9385793312/multipartKey2",
    "UploadId": "a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546"
}</msg>
<status status="PASS" starttime="20231212 10:51:52.626" endtime="20231212 10:51:53.130"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:53.133" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9385793312/multipartKey2",
    "UploadId": "a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:53.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:53.161" level="INFO">${output} = a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546</msg>
<status status="PASS" starttime="20231212 10:51:53.131" endtime="20231212 10:51:53.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:53.162" level="INFO">a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546</msg>
<status status="PASS" starttime="20231212 10:51:53.161" endtime="20231212 10:51:53.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:53.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:53.162" endtime="20231212 10:51:53.163"/>
</kw>
<msg timestamp="20231212 10:51:53.163" level="INFO">${uploadID} = a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546</msg>
<status status="PASS" starttime="20231212 10:51:53.130" endtime="20231212 10:51:53.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:53.163" endtime="20231212 10:51:53.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:53.163" endtime="20231212 10:51:53.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:53.164" endtime="20231212 10:51:53.164"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:53.167" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20231212 10:51:53.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:53.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:53.165" endtime="20231212 10:51:53.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:53.170" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:53.170" endtime="20231212 10:51:53.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:53.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:53.171" endtime="20231212 10:51:53.171"/>
</kw>
<status status="PASS" starttime="20231212 10:51:53.165" endtime="20231212 10:51:53.171"/>
</kw>
<msg timestamp="20231212 10:51:53.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:53.165" endtime="20231212 10:51:53.171"/>
</kw>
<status status="PASS" starttime="20231212 10:51:53.164" endtime="20231212 10:51:53.171"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:53.175" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9385793312/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:53.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:53.754" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:53.173" endtime="20231212 10:51:53.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:53.755" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:53.755" endtime="20231212 10:51:53.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:53.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:53.756" endtime="20231212 10:51:53.756"/>
</kw>
<status status="PASS" starttime="20231212 10:51:53.173" endtime="20231212 10:51:53.756"/>
</kw>
<msg timestamp="20231212 10:51:53.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:53.173" endtime="20231212 10:51:53.757"/>
</kw>
<msg timestamp="20231212 10:51:53.757" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:53.172" endtime="20231212 10:51:53.757"/>
</kw>
<msg timestamp="20231212 10:51:53.757" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:53.172" endtime="20231212 10:51:53.757"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:53.760" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:53.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:53.787" level="INFO">${output} = /s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-1</msg>
<status status="PASS" starttime="20231212 10:51:53.758" endtime="20231212 10:51:53.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:53.788" level="INFO">/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-1</msg>
<status status="PASS" starttime="20231212 10:51:53.787" endtime="20231212 10:51:53.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:53.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:53.788" endtime="20231212 10:51:53.789"/>
</kw>
<msg timestamp="20231212 10:51:53.789" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-1</msg>
<status status="PASS" starttime="20231212 10:51:53.757" endtime="20231212 10:51:53.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:53.789" endtime="20231212 10:51:53.790"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:53.793" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231212 10:51:53.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:53.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:53.791" endtime="20231212 10:51:53.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:53.795" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:53.795" endtime="20231212 10:51:53.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:53.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:53.796" endtime="20231212 10:51:53.796"/>
</kw>
<status status="PASS" starttime="20231212 10:51:53.791" endtime="20231212 10:51:53.796"/>
</kw>
<msg timestamp="20231212 10:51:53.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:53.790" endtime="20231212 10:51:53.796"/>
</kw>
<status status="PASS" starttime="20231212 10:51:53.790" endtime="20231212 10:51:53.796"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:53.800" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9385793312/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:54.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:54.377" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:53.798" endtime="20231212 10:51:54.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:54.378" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:54.377" endtime="20231212 10:51:54.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:54.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:54.378" endtime="20231212 10:51:54.378"/>
</kw>
<status status="PASS" starttime="20231212 10:51:53.798" endtime="20231212 10:51:54.378"/>
</kw>
<msg timestamp="20231212 10:51:54.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:53.798" endtime="20231212 10:51:54.379"/>
</kw>
<msg timestamp="20231212 10:51:54.379" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:53.797" endtime="20231212 10:51:54.379"/>
</kw>
<msg timestamp="20231212 10:51:54.379" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:53.797" endtime="20231212 10:51:54.379"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:54.381" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:54.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:54.407" level="INFO">${output} = /s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-2</msg>
<status status="PASS" starttime="20231212 10:51:54.380" endtime="20231212 10:51:54.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:54.408" level="INFO">/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-2</msg>
<status status="PASS" starttime="20231212 10:51:54.408" endtime="20231212 10:51:54.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:54.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:54.409" endtime="20231212 10:51:54.409"/>
</kw>
<msg timestamp="20231212 10:51:54.409" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-2</msg>
<status status="PASS" starttime="20231212 10:51:54.379" endtime="20231212 10:51:54.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:54.409" endtime="20231212 10:51:54.410"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:54.413" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546 --bucket encrypted --key ozone-test-9385793312/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-9385793312/multipartKey2-a3009133-50f7-4485-af69-3feec74d89e3-111567065125093546-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:54.913" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:51:54.913" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231212 10:51:54.411" endtime="20231212 10:51:54.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:54.914" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20231212 10:51:54.913" endtime="20231212 10:51:54.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:54.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:54.914" endtime="20231212 10:51:54.915"/>
</kw>
<msg timestamp="20231212 10:51:54.915" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231212 10:51:54.411" endtime="20231212 10:51:54.915"/>
</kw>
<msg timestamp="20231212 10:51:54.915" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231212 10:51:54.410" endtime="20231212 10:51:54.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:54.915" endtime="20231212 10:51:54.916"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:52.623" endtime="20231212 10:51:54.916"/>
</test>
<test id="s1-s5-s8-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="147">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:51:54.918" level="INFO">${randStr} = 3759077097</msg>
<status status="PASS" starttime="20231212 10:51:54.918" endtime="20231212 10:51:54.918"/>
</kw>
<msg timestamp="20231212 10:51:54.918" level="INFO">${random} = ozone-test-3759077097</msg>
<status status="PASS" starttime="20231212 10:51:54.917" endtime="20231212 10:51:54.918"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:51:54.919" level="INFO">${PREFIX} = ozone-test-3759077097</msg>
<status status="PASS" starttime="20231212 10:51:54.919" endtime="20231212 10:51:54.919"/>
</kw>
<status status="PASS" starttime="20231212 10:51:54.917" endtime="20231212 10:51:54.919"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:54.923" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-3759077097/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:55.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:55.405" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3759077097/multipartKey3",
    "UploadId": "b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237"
}</msg>
<status status="PASS" starttime="20231212 10:51:54.921" endtime="20231212 10:51:55.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:55.406" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-3759077097/multipartKey3",
    "UploadId": "b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237"
}</msg>
<status status="PASS" starttime="20231212 10:51:55.406" endtime="20231212 10:51:55.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:55.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:55.407" endtime="20231212 10:51:55.407"/>
</kw>
<status status="PASS" starttime="20231212 10:51:54.920" endtime="20231212 10:51:55.407"/>
</kw>
<msg timestamp="20231212 10:51:55.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:54.920" endtime="20231212 10:51:55.407"/>
</kw>
<msg timestamp="20231212 10:51:55.408" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3759077097/multipartKey3",
    "UploadId": "b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237"
}</msg>
<status status="PASS" starttime="20231212 10:51:54.920" endtime="20231212 10:51:55.408"/>
</kw>
<msg timestamp="20231212 10:51:55.408" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3759077097/multipartKey3",
    "UploadId": "b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237"
}</msg>
<status status="PASS" starttime="20231212 10:51:54.919" endtime="20231212 10:51:55.408"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:55.410" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-3759077097/multipartKey3",
    "UploadId": "b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:55.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:55.438" level="INFO">${output} = b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237</msg>
<status status="PASS" starttime="20231212 10:51:55.409" endtime="20231212 10:51:55.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:55.439" level="INFO">b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237</msg>
<status status="PASS" starttime="20231212 10:51:55.438" endtime="20231212 10:51:55.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:55.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:55.439" endtime="20231212 10:51:55.440"/>
</kw>
<msg timestamp="20231212 10:51:55.440" level="INFO">${uploadID} = b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237</msg>
<status status="PASS" starttime="20231212 10:51:55.408" endtime="20231212 10:51:55.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:55.440" endtime="20231212 10:51:55.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:55.440" endtime="20231212 10:51:55.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:55.441" endtime="20231212 10:51:55.441"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:55.444" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237 --bucket encrypted --key ozone-test-3759077097/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:55.933" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:51:55.933" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:51:55.443" endtime="20231212 10:51:55.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:55.935" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231212 10:51:55.934" endtime="20231212 10:51:55.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:55.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:55.935" endtime="20231212 10:51:55.935"/>
</kw>
<msg timestamp="20231212 10:51:55.935" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:51:55.442" endtime="20231212 10:51:55.935"/>
</kw>
<msg timestamp="20231212 10:51:55.936" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:51:55.441" endtime="20231212 10:51:55.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:55.936" endtime="20231212 10:51:55.936"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:55.939" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237 --bucket encrypted --key ozone-test-3759077097/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:56.437" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:51:56.437" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:51:55.938" endtime="20231212 10:51:56.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:56.439" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231212 10:51:56.438" endtime="20231212 10:51:56.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:56.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:56.439" endtime="20231212 10:51:56.439"/>
</kw>
<msg timestamp="20231212 10:51:56.440" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:51:55.937" endtime="20231212 10:51:56.440"/>
</kw>
<msg timestamp="20231212 10:51:56.440" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:51:55.936" endtime="20231212 10:51:56.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:56.440" endtime="20231212 10:51:56.440"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:56.444" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:56.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:56.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:56.443" endtime="20231212 10:51:56.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:56.464" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:56.463" endtime="20231212 10:51:56.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:56.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:56.464" endtime="20231212 10:51:56.464"/>
</kw>
<status status="PASS" starttime="20231212 10:51:56.442" endtime="20231212 10:51:56.464"/>
</kw>
<msg timestamp="20231212 10:51:56.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:56.442" endtime="20231212 10:51:56.465"/>
</kw>
<status status="PASS" starttime="20231212 10:51:56.441" endtime="20231212 10:51:56.465"/>
</kw>
<status status="PASS" starttime="20231212 10:51:56.441" endtime="20231212 10:51:56.465"/>
</kw>
<status status="PASS" starttime="20231212 10:51:56.441" endtime="20231212 10:51:56.465"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:56.469" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3759077097/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:57.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:57.632" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:56.467" endtime="20231212 10:51:57.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:57.633" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:57.632" endtime="20231212 10:51:57.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:57.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:57.633" endtime="20231212 10:51:57.634"/>
</kw>
<status status="PASS" starttime="20231212 10:51:56.466" endtime="20231212 10:51:57.634"/>
</kw>
<msg timestamp="20231212 10:51:57.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:56.466" endtime="20231212 10:51:57.634"/>
</kw>
<msg timestamp="20231212 10:51:57.634" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:56.466" endtime="20231212 10:51:57.634"/>
</kw>
<msg timestamp="20231212 10:51:57.634" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1"
}</msg>
<status status="PASS" starttime="20231212 10:51:56.465" endtime="20231212 10:51:57.634"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:57.637" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:57.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:57.664" level="INFO">${output} = /s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1</msg>
<status status="PASS" starttime="20231212 10:51:57.635" endtime="20231212 10:51:57.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:57.665" level="INFO">/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1</msg>
<status status="PASS" starttime="20231212 10:51:57.664" endtime="20231212 10:51:57.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:57.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:57.665" endtime="20231212 10:51:57.666"/>
</kw>
<msg timestamp="20231212 10:51:57.666" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1</msg>
<status status="PASS" starttime="20231212 10:51:57.634" endtime="20231212 10:51:57.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:57.666" endtime="20231212 10:51:57.667"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:57.670" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3759077097/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:58.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:58.850" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:57.669" endtime="20231212 10:51:58.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:58.851" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:58.850" endtime="20231212 10:51:58.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:58.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:58.851" endtime="20231212 10:51:58.851"/>
</kw>
<status status="PASS" starttime="20231212 10:51:57.668" endtime="20231212 10:51:58.851"/>
</kw>
<msg timestamp="20231212 10:51:58.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:57.668" endtime="20231212 10:51:58.852"/>
</kw>
<msg timestamp="20231212 10:51:58.852" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:57.667" endtime="20231212 10:51:58.852"/>
</kw>
<msg timestamp="20231212 10:51:58.852" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-2"
}</msg>
<status status="PASS" starttime="20231212 10:51:57.667" endtime="20231212 10:51:58.852"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:58.854" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:58.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:58.881" level="INFO">${output} = /s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-2</msg>
<status status="PASS" starttime="20231212 10:51:58.853" endtime="20231212 10:51:58.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:58.882" level="INFO">/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-2</msg>
<status status="PASS" starttime="20231212 10:51:58.881" endtime="20231212 10:51:58.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:58.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:58.882" endtime="20231212 10:51:58.883"/>
</kw>
<msg timestamp="20231212 10:51:58.883" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-2</msg>
<status status="PASS" starttime="20231212 10:51:58.852" endtime="20231212 10:51:58.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:58.883" endtime="20231212 10:51:58.883"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:58.886" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20231212 10:51:58.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:58.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:51:58.885" endtime="20231212 10:51:58.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:58.889" level="INFO"/>
<status status="PASS" starttime="20231212 10:51:58.888" endtime="20231212 10:51:58.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:58.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:58.889" endtime="20231212 10:51:58.889"/>
</kw>
<status status="PASS" starttime="20231212 10:51:58.884" endtime="20231212 10:51:58.889"/>
</kw>
<msg timestamp="20231212 10:51:58.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:58.884" endtime="20231212 10:51:58.890"/>
</kw>
<status status="PASS" starttime="20231212 10:51:58.884" endtime="20231212 10:51:58.890"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:58.893" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3759077097/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:59.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:59.500" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-3"
}</msg>
<status status="PASS" starttime="20231212 10:51:58.892" endtime="20231212 10:51:59.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:59.501" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-3"
}</msg>
<status status="PASS" starttime="20231212 10:51:59.500" endtime="20231212 10:51:59.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:59.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:59.501" endtime="20231212 10:51:59.501"/>
</kw>
<status status="PASS" starttime="20231212 10:51:58.891" endtime="20231212 10:51:59.501"/>
</kw>
<msg timestamp="20231212 10:51:59.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:51:58.891" endtime="20231212 10:51:59.502"/>
</kw>
<msg timestamp="20231212 10:51:59.502" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-3"
}</msg>
<status status="PASS" starttime="20231212 10:51:58.890" endtime="20231212 10:51:59.502"/>
</kw>
<msg timestamp="20231212 10:51:59.502" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-3"
}</msg>
<status status="PASS" starttime="20231212 10:51:58.890" endtime="20231212 10:51:59.502"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:59.504" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:51:59.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:51:59.531" level="INFO">${output} = /s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-3</msg>
<status status="PASS" starttime="20231212 10:51:59.503" endtime="20231212 10:51:59.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:51:59.532" level="INFO">/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-3</msg>
<status status="PASS" starttime="20231212 10:51:59.532" endtime="20231212 10:51:59.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:51:59.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:51:59.533" endtime="20231212 10:51:59.533"/>
</kw>
<msg timestamp="20231212 10:51:59.533" level="INFO">${eTag3} = /s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-3</msg>
<status status="PASS" starttime="20231212 10:51:59.502" endtime="20231212 10:51:59.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:51:59.534" endtime="20231212 10:51:59.534"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:51:59.537" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237 --bucket encrypted --key ozone-test-3759077097/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:00.050" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:00.050" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:51:59.535" endtime="20231212 10:52:00.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:00.051" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231212 10:52:00.051" endtime="20231212 10:52:00.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:00.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:00.052" endtime="20231212 10:52:00.052"/>
</kw>
<msg timestamp="20231212 10:52:00.052" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:51:59.535" endtime="20231212 10:52:00.052"/>
</kw>
<msg timestamp="20231212 10:52:00.053" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:51:59.534" endtime="20231212 10:52:00.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:00.053" endtime="20231212 10:52:00.053"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:00.057" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237 --bucket encrypted --key ozone-test-3759077097/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:00.551" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:00.551" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:52:00.055" endtime="20231212 10:52:00.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:00.552" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231212 10:52:00.551" endtime="20231212 10:52:00.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:00.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:00.552" endtime="20231212 10:52:00.553"/>
</kw>
<msg timestamp="20231212 10:52:00.553" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:52:00.054" endtime="20231212 10:52:00.553"/>
</kw>
<msg timestamp="20231212 10:52:00.553" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:52:00.053" endtime="20231212 10:52:00.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:00.553" endtime="20231212 10:52:00.553"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:00.557" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237 --bucket encrypted --key ozone-test-3759077097/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:01.059" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:01.059" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231212 10:52:00.555" endtime="20231212 10:52:01.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:01.060" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231212 10:52:01.060" endtime="20231212 10:52:01.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:01.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:01.061" endtime="20231212 10:52:01.061"/>
</kw>
<msg timestamp="20231212 10:52:01.061" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231212 10:52:00.554" endtime="20231212 10:52:01.061"/>
</kw>
<msg timestamp="20231212 10:52:01.061" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231212 10:52:00.554" endtime="20231212 10:52:01.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:01.062" endtime="20231212 10:52:01.062"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:01.066" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237 --bucket encrypted --key ozone-test-3759077097/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-3759077097/multipartKey3-b017ae0a-12c8-447b-9ba4-727f232f9309-111567065274712237-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:01.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:01.586" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3759077097/multipartKey3",
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\""
}</msg>
<status status="PASS" starttime="20231212 10:52:01.064" endtime="20231212 10:52:01.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:01.587" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3759077097/multipartKey3",
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\""
}</msg>
<status status="PASS" starttime="20231212 10:52:01.587" endtime="20231212 10:52:01.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:01.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:01.587" endtime="20231212 10:52:01.588"/>
</kw>
<status status="PASS" starttime="20231212 10:52:01.064" endtime="20231212 10:52:01.588"/>
</kw>
<msg timestamp="20231212 10:52:01.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:01.063" endtime="20231212 10:52:01.588"/>
</kw>
<msg timestamp="20231212 10:52:01.588" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3759077097/multipartKey3",
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\""
}</msg>
<status status="PASS" starttime="20231212 10:52:01.063" endtime="20231212 10:52:01.588"/>
</kw>
<msg timestamp="20231212 10:52:01.589" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3759077097/multipartKey3",
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\""
}</msg>
<status status="PASS" starttime="20231212 10:52:01.062" endtime="20231212 10:52:01.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:01.589" endtime="20231212 10:52:01.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:01.589" endtime="20231212 10:52:01.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:01.590" endtime="20231212 10:52:01.590"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:01.594" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-3759077097/multipartKey3 /tmp/ozone-test-3759077097-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:02.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:02.232" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 5242886,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:52:01.592" endtime="20231212 10:52:02.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:02.234" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 5242886,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:02 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:52:02.233" endtime="20231212 10:52:02.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:02.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:02.234" endtime="20231212 10:52:02.234"/>
</kw>
<status status="PASS" starttime="20231212 10:52:01.592" endtime="20231212 10:52:02.234"/>
</kw>
<msg timestamp="20231212 10:52:02.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:01.592" endtime="20231212 10:52:02.235"/>
</kw>
<msg timestamp="20231212 10:52:02.235" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 5242886,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:52:01.591" endtime="20231212 10:52:02.235"/>
</kw>
<msg timestamp="20231212 10:52:02.235" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 5242886,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:52:01.590" endtime="20231212 10:52:02.235"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:02.238" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-3759077097-multipartKey3'.</msg>
<msg timestamp="20231212 10:52:02.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:02.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:02.237" endtime="20231212 10:52:02.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:02.245" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:02.244" endtime="20231212 10:52:02.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:02.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:02.245" endtime="20231212 10:52:02.245"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.236" endtime="20231212 10:52:02.245"/>
</kw>
<msg timestamp="20231212 10:52:02.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:02.236" endtime="20231212 10:52:02.246"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.235" endtime="20231212 10:52:02.246"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:02.249" level="INFO">Running command 'md5sum /tmp/ozone-test-3759077097-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:02.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:02.260" level="INFO">${output} = ad01beff26339104f2b78e37ba9b0d0a</msg>
<status status="PASS" starttime="20231212 10:52:02.247" endtime="20231212 10:52:02.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:02.261" level="INFO">ad01beff26339104f2b78e37ba9b0d0a</msg>
<status status="PASS" starttime="20231212 10:52:02.260" endtime="20231212 10:52:02.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:02.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:02.261" endtime="20231212 10:52:02.261"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.247" endtime="20231212 10:52:02.261"/>
</kw>
<msg timestamp="20231212 10:52:02.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:02.247" endtime="20231212 10:52:02.262"/>
</kw>
<msg timestamp="20231212 10:52:02.262" level="INFO">${checksumbefore} = ad01beff26339104f2b78e37ba9b0d0a</msg>
<status status="PASS" starttime="20231212 10:52:02.246" endtime="20231212 10:52:02.262"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:02.264" level="INFO">Running command 'md5sum /tmp/ozone-test-3759077097-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:02.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:02.275" level="INFO">${output} = ad01beff26339104f2b78e37ba9b0d0a</msg>
<status status="PASS" starttime="20231212 10:52:02.263" endtime="20231212 10:52:02.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:02.276" level="INFO">ad01beff26339104f2b78e37ba9b0d0a</msg>
<status status="PASS" starttime="20231212 10:52:02.276" endtime="20231212 10:52:02.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:02.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:02.276" endtime="20231212 10:52:02.277"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.263" endtime="20231212 10:52:02.277"/>
</kw>
<msg timestamp="20231212 10:52:02.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:02.262" endtime="20231212 10:52:02.277"/>
</kw>
<msg timestamp="20231212 10:52:02.277" level="INFO">${checksumafter} = ad01beff26339104f2b78e37ba9b0d0a</msg>
<status status="PASS" starttime="20231212 10:52:02.262" endtime="20231212 10:52:02.277"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:02.277" endtime="20231212 10:52:02.278"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.246" endtime="20231212 10:52:02.278"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:02.281" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-3759077097/multipartKey3 --part-number 1 /tmp/ozone-test-3759077097-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:02.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:02.892" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 5242880,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:52:02.280" endtime="20231212 10:52:02.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:02.893" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 5242880,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:02 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:52:02.893" endtime="20231212 10:52:02.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:02.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:02.893" endtime="20231212 10:52:02.894"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.280" endtime="20231212 10:52:02.894"/>
</kw>
<msg timestamp="20231212 10:52:02.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:02.279" endtime="20231212 10:52:02.894"/>
</kw>
<msg timestamp="20231212 10:52:02.895" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 5242880,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:52:02.279" endtime="20231212 10:52:02.895"/>
</kw>
<msg timestamp="20231212 10:52:02.895" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 5242880,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:52:02.278" endtime="20231212 10:52:02.895"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:02.898" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:02.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:02.911" level="INFO">${output} = b1a8f6d7c2c8c0b02755f8947894a61f</msg>
<status status="PASS" starttime="20231212 10:52:02.897" endtime="20231212 10:52:02.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:02.912" level="INFO">b1a8f6d7c2c8c0b02755f8947894a61f</msg>
<status status="PASS" starttime="20231212 10:52:02.911" endtime="20231212 10:52:02.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:02.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:02.912" endtime="20231212 10:52:02.913"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.896" endtime="20231212 10:52:02.913"/>
</kw>
<msg timestamp="20231212 10:52:02.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:02.896" endtime="20231212 10:52:02.913"/>
</kw>
<msg timestamp="20231212 10:52:02.913" level="INFO">${checksumbefore} = b1a8f6d7c2c8c0b02755f8947894a61f</msg>
<status status="PASS" starttime="20231212 10:52:02.895" endtime="20231212 10:52:02.913"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:02.916" level="INFO">Running command 'md5sum /tmp/ozone-test-3759077097-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:02.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:02.928" level="INFO">${output} = b1a8f6d7c2c8c0b02755f8947894a61f</msg>
<status status="PASS" starttime="20231212 10:52:02.915" endtime="20231212 10:52:02.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:02.929" level="INFO">b1a8f6d7c2c8c0b02755f8947894a61f</msg>
<status status="PASS" starttime="20231212 10:52:02.928" endtime="20231212 10:52:02.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:02.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:02.929" endtime="20231212 10:52:02.930"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.914" endtime="20231212 10:52:02.930"/>
</kw>
<msg timestamp="20231212 10:52:02.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:02.914" endtime="20231212 10:52:02.930"/>
</kw>
<msg timestamp="20231212 10:52:02.930" level="INFO">${checksumafter} = b1a8f6d7c2c8c0b02755f8947894a61f</msg>
<status status="PASS" starttime="20231212 10:52:02.913" endtime="20231212 10:52:02.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:02.930" endtime="20231212 10:52:02.931"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.895" endtime="20231212 10:52:02.931"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:02.935" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-3759077097/multipartKey3 --part-number 3 /tmp/ozone-test-3759077097-multipartKey3-part3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:03.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:03.459" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 6,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:52:02.933" endtime="20231212 10:52:03.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:03.460" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 6,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:03 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:52:03.460" endtime="20231212 10:52:03.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:03.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:03.461" endtime="20231212 10:52:03.461"/>
</kw>
<status status="PASS" starttime="20231212 10:52:02.932" endtime="20231212 10:52:03.461"/>
</kw>
<msg timestamp="20231212 10:52:03.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:02.932" endtime="20231212 10:52:03.461"/>
</kw>
<msg timestamp="20231212 10:52:03.462" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 6,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:52:02.932" endtime="20231212 10:52:03.462"/>
</kw>
<msg timestamp="20231212 10:52:03.462" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:01 GMT",
    "ContentLength": 6,
    "ETag": "\"93cc11f8bfa45e7b306e7b2a80c74f5c-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:52:02.931" endtime="20231212 10:52:03.462"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part3</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:03.466" level="INFO">Running command 'md5sum /tmp/part3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:03.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:03.468" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:52:03.464" endtime="20231212 10:52:03.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:03.469" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:52:03.468" endtime="20231212 10:52:03.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:03.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:03.469" endtime="20231212 10:52:03.469"/>
</kw>
<status status="PASS" starttime="20231212 10:52:03.464" endtime="20231212 10:52:03.469"/>
</kw>
<msg timestamp="20231212 10:52:03.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:03.463" endtime="20231212 10:52:03.470"/>
</kw>
<msg timestamp="20231212 10:52:03.470" level="INFO">${checksumbefore} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:52:03.463" endtime="20231212 10:52:03.470"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:03.473" level="INFO">Running command 'md5sum /tmp/ozone-test-3759077097-multipartKey3-part3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:03.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:03.475" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:52:03.471" endtime="20231212 10:52:03.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:03.475" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:52:03.475" endtime="20231212 10:52:03.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:03.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:03.476" endtime="20231212 10:52:03.476"/>
</kw>
<status status="PASS" starttime="20231212 10:52:03.471" endtime="20231212 10:52:03.476"/>
</kw>
<msg timestamp="20231212 10:52:03.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:03.470" endtime="20231212 10:52:03.477"/>
</kw>
<msg timestamp="20231212 10:52:03.477" level="INFO">${checksumafter} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:52:03.470" endtime="20231212 10:52:03.477"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:03.477" endtime="20231212 10:52:03.477"/>
</kw>
<status status="PASS" starttime="20231212 10:52:03.462" endtime="20231212 10:52:03.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:51:54.916" endtime="20231212 10:52:03.477"/>
</test>
<test id="s1-s5-s8-t6" name="Test abort Multipart upload" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:03.480" level="INFO">${randStr} = 4269249198</msg>
<status status="PASS" starttime="20231212 10:52:03.480" endtime="20231212 10:52:03.480"/>
</kw>
<msg timestamp="20231212 10:52:03.480" level="INFO">${random} = ozone-test-4269249198</msg>
<status status="PASS" starttime="20231212 10:52:03.479" endtime="20231212 10:52:03.480"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:52:03.481" level="INFO">${PREFIX} = ozone-test-4269249198</msg>
<status status="PASS" starttime="20231212 10:52:03.480" endtime="20231212 10:52:03.481"/>
</kw>
<status status="PASS" starttime="20231212 10:52:03.479" endtime="20231212 10:52:03.481"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:03.484" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4269249198/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:03.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:03.980" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4269249198/multipartKey4",
    "UploadId": "b78ab40e-f314-4fa4-8ea4-a2d378a5e2cb-111567065836617905"
}</msg>
<status status="PASS" starttime="20231212 10:52:03.482" endtime="20231212 10:52:03.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:03.981" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4269249198/multipartKey4",
    "UploadId": "b78ab40e-f314-4fa4-8ea4-a2d378a5e2cb-111567065836617905"
}</msg>
<status status="PASS" starttime="20231212 10:52:03.980" endtime="20231212 10:52:03.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:03.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:03.981" endtime="20231212 10:52:03.982"/>
</kw>
<status status="PASS" starttime="20231212 10:52:03.482" endtime="20231212 10:52:03.982"/>
</kw>
<msg timestamp="20231212 10:52:03.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:03.482" endtime="20231212 10:52:03.982"/>
</kw>
<msg timestamp="20231212 10:52:03.982" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4269249198/multipartKey4",
    "UploadId": "b78ab40e-f314-4fa4-8ea4-a2d378a5e2cb-111567065836617905"
}</msg>
<status status="PASS" starttime="20231212 10:52:03.481" endtime="20231212 10:52:03.982"/>
</kw>
<msg timestamp="20231212 10:52:03.982" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4269249198/multipartKey4",
    "UploadId": "b78ab40e-f314-4fa4-8ea4-a2d378a5e2cb-111567065836617905"
}</msg>
<status status="PASS" starttime="20231212 10:52:03.481" endtime="20231212 10:52:03.982"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:03.985" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4269249198/multipartKey4",
    "UploadId": "b78ab40e-f314-4fa4-8ea4-a2d378a5e2cb-111567065836617905"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:04.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:04.012" level="INFO">${output} = b78ab40e-f314-4fa4-8ea4-a2d378a5e2cb-111567065836617905</msg>
<status status="PASS" starttime="20231212 10:52:03.983" endtime="20231212 10:52:04.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:04.013" level="INFO">b78ab40e-f314-4fa4-8ea4-a2d378a5e2cb-111567065836617905</msg>
<status status="PASS" starttime="20231212 10:52:04.013" endtime="20231212 10:52:04.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:04.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:04.014" endtime="20231212 10:52:04.014"/>
</kw>
<msg timestamp="20231212 10:52:04.014" level="INFO">${uploadID} = b78ab40e-f314-4fa4-8ea4-a2d378a5e2cb-111567065836617905</msg>
<status status="PASS" starttime="20231212 10:52:03.983" endtime="20231212 10:52:04.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:04.014" endtime="20231212 10:52:04.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:04.015" endtime="20231212 10:52:04.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:04.015" endtime="20231212 10:52:04.016"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:04.019" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-4269249198/multipartKey4 --upload-id b78ab40e-f314-4fa4-8ea4-a2d378a5e2cb-111567065836617905 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:04.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:04.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:04.017" endtime="20231212 10:52:04.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:04.525" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:04.524" endtime="20231212 10:52:04.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:04.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:04.525" endtime="20231212 10:52:04.525"/>
</kw>
<msg timestamp="20231212 10:52:04.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:04.017" endtime="20231212 10:52:04.526"/>
</kw>
<msg timestamp="20231212 10:52:04.526" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:52:04.016" endtime="20231212 10:52:04.526"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:03.478" endtime="20231212 10:52:04.526"/>
</test>
<test id="s1-s5-s8-t7" name="Test abort Multipart upload with invalid uploadId" line="207">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:04.528" level="INFO">${randStr} = 0446902604</msg>
<status status="PASS" starttime="20231212 10:52:04.528" endtime="20231212 10:52:04.528"/>
</kw>
<msg timestamp="20231212 10:52:04.529" level="INFO">${random} = ozone-test-0446902604</msg>
<status status="PASS" starttime="20231212 10:52:04.528" endtime="20231212 10:52:04.529"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:52:04.529" level="INFO">${PREFIX} = ozone-test-0446902604</msg>
<status status="PASS" starttime="20231212 10:52:04.529" endtime="20231212 10:52:04.529"/>
</kw>
<status status="PASS" starttime="20231212 10:52:04.527" endtime="20231212 10:52:04.529"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:04.532" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-0446902604/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:05.036" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:05.036" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231212 10:52:04.530" endtime="20231212 10:52:05.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:05.037" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20231212 10:52:05.036" endtime="20231212 10:52:05.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:05.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:05.037" endtime="20231212 10:52:05.037"/>
</kw>
<msg timestamp="20231212 10:52:05.038" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231212 10:52:04.530" endtime="20231212 10:52:05.038"/>
</kw>
<msg timestamp="20231212 10:52:05.038" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231212 10:52:04.529" endtime="20231212 10:52:05.038"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:04.527" endtime="20231212 10:52:05.038"/>
</test>
<test id="s1-s5-s8-t8" name="Upload part with Incorrect uploadID" line="210">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:05.040" level="INFO">${randStr} = 8734727942</msg>
<status status="PASS" starttime="20231212 10:52:05.040" endtime="20231212 10:52:05.040"/>
</kw>
<msg timestamp="20231212 10:52:05.041" level="INFO">${random} = ozone-test-8734727942</msg>
<status status="PASS" starttime="20231212 10:52:05.040" endtime="20231212 10:52:05.041"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:52:05.041" level="INFO">${PREFIX} = ozone-test-8734727942</msg>
<status status="PASS" starttime="20231212 10:52:05.041" endtime="20231212 10:52:05.041"/>
</kw>
<status status="PASS" starttime="20231212 10:52:05.039" endtime="20231212 10:52:05.041"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:05.045" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-8734727942/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:05.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:05.543" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8734727942/multipartKey",
    "UploadId": "518b3974-7f31-468e-94e8-2dc12e031a4f-111567065939181746"
}</msg>
<status status="PASS" starttime="20231212 10:52:05.043" endtime="20231212 10:52:05.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:05.544" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-8734727942/multipartKey",
    "UploadId": "518b3974-7f31-468e-94e8-2dc12e031a4f-111567065939181746"
}</msg>
<status status="PASS" starttime="20231212 10:52:05.543" endtime="20231212 10:52:05.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:05.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:05.544" endtime="20231212 10:52:05.544"/>
</kw>
<status status="PASS" starttime="20231212 10:52:05.043" endtime="20231212 10:52:05.545"/>
</kw>
<msg timestamp="20231212 10:52:05.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:05.042" endtime="20231212 10:52:05.545"/>
</kw>
<msg timestamp="20231212 10:52:05.545" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8734727942/multipartKey",
    "UploadId": "518b3974-7f31-468e-94e8-2dc12e031a4f-111567065939181746"
}</msg>
<status status="PASS" starttime="20231212 10:52:05.042" endtime="20231212 10:52:05.545"/>
</kw>
<msg timestamp="20231212 10:52:05.545" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8734727942/multipartKey",
    "UploadId": "518b3974-7f31-468e-94e8-2dc12e031a4f-111567065939181746"
}</msg>
<status status="PASS" starttime="20231212 10:52:05.041" endtime="20231212 10:52:05.545"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:05.548" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:52:05.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:05.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:05.546" endtime="20231212 10:52:05.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:05.551" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:05.550" endtime="20231212 10:52:05.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:05.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:05.551" endtime="20231212 10:52:05.552"/>
</kw>
<status status="PASS" starttime="20231212 10:52:05.546" endtime="20231212 10:52:05.552"/>
</kw>
<msg timestamp="20231212 10:52:05.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:05.546" endtime="20231212 10:52:05.552"/>
</kw>
<status status="PASS" starttime="20231212 10:52:05.545" endtime="20231212 10:52:05.552"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:05.555" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-8734727942/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:06.059" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:06.059" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231212 10:52:05.553" endtime="20231212 10:52:06.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:06.061" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20231212 10:52:06.060" endtime="20231212 10:52:06.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:06.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:06.061" endtime="20231212 10:52:06.061"/>
</kw>
<msg timestamp="20231212 10:52:06.062" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231212 10:52:05.553" endtime="20231212 10:52:06.062"/>
</kw>
<msg timestamp="20231212 10:52:06.062" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231212 10:52:05.552" endtime="20231212 10:52:06.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:06.062" endtime="20231212 10:52:06.062"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:05.039" endtime="20231212 10:52:06.063"/>
</test>
<test id="s1-s5-s8-t9" name="Test list parts" line="216">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:06.066" level="INFO">${randStr} = 2985049914</msg>
<status status="PASS" starttime="20231212 10:52:06.065" endtime="20231212 10:52:06.066"/>
</kw>
<msg timestamp="20231212 10:52:06.066" level="INFO">${random} = ozone-test-2985049914</msg>
<status status="PASS" starttime="20231212 10:52:06.065" endtime="20231212 10:52:06.066"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:52:06.066" level="INFO">${PREFIX} = ozone-test-2985049914</msg>
<status status="PASS" starttime="20231212 10:52:06.066" endtime="20231212 10:52:06.066"/>
</kw>
<status status="PASS" starttime="20231212 10:52:06.064" endtime="20231212 10:52:06.067"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:06.070" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2985049914/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:06.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:06.589" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2985049914/multipartKey5",
    "UploadId": "a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044"
}</msg>
<status status="PASS" starttime="20231212 10:52:06.068" endtime="20231212 10:52:06.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:06.590" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2985049914/multipartKey5",
    "UploadId": "a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044"
}</msg>
<status status="PASS" starttime="20231212 10:52:06.590" endtime="20231212 10:52:06.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:06.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:06.590" endtime="20231212 10:52:06.591"/>
</kw>
<status status="PASS" starttime="20231212 10:52:06.068" endtime="20231212 10:52:06.591"/>
</kw>
<msg timestamp="20231212 10:52:06.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:06.068" endtime="20231212 10:52:06.591"/>
</kw>
<msg timestamp="20231212 10:52:06.591" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2985049914/multipartKey5",
    "UploadId": "a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044"
}</msg>
<status status="PASS" starttime="20231212 10:52:06.067" endtime="20231212 10:52:06.592"/>
</kw>
<msg timestamp="20231212 10:52:06.592" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2985049914/multipartKey5",
    "UploadId": "a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044"
}</msg>
<status status="PASS" starttime="20231212 10:52:06.067" endtime="20231212 10:52:06.592"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:06.594" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2985049914/multipartKey5",
    "UploadId": "a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:06.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:06.621" level="INFO">${output} = a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044</msg>
<status status="PASS" starttime="20231212 10:52:06.592" endtime="20231212 10:52:06.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:06.622" level="INFO">a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044</msg>
<status status="PASS" starttime="20231212 10:52:06.622" endtime="20231212 10:52:06.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:06.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:06.623" endtime="20231212 10:52:06.623"/>
</kw>
<msg timestamp="20231212 10:52:06.623" level="INFO">${uploadID} = a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044</msg>
<status status="PASS" starttime="20231212 10:52:06.592" endtime="20231212 10:52:06.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:06.623" endtime="20231212 10:52:06.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:06.624" endtime="20231212 10:52:06.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:06.624" endtime="20231212 10:52:06.625"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:06.630" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:06.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:06.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:06.628" endtime="20231212 10:52:06.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:06.651" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:06.650" endtime="20231212 10:52:06.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:06.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:06.651" endtime="20231212 10:52:06.652"/>
</kw>
<status status="PASS" starttime="20231212 10:52:06.626" endtime="20231212 10:52:06.652"/>
</kw>
<msg timestamp="20231212 10:52:06.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:06.626" endtime="20231212 10:52:06.652"/>
</kw>
<status status="PASS" starttime="20231212 10:52:06.626" endtime="20231212 10:52:06.652"/>
</kw>
<status status="PASS" starttime="20231212 10:52:06.625" endtime="20231212 10:52:06.652"/>
</kw>
<status status="PASS" starttime="20231212 10:52:06.625" endtime="20231212 10:52:06.652"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:06.656" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2985049914/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:07.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:07.811" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1"
}</msg>
<status status="PASS" starttime="20231212 10:52:06.654" endtime="20231212 10:52:07.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:07.812" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1"
}</msg>
<status status="PASS" starttime="20231212 10:52:07.811" endtime="20231212 10:52:07.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:07.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:07.812" endtime="20231212 10:52:07.812"/>
</kw>
<status status="PASS" starttime="20231212 10:52:06.654" endtime="20231212 10:52:07.812"/>
</kw>
<msg timestamp="20231212 10:52:07.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:06.653" endtime="20231212 10:52:07.813"/>
</kw>
<msg timestamp="20231212 10:52:07.813" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1"
}</msg>
<status status="PASS" starttime="20231212 10:52:06.653" endtime="20231212 10:52:07.813"/>
</kw>
<msg timestamp="20231212 10:52:07.813" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1"
}</msg>
<status status="PASS" starttime="20231212 10:52:06.652" endtime="20231212 10:52:07.813"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:07.815" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:07.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:07.842" level="INFO">${output} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1</msg>
<status status="PASS" starttime="20231212 10:52:07.814" endtime="20231212 10:52:07.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:07.843" level="INFO">/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1</msg>
<status status="PASS" starttime="20231212 10:52:07.843" endtime="20231212 10:52:07.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:07.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:07.844" endtime="20231212 10:52:07.844"/>
</kw>
<msg timestamp="20231212 10:52:07.844" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1</msg>
<status status="PASS" starttime="20231212 10:52:07.813" endtime="20231212 10:52:07.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:07.844" endtime="20231212 10:52:07.845"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:07.848" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231212 10:52:07.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:07.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:07.846" endtime="20231212 10:52:07.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:07.850" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:07.850" endtime="20231212 10:52:07.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:07.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:07.850" endtime="20231212 10:52:07.851"/>
</kw>
<status status="PASS" starttime="20231212 10:52:07.846" endtime="20231212 10:52:07.851"/>
</kw>
<msg timestamp="20231212 10:52:07.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:07.845" endtime="20231212 10:52:07.851"/>
</kw>
<status status="PASS" starttime="20231212 10:52:07.845" endtime="20231212 10:52:07.851"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:07.854" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2985049914/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:08.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:08.427" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2"
}</msg>
<status status="PASS" starttime="20231212 10:52:07.853" endtime="20231212 10:52:08.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:08.428" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2"
}</msg>
<status status="PASS" starttime="20231212 10:52:08.428" endtime="20231212 10:52:08.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:08.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:08.429" endtime="20231212 10:52:08.429"/>
</kw>
<status status="PASS" starttime="20231212 10:52:07.853" endtime="20231212 10:52:08.429"/>
</kw>
<msg timestamp="20231212 10:52:08.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:07.852" endtime="20231212 10:52:08.429"/>
</kw>
<msg timestamp="20231212 10:52:08.430" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2"
}</msg>
<status status="PASS" starttime="20231212 10:52:07.852" endtime="20231212 10:52:08.430"/>
</kw>
<msg timestamp="20231212 10:52:08.430" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2"
}</msg>
<status status="PASS" starttime="20231212 10:52:07.851" endtime="20231212 10:52:08.430"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:08.433" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:08.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:08.461" level="INFO">${output} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2</msg>
<status status="PASS" starttime="20231212 10:52:08.431" endtime="20231212 10:52:08.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:08.462" level="INFO">/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2</msg>
<status status="PASS" starttime="20231212 10:52:08.461" endtime="20231212 10:52:08.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:08.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:08.462" endtime="20231212 10:52:08.462"/>
</kw>
<msg timestamp="20231212 10:52:08.463" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2</msg>
<status status="PASS" starttime="20231212 10:52:08.430" endtime="20231212 10:52:08.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:08.463" endtime="20231212 10:52:08.463"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:08.467" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-2985049914/multipartKey5 --upload-id a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:08.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:08.987" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4f...</msg>
<status status="PASS" starttime="20231212 10:52:08.465" endtime="20231212 10:52:08.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:08.988" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:52:08.356Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20231212 10:52:08.988" endtime="20231212 10:52:08.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:08.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:08.989" endtime="20231212 10:52:08.989"/>
</kw>
<status status="PASS" starttime="20231212 10:52:08.465" endtime="20231212 10:52:08.989"/>
</kw>
<msg timestamp="20231212 10:52:08.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:08.465" endtime="20231212 10:52:08.989"/>
</kw>
<msg timestamp="20231212 10:52:08.990" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4f...</msg>
<status status="PASS" starttime="20231212 10:52:08.464" endtime="20231212 10:52:08.990"/>
</kw>
<msg timestamp="20231212 10:52:08.990" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4f...</msg>
<status status="PASS" starttime="20231212 10:52:08.463" endtime="20231212 10:52:08.990"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:08.993" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:52:08.356Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:09.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:09.020" level="INFO">${output} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1</msg>
<status status="PASS" starttime="20231212 10:52:08.991" endtime="20231212 10:52:09.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:09.021" level="INFO">/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1</msg>
<status status="PASS" starttime="20231212 10:52:09.021" endtime="20231212 10:52:09.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:09.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:09.022" endtime="20231212 10:52:09.022"/>
</kw>
<msg timestamp="20231212 10:52:09.022" level="INFO">${part1} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1</msg>
<status status="PASS" starttime="20231212 10:52:08.990" endtime="20231212 10:52:09.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:09.025" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:52:08.356Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:09.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:09.053" level="INFO">${output} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2</msg>
<status status="PASS" starttime="20231212 10:52:09.023" endtime="20231212 10:52:09.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:09.054" level="INFO">/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2</msg>
<status status="PASS" starttime="20231212 10:52:09.054" endtime="20231212 10:52:09.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:09.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:09.055" endtime="20231212 10:52:09.055"/>
</kw>
<msg timestamp="20231212 10:52:09.055" level="INFO">${part2} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2</msg>
<status status="PASS" starttime="20231212 10:52:09.023" endtime="20231212 10:52:09.055"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:09.056" endtime="20231212 10:52:09.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:09.056" endtime="20231212 10:52:09.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:09.057" endtime="20231212 10:52:09.057"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:09.061" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-2985049914/multipartKey5 --upload-id a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:09.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:09.568" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4f...</msg>
<status status="PASS" starttime="20231212 10:52:09.059" endtime="20231212 10:52:09.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:09.569" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20231212 10:52:09.569" endtime="20231212 10:52:09.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:09.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:09.569" endtime="20231212 10:52:09.570"/>
</kw>
<status status="PASS" starttime="20231212 10:52:09.058" endtime="20231212 10:52:09.570"/>
</kw>
<msg timestamp="20231212 10:52:09.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:09.058" endtime="20231212 10:52:09.570"/>
</kw>
<msg timestamp="20231212 10:52:09.570" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4f...</msg>
<status status="PASS" starttime="20231212 10:52:09.058" endtime="20231212 10:52:09.571"/>
</kw>
<msg timestamp="20231212 10:52:09.571" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4f...</msg>
<status status="PASS" starttime="20231212 10:52:09.057" endtime="20231212 10:52:09.571"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:09.573" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:09.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:09.601" level="INFO">${output} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1</msg>
<status status="PASS" starttime="20231212 10:52:09.571" endtime="20231212 10:52:09.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:09.603" level="INFO">/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1</msg>
<status status="PASS" starttime="20231212 10:52:09.602" endtime="20231212 10:52:09.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:09.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:09.603" endtime="20231212 10:52:09.603"/>
</kw>
<msg timestamp="20231212 10:52:09.603" level="INFO">${part1} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1</msg>
<status status="PASS" starttime="20231212 10:52:09.571" endtime="20231212 10:52:09.603"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:09.606" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:52:07.748Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:09.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:09.634" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231212 10:52:09.604" endtime="20231212 10:52:09.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:09.635" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231212 10:52:09.634" endtime="20231212 10:52:09.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:09.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:09.635" endtime="20231212 10:52:09.636"/>
</kw>
<msg timestamp="20231212 10:52:09.636" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231212 10:52:09.604" endtime="20231212 10:52:09.636"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:09.636" endtime="20231212 10:52:09.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:09.636" endtime="20231212 10:52:09.637"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:09.641" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-2985049914/multipartKey5 --upload-id a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:10.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:10.146" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:52:08.356Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4f...</msg>
<status status="PASS" starttime="20231212 10:52:09.639" endtime="20231212 10:52:10.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:10.147" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:52:08.356Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20231212 10:52:10.147" endtime="20231212 10:52:10.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:10.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:10.148" endtime="20231212 10:52:10.148"/>
</kw>
<status status="PASS" starttime="20231212 10:52:09.638" endtime="20231212 10:52:10.148"/>
</kw>
<msg timestamp="20231212 10:52:10.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:09.638" endtime="20231212 10:52:10.148"/>
</kw>
<msg timestamp="20231212 10:52:10.149" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:52:08.356Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4f...</msg>
<status status="PASS" starttime="20231212 10:52:09.637" endtime="20231212 10:52:10.149"/>
</kw>
<msg timestamp="20231212 10:52:10.149" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:52:08.356Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4f...</msg>
<status status="PASS" starttime="20231212 10:52:09.637" endtime="20231212 10:52:10.149"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:10.151" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:52:08.356Z",
            "ETag": "/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:10.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:10.178" level="INFO">${output} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2</msg>
<status status="PASS" starttime="20231212 10:52:10.149" endtime="20231212 10:52:10.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:10.179" level="INFO">/s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2</msg>
<status status="PASS" starttime="20231212 10:52:10.179" endtime="20231212 10:52:10.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:10.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:10.179" endtime="20231212 10:52:10.180"/>
</kw>
<msg timestamp="20231212 10:52:10.180" level="INFO">${part2} = /s3v/encrypted/ozone-test-2985049914/multipartKey5-a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044-2</msg>
<status status="PASS" starttime="20231212 10:52:10.149" endtime="20231212 10:52:10.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:10.180" endtime="20231212 10:52:10.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:10.181" endtime="20231212 10:52:10.181"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:10.184" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2985049914/multipartKey5 --upload-id a7c28028-bbbc-4fb1-9dd0-9caa25989703-111567066007077044 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:10.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:10.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:10.182" endtime="20231212 10:52:10.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:10.677" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:10.677" endtime="20231212 10:52:10.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:10.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:10.677" endtime="20231212 10:52:10.678"/>
</kw>
<msg timestamp="20231212 10:52:10.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:10.182" endtime="20231212 10:52:10.678"/>
</kw>
<msg timestamp="20231212 10:52:10.678" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:52:10.181" endtime="20231212 10:52:10.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:06.064" endtime="20231212 10:52:10.679"/>
</test>
<test id="s1-s5-s8-t10" name="Test Multipart Upload with the simplified aws s3 cp API" line="258">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:10.681" level="INFO">${randStr} = 1727957037</msg>
<status status="PASS" starttime="20231212 10:52:10.680" endtime="20231212 10:52:10.681"/>
</kw>
<msg timestamp="20231212 10:52:10.681" level="INFO">${random} = ozone-test-1727957037</msg>
<status status="PASS" starttime="20231212 10:52:10.680" endtime="20231212 10:52:10.681"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:52:10.682" level="INFO">${PREFIX} = ozone-test-1727957037</msg>
<status status="PASS" starttime="20231212 10:52:10.681" endtime="20231212 10:52:10.682"/>
</kw>
<status status="PASS" starttime="20231212 10:52:10.680" endtime="20231212 10:52:10.682"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:10.685" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:10.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:10.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:10.683" endtime="20231212 10:52:10.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:10.760" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:10.759" endtime="20231212 10:52:10.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:10.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:10.760" endtime="20231212 10:52:10.761"/>
</kw>
<status status="PASS" starttime="20231212 10:52:10.683" endtime="20231212 10:52:10.761"/>
</kw>
<msg timestamp="20231212 10:52:10.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:10.683" endtime="20231212 10:52:10.761"/>
</kw>
<status status="PASS" starttime="20231212 10:52:10.682" endtime="20231212 10:52:10.761"/>
</kw>
<status status="PASS" starttime="20231212 10:52:10.682" endtime="20231212 10:52:10.761"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:10.765" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:16.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:16.254" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (10.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (15.1 MiB/s) with 1 file(s) remaining
...</msg>
<status status="PASS" starttime="20231212 10:52:10.763" endtime="20231212 10:52:16.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:16.255" level="INFO">Completed 256.0 KiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (10.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (15.1 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (19.9 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (24.6 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (29.2 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (30.9 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (29.4 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (33.0 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (33.8 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (36.9 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (39.9 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (42.9 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (45.7 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (48.2 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (50.9 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (53.0 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (55.7 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (53.3 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (57.0 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (59.2 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (56.7 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (58.5 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (60.5 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (62.5 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (62.4 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (62.1 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (64.0 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (65.9 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (33.3 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (27.5 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (27.9 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (25.0 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (20.3 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (18.3 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (18.5 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (15.1 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (15.4 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (15.4 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (13.3 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (13.5 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (13.4 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (11.7 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (11.9 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (12.2 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (11.4 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (11.2 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (10.9 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (10.8 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (10.4 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (10.5 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (9.7 MiB/s) with 1 file(s) remaining  
Completed 14.0 MiB/22.0 MiB (9.7 MiB/s) with 1 file(s) remaining  
Completed 14.2 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining  
Completed 14.5 MiB/22.0 MiB (9.3 MiB/s) with 1 file(s) remaining  
Completed 14.8 MiB/22.0 MiB (9.5 MiB/s) with 1 file(s) remaining  
Completed 15.0 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining  
Completed 15.2 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining  
Completed 15.5 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining  
Completed 15.8 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 16.0 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining  
Completed 16.2 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 16.5 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 16.8 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining  
Completed 17.0 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 17.2 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining  
Completed 17.5 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining  
Completed 17.8 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining  
Completed 18.0 MiB/22.0 MiB (7.9 MiB/s) with 1 file(s) remaining  
Completed 18.2 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining  
Completed 18.5 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining  
Completed 18.8 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining  
Completed 19.0 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining  
Completed 19.2 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining  
Completed 19.5 MiB/22.0 MiB (7.3 MiB/s) with 1 file(s) remaining  
Completed 19.8 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining  
Completed 20.0 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining  
Completed 20.2 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining  
Completed 20.5 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining  
Completed 20.8 MiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining  
Completed 21.0 MiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining  
Completed 21.2 MiB/22.0 MiB (6.4 MiB/s) with 1 file(s) remaining  
Completed 21.5 MiB/22.0 MiB (6.4 MiB/s) with 1 file(s) remaining  
Completed 21.8 MiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining  
Completed 22.0 MiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining  
upload: ../../tmp/part1 to s3://encrypted/mpyawscli               </msg>
<status status="PASS" starttime="20231212 10:52:16.254" endtime="20231212 10:52:16.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:16.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:16.255" endtime="20231212 10:52:16.255"/>
</kw>
<status status="PASS" starttime="20231212 10:52:10.763" endtime="20231212 10:52:16.256"/>
</kw>
<msg timestamp="20231212 10:52:16.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:10.762" endtime="20231212 10:52:16.256"/>
</kw>
<msg timestamp="20231212 10:52:16.256" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (10.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (15.1 MiB/s) with 1 file(s) remaining
...</msg>
<status status="PASS" starttime="20231212 10:52:10.762" endtime="20231212 10:52:16.256"/>
</kw>
<status status="PASS" starttime="20231212 10:52:10.761" endtime="20231212 10:52:16.256"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:16.259" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://encrypted/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:17.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:17.304" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20231212 10:52:16.258" endtime="20231212 10:52:17.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:17.306" level="INFO">Completed 256.0 KiB/22.0 MiB (2.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (7.3 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (10.6 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (12.3 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (14.0 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (15.6 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (17.3 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (17.2 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (20.0 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (20.1 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (21.5 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (20.6 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (21.4 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (22.5 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (23.5 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (24.2 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (25.2 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (25.7 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (26.9 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (27.9 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (28.6 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (28.7 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (28.6 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (29.5 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (30.0 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (30.3 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (31.0 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (31.9 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (32.9 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (33.7 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (33.1 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (32.8 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (33.5 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (34.4 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (35.1 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (34.3 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (34.6 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (36.0 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (36.7 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (37.5 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (38.0 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (33.8 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (34.5 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (35.9 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (36.1 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (36.5 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (35.6 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (36.0 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (36.7 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (37.3 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (38.0 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (38.6 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (39.2 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (39.8 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (39.7 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (38.2 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (38.7 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (38.4 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (38.8 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (39.7 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (40.0 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (40.6 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (41.0 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (40.1 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (39.6 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (40.1 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (40.0 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (40.2 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (40.6 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (40.7 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (40.2 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (40.5 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (40.1 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (39.2 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (39.6 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (39.7 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (39.8 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (40.1 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (40.3 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (40.0 MiB/s) with 1 file(s) remaining
download: s3://encrypted/mpyawscli to ../../tmp/part1.result     </msg>
<status status="PASS" starttime="20231212 10:52:17.305" endtime="20231212 10:52:17.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:17.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:17.306" endtime="20231212 10:52:17.306"/>
</kw>
<status status="PASS" starttime="20231212 10:52:16.257" endtime="20231212 10:52:17.307"/>
</kw>
<msg timestamp="20231212 10:52:17.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:16.257" endtime="20231212 10:52:17.307"/>
</kw>
<msg timestamp="20231212 10:52:17.307" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20231212 10:52:16.257" endtime="20231212 10:52:17.307"/>
</kw>
<status status="PASS" starttime="20231212 10:52:16.256" endtime="20231212 10:52:17.307"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:17.311" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:17.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:17.813" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20231212 10:52:17.309" endtime="20231212 10:52:17.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:17.814" level="INFO">delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20231212 10:52:17.813" endtime="20231212 10:52:17.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:17.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:17.814" endtime="20231212 10:52:17.814"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.309" endtime="20231212 10:52:17.814"/>
</kw>
<msg timestamp="20231212 10:52:17.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:17.308" endtime="20231212 10:52:17.815"/>
</kw>
<msg timestamp="20231212 10:52:17.815" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20231212 10:52:17.308" endtime="20231212 10:52:17.815"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.307" endtime="20231212 10:52:17.815"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:17.818" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:17.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:17.860" level="INFO">${output} = 91644c914a39a0ab30226544b52daa80</msg>
<status status="PASS" starttime="20231212 10:52:17.817" endtime="20231212 10:52:17.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:17.861" level="INFO">91644c914a39a0ab30226544b52daa80</msg>
<status status="PASS" starttime="20231212 10:52:17.860" endtime="20231212 10:52:17.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:17.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:17.861" endtime="20231212 10:52:17.861"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.816" endtime="20231212 10:52:17.862"/>
</kw>
<msg timestamp="20231212 10:52:17.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:17.816" endtime="20231212 10:52:17.862"/>
</kw>
<msg timestamp="20231212 10:52:17.862" level="INFO">${checksumbefore} = 91644c914a39a0ab30226544b52daa80</msg>
<status status="PASS" starttime="20231212 10:52:17.815" endtime="20231212 10:52:17.862"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:17.865" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:17.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:17.906" level="INFO">${output} = 91644c914a39a0ab30226544b52daa80</msg>
<status status="PASS" starttime="20231212 10:52:17.863" endtime="20231212 10:52:17.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:17.907" level="INFO">91644c914a39a0ab30226544b52daa80</msg>
<status status="PASS" starttime="20231212 10:52:17.906" endtime="20231212 10:52:17.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:17.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:17.907" endtime="20231212 10:52:17.908"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.863" endtime="20231212 10:52:17.908"/>
</kw>
<msg timestamp="20231212 10:52:17.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:17.863" endtime="20231212 10:52:17.908"/>
</kw>
<msg timestamp="20231212 10:52:17.908" level="INFO">${checksumafter} = 91644c914a39a0ab30226544b52daa80</msg>
<status status="PASS" starttime="20231212 10:52:17.862" endtime="20231212 10:52:17.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:17.908" endtime="20231212 10:52:17.909"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.815" endtime="20231212 10:52:17.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:10.679" endtime="20231212 10:52:17.909"/>
</test>
<test id="s1-s5-s8-t11" name="Test Multipart Upload Put With Copy" line="265">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:17.911" level="INFO">${randStr} = 4639215160</msg>
<status status="PASS" starttime="20231212 10:52:17.911" endtime="20231212 10:52:17.911"/>
</kw>
<msg timestamp="20231212 10:52:17.911" level="INFO">${random} = ozone-test-4639215160</msg>
<status status="PASS" starttime="20231212 10:52:17.911" endtime="20231212 10:52:17.912"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:52:17.912" level="INFO">${PREFIX} = ozone-test-4639215160</msg>
<status status="PASS" starttime="20231212 10:52:17.912" endtime="20231212 10:52:17.912"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.910" endtime="20231212 10:52:17.912"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:17.916" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:17.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:17.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:17.914" endtime="20231212 10:52:17.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:17.938" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:17.938" endtime="20231212 10:52:17.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:17.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:17.938" endtime="20231212 10:52:17.939"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.914" endtime="20231212 10:52:17.939"/>
</kw>
<msg timestamp="20231212 10:52:17.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:17.913" endtime="20231212 10:52:17.939"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.913" endtime="20231212 10:52:17.939"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.913" endtime="20231212 10:52:17.940"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.912" endtime="20231212 10:52:17.940"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:17.944" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-4639215160/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:19.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:19.095" level="INFO">${output} = {
    "ETag": "\"55657d727a1f74cb497f646095bba721\""
}</msg>
<status status="PASS" starttime="20231212 10:52:17.942" endtime="20231212 10:52:19.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:19.096" level="INFO">{
    "ETag": "\"55657d727a1f74cb497f646095bba721\""
}</msg>
<status status="PASS" starttime="20231212 10:52:19.095" endtime="20231212 10:52:19.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:19.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:19.096" endtime="20231212 10:52:19.097"/>
</kw>
<status status="PASS" starttime="20231212 10:52:17.941" endtime="20231212 10:52:19.097"/>
</kw>
<msg timestamp="20231212 10:52:19.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:17.941" endtime="20231212 10:52:19.097"/>
</kw>
<msg timestamp="20231212 10:52:19.097" level="INFO">${output} = {
    "ETag": "\"55657d727a1f74cb497f646095bba721\""
}</msg>
<status status="PASS" starttime="20231212 10:52:17.940" endtime="20231212 10:52:19.097"/>
</kw>
<msg timestamp="20231212 10:52:19.097" level="INFO">${result} = {
    "ETag": "\"55657d727a1f74cb497f646095bba721\""
}</msg>
<status status="PASS" starttime="20231212 10:52:17.940" endtime="20231212 10:52:19.098"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:19.101" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4639215160/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:19.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:19.602" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4639215160/copytest/destination",
    "UploadId": "1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452"
}</msg>
<status status="PASS" starttime="20231212 10:52:19.099" endtime="20231212 10:52:19.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:19.603" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4639215160/copytest/destination",
    "UploadId": "1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452"
}</msg>
<status status="PASS" starttime="20231212 10:52:19.603" endtime="20231212 10:52:19.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:19.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:19.604" endtime="20231212 10:52:19.604"/>
</kw>
<status status="PASS" starttime="20231212 10:52:19.099" endtime="20231212 10:52:19.604"/>
</kw>
<msg timestamp="20231212 10:52:19.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:19.099" endtime="20231212 10:52:19.605"/>
</kw>
<msg timestamp="20231212 10:52:19.605" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4639215160/copytest/destination",
    "UploadId": "1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452"
}</msg>
<status status="PASS" starttime="20231212 10:52:19.098" endtime="20231212 10:52:19.605"/>
</kw>
<msg timestamp="20231212 10:52:19.605" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4639215160/copytest/destination",
    "UploadId": "1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452"
}</msg>
<status status="PASS" starttime="20231212 10:52:19.098" endtime="20231212 10:52:19.605"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:19.608" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4639215160/copytest/destination",
    "UploadId": "1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:19.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:19.637" level="INFO">${output} = 1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452</msg>
<status status="PASS" starttime="20231212 10:52:19.606" endtime="20231212 10:52:19.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:19.638" level="INFO">1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452</msg>
<status status="PASS" starttime="20231212 10:52:19.637" endtime="20231212 10:52:19.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:19.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:19.638" endtime="20231212 10:52:19.639"/>
</kw>
<msg timestamp="20231212 10:52:19.639" level="INFO">${uploadID} = 1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452</msg>
<status status="PASS" starttime="20231212 10:52:19.605" endtime="20231212 10:52:19.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:19.639" endtime="20231212 10:52:19.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:19.640" endtime="20231212 10:52:19.640"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:19.644" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-4639215160/copytest/destination --upload-id 1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452 --part-number 1 --copy-source encrypted/ozone-test-4639215160/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:20.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:20.350" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4639215160/copytest/destination-1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452-1",
        "LastModified": "2023-12-12T10:...</msg>
<status status="PASS" starttime="20231212 10:52:19.642" endtime="20231212 10:52:20.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:20.352" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4639215160/copytest/destination-1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452-1",
        "LastModified": "2023-12-12T10:52:20.294Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:20.351" endtime="20231212 10:52:20.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:20.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:20.352" endtime="20231212 10:52:20.352"/>
</kw>
<status status="PASS" starttime="20231212 10:52:19.642" endtime="20231212 10:52:20.353"/>
</kw>
<msg timestamp="20231212 10:52:20.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:19.641" endtime="20231212 10:52:20.353"/>
</kw>
<msg timestamp="20231212 10:52:20.353" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4639215160/copytest/destination-1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452-1",
        "LastModified": "2023-12-12T10:...</msg>
<status status="PASS" starttime="20231212 10:52:19.641" endtime="20231212 10:52:20.353"/>
</kw>
<msg timestamp="20231212 10:52:20.353" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4639215160/copytest/destination-1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452-1",
        "LastModified": "2023-12-12T10:...</msg>
<status status="PASS" starttime="20231212 10:52:19.640" endtime="20231212 10:52:20.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:20.353" endtime="20231212 10:52:20.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:20.354" endtime="20231212 10:52:20.354"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:20.357" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4639215160/copytest/destination-1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452-1",
        "LastModified": "2023-12-12T10:52:20.294Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:20.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:20.385" level="INFO">${output} = /s3v/encrypted/ozone-test-4639215160/copytest/destination-1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452-1</msg>
<status status="PASS" starttime="20231212 10:52:20.355" endtime="20231212 10:52:20.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:20.386" level="INFO">/s3v/encrypted/ozone-test-4639215160/copytest/destination-1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452-1</msg>
<status status="PASS" starttime="20231212 10:52:20.386" endtime="20231212 10:52:20.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:20.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:20.387" endtime="20231212 10:52:20.387"/>
</kw>
<msg timestamp="20231212 10:52:20.388" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-4639215160/copytest/destination-1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452-1</msg>
<status status="PASS" starttime="20231212 10:52:20.355" endtime="20231212 10:52:20.388"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:20.392" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452 --bucket encrypted --key ozone-test-4639215160/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-4639215160/copytest/destination-1fb54c96-11b2-4ad4-a9b6-671002ac5bf6-111567066860683452-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:20.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:20.956" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4639215160/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231212 10:52:20.390" endtime="20231212 10:52:20.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:20.957" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4639215160/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231212 10:52:20.956" endtime="20231212 10:52:20.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:20.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:20.957" endtime="20231212 10:52:20.958"/>
</kw>
<status status="PASS" starttime="20231212 10:52:20.389" endtime="20231212 10:52:20.958"/>
</kw>
<msg timestamp="20231212 10:52:20.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:20.389" endtime="20231212 10:52:20.958"/>
</kw>
<msg timestamp="20231212 10:52:20.959" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4639215160/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231212 10:52:20.389" endtime="20231212 10:52:20.959"/>
</kw>
<status status="PASS" starttime="20231212 10:52:20.388" endtime="20231212 10:52:20.959"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:20.963" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4639215160/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:21.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:21.560" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:20 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:52:20.961" endtime="20231212 10:52:21.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:21.562" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:20 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:52:21.561" endtime="20231212 10:52:21.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:21.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:21.562" endtime="20231212 10:52:21.563"/>
</kw>
<status status="PASS" starttime="20231212 10:52:20.961" endtime="20231212 10:52:21.563"/>
</kw>
<msg timestamp="20231212 10:52:21.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:20.960" endtime="20231212 10:52:21.563"/>
</kw>
<msg timestamp="20231212 10:52:21.564" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:20 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:52:20.960" endtime="20231212 10:52:21.564"/>
</kw>
<status status="PASS" starttime="20231212 10:52:20.959" endtime="20231212 10:52:21.564"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:21.569" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:21.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:21.581" level="INFO">${output} = 55657d727a1f74cb497f646095bba721</msg>
<status status="PASS" starttime="20231212 10:52:21.566" endtime="20231212 10:52:21.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:21.582" level="INFO">55657d727a1f74cb497f646095bba721</msg>
<status status="PASS" starttime="20231212 10:52:21.582" endtime="20231212 10:52:21.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:21.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:21.582" endtime="20231212 10:52:21.583"/>
</kw>
<status status="PASS" starttime="20231212 10:52:21.566" endtime="20231212 10:52:21.583"/>
</kw>
<msg timestamp="20231212 10:52:21.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:21.565" endtime="20231212 10:52:21.583"/>
</kw>
<msg timestamp="20231212 10:52:21.583" level="INFO">${checksumbefore} = 55657d727a1f74cb497f646095bba721</msg>
<status status="PASS" starttime="20231212 10:52:21.565" endtime="20231212 10:52:21.583"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:21.587" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:21.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:21.599" level="INFO">${output} = 55657d727a1f74cb497f646095bba721</msg>
<status status="PASS" starttime="20231212 10:52:21.585" endtime="20231212 10:52:21.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:21.600" level="INFO">55657d727a1f74cb497f646095bba721</msg>
<status status="PASS" starttime="20231212 10:52:21.599" endtime="20231212 10:52:21.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:21.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:21.600" endtime="20231212 10:52:21.601"/>
</kw>
<status status="PASS" starttime="20231212 10:52:21.584" endtime="20231212 10:52:21.601"/>
</kw>
<msg timestamp="20231212 10:52:21.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:21.584" endtime="20231212 10:52:21.601"/>
</kw>
<msg timestamp="20231212 10:52:21.601" level="INFO">${checksumafter} = 55657d727a1f74cb497f646095bba721</msg>
<status status="PASS" starttime="20231212 10:52:21.584" endtime="20231212 10:52:21.601"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:21.601" endtime="20231212 10:52:21.602"/>
</kw>
<status status="PASS" starttime="20231212 10:52:21.564" endtime="20231212 10:52:21.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:17.910" endtime="20231212 10:52:21.602"/>
</test>
<test id="s1-s5-s8-t12" name="Test Multipart Upload Put With Copy and range" line="287">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:21.605" level="INFO">${randStr} = 6934562869</msg>
<status status="PASS" starttime="20231212 10:52:21.605" endtime="20231212 10:52:21.605"/>
</kw>
<msg timestamp="20231212 10:52:21.606" level="INFO">${random} = ozone-test-6934562869</msg>
<status status="PASS" starttime="20231212 10:52:21.604" endtime="20231212 10:52:21.606"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:52:21.606" level="INFO">${PREFIX} = ozone-test-6934562869</msg>
<status status="PASS" starttime="20231212 10:52:21.606" endtime="20231212 10:52:21.606"/>
</kw>
<status status="PASS" starttime="20231212 10:52:21.604" endtime="20231212 10:52:21.606"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:21.611" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:21.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:21.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:21.609" endtime="20231212 10:52:21.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:21.648" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:21.647" endtime="20231212 10:52:21.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:21.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:21.648" endtime="20231212 10:52:21.649"/>
</kw>
<status status="PASS" starttime="20231212 10:52:21.608" endtime="20231212 10:52:21.649"/>
</kw>
<msg timestamp="20231212 10:52:21.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:21.608" endtime="20231212 10:52:21.649"/>
</kw>
<status status="PASS" starttime="20231212 10:52:21.607" endtime="20231212 10:52:21.649"/>
</kw>
<status status="PASS" starttime="20231212 10:52:21.607" endtime="20231212 10:52:21.649"/>
</kw>
<status status="PASS" starttime="20231212 10:52:21.607" endtime="20231212 10:52:21.649"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:21.653" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-6934562869/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:23.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:23.490" level="INFO">${output} = {
    "ETag": "\"ce00143120c4352c7fe278ead8a96cb6\""
}</msg>
<status status="PASS" starttime="20231212 10:52:21.651" endtime="20231212 10:52:23.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:23.491" level="INFO">{
    "ETag": "\"ce00143120c4352c7fe278ead8a96cb6\""
}</msg>
<status status="PASS" starttime="20231212 10:52:23.491" endtime="20231212 10:52:23.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:23.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:23.492" endtime="20231212 10:52:23.492"/>
</kw>
<status status="PASS" starttime="20231212 10:52:21.651" endtime="20231212 10:52:23.492"/>
</kw>
<msg timestamp="20231212 10:52:23.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:21.651" endtime="20231212 10:52:23.492"/>
</kw>
<msg timestamp="20231212 10:52:23.493" level="INFO">${output} = {
    "ETag": "\"ce00143120c4352c7fe278ead8a96cb6\""
}</msg>
<status status="PASS" starttime="20231212 10:52:21.650" endtime="20231212 10:52:23.493"/>
</kw>
<msg timestamp="20231212 10:52:23.493" level="INFO">${result} = {
    "ETag": "\"ce00143120c4352c7fe278ead8a96cb6\""
}</msg>
<status status="PASS" starttime="20231212 10:52:21.649" endtime="20231212 10:52:23.493"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:23.497" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6934562869/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:24.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:24.018" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6934562869/copyrange/destination",
    "UploadId": "2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319"
}</msg>
<status status="PASS" starttime="20231212 10:52:23.495" endtime="20231212 10:52:24.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:24.019" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6934562869/copyrange/destination",
    "UploadId": "2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319"
}</msg>
<status status="PASS" starttime="20231212 10:52:24.019" endtime="20231212 10:52:24.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:24.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:24.019" endtime="20231212 10:52:24.020"/>
</kw>
<status status="PASS" starttime="20231212 10:52:23.494" endtime="20231212 10:52:24.020"/>
</kw>
<msg timestamp="20231212 10:52:24.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:23.494" endtime="20231212 10:52:24.020"/>
</kw>
<msg timestamp="20231212 10:52:24.020" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6934562869/copyrange/destination",
    "UploadId": "2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319"
}</msg>
<status status="PASS" starttime="20231212 10:52:23.494" endtime="20231212 10:52:24.020"/>
</kw>
<msg timestamp="20231212 10:52:24.021" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6934562869/copyrange/destination",
    "UploadId": "2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319"
}</msg>
<status status="PASS" starttime="20231212 10:52:23.493" endtime="20231212 10:52:24.021"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:24.023" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6934562869/copyrange/destination",
    "UploadId": "2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:24.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:24.051" level="INFO">${output} = 2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319</msg>
<status status="PASS" starttime="20231212 10:52:24.021" endtime="20231212 10:52:24.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:24.052" level="INFO">2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319</msg>
<status status="PASS" starttime="20231212 10:52:24.051" endtime="20231212 10:52:24.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:24.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:24.052" endtime="20231212 10:52:24.053"/>
</kw>
<msg timestamp="20231212 10:52:24.053" level="INFO">${uploadID} = 2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319</msg>
<status status="PASS" starttime="20231212 10:52:24.021" endtime="20231212 10:52:24.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:24.053" endtime="20231212 10:52:24.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:24.053" endtime="20231212 10:52:24.054"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:24.058" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6934562869/copyrange/destination --upload-id 2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319 --part-number 1 --copy-source encrypted/ozone-test-6934562869/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:25.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:25.128" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-1",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:24.056" endtime="20231212 10:52:25.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:25.129" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-1",
        "LastModified": "2023-12-12T10:52:24.888Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:25.128" endtime="20231212 10:52:25.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:25.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:25.129" endtime="20231212 10:52:25.130"/>
</kw>
<status status="PASS" starttime="20231212 10:52:24.056" endtime="20231212 10:52:25.130"/>
</kw>
<msg timestamp="20231212 10:52:25.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:24.056" endtime="20231212 10:52:25.131"/>
</kw>
<msg timestamp="20231212 10:52:25.131" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-1",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:24.055" endtime="20231212 10:52:25.131"/>
</kw>
<msg timestamp="20231212 10:52:25.131" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-1",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:24.054" endtime="20231212 10:52:25.131"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:25.132" endtime="20231212 10:52:25.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:25.132" endtime="20231212 10:52:25.133"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:25.145" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-1",
        "LastModified": "2023-12-12T10:52:24.888Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:25.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:25.225" level="INFO">${output} = /s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-1</msg>
<status status="PASS" starttime="20231212 10:52:25.134" endtime="20231212 10:52:25.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:25.226" level="INFO">/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-1</msg>
<status status="PASS" starttime="20231212 10:52:25.226" endtime="20231212 10:52:25.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:25.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:25.227" endtime="20231212 10:52:25.227"/>
</kw>
<msg timestamp="20231212 10:52:25.227" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-1</msg>
<status status="PASS" starttime="20231212 10:52:25.133" endtime="20231212 10:52:25.227"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:25.233" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6934562869/copyrange/destination --upload-id 2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319 --part-number 2 --copy-source encrypted/ozone-test-6934562869/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:25.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:25.828" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-2",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:25.230" endtime="20231212 10:52:25.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:25.829" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-2",
        "LastModified": "2023-12-12T10:52:25.781Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:25.828" endtime="20231212 10:52:25.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:25.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:25.829" endtime="20231212 10:52:25.829"/>
</kw>
<status status="PASS" starttime="20231212 10:52:25.230" endtime="20231212 10:52:25.830"/>
</kw>
<msg timestamp="20231212 10:52:25.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:25.229" endtime="20231212 10:52:25.830"/>
</kw>
<msg timestamp="20231212 10:52:25.830" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-2",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:25.229" endtime="20231212 10:52:25.830"/>
</kw>
<msg timestamp="20231212 10:52:25.830" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-2",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:25.228" endtime="20231212 10:52:25.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:25.830" endtime="20231212 10:52:25.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:25.831" endtime="20231212 10:52:25.831"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:25.833" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-2",
        "LastModified": "2023-12-12T10:52:25.781Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:25.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:25.861" level="INFO">${output} = /s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-2</msg>
<status status="PASS" starttime="20231212 10:52:25.832" endtime="20231212 10:52:25.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:25.862" level="INFO">/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-2</msg>
<status status="PASS" starttime="20231212 10:52:25.862" endtime="20231212 10:52:25.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:25.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:25.863" endtime="20231212 10:52:25.863"/>
</kw>
<msg timestamp="20231212 10:52:25.863" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-2</msg>
<status status="PASS" starttime="20231212 10:52:25.831" endtime="20231212 10:52:25.863"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:25.868" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319 --bucket encrypted --key ozone-test-6934562869/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-6934562869/copyrange/destination-2e5cdae5-4a06-4120-a864-f7535912f1df-111567067148976319-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:26.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:26.356" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6934562869/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:52:25.866" endtime="20231212 10:52:26.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:26.357" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6934562869/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:52:26.356" endtime="20231212 10:52:26.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:26.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:26.357" endtime="20231212 10:52:26.357"/>
</kw>
<status status="PASS" starttime="20231212 10:52:25.865" endtime="20231212 10:52:26.357"/>
</kw>
<msg timestamp="20231212 10:52:26.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:25.865" endtime="20231212 10:52:26.358"/>
</kw>
<msg timestamp="20231212 10:52:26.358" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6934562869/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:52:25.864" endtime="20231212 10:52:26.358"/>
</kw>
<status status="PASS" starttime="20231212 10:52:25.863" endtime="20231212 10:52:26.358"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:26.361" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-6934562869/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:27.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:27.046" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:26 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231212 10:52:26.360" endtime="20231212 10:52:27.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:27.047" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:26 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:52:27.047" endtime="20231212 10:52:27.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:27.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:27.048" endtime="20231212 10:52:27.048"/>
</kw>
<status status="PASS" starttime="20231212 10:52:26.359" endtime="20231212 10:52:27.048"/>
</kw>
<msg timestamp="20231212 10:52:27.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:26.359" endtime="20231212 10:52:27.048"/>
</kw>
<msg timestamp="20231212 10:52:27.049" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:26 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231212 10:52:26.359" endtime="20231212 10:52:27.049"/>
</kw>
<status status="PASS" starttime="20231212 10:52:26.358" endtime="20231212 10:52:27.049"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:27.053" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:27.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:27.074" level="INFO">${output} = ce00143120c4352c7fe278ead8a96cb6</msg>
<status status="PASS" starttime="20231212 10:52:27.051" endtime="20231212 10:52:27.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:27.075" level="INFO">ce00143120c4352c7fe278ead8a96cb6</msg>
<status status="PASS" starttime="20231212 10:52:27.074" endtime="20231212 10:52:27.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:27.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:27.075" endtime="20231212 10:52:27.076"/>
</kw>
<status status="PASS" starttime="20231212 10:52:27.050" endtime="20231212 10:52:27.076"/>
</kw>
<msg timestamp="20231212 10:52:27.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:27.050" endtime="20231212 10:52:27.076"/>
</kw>
<msg timestamp="20231212 10:52:27.076" level="INFO">${checksumbefore} = ce00143120c4352c7fe278ead8a96cb6</msg>
<status status="PASS" starttime="20231212 10:52:27.049" endtime="20231212 10:52:27.076"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:27.080" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:27.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:27.101" level="INFO">${output} = ce00143120c4352c7fe278ead8a96cb6</msg>
<status status="PASS" starttime="20231212 10:52:27.078" endtime="20231212 10:52:27.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:27.102" level="INFO">ce00143120c4352c7fe278ead8a96cb6</msg>
<status status="PASS" starttime="20231212 10:52:27.101" endtime="20231212 10:52:27.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:27.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:27.102" endtime="20231212 10:52:27.103"/>
</kw>
<status status="PASS" starttime="20231212 10:52:27.077" endtime="20231212 10:52:27.103"/>
</kw>
<msg timestamp="20231212 10:52:27.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:27.077" endtime="20231212 10:52:27.103"/>
</kw>
<msg timestamp="20231212 10:52:27.103" level="INFO">${checksumafter} = ce00143120c4352c7fe278ead8a96cb6</msg>
<status status="PASS" starttime="20231212 10:52:27.076" endtime="20231212 10:52:27.103"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:27.104" endtime="20231212 10:52:27.104"/>
</kw>
<status status="PASS" starttime="20231212 10:52:27.049" endtime="20231212 10:52:27.104"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:21.603" endtime="20231212 10:52:27.104"/>
</test>
<test id="s1-s5-s8-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="314">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:27.107" level="INFO">${randStr} = 2726423377</msg>
<status status="PASS" starttime="20231212 10:52:27.106" endtime="20231212 10:52:27.107"/>
</kw>
<msg timestamp="20231212 10:52:27.107" level="INFO">${random} = ozone-test-2726423377</msg>
<status status="PASS" starttime="20231212 10:52:27.106" endtime="20231212 10:52:27.107"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:52:27.108" level="INFO">${PREFIX} = ozone-test-2726423377</msg>
<status status="PASS" starttime="20231212 10:52:27.107" endtime="20231212 10:52:27.108"/>
</kw>
<status status="PASS" starttime="20231212 10:52:27.106" endtime="20231212 10:52:27.108"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:27.112" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:27.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:27.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:27.110" endtime="20231212 10:52:27.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:27.150" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:27.149" endtime="20231212 10:52:27.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:27.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:27.150" endtime="20231212 10:52:27.151"/>
</kw>
<status status="PASS" starttime="20231212 10:52:27.109" endtime="20231212 10:52:27.151"/>
</kw>
<msg timestamp="20231212 10:52:27.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:27.109" endtime="20231212 10:52:27.151"/>
</kw>
<status status="PASS" starttime="20231212 10:52:27.108" endtime="20231212 10:52:27.151"/>
</kw>
<status status="PASS" starttime="20231212 10:52:27.108" endtime="20231212 10:52:27.151"/>
</kw>
<status status="PASS" starttime="20231212 10:52:27.108" endtime="20231212 10:52:27.151"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231212 10:52:27.152" level="INFO">${curDate} = 2023-12-12 10:52:27.152</msg>
<status status="PASS" starttime="20231212 10:52:27.151" endtime="20231212 10:52:27.152"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20231212 10:52:27.155" level="INFO">${beforeCreate} = 2023-12-11 10:52:27.152</msg>
<status status="PASS" starttime="20231212 10:52:27.152" endtime="20231212 10:52:27.155"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20231212 10:52:27.156" level="INFO">${tomorrow} = 2023-12-13 10:52:27.152</msg>
<status status="PASS" starttime="20231212 10:52:27.155" endtime="20231212 10:52:27.156"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:27.159" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2726423377/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:28.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:28.952" level="INFO">${output} = {
    "ETag": "\"d0cf69861c80fa8c06318b4c20a3b2a6\""
}</msg>
<status status="PASS" starttime="20231212 10:52:27.158" endtime="20231212 10:52:28.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:28.953" level="INFO">{
    "ETag": "\"d0cf69861c80fa8c06318b4c20a3b2a6\""
}</msg>
<status status="PASS" starttime="20231212 10:52:28.952" endtime="20231212 10:52:28.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:28.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:28.953" endtime="20231212 10:52:28.953"/>
</kw>
<status status="PASS" starttime="20231212 10:52:27.157" endtime="20231212 10:52:28.953"/>
</kw>
<msg timestamp="20231212 10:52:28.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:27.157" endtime="20231212 10:52:28.954"/>
</kw>
<msg timestamp="20231212 10:52:28.954" level="INFO">${output} = {
    "ETag": "\"d0cf69861c80fa8c06318b4c20a3b2a6\""
}</msg>
<status status="PASS" starttime="20231212 10:52:27.157" endtime="20231212 10:52:28.954"/>
</kw>
<msg timestamp="20231212 10:52:28.954" level="INFO">${result} = {
    "ETag": "\"d0cf69861c80fa8c06318b4c20a3b2a6\""
}</msg>
<status status="PASS" starttime="20231212 10:52:27.156" endtime="20231212 10:52:28.954"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:28.958" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2726423377/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:29.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:29.469" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2726423377/copyrange/destination",
    "UploadId": "15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027"
}</msg>
<status status="PASS" starttime="20231212 10:52:28.956" endtime="20231212 10:52:29.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:29.470" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2726423377/copyrange/destination",
    "UploadId": "15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027"
}</msg>
<status status="PASS" starttime="20231212 10:52:29.470" endtime="20231212 10:52:29.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:29.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:29.471" endtime="20231212 10:52:29.471"/>
</kw>
<status status="PASS" starttime="20231212 10:52:28.955" endtime="20231212 10:52:29.471"/>
</kw>
<msg timestamp="20231212 10:52:29.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:28.955" endtime="20231212 10:52:29.471"/>
</kw>
<msg timestamp="20231212 10:52:29.472" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2726423377/copyrange/destination",
    "UploadId": "15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027"
}</msg>
<status status="PASS" starttime="20231212 10:52:28.955" endtime="20231212 10:52:29.472"/>
</kw>
<msg timestamp="20231212 10:52:29.472" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2726423377/copyrange/destination",
    "UploadId": "15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027"
}</msg>
<status status="PASS" starttime="20231212 10:52:28.954" endtime="20231212 10:52:29.472"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:29.474" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2726423377/copyrange/destination",
    "UploadId": "15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:29.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:29.502" level="INFO">${output} = 15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027</msg>
<status status="PASS" starttime="20231212 10:52:29.472" endtime="20231212 10:52:29.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:29.503" level="INFO">15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027</msg>
<status status="PASS" starttime="20231212 10:52:29.502" endtime="20231212 10:52:29.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:29.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:29.503" endtime="20231212 10:52:29.504"/>
</kw>
<msg timestamp="20231212 10:52:29.504" level="INFO">${uploadID} = 15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027</msg>
<status status="PASS" starttime="20231212 10:52:29.472" endtime="20231212 10:52:29.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:29.504" endtime="20231212 10:52:29.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:29.504" endtime="20231212 10:52:29.505"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:29.508" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2726423377/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:29.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:29.979" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:52:28 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d0cf69861c80fa8c06318b4c20a3b2a6\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231212 10:52:29.507" endtime="20231212 10:52:29.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:29.981" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:52:28 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d0cf69861c80fa8c06318b4c20a3b2a6\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:29 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:52:29.980" endtime="20231212 10:52:29.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:29.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:29.981" endtime="20231212 10:52:29.981"/>
</kw>
<status status="PASS" starttime="20231212 10:52:29.506" endtime="20231212 10:52:29.981"/>
</kw>
<msg timestamp="20231212 10:52:29.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:29.506" endtime="20231212 10:52:29.982"/>
</kw>
<msg timestamp="20231212 10:52:29.982" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:52:28 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d0cf69861c80fa8c06318b4c20a3b2a6\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231212 10:52:29.505" endtime="20231212 10:52:29.982"/>
</kw>
<msg timestamp="20231212 10:52:29.982" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:52:28 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d0cf69861c80fa8c06318b4c20a3b2a6\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231212 10:52:29.505" endtime="20231212 10:52:29.982"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:29.984" level="INFO">Running command 'echo '{
    "LastModified": "Tue, 12 Dec 2023 10:52:28 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d0cf69861c80fa8c06318b4c20a3b2a6\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:29 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:30.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:30.012" level="INFO">${output} = Tue, 12 Dec 2023 10:52:28 GMT</msg>
<status status="PASS" starttime="20231212 10:52:29.983" endtime="20231212 10:52:30.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:30.013" level="INFO">Tue, 12 Dec 2023 10:52:28 GMT</msg>
<status status="PASS" starttime="20231212 10:52:30.013" endtime="20231212 10:52:30.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:30.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:30.014" endtime="20231212 10:52:30.014"/>
</kw>
<msg timestamp="20231212 10:52:30.014" level="INFO">${lastModified} = Tue, 12 Dec 2023 10:52:28 GMT</msg>
<status status="PASS" starttime="20231212 10:52:29.982" endtime="20231212 10:52:30.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:30.015" endtime="20231212 10:52:30.015"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20231212 10:52:30.018" level="INFO">${lmDate} = 2023-12-12 10:52:28.000</msg>
<status status="PASS" starttime="20231212 10:52:30.015" endtime="20231212 10:52:30.018"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20231212 10:52:30.018" level="INFO">${afterCreate} = 2023-12-12 10:52:31.000</msg>
<status status="PASS" starttime="20231212 10:52:30.018" endtime="20231212 10:52:30.018"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231212 10:52:30.019" level="INFO">${latestDate} = 2023-12-12 10:52:30.019</msg>
<status status="PASS" starttime="20231212 10:52:30.019" endtime="20231212 10:52:30.019"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20231212 10:52:30.020" level="INFO">${sleepSeconds} = 0.981</msg>
<status status="PASS" starttime="20231212 10:52:30.020" endtime="20231212 10:52:30.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231212 10:52:31.002" level="INFO">Slept 981 milliseconds</msg>
<status status="PASS" starttime="20231212 10:52:30.021" endtime="20231212 10:52:31.002"/>
</kw>
<status status="PASS" starttime="20231212 10:52:30.020" endtime="20231212 10:52:31.003"/>
</kw>
<status status="PASS" starttime="20231212 10:52:30.019" endtime="20231212 10:52:31.003"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:31.007" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-2726423377/copyrange/destination --upload-id 15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027 --part-number 1 --copy-source encrypted/ozone-test-2726423377/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-12-12 10:52:31.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:31.504" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:31.504" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:52:31.004" endtime="20231212 10:52:31.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:31.505" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:52:31.504" endtime="20231212 10:52:31.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:31.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:31.505" endtime="20231212 10:52:31.506"/>
</kw>
<msg timestamp="20231212 10:52:31.506" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:52:31.004" endtime="20231212 10:52:31.506"/>
</kw>
<msg timestamp="20231212 10:52:31.506" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:52:31.003" endtime="20231212 10:52:31.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:31.506" endtime="20231212 10:52:31.507"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:31.510" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-2726423377/copyrange/destination --upload-id 15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027 --part-number 2 --copy-source encrypted/ozone-test-2726423377/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-12-11 10:52:27.152' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:32.001" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:32.001" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:52:31.508" endtime="20231212 10:52:32.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:32.002" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:52:32.002" endtime="20231212 10:52:32.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:32.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:32.002" endtime="20231212 10:52:32.003"/>
</kw>
<msg timestamp="20231212 10:52:32.003" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:52:31.508" endtime="20231212 10:52:32.003"/>
</kw>
<msg timestamp="20231212 10:52:32.003" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:52:31.507" endtime="20231212 10:52:32.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:32.003" endtime="20231212 10:52:32.004"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:32.007" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-2726423377/copyrange/destination --upload-id 15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027 --part-number 1 --copy-source encrypted/ozone-test-2726423377/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-12-11 10:52:27.152' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:32.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:32.868" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:32.005" endtime="20231212 10:52:32.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:32.869" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10:52:32.806Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:32.869" endtime="20231212 10:52:32.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:32.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:32.869" endtime="20231212 10:52:32.870"/>
</kw>
<msg timestamp="20231212 10:52:32.870" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:32.005" endtime="20231212 10:52:32.870"/>
</kw>
<msg timestamp="20231212 10:52:32.870" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:32.004" endtime="20231212 10:52:32.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:32.870" endtime="20231212 10:52:32.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:32.871" endtime="20231212 10:52:32.871"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:32.874" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10:52:32.806Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:32.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:32.902" level="INFO">${output} = /s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1</msg>
<status status="PASS" starttime="20231212 10:52:32.872" endtime="20231212 10:52:32.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:32.903" level="INFO">/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1</msg>
<status status="PASS" starttime="20231212 10:52:32.902" endtime="20231212 10:52:32.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:32.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:32.903" endtime="20231212 10:52:32.903"/>
</kw>
<msg timestamp="20231212 10:52:32.904" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1</msg>
<status status="PASS" starttime="20231212 10:52:32.871" endtime="20231212 10:52:32.904"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:32.907" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-2726423377/copyrange/destination --upload-id 15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027 --part-number 2 --copy-source encrypted/ozone-test-2726423377/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-12-12 10:52:31.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:33.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:33.483" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-2",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:32.905" endtime="20231212 10:52:33.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:33.485" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-2",
        "LastModified": "2023-12-12T10:52:33.430Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:33.484" endtime="20231212 10:52:33.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:33.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:33.485" endtime="20231212 10:52:33.485"/>
</kw>
<msg timestamp="20231212 10:52:33.486" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-2",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:32.905" endtime="20231212 10:52:33.486"/>
</kw>
<msg timestamp="20231212 10:52:33.486" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-2",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:32.904" endtime="20231212 10:52:33.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:33.486" endtime="20231212 10:52:33.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:33.487" endtime="20231212 10:52:33.487"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:33.490" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-2",
        "LastModified": "2023-12-12T10:52:33.430Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:33.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:33.529" level="INFO">${output} = /s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-2</msg>
<status status="PASS" starttime="20231212 10:52:33.488" endtime="20231212 10:52:33.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:33.530" level="INFO">/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-2</msg>
<status status="PASS" starttime="20231212 10:52:33.530" endtime="20231212 10:52:33.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:33.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:33.531" endtime="20231212 10:52:33.531"/>
</kw>
<msg timestamp="20231212 10:52:33.532" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-2</msg>
<status status="PASS" starttime="20231212 10:52:33.487" endtime="20231212 10:52:33.532"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:33.536" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-2726423377/copyrange/destination --upload-id 15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027 --part-number 1 --copy-source encrypted/ozone-test-2726423377/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-12-13 10:52:27.152' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:34.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:34.437" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:33.534" endtime="20231212 10:52:34.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:34.438" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10:52:34.363Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:34.437" endtime="20231212 10:52:34.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:34.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:34.438" endtime="20231212 10:52:34.439"/>
</kw>
<msg timestamp="20231212 10:52:34.439" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:33.534" endtime="20231212 10:52:34.439"/>
</kw>
<msg timestamp="20231212 10:52:34.439" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:52:33.532" endtime="20231212 10:52:34.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:34.439" endtime="20231212 10:52:34.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:34.440" endtime="20231212 10:52:34.440"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:34.443" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1",
        "LastModified": "2023-12-12T10:52:34.363Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:34.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:34.471" level="INFO">${output} = /s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1</msg>
<status status="PASS" starttime="20231212 10:52:34.441" endtime="20231212 10:52:34.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:34.472" level="INFO">/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1</msg>
<status status="PASS" starttime="20231212 10:52:34.472" endtime="20231212 10:52:34.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:34.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:34.473" endtime="20231212 10:52:34.473"/>
</kw>
<msg timestamp="20231212 10:52:34.473" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1</msg>
<status status="PASS" starttime="20231212 10:52:34.440" endtime="20231212 10:52:34.473"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:34.478" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027 --bucket encrypted --key ozone-test-2726423377/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-2726423377/copyrange/destination-15ddbaa2-2594-4417-92c9-771644878cfa-111567067507065027-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:34.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:34.973" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2726423377/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:52:34.476" endtime="20231212 10:52:34.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:34.975" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2726423377/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:52:34.974" endtime="20231212 10:52:34.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:34.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:34.975" endtime="20231212 10:52:34.976"/>
</kw>
<status status="PASS" starttime="20231212 10:52:34.475" endtime="20231212 10:52:34.976"/>
</kw>
<msg timestamp="20231212 10:52:34.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:34.475" endtime="20231212 10:52:34.976"/>
</kw>
<msg timestamp="20231212 10:52:34.976" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2726423377/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:52:34.474" endtime="20231212 10:52:34.976"/>
</kw>
<status status="PASS" starttime="20231212 10:52:34.474" endtime="20231212 10:52:34.976"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:34.980" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2726423377/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:35.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:35.615" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:34 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231212 10:52:34.978" endtime="20231212 10:52:35.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:35.616" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:34 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:52:35.615" endtime="20231212 10:52:35.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:35.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:35.616" endtime="20231212 10:52:35.617"/>
</kw>
<status status="PASS" starttime="20231212 10:52:34.978" endtime="20231212 10:52:35.617"/>
</kw>
<msg timestamp="20231212 10:52:35.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:34.977" endtime="20231212 10:52:35.617"/>
</kw>
<msg timestamp="20231212 10:52:35.618" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:52:34 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231212 10:52:34.977" endtime="20231212 10:52:35.618"/>
</kw>
<status status="PASS" starttime="20231212 10:52:34.976" endtime="20231212 10:52:35.618"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:35.622" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:35.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:35.642" level="INFO">${output} = d0cf69861c80fa8c06318b4c20a3b2a6</msg>
<status status="PASS" starttime="20231212 10:52:35.620" endtime="20231212 10:52:35.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:35.644" level="INFO">d0cf69861c80fa8c06318b4c20a3b2a6</msg>
<status status="PASS" starttime="20231212 10:52:35.643" endtime="20231212 10:52:35.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:35.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:35.644" endtime="20231212 10:52:35.644"/>
</kw>
<status status="PASS" starttime="20231212 10:52:35.619" endtime="20231212 10:52:35.645"/>
</kw>
<msg timestamp="20231212 10:52:35.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:35.619" endtime="20231212 10:52:35.645"/>
</kw>
<msg timestamp="20231212 10:52:35.645" level="INFO">${checksumbefore} = d0cf69861c80fa8c06318b4c20a3b2a6</msg>
<status status="PASS" starttime="20231212 10:52:35.618" endtime="20231212 10:52:35.645"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:35.648" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:35.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:35.669" level="INFO">${output} = d0cf69861c80fa8c06318b4c20a3b2a6</msg>
<status status="PASS" starttime="20231212 10:52:35.646" endtime="20231212 10:52:35.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:35.670" level="INFO">d0cf69861c80fa8c06318b4c20a3b2a6</msg>
<status status="PASS" starttime="20231212 10:52:35.669" endtime="20231212 10:52:35.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:35.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:35.670" endtime="20231212 10:52:35.670"/>
</kw>
<status status="PASS" starttime="20231212 10:52:35.646" endtime="20231212 10:52:35.671"/>
</kw>
<msg timestamp="20231212 10:52:35.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:35.646" endtime="20231212 10:52:35.671"/>
</kw>
<msg timestamp="20231212 10:52:35.671" level="INFO">${checksumafter} = d0cf69861c80fa8c06318b4c20a3b2a6</msg>
<status status="PASS" starttime="20231212 10:52:35.645" endtime="20231212 10:52:35.671"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:35.671" endtime="20231212 10:52:35.671"/>
</kw>
<status status="PASS" starttime="20231212 10:52:35.618" endtime="20231212 10:52:35.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:27.105" endtime="20231212 10:52:35.672"/>
</test>
<test id="s1-s5-s8-t14" name="Test Multipart Upload list" line="367">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:35.674" level="INFO">${randStr} = 9501917016</msg>
<status status="PASS" starttime="20231212 10:52:35.674" endtime="20231212 10:52:35.674"/>
</kw>
<msg timestamp="20231212 10:52:35.674" level="INFO">${random} = ozone-test-9501917016</msg>
<status status="PASS" starttime="20231212 10:52:35.673" endtime="20231212 10:52:35.674"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:52:35.675" level="INFO">${PREFIX} = ozone-test-9501917016</msg>
<status status="PASS" starttime="20231212 10:52:35.674" endtime="20231212 10:52:35.675"/>
</kw>
<status status="PASS" starttime="20231212 10:52:35.673" endtime="20231212 10:52:35.675"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:35.678" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9501917016/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:36.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:36.188" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key1",
    "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983"
}</msg>
<status status="PASS" starttime="20231212 10:52:35.677" endtime="20231212 10:52:36.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:36.189" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key1",
    "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983"
}</msg>
<status status="PASS" starttime="20231212 10:52:36.188" endtime="20231212 10:52:36.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:36.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:36.189" endtime="20231212 10:52:36.189"/>
</kw>
<status status="PASS" starttime="20231212 10:52:35.676" endtime="20231212 10:52:36.189"/>
</kw>
<msg timestamp="20231212 10:52:36.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:35.676" endtime="20231212 10:52:36.190"/>
</kw>
<msg timestamp="20231212 10:52:36.190" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key1",
    "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983"
}</msg>
<status status="PASS" starttime="20231212 10:52:35.675" endtime="20231212 10:52:36.190"/>
</kw>
<msg timestamp="20231212 10:52:36.190" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key1",
    "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983"
}</msg>
<status status="PASS" starttime="20231212 10:52:35.675" endtime="20231212 10:52:36.190"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:36.193" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key1",
    "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:36.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:36.221" level="INFO">${output} = c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983</msg>
<status status="PASS" starttime="20231212 10:52:36.191" endtime="20231212 10:52:36.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:36.222" level="INFO">c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983</msg>
<status status="PASS" starttime="20231212 10:52:36.221" endtime="20231212 10:52:36.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:36.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:36.222" endtime="20231212 10:52:36.223"/>
</kw>
<msg timestamp="20231212 10:52:36.223" level="INFO">${uploadID1} = c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983</msg>
<status status="PASS" starttime="20231212 10:52:36.190" endtime="20231212 10:52:36.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:36.223" endtime="20231212 10:52:36.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:36.224" endtime="20231212 10:52:36.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:36.224" endtime="20231212 10:52:36.224"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:36.228" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9501917016/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:36.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:36.723" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key2",
    "UploadId": "d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568"
}</msg>
<status status="PASS" starttime="20231212 10:52:36.226" endtime="20231212 10:52:36.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:36.723" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key2",
    "UploadId": "d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568"
}</msg>
<status status="PASS" starttime="20231212 10:52:36.723" endtime="20231212 10:52:36.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:36.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:36.724" endtime="20231212 10:52:36.724"/>
</kw>
<status status="PASS" starttime="20231212 10:52:36.226" endtime="20231212 10:52:36.724"/>
</kw>
<msg timestamp="20231212 10:52:36.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:36.226" endtime="20231212 10:52:36.724"/>
</kw>
<msg timestamp="20231212 10:52:36.725" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key2",
    "UploadId": "d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568"
}</msg>
<status status="PASS" starttime="20231212 10:52:36.225" endtime="20231212 10:52:36.725"/>
</kw>
<msg timestamp="20231212 10:52:36.725" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key2",
    "UploadId": "d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568"
}</msg>
<status status="PASS" starttime="20231212 10:52:36.224" endtime="20231212 10:52:36.725"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:36.727" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9501917016/listtest/key2",
    "UploadId": "d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:36.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:36.755" level="INFO">${output} = d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568</msg>
<status status="PASS" starttime="20231212 10:52:36.725" endtime="20231212 10:52:36.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:36.756" level="INFO">d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568</msg>
<status status="PASS" starttime="20231212 10:52:36.755" endtime="20231212 10:52:36.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:36.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:36.756" endtime="20231212 10:52:36.757"/>
</kw>
<msg timestamp="20231212 10:52:36.758" level="INFO">${uploadID2} = d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568</msg>
<status status="PASS" starttime="20231212 10:52:36.725" endtime="20231212 10:52:36.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:36.758" endtime="20231212 10:52:36.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:36.758" endtime="20231212 10:52:36.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:36.759" endtime="20231212 10:52:36.760"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:36.764" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-9501917016/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:37.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:37.261" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983",
            "Key": "ozone-test-9501917016/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231212 10:52:36.762" endtime="20231212 10:52:37.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:37.262" level="INFO">{
    "Uploads": [
        {
            "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983",
            "Key": "ozone-test-9501917016/listtest/key1",
            "Initiated": "2023-12-12T10:52:36.119Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568",
            "Key": "ozone-test-9501917016/listtest/key2",
            "Initiated": "2023-12-12T10:52:36.663Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:52:37.262" endtime="20231212 10:52:37.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:37.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:37.262" endtime="20231212 10:52:37.263"/>
</kw>
<status status="PASS" starttime="20231212 10:52:36.761" endtime="20231212 10:52:37.263"/>
</kw>
<msg timestamp="20231212 10:52:37.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:36.761" endtime="20231212 10:52:37.263"/>
</kw>
<msg timestamp="20231212 10:52:37.264" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983",
            "Key": "ozone-test-9501917016/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231212 10:52:36.760" endtime="20231212 10:52:37.264"/>
</kw>
<msg timestamp="20231212 10:52:37.264" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983",
            "Key": "ozone-test-9501917016/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231212 10:52:36.760" endtime="20231212 10:52:37.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:37.264" endtime="20231212 10:52:37.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:37.264" endtime="20231212 10:52:37.265"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:37.267" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "c44fd08a-4ef3-42f8-8cec-0616f15782b5-111567067946614983",
            "Key": "ozone-test-9501917016/listtest/key1",
            "Initiated": "2023-12-12T10:52:36.119Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "d4ad9de2-84e8-41ef-af78-22af72f28ada-111567067982266568",
            "Key": "ozone-test-9501917016/listtest/key2",
            "Initiated": "2023-12-12T10:52:36.663Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:37.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:37.295" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20231212 10:52:37.265" endtime="20231212 10:52:37.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:37.296" level="INFO">2</msg>
<status status="PASS" starttime="20231212 10:52:37.295" endtime="20231212 10:52:37.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:37.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:37.296" endtime="20231212 10:52:37.297"/>
</kw>
<msg timestamp="20231212 10:52:37.297" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20231212 10:52:37.265" endtime="20231212 10:52:37.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:52:37.297" endtime="20231212 10:52:37.297"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:35.672" endtime="20231212 10:52:37.298"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:51:40.201" endtime="20231212 10:52:37.299"/>
</suite>
<suite id="s1-s5-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:52:37.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:37.310" endtime="20231212 10:52:37.311"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:52:37.311" endtime="20231212 10:52:37.311"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:52:37.311" endtime="20231212 10:52:37.311"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:37.311" endtime="20231212 10:52:37.311"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:37.311" endtime="20231212 10:52:37.311"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:37.311" endtime="20231212 10:52:37.311"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:37.312" endtime="20231212 10:52:37.312"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:37.312" endtime="20231212 10:52:37.312"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:52:37.312" endtime="20231212 10:52:37.312"/>
</kw>
<status status="PASS" starttime="20231212 10:52:37.310" endtime="20231212 10:52:37.312"/>
</kw>
<test id="s1-s5-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:52:37.314" level="INFO">${postfix} = 21697</msg>
<status status="PASS" starttime="20231212 10:52:37.314" endtime="20231212 10:52:37.314"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:52:37.314" level="INFO">${DESTBUCKET} = destbucket-21697</msg>
<status status="PASS" starttime="20231212 10:52:37.314" endtime="20231212 10:52:37.314"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:37.318" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-21697 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:37.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:37.815" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-21697"
}</msg>
<status status="PASS" starttime="20231212 10:52:37.316" endtime="20231212 10:52:37.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:37.816" level="INFO">{
    "Location": "http://s3g:9878/destbucket-21697"
}</msg>
<status status="PASS" starttime="20231212 10:52:37.815" endtime="20231212 10:52:37.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:37.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:37.816" endtime="20231212 10:52:37.817"/>
</kw>
<status status="PASS" starttime="20231212 10:52:37.316" endtime="20231212 10:52:37.817"/>
</kw>
<msg timestamp="20231212 10:52:37.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:37.315" endtime="20231212 10:52:37.817"/>
</kw>
<msg timestamp="20231212 10:52:37.817" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-21697"
}</msg>
<status status="PASS" starttime="20231212 10:52:37.315" endtime="20231212 10:52:37.817"/>
</kw>
<status status="PASS" starttime="20231212 10:52:37.315" endtime="20231212 10:52:37.817"/>
</kw>
<status status="PASS" starttime="20231212 10:52:37.313" endtime="20231212 10:52:37.817"/>
</kw>
<status status="PASS" starttime="20231212 10:52:37.313" endtime="20231212 10:52:37.818"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:37.821" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20231212 10:52:37.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:37.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:37.819" endtime="20231212 10:52:37.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:37.824" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:37.824" endtime="20231212 10:52:37.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:37.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:37.824" endtime="20231212 10:52:37.825"/>
</kw>
<status status="PASS" starttime="20231212 10:52:37.819" endtime="20231212 10:52:37.825"/>
</kw>
<msg timestamp="20231212 10:52:37.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:37.818" endtime="20231212 10:52:37.825"/>
</kw>
<status status="PASS" starttime="20231212 10:52:37.818" endtime="20231212 10:52:37.825"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:37.829" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:38.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:38.386" level="INFO">${output} = {
    "ETag": "\"be1cf2526d711d4d5d5814208dee6e49\""
}</msg>
<status status="PASS" starttime="20231212 10:52:37.827" endtime="20231212 10:52:38.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:38.387" level="INFO">{
    "ETag": "\"be1cf2526d711d4d5d5814208dee6e49\""
}</msg>
<status status="PASS" starttime="20231212 10:52:38.386" endtime="20231212 10:52:38.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:38.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:38.387" endtime="20231212 10:52:38.388"/>
</kw>
<status status="PASS" starttime="20231212 10:52:37.827" endtime="20231212 10:52:38.388"/>
</kw>
<msg timestamp="20231212 10:52:38.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:37.826" endtime="20231212 10:52:38.388"/>
</kw>
<msg timestamp="20231212 10:52:38.389" level="INFO">${output} = {
    "ETag": "\"be1cf2526d711d4d5d5814208dee6e49\""
}</msg>
<status status="PASS" starttime="20231212 10:52:37.826" endtime="20231212 10:52:38.389"/>
</kw>
<msg timestamp="20231212 10:52:38.389" level="INFO">${result} = {
    "ETag": "\"be1cf2526d711d4d5d5814208dee6e49\""
}</msg>
<status status="PASS" starttime="20231212 10:52:37.825" endtime="20231212 10:52:38.389"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:38.394" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:38.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:38.885" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/",
            "LastModified": "2023-12-12T10:52:38.271Z",
            "ETag": "2023-12-12T10:52:38.271Z",
...</msg>
<status status="PASS" starttime="20231212 10:52:38.392" endtime="20231212 10:52:38.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:38.886" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/",
            "LastModified": "2023-12-12T10:52:38.271Z",
            "ETag": "2023-12-12T10:52:38.271Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:52:38.307Z",
            "ETag": "2023-12-12T10:52:38.307Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:52:38.885" endtime="20231212 10:52:38.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:38.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:38.886" endtime="20231212 10:52:38.887"/>
</kw>
<status status="PASS" starttime="20231212 10:52:38.391" endtime="20231212 10:52:38.887"/>
</kw>
<msg timestamp="20231212 10:52:38.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:38.390" endtime="20231212 10:52:38.887"/>
</kw>
<msg timestamp="20231212 10:52:38.887" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/",
            "LastModified": "2023-12-12T10:52:38.271Z",
            "ETag": "2023-12-12T10:52:38.271Z",
...</msg>
<status status="PASS" starttime="20231212 10:52:38.390" endtime="20231212 10:52:38.887"/>
</kw>
<msg timestamp="20231212 10:52:38.887" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/",
            "LastModified": "2023-12-12T10:52:38.271Z",
            "ETag": "2023-12-12T10:52:38.271Z",
...</msg>
<status status="PASS" starttime="20231212 10:52:38.389" endtime="20231212 10:52:38.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:38.888" endtime="20231212 10:52:38.888"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:38.892" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-21697 --key ozone-test-9501917016/copyobject/key=value/f1 --copy-source encrypted/ozone-test-9501917016/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:41.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:41.979" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "74d2942f-d058-4f4e-905b-f71b2599f34b",
        "LastModified": "2023-12-12T10:52:41.912Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:38.890" endtime="20231212 10:52:41.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:41.980" level="INFO">{
    "CopyObjectResult": {
        "ETag": "74d2942f-d058-4f4e-905b-f71b2599f34b",
        "LastModified": "2023-12-12T10:52:41.912Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:41.979" endtime="20231212 10:52:41.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:41.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:41.980" endtime="20231212 10:52:41.981"/>
</kw>
<status status="PASS" starttime="20231212 10:52:38.890" endtime="20231212 10:52:41.981"/>
</kw>
<msg timestamp="20231212 10:52:41.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:38.889" endtime="20231212 10:52:41.981"/>
</kw>
<msg timestamp="20231212 10:52:41.981" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "74d2942f-d058-4f4e-905b-f71b2599f34b",
        "LastModified": "2023-12-12T10:52:41.912Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:38.889" endtime="20231212 10:52:41.981"/>
</kw>
<msg timestamp="20231212 10:52:41.981" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "74d2942f-d058-4f4e-905b-f71b2599f34b",
        "LastModified": "2023-12-12T10:52:41.912Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:38.888" endtime="20231212 10:52:41.981"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:41.986" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-21697 --prefix ozone-test-9501917016/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:42.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:42.501" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:52:41.912Z",
            "ETag": "2023-12-12T10:52:41.912Z"...</msg>
<status status="PASS" starttime="20231212 10:52:41.984" endtime="20231212 10:52:42.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:42.502" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:52:41.912Z",
            "ETag": "2023-12-12T10:52:41.912Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:52:42.501" endtime="20231212 10:52:42.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:42.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:42.502" endtime="20231212 10:52:42.502"/>
</kw>
<status status="PASS" starttime="20231212 10:52:41.983" endtime="20231212 10:52:42.503"/>
</kw>
<msg timestamp="20231212 10:52:42.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:41.983" endtime="20231212 10:52:42.503"/>
</kw>
<msg timestamp="20231212 10:52:42.503" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:52:41.912Z",
            "ETag": "2023-12-12T10:52:41.912Z"...</msg>
<status status="PASS" starttime="20231212 10:52:41.982" endtime="20231212 10:52:42.503"/>
</kw>
<msg timestamp="20231212 10:52:42.503" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:52:41.912Z",
            "ETag": "2023-12-12T10:52:41.912Z"...</msg>
<status status="PASS" starttime="20231212 10:52:41.982" endtime="20231212 10:52:42.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:42.503" endtime="20231212 10:52:42.504"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:42.507" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-21697 --key ozone-test-9501917016/copyobject/key=value/f1 --copy-source encrypted/ozone-test-9501917016/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:45.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:45.580" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "c9d3e1f9-373e-4a98-8d3e-a0d78f93b1f3",
        "LastModified": "2023-12-12T10:52:45.515Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:42.506" endtime="20231212 10:52:45.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:45.581" level="INFO">{
    "CopyObjectResult": {
        "ETag": "c9d3e1f9-373e-4a98-8d3e-a0d78f93b1f3",
        "LastModified": "2023-12-12T10:52:45.515Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:45.580" endtime="20231212 10:52:45.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:45.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:45.581" endtime="20231212 10:52:45.582"/>
</kw>
<status status="PASS" starttime="20231212 10:52:42.505" endtime="20231212 10:52:45.582"/>
</kw>
<msg timestamp="20231212 10:52:45.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:42.505" endtime="20231212 10:52:45.582"/>
</kw>
<msg timestamp="20231212 10:52:45.582" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "c9d3e1f9-373e-4a98-8d3e-a0d78f93b1f3",
        "LastModified": "2023-12-12T10:52:45.515Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:42.505" endtime="20231212 10:52:45.582"/>
</kw>
<msg timestamp="20231212 10:52:45.582" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "c9d3e1f9-373e-4a98-8d3e-a0d78f93b1f3",
        "LastModified": "2023-12-12T10:52:45.515Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:42.504" endtime="20231212 10:52:45.582"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:45.586" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-21697 --prefix ozone-test-9501917016/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:46.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:46.072" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:52:45.515Z",
            "ETag": "2023-12-12T10:52:45.515Z"...</msg>
<status status="PASS" starttime="20231212 10:52:45.585" endtime="20231212 10:52:46.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:46.073" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:52:45.515Z",
            "ETag": "2023-12-12T10:52:45.515Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:52:46.072" endtime="20231212 10:52:46.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:46.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:46.073" endtime="20231212 10:52:46.074"/>
</kw>
<status status="PASS" starttime="20231212 10:52:45.584" endtime="20231212 10:52:46.074"/>
</kw>
<msg timestamp="20231212 10:52:46.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:45.584" endtime="20231212 10:52:46.074"/>
</kw>
<msg timestamp="20231212 10:52:46.074" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:52:45.515Z",
            "ETag": "2023-12-12T10:52:45.515Z"...</msg>
<status status="PASS" starttime="20231212 10:52:45.583" endtime="20231212 10:52:46.074"/>
</kw>
<msg timestamp="20231212 10:52:46.075" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:52:45.515Z",
            "ETag": "2023-12-12T10:52:45.515Z"...</msg>
<status status="PASS" starttime="20231212 10:52:45.583" endtime="20231212 10:52:46.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:46.075" endtime="20231212 10:52:46.075"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:37.312" endtime="20231212 10:52:46.075"/>
</test>
<test id="s1-s5-s9-t2" name="Copy Object Where Bucket is not available" line="52">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:46.080" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-9501917016/copyobject/key=value/f1 --copy-source encrypted/ozone-test-9501917016/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:46.580" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:46.580" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:52:46.078" endtime="20231212 10:52:46.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:46.581" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:52:46.580" endtime="20231212 10:52:46.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:46.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:46.581" endtime="20231212 10:52:46.581"/>
</kw>
<msg timestamp="20231212 10:52:46.582" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:52:46.077" endtime="20231212 10:52:46.582"/>
</kw>
<msg timestamp="20231212 10:52:46.582" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:52:46.077" endtime="20231212 10:52:46.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:46.582" endtime="20231212 10:52:46.583"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:46.586" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-21697 --key ozone-test-9501917016/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-9501917016/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:47.081" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:47.081" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:52:46.584" endtime="20231212 10:52:47.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:47.082" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:52:47.081" endtime="20231212 10:52:47.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:47.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:47.082" endtime="20231212 10:52:47.082"/>
</kw>
<msg timestamp="20231212 10:52:47.083" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:52:46.583" endtime="20231212 10:52:47.083"/>
</kw>
<msg timestamp="20231212 10:52:47.083" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:52:46.583" endtime="20231212 10:52:47.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:47.083" endtime="20231212 10:52:47.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:46.076" endtime="20231212 10:52:47.084"/>
</test>
<test id="s1-s5-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:47.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-21697 --key ozone-test-9501917016/copyobject/key=value/f1 --copy-source destbucket-21697/ozone-test-9501917016/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:47.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:47.573" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "6d66656a-5523-4820-a503-610b441d46e0",
        "LastModified": "2023-12-12T10:52:47.517Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:47.087" endtime="20231212 10:52:47.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:47.574" level="INFO">{
    "CopyObjectResult": {
        "ETag": "6d66656a-5523-4820-a503-610b441d46e0",
        "LastModified": "2023-12-12T10:52:47.517Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:47.573" endtime="20231212 10:52:47.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:47.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:47.574" endtime="20231212 10:52:47.574"/>
</kw>
<status status="PASS" starttime="20231212 10:52:47.086" endtime="20231212 10:52:47.575"/>
</kw>
<msg timestamp="20231212 10:52:47.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:47.086" endtime="20231212 10:52:47.575"/>
</kw>
<msg timestamp="20231212 10:52:47.575" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "6d66656a-5523-4820-a503-610b441d46e0",
        "LastModified": "2023-12-12T10:52:47.517Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:47.085" endtime="20231212 10:52:47.575"/>
</kw>
<msg timestamp="20231212 10:52:47.575" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "6d66656a-5523-4820-a503-610b441d46e0",
        "LastModified": "2023-12-12T10:52:47.517Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:47.085" endtime="20231212 10:52:47.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:47.575" endtime="20231212 10:52:47.576"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:47.084" endtime="20231212 10:52:47.576"/>
</test>
<test id="s1-s5-s9-t4" name="Copy Object Where Key not available" line="62">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:47.580" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-21697 --key ozone-test-9501917016/copyobject/key=value/f1 --copy-source encrypted/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:48.070" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:48.070" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:52:47.578" endtime="20231212 10:52:48.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:48.071" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:52:48.071" endtime="20231212 10:52:48.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:48.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:48.072" endtime="20231212 10:52:48.072"/>
</kw>
<msg timestamp="20231212 10:52:48.072" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:52:47.578" endtime="20231212 10:52:48.072"/>
</kw>
<msg timestamp="20231212 10:52:48.073" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:52:47.577" endtime="20231212 10:52:48.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:48.073" endtime="20231212 10:52:48.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:47.576" endtime="20231212 10:52:48.073"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:52:37.301" endtime="20231212 10:52:48.076"/>
</suite>
<suite id="s1-s5-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:52:48.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:48.087" endtime="20231212 10:52:48.087"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:52:48.087" endtime="20231212 10:52:48.087"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:52:48.088" endtime="20231212 10:52:48.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:48.088" endtime="20231212 10:52:48.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:48.088" endtime="20231212 10:52:48.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:48.088" endtime="20231212 10:52:48.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:48.088" endtime="20231212 10:52:48.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:48.089" endtime="20231212 10:52:48.089"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:52:48.089" endtime="20231212 10:52:48.089"/>
</kw>
<status status="PASS" starttime="20231212 10:52:48.087" endtime="20231212 10:52:48.089"/>
</kw>
<test id="s1-s5-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:48.092" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:52:48.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:48.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:48.091" endtime="20231212 10:52:48.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:48.095" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:48.094" endtime="20231212 10:52:48.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:48.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:48.095" endtime="20231212 10:52:48.095"/>
</kw>
<status status="PASS" starttime="20231212 10:52:48.090" endtime="20231212 10:52:48.096"/>
</kw>
<msg timestamp="20231212 10:52:48.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:48.090" endtime="20231212 10:52:48.096"/>
</kw>
<status status="PASS" starttime="20231212 10:52:48.090" endtime="20231212 10:52:48.096"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:48.099" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:48.591" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:48.591" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:48.097" endtime="20231212 10:52:48.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:48.592" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:48.592" endtime="20231212 10:52:48.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:48.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:48.593" endtime="20231212 10:52:48.593"/>
</kw>
<msg timestamp="20231212 10:52:48.593" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:48.097" endtime="20231212 10:52:48.593"/>
</kw>
<msg timestamp="20231212 10:52:48.594" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:48.096" endtime="20231212 10:52:48.594"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:48.597" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:49.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:49.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:48.596" endtime="20231212 10:52:49.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:49.079" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:49.079" endtime="20231212 10:52:49.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:49.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:49.079" endtime="20231212 10:52:49.080"/>
</kw>
<status status="PASS" starttime="20231212 10:52:48.595" endtime="20231212 10:52:49.080"/>
</kw>
<msg timestamp="20231212 10:52:49.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:48.595" endtime="20231212 10:52:49.080"/>
</kw>
<msg timestamp="20231212 10:52:49.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:48.594" endtime="20231212 10:52:49.080"/>
</kw>
<msg timestamp="20231212 10:52:49.081" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:52:48.594" endtime="20231212 10:52:49.081"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:49.081" endtime="20231212 10:52:49.081"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:49.084" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:49.565" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:49.565" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:49.082" endtime="20231212 10:52:49.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:49.566" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:49.565" endtime="20231212 10:52:49.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:49.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:49.566" endtime="20231212 10:52:49.566"/>
</kw>
<msg timestamp="20231212 10:52:49.567" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:49.082" endtime="20231212 10:52:49.567"/>
</kw>
<msg timestamp="20231212 10:52:49.567" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:49.081" endtime="20231212 10:52:49.567"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:49.570" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:50.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:50.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:49.569" endtime="20231212 10:52:50.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:50.052" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:50.052" endtime="20231212 10:52:50.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:50.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:50.052" endtime="20231212 10:52:50.053"/>
</kw>
<status status="PASS" starttime="20231212 10:52:49.568" endtime="20231212 10:52:50.053"/>
</kw>
<msg timestamp="20231212 10:52:50.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:49.568" endtime="20231212 10:52:50.053"/>
</kw>
<msg timestamp="20231212 10:52:50.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:49.568" endtime="20231212 10:52:50.054"/>
</kw>
<msg timestamp="20231212 10:52:50.054" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:52:49.567" endtime="20231212 10:52:50.054"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:50.054" endtime="20231212 10:52:50.054"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:50.058" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:50.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:50.603" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:52:50.056" endtime="20231212 10:52:50.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:50.604" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:52:50.603" endtime="20231212 10:52:50.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:50.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:50.604" endtime="20231212 10:52:50.604"/>
</kw>
<status status="PASS" starttime="20231212 10:52:50.056" endtime="20231212 10:52:50.605"/>
</kw>
<msg timestamp="20231212 10:52:50.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:50.056" endtime="20231212 10:52:50.605"/>
</kw>
<msg timestamp="20231212 10:52:50.605" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:52:50.055" endtime="20231212 10:52:50.605"/>
</kw>
<msg timestamp="20231212 10:52:50.605" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:52:50.055" endtime="20231212 10:52:50.605"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:50.608" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:51.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:51.165" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:52:50 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:52:50.606" endtime="20231212 10:52:51.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:51.166" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:52:50 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:52:51.166" endtime="20231212 10:52:51.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:51.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:51.166" endtime="20231212 10:52:51.167"/>
</kw>
<msg timestamp="20231212 10:52:51.167" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:52:50 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:52:50.606" endtime="20231212 10:52:51.167"/>
</kw>
<status status="PASS" starttime="20231212 10:52:50.605" endtime="20231212 10:52:51.168"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:51.171" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:51.649" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:51.649" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:51.169" endtime="20231212 10:52:51.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:51.650" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:51.650" endtime="20231212 10:52:51.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:51.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:51.650" endtime="20231212 10:52:51.651"/>
</kw>
<msg timestamp="20231212 10:52:51.651" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:51.168" endtime="20231212 10:52:51.651"/>
</kw>
<status status="PASS" starttime="20231212 10:52:51.168" endtime="20231212 10:52:51.651"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:51.655" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:52.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:52.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:51.653" endtime="20231212 10:52:52.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:52.147" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:52.146" endtime="20231212 10:52:52.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:52.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:52.147" endtime="20231212 10:52:52.148"/>
</kw>
<status status="PASS" starttime="20231212 10:52:51.653" endtime="20231212 10:52:52.148"/>
</kw>
<msg timestamp="20231212 10:52:52.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:51.653" endtime="20231212 10:52:52.148"/>
</kw>
<msg timestamp="20231212 10:52:52.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:51.652" endtime="20231212 10:52:52.148"/>
</kw>
<msg timestamp="20231212 10:52:52.148" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:52:51.651" endtime="20231212 10:52:52.148"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:52.149" endtime="20231212 10:52:52.149"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:52.152" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket encrypted --key ozone-test-9501917016/word.txt --copy-source encrypted/ozone-test-9501917016/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:52.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:52.723" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "4cbba57a-93e8-40ab-b0a1-d5c7e6067f68",
        "LastModified": "2023-12-12T10:52:52.656Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:52.151" endtime="20231212 10:52:52.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:52.724" level="INFO">{
    "CopyObjectResult": {
        "ETag": "4cbba57a-93e8-40ab-b0a1-d5c7e6067f68",
        "LastModified": "2023-12-12T10:52:52.656Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:52.723" endtime="20231212 10:52:52.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:52.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:52.724" endtime="20231212 10:52:52.725"/>
</kw>
<status status="PASS" starttime="20231212 10:52:52.150" endtime="20231212 10:52:52.725"/>
</kw>
<msg timestamp="20231212 10:52:52.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:52.150" endtime="20231212 10:52:52.725"/>
</kw>
<msg timestamp="20231212 10:52:52.725" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "4cbba57a-93e8-40ab-b0a1-d5c7e6067f68",
        "LastModified": "2023-12-12T10:52:52.656Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:52.150" endtime="20231212 10:52:52.725"/>
</kw>
<msg timestamp="20231212 10:52:52.725" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "4cbba57a-93e8-40ab-b0a1-d5c7e6067f68",
        "LastModified": "2023-12-12T10:52:52.656Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:52:52.149" endtime="20231212 10:52:52.725"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:52.729" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:53.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:53.209" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:52:52 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:52:52.727" endtime="20231212 10:52:53.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:53.210" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:52:52 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:52:53 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:52:53.209" endtime="20231212 10:52:53.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:53.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:53.210" endtime="20231212 10:52:53.211"/>
</kw>
<msg timestamp="20231212 10:52:53.211" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:52:52 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:52:52.726" endtime="20231212 10:52:53.211"/>
</kw>
<status status="PASS" starttime="20231212 10:52:52.726" endtime="20231212 10:52:53.211"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:53.217" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-9501917016/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:53.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:53.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:53.215" endtime="20231212 10:52:53.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:53.700" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:53.699" endtime="20231212 10:52:53.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:53.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:53.700" endtime="20231212 10:52:53.700"/>
</kw>
<status status="PASS" starttime="20231212 10:52:53.213" endtime="20231212 10:52:53.700"/>
</kw>
<msg timestamp="20231212 10:52:53.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:53.213" endtime="20231212 10:52:53.701"/>
</kw>
<msg timestamp="20231212 10:52:53.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:53.212" endtime="20231212 10:52:53.701"/>
</kw>
<status status="PASS" starttime="20231212 10:52:53.212" endtime="20231212 10:52:53.701"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:53.704" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:54.182" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:52:54.182" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:53.702" endtime="20231212 10:52:54.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:54.183" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:54.183" endtime="20231212 10:52:54.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:54.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:54.184" endtime="20231212 10:52:54.184"/>
</kw>
<msg timestamp="20231212 10:52:54.184" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:52:53.702" endtime="20231212 10:52:54.184"/>
</kw>
<status status="PASS" starttime="20231212 10:52:53.701" endtime="20231212 10:52:54.184"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:48.089" endtime="20231212 10:52:54.185"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:52:48.077" endtime="20231212 10:52:54.185"/>
</suite>
<suite id="s1-s5-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:52:54.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:54.196" endtime="20231212 10:52:54.196"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:52:54.196" endtime="20231212 10:52:54.196"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:52:54.196" endtime="20231212 10:52:54.196"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:54.196" endtime="20231212 10:52:54.196"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:54.197" endtime="20231212 10:52:54.197"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:54.197" endtime="20231212 10:52:54.197"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:54.197" endtime="20231212 10:52:54.197"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:52:54.197" endtime="20231212 10:52:54.197"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:52:54.197" endtime="20231212 10:52:54.197"/>
</kw>
<status status="PASS" starttime="20231212 10:52:54.195" endtime="20231212 10:52:54.197"/>
</kw>
<test id="s1-s5-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:54.201" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:52:54.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:54.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:54.199" endtime="20231212 10:52:54.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:54.204" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:54.203" endtime="20231212 10:52:54.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:54.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:54.204" endtime="20231212 10:52:54.204"/>
</kw>
<status status="PASS" starttime="20231212 10:52:54.199" endtime="20231212 10:52:54.204"/>
</kw>
<msg timestamp="20231212 10:52:54.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:54.198" endtime="20231212 10:52:54.205"/>
</kw>
<status status="PASS" starttime="20231212 10:52:54.198" endtime="20231212 10:52:54.205"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:54.208" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:54.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:54.775" level="INFO">${output} = {
    "ETag": "\"6fca574bde92ce8bbfc7b4411e7a4ccf\""
}</msg>
<status status="PASS" starttime="20231212 10:52:54.207" endtime="20231212 10:52:54.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:54.776" level="INFO">{
    "ETag": "\"6fca574bde92ce8bbfc7b4411e7a4ccf\""
}</msg>
<status status="PASS" starttime="20231212 10:52:54.775" endtime="20231212 10:52:54.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:54.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:54.776" endtime="20231212 10:52:54.777"/>
</kw>
<status status="PASS" starttime="20231212 10:52:54.206" endtime="20231212 10:52:54.777"/>
</kw>
<msg timestamp="20231212 10:52:54.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:54.206" endtime="20231212 10:52:54.777"/>
</kw>
<msg timestamp="20231212 10:52:54.777" level="INFO">${output} = {
    "ETag": "\"6fca574bde92ce8bbfc7b4411e7a4ccf\""
}</msg>
<status status="PASS" starttime="20231212 10:52:54.205" endtime="20231212 10:52:54.777"/>
</kw>
<msg timestamp="20231212 10:52:54.777" level="INFO">${result} = {
    "ETag": "\"6fca574bde92ce8bbfc7b4411e7a4ccf\""
}</msg>
<status status="PASS" starttime="20231212 10:52:54.205" endtime="20231212 10:52:54.777"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:54.781" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:55.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:55.278" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:52:54.647Z",
            "ETag": "2023-12-12T10:52:54.647Z...</msg>
<status status="PASS" starttime="20231212 10:52:54.779" endtime="20231212 10:52:55.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:55.279" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9501917016/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:52:54.647Z",
            "ETag": "2023-12-12T10:52:54.647Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9501917016/deletetestapi/key=value/f1",
            "LastModified": "2023-12-12T10:52:54.698Z",
            "ETag": "2023-12-12T10:52:54.698Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:52:55.279" endtime="20231212 10:52:55.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:55.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:55.279" endtime="20231212 10:52:55.280"/>
</kw>
<status status="PASS" starttime="20231212 10:52:54.779" endtime="20231212 10:52:55.280"/>
</kw>
<msg timestamp="20231212 10:52:55.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:54.779" endtime="20231212 10:52:55.280"/>
</kw>
<msg timestamp="20231212 10:52:55.280" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:52:54.647Z",
            "ETag": "2023-12-12T10:52:54.647Z...</msg>
<status status="PASS" starttime="20231212 10:52:54.778" endtime="20231212 10:52:55.281"/>
</kw>
<msg timestamp="20231212 10:52:55.281" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:52:54.647Z",
            "ETag": "2023-12-12T10:52:54.647Z...</msg>
<status status="PASS" starttime="20231212 10:52:54.777" endtime="20231212 10:52:55.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:55.281" endtime="20231212 10:52:55.281"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:55.285" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-9501917016/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:55.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:55.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:55.284" endtime="20231212 10:52:55.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:55.774" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:55.773" endtime="20231212 10:52:55.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:55.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:55.774" endtime="20231212 10:52:55.774"/>
</kw>
<status status="PASS" starttime="20231212 10:52:55.283" endtime="20231212 10:52:55.775"/>
</kw>
<msg timestamp="20231212 10:52:55.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:55.283" endtime="20231212 10:52:55.775"/>
</kw>
<msg timestamp="20231212 10:52:55.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:55.282" endtime="20231212 10:52:55.775"/>
</kw>
<msg timestamp="20231212 10:52:55.775" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:52:55.282" endtime="20231212 10:52:55.775"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:55.779" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:56.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:56.274" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:52:54.647Z",
            "ETag": "2023-12-12T10:52:54.647Z...</msg>
<status status="PASS" starttime="20231212 10:52:55.777" endtime="20231212 10:52:56.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:56.275" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9501917016/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:52:54.647Z",
            "ETag": "2023-12-12T10:52:54.647Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:52:56.275" endtime="20231212 10:52:56.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:56.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:56.276" endtime="20231212 10:52:56.276"/>
</kw>
<status status="PASS" starttime="20231212 10:52:55.777" endtime="20231212 10:52:56.276"/>
</kw>
<msg timestamp="20231212 10:52:56.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:55.777" endtime="20231212 10:52:56.276"/>
</kw>
<msg timestamp="20231212 10:52:56.277" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:52:54.647Z",
            "ETag": "2023-12-12T10:52:54.647Z...</msg>
<status status="PASS" starttime="20231212 10:52:55.776" endtime="20231212 10:52:56.277"/>
</kw>
<msg timestamp="20231212 10:52:56.277" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:52:54.647Z",
            "ETag": "2023-12-12T10:52:54.647Z...</msg>
<status status="PASS" starttime="20231212 10:52:55.775" endtime="20231212 10:52:56.277"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:56.277" endtime="20231212 10:52:56.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:54.197" endtime="20231212 10:52:56.278"/>
</test>
<test id="s1-s5-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:56.283" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:56.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:56.770" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2726423377/
                           PRE ozone-test-2985049914/
             ...</msg>
<status status="PASS" starttime="20231212 10:52:56.281" endtime="20231212 10:52:56.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:56.772" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2726423377/
                           PRE ozone-test-2985049914/
                           PRE ozone-test-3759077097/
                           PRE ozone-test-4269249198/
                           PRE ozone-test-4415659866/
                           PRE ozone-test-4639215160/
                           PRE ozone-test-6934562869/
                           PRE ozone-test-7858416323/
                           PRE ozone-test-8734727942/
                           PRE ozone-test-9385793312/
                           PRE ozone-test-9501917016/
                           PRE specialchars/
2023-12-12 10:51:14       4068 README1.md
2023-12-12 10:51:09       4068 README10.md
2023-12-12 10:51:15   20971522 aeodgahlmn
2023-12-12 10:51:12   10485761 multiUpload.1.gz
2023-12-12 10:51:13   10485761 multiUpload.2.gz
2023-12-12 10:51:06         29 testfile</msg>
<status status="PASS" starttime="20231212 10:52:56.771" endtime="20231212 10:52:56.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:56.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:56.772" endtime="20231212 10:52:56.772"/>
</kw>
<status status="PASS" starttime="20231212 10:52:56.280" endtime="20231212 10:52:56.772"/>
</kw>
<msg timestamp="20231212 10:52:56.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:56.280" endtime="20231212 10:52:56.773"/>
</kw>
<msg timestamp="20231212 10:52:56.773" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2726423377/
                           PRE ozone-test-2985049914/
             ...</msg>
<status status="PASS" starttime="20231212 10:52:56.279" endtime="20231212 10:52:56.773"/>
</kw>
<msg timestamp="20231212 10:52:56.773" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2726423377/
                           PRE ozone-test-2985049914/
             ...</msg>
<status status="PASS" starttime="20231212 10:52:56.279" endtime="20231212 10:52:56.773"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:56.773" endtime="20231212 10:52:56.774"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:56.777" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:57.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:57.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:56.775" endtime="20231212 10:52:57.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:57.264" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:57.263" endtime="20231212 10:52:57.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:57.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:57.264" endtime="20231212 10:52:57.264"/>
</kw>
<status status="PASS" starttime="20231212 10:52:56.775" endtime="20231212 10:52:57.264"/>
</kw>
<msg timestamp="20231212 10:52:57.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:56.775" endtime="20231212 10:52:57.265"/>
</kw>
<msg timestamp="20231212 10:52:57.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:56.774" endtime="20231212 10:52:57.265"/>
</kw>
<msg timestamp="20231212 10:52:57.265" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:52:56.774" endtime="20231212 10:52:57.265"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:57.269" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:57.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:57.741" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2726423377/
                           PRE ozone-test-2985049914/
             ...</msg>
<status status="PASS" starttime="20231212 10:52:57.267" endtime="20231212 10:52:57.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:57.742" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2726423377/
                           PRE ozone-test-2985049914/
                           PRE ozone-test-3759077097/
                           PRE ozone-test-4269249198/
                           PRE ozone-test-4415659866/
                           PRE ozone-test-4639215160/
                           PRE ozone-test-6934562869/
                           PRE ozone-test-7858416323/
                           PRE ozone-test-8734727942/
                           PRE ozone-test-9385793312/
                           PRE ozone-test-9501917016/
                           PRE specialchars/
2023-12-12 10:51:14       4068 README1.md
2023-12-12 10:51:09       4068 README10.md
2023-12-12 10:51:15   20971522 aeodgahlmn
2023-12-12 10:51:12   10485761 multiUpload.1.gz
2023-12-12 10:51:13   10485761 multiUpload.2.gz
2023-12-12 10:51:06         29 testfile</msg>
<status status="PASS" starttime="20231212 10:52:57.741" endtime="20231212 10:52:57.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:57.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:57.742" endtime="20231212 10:52:57.743"/>
</kw>
<status status="PASS" starttime="20231212 10:52:57.266" endtime="20231212 10:52:57.743"/>
</kw>
<msg timestamp="20231212 10:52:57.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:57.266" endtime="20231212 10:52:57.743"/>
</kw>
<msg timestamp="20231212 10:52:57.743" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2726423377/
                           PRE ozone-test-2985049914/
             ...</msg>
<status status="PASS" starttime="20231212 10:52:57.266" endtime="20231212 10:52:57.743"/>
</kw>
<msg timestamp="20231212 10:52:57.744" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2726423377/
                           PRE ozone-test-2985049914/
             ...</msg>
<status status="PASS" starttime="20231212 10:52:57.265" endtime="20231212 10:52:57.744"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:57.744" endtime="20231212 10:52:57.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:56.278" endtime="20231212 10:52:57.744"/>
</test>
<test id="s1-s5-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:57.749" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:52:57.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:57.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:57.747" endtime="20231212 10:52:57.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:57.752" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:57.751" endtime="20231212 10:52:57.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:57.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:57.752" endtime="20231212 10:52:57.753"/>
</kw>
<status status="PASS" starttime="20231212 10:52:57.747" endtime="20231212 10:52:57.753"/>
</kw>
<msg timestamp="20231212 10:52:57.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:57.746" endtime="20231212 10:52:57.753"/>
</kw>
<status status="PASS" starttime="20231212 10:52:57.746" endtime="20231212 10:52:57.753"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:57.756" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-9501917016/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:58.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:58.338" level="INFO">${output} = Completed 29 Bytes/29 Bytes (298 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-9501917016/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231212 10:52:57.755" endtime="20231212 10:52:58.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:58.339" level="INFO">Completed 29 Bytes/29 Bytes (298 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-9501917016/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231212 10:52:58.339" endtime="20231212 10:52:58.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:58.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:58.340" endtime="20231212 10:52:58.340"/>
</kw>
<status status="PASS" starttime="20231212 10:52:57.755" endtime="20231212 10:52:58.340"/>
</kw>
<msg timestamp="20231212 10:52:58.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:57.754" endtime="20231212 10:52:58.341"/>
</kw>
<msg timestamp="20231212 10:52:58.341" level="INFO">${output} = Completed 29 Bytes/29 Bytes (298 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-9501917016/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231212 10:52:57.754" endtime="20231212 10:52:58.341"/>
</kw>
<msg timestamp="20231212 10:52:58.341" level="INFO">${result} = Completed 29 Bytes/29 Bytes (298 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-9501917016/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231212 10:52:57.753" endtime="20231212 10:52:58.341"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:58.345" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-9501917016/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:58.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:58.819" level="INFO">${output} = 2023-12-12 10:52:58          0 
2023-12-12 10:52:58         29 f1</msg>
<status status="PASS" starttime="20231212 10:52:58.343" endtime="20231212 10:52:58.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:58.820" level="INFO">2023-12-12 10:52:58          0 
2023-12-12 10:52:58         29 f1</msg>
<status status="PASS" starttime="20231212 10:52:58.820" endtime="20231212 10:52:58.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:58.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:58.820" endtime="20231212 10:52:58.821"/>
</kw>
<status status="PASS" starttime="20231212 10:52:58.343" endtime="20231212 10:52:58.821"/>
</kw>
<msg timestamp="20231212 10:52:58.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:58.342" endtime="20231212 10:52:58.821"/>
</kw>
<msg timestamp="20231212 10:52:58.821" level="INFO">${output} = 2023-12-12 10:52:58          0 
2023-12-12 10:52:58         29 f1</msg>
<status status="PASS" starttime="20231212 10:52:58.342" endtime="20231212 10:52:58.821"/>
</kw>
<msg timestamp="20231212 10:52:58.822" level="INFO">${result} = 2023-12-12 10:52:58          0 
2023-12-12 10:52:58         29 f1</msg>
<status status="PASS" starttime="20231212 10:52:58.341" endtime="20231212 10:52:58.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:58.822" endtime="20231212 10:52:58.822"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:58.826" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-9501917016/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:59.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:59.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:58.824" endtime="20231212 10:52:59.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:59.315" level="INFO"/>
<status status="PASS" starttime="20231212 10:52:59.314" endtime="20231212 10:52:59.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:59.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:59.315" endtime="20231212 10:52:59.316"/>
</kw>
<status status="PASS" starttime="20231212 10:52:58.824" endtime="20231212 10:52:59.316"/>
</kw>
<msg timestamp="20231212 10:52:59.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:58.823" endtime="20231212 10:52:59.316"/>
</kw>
<msg timestamp="20231212 10:52:59.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:58.823" endtime="20231212 10:52:59.316"/>
</kw>
<msg timestamp="20231212 10:52:59.316" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:52:58.822" endtime="20231212 10:52:59.316"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:59.320" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-9501917016/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:52:59.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:52:59.814" level="INFO">${output} = 2023-12-12 10:52:58          0 
2023-12-12 10:52:58         29 f1</msg>
<status status="PASS" starttime="20231212 10:52:59.319" endtime="20231212 10:52:59.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:52:59.815" level="INFO">2023-12-12 10:52:58          0 
2023-12-12 10:52:58         29 f1</msg>
<status status="PASS" starttime="20231212 10:52:59.814" endtime="20231212 10:52:59.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:52:59.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:52:59.815" endtime="20231212 10:52:59.816"/>
</kw>
<status status="PASS" starttime="20231212 10:52:59.318" endtime="20231212 10:52:59.816"/>
</kw>
<msg timestamp="20231212 10:52:59.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:59.318" endtime="20231212 10:52:59.817"/>
</kw>
<msg timestamp="20231212 10:52:59.817" level="INFO">${output} = 2023-12-12 10:52:58          0 
2023-12-12 10:52:58         29 f1</msg>
<status status="PASS" starttime="20231212 10:52:59.317" endtime="20231212 10:52:59.817"/>
</kw>
<msg timestamp="20231212 10:52:59.817" level="INFO">${result} = 2023-12-12 10:52:58          0 
2023-12-12 10:52:58         29 f1</msg>
<status status="PASS" starttime="20231212 10:52:59.317" endtime="20231212 10:52:59.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:52:59.817" endtime="20231212 10:52:59.818"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:52:59.822" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-9501917016/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:00.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:00.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:59.820" endtime="20231212 10:53:00.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:00.327" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:00.326" endtime="20231212 10:53:00.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:00.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:00.327" endtime="20231212 10:53:00.328"/>
</kw>
<status status="PASS" starttime="20231212 10:52:59.819" endtime="20231212 10:53:00.328"/>
</kw>
<msg timestamp="20231212 10:53:00.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:52:59.819" endtime="20231212 10:53:00.328"/>
</kw>
<msg timestamp="20231212 10:53:00.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:52:59.819" endtime="20231212 10:53:00.328"/>
</kw>
<msg timestamp="20231212 10:53:00.328" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:52:59.818" endtime="20231212 10:53:00.328"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:52:57.745" endtime="20231212 10:53:00.329"/>
</test>
<test id="s1-s5-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:00.333" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:53:00.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:00.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:00.331" endtime="20231212 10:53:00.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:00.336" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:00.335" endtime="20231212 10:53:00.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:00.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:00.336" endtime="20231212 10:53:00.337"/>
</kw>
<status status="PASS" starttime="20231212 10:53:00.331" endtime="20231212 10:53:00.337"/>
</kw>
<msg timestamp="20231212 10:53:00.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:00.331" endtime="20231212 10:53:00.337"/>
</kw>
<status status="PASS" starttime="20231212 10:53:00.330" endtime="20231212 10:53:00.337"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:00.340" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-9501917016/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:00.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:00.858" level="INFO">${output} = Completed 29 Bytes/29 Bytes (477 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-9501917016/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231212 10:53:00.339" endtime="20231212 10:53:00.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:00.860" level="INFO">Completed 29 Bytes/29 Bytes (477 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-9501917016/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231212 10:53:00.859" endtime="20231212 10:53:00.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:00.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:00.860" endtime="20231212 10:53:00.860"/>
</kw>
<status status="PASS" starttime="20231212 10:53:00.339" endtime="20231212 10:53:00.860"/>
</kw>
<msg timestamp="20231212 10:53:00.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:00.338" endtime="20231212 10:53:00.861"/>
</kw>
<msg timestamp="20231212 10:53:00.861" level="INFO">${output} = Completed 29 Bytes/29 Bytes (477 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-9501917016/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231212 10:53:00.338" endtime="20231212 10:53:00.861"/>
</kw>
<msg timestamp="20231212 10:53:00.861" level="INFO">${result} = Completed 29 Bytes/29 Bytes (477 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-9501917016/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231212 10:53:00.337" endtime="20231212 10:53:00.861"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:00.865" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-9501917016/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:01.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:01.370" level="INFO">${output} = 2023-12-12 10:53:00          0 
2023-12-12 10:53:00         29 filefile</msg>
<status status="PASS" starttime="20231212 10:53:00.863" endtime="20231212 10:53:01.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:01.371" level="INFO">2023-12-12 10:53:00          0 
2023-12-12 10:53:00         29 filefile</msg>
<status status="PASS" starttime="20231212 10:53:01.370" endtime="20231212 10:53:01.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:01.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:01.371" endtime="20231212 10:53:01.371"/>
</kw>
<status status="PASS" starttime="20231212 10:53:00.863" endtime="20231212 10:53:01.371"/>
</kw>
<msg timestamp="20231212 10:53:01.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:00.862" endtime="20231212 10:53:01.372"/>
</kw>
<msg timestamp="20231212 10:53:01.372" level="INFO">${output} = 2023-12-12 10:53:00          0 
2023-12-12 10:53:00         29 filefile</msg>
<status status="PASS" starttime="20231212 10:53:00.862" endtime="20231212 10:53:01.372"/>
</kw>
<msg timestamp="20231212 10:53:01.372" level="INFO">${result} = 2023-12-12 10:53:00          0 
2023-12-12 10:53:00         29 filefile</msg>
<status status="PASS" starttime="20231212 10:53:00.861" endtime="20231212 10:53:01.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:01.372" endtime="20231212 10:53:01.373"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:01.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-9501917016/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:01.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:01.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:01.375" endtime="20231212 10:53:01.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:01.874" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:01.873" endtime="20231212 10:53:01.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:01.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:01.874" endtime="20231212 10:53:01.874"/>
</kw>
<status status="PASS" starttime="20231212 10:53:01.374" endtime="20231212 10:53:01.875"/>
</kw>
<msg timestamp="20231212 10:53:01.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:01.374" endtime="20231212 10:53:01.875"/>
</kw>
<msg timestamp="20231212 10:53:01.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:01.373" endtime="20231212 10:53:01.875"/>
</kw>
<msg timestamp="20231212 10:53:01.875" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:53:01.373" endtime="20231212 10:53:01.875"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:01.879" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-9501917016/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:02.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:02.364" level="INFO">${output} = 2023-12-12 10:53:00          0 
2023-12-12 10:53:00         29 filefile</msg>
<status status="PASS" starttime="20231212 10:53:01.877" endtime="20231212 10:53:02.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:02.365" level="INFO">2023-12-12 10:53:00          0 
2023-12-12 10:53:00         29 filefile</msg>
<status status="PASS" starttime="20231212 10:53:02.364" endtime="20231212 10:53:02.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:02.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:02.365" endtime="20231212 10:53:02.365"/>
</kw>
<status status="PASS" starttime="20231212 10:53:01.877" endtime="20231212 10:53:02.365"/>
</kw>
<msg timestamp="20231212 10:53:02.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:01.877" endtime="20231212 10:53:02.366"/>
</kw>
<msg timestamp="20231212 10:53:02.366" level="INFO">${output} = 2023-12-12 10:53:00          0 
2023-12-12 10:53:00         29 filefile</msg>
<status status="PASS" starttime="20231212 10:53:01.876" endtime="20231212 10:53:02.366"/>
</kw>
<msg timestamp="20231212 10:53:02.366" level="INFO">${result} = 2023-12-12 10:53:00          0 
2023-12-12 10:53:00         29 filefile</msg>
<status status="PASS" starttime="20231212 10:53:01.875" endtime="20231212 10:53:02.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:02.366" endtime="20231212 10:53:02.366"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:02.370" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-9501917016/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:02.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:02.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:02.369" endtime="20231212 10:53:02.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:02.853" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:02.853" endtime="20231212 10:53:02.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:02.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:02.854" endtime="20231212 10:53:02.855"/>
</kw>
<status status="PASS" starttime="20231212 10:53:02.368" endtime="20231212 10:53:02.855"/>
</kw>
<msg timestamp="20231212 10:53:02.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:02.368" endtime="20231212 10:53:02.855"/>
</kw>
<msg timestamp="20231212 10:53:02.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:02.367" endtime="20231212 10:53:02.855"/>
</kw>
<msg timestamp="20231212 10:53:02.855" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:53:02.367" endtime="20231212 10:53:02.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:00.329" endtime="20231212 10:53:02.856"/>
</test>
<test id="s1-s5-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:02.859" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:03.339" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:03.340" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:53:02.858" endtime="20231212 10:53:03.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:03.341" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:53:03.340" endtime="20231212 10:53:03.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:03.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:03.341" endtime="20231212 10:53:03.341"/>
</kw>
<msg timestamp="20231212 10:53:03.341" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:53:02.857" endtime="20231212 10:53:03.341"/>
</kw>
<msg timestamp="20231212 10:53:03.342" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:53:02.857" endtime="20231212 10:53:03.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:03.342" endtime="20231212 10:53:03.342"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:02.856" endtime="20231212 10:53:03.342"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:52:54.186" endtime="20231212 10:53:03.343"/>
</suite>
<suite id="s1-s5-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:53:03.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:03.354" endtime="20231212 10:53:03.354"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:53:03.355" endtime="20231212 10:53:03.355"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:53:03.355" endtime="20231212 10:53:03.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:03.355" endtime="20231212 10:53:03.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:03.355" endtime="20231212 10:53:03.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:03.355" endtime="20231212 10:53:03.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:03.355" endtime="20231212 10:53:03.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:03.356" endtime="20231212 10:53:03.356"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:53:03.356" endtime="20231212 10:53:03.356"/>
</kw>
<status status="PASS" starttime="20231212 10:53:03.354" endtime="20231212 10:53:03.356"/>
</kw>
<test id="s1-s5-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:03.359" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:53:03.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:03.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:03.357" endtime="20231212 10:53:03.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:03.361" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:03.361" endtime="20231212 10:53:03.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:03.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:03.362" endtime="20231212 10:53:03.362"/>
</kw>
<status status="PASS" starttime="20231212 10:53:03.357" endtime="20231212 10:53:03.362"/>
</kw>
<msg timestamp="20231212 10:53:03.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:03.357" endtime="20231212 10:53:03.362"/>
</kw>
<status status="PASS" starttime="20231212 10:53:03.356" endtime="20231212 10:53:03.362"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:03.365" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:03.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:03.882" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:03.364" endtime="20231212 10:53:03.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:03.883" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:03.882" endtime="20231212 10:53:03.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:03.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:03.883" endtime="20231212 10:53:03.884"/>
</kw>
<msg timestamp="20231212 10:53:03.884" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:03.363" endtime="20231212 10:53:03.884"/>
</kw>
<msg timestamp="20231212 10:53:03.884" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:03.363" endtime="20231212 10:53:03.884"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:03.888" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:04.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:04.369" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:03.886" endtime="20231212 10:53:04.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:04.370" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:53:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:04.370" endtime="20231212 10:53:04.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:04.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:04.370" endtime="20231212 10:53:04.371"/>
</kw>
<msg timestamp="20231212 10:53:04.371" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:03.885" endtime="20231212 10:53:04.371"/>
</kw>
<msg timestamp="20231212 10:53:04.371" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:03.884" endtime="20231212 10:53:04.371"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:04.375" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-9501917016/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:04.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:04.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:04.373" endtime="20231212 10:53:04.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:04.870" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:04.869" endtime="20231212 10:53:04.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:04.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:04.870" endtime="20231212 10:53:04.871"/>
</kw>
<msg timestamp="20231212 10:53:04.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:04.372" endtime="20231212 10:53:04.871"/>
</kw>
<msg timestamp="20231212 10:53:04.871" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:53:04.372" endtime="20231212 10:53:04.871"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:03.356" endtime="20231212 10:53:04.871"/>
</test>
<test id="s1-s5-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:04.876" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted-non-existent --key ozone-test-9501917016/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:05.361" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:05.361" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:04.874" endtime="20231212 10:53:05.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:05.362" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:05.362" endtime="20231212 10:53:05.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:05.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:05.362" endtime="20231212 10:53:05.363"/>
</kw>
<msg timestamp="20231212 10:53:05.363" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:04.873" endtime="20231212 10:53:05.363"/>
</kw>
<msg timestamp="20231212 10:53:05.363" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:04.873" endtime="20231212 10:53:05.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:05.364" endtime="20231212 10:53:05.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:05.364" endtime="20231212 10:53:05.364"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:04.872" endtime="20231212 10:53:05.365"/>
</test>
<test id="s1-s5-s12-t3" name="Head object where path is a directory" line="43">
<kw name="Create legacy bucket" library="commonawslib">
<var>${legacy-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:53:05.367" level="INFO">${randStr} = 9375936535</msg>
<status status="PASS" starttime="20231212 10:53:05.367" endtime="20231212 10:53:05.367"/>
</kw>
<msg timestamp="20231212 10:53:05.367" level="INFO">${postfix} = ozone-test-9375936535</msg>
<status status="PASS" starttime="20231212 10:53:05.366" endtime="20231212 10:53:05.367"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${legacy_bucket}</var>
<arg>legacy-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:53:05.368" level="INFO">${legacy_bucket} = legacy-bucket-ozone-test-9375936535</msg>
<status status="PASS" starttime="20231212 10:53:05.367" endtime="20231212 10:53:05.368"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l LEGACY s3v/${legacy_bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:05.370" level="INFO">Running command 'ozone sh bucket create -l LEGACY s3v/legacy-bucket-ozone-test-9375936535 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:09.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:09.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:05.368" endtime="20231212 10:53:09.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:09.623" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:09.622" endtime="20231212 10:53:09.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:09.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:09.623" endtime="20231212 10:53:09.623"/>
</kw>
<msg timestamp="20231212 10:53:09.624" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:53:05.368" endtime="20231212 10:53:09.624"/>
</kw>
<msg timestamp="20231212 10:53:09.624" level="INFO">${legacy-bucket} = legacy-bucket-ozone-test-9375936535</msg>
<status status="PASS" starttime="20231212 10:53:05.366" endtime="20231212 10:53:09.624"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:09.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket legacy-bucket-ozone-test-9375936535 --key ozone-test-9501917016/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:10.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:10.153" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:09.625" endtime="20231212 10:53:10.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:10.154" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:10.154" endtime="20231212 10:53:10.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:10.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:10.154" endtime="20231212 10:53:10.155"/>
</kw>
<msg timestamp="20231212 10:53:10.156" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:09.625" endtime="20231212 10:53:10.156"/>
</kw>
<msg timestamp="20231212 10:53:10.156" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:09.624" endtime="20231212 10:53:10.156"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:10.159" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket legacy-bucket-ozone-test-9375936535 --key ozone-test-9501917016/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:10.637" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:10.637" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:10.157" endtime="20231212 10:53:10.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:10.638" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:10.637" endtime="20231212 10:53:10.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:10.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:10.638" endtime="20231212 10:53:10.639"/>
</kw>
<msg timestamp="20231212 10:53:10.639" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:10.157" endtime="20231212 10:53:10.639"/>
</kw>
<msg timestamp="20231212 10:53:10.639" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:10.156" endtime="20231212 10:53:10.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:10.639" endtime="20231212 10:53:10.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:10.640" endtime="20231212 10:53:10.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:05.365" endtime="20231212 10:53:10.640"/>
</test>
<test id="s1-s5-s12-t4" name="Head directory objects" line="50">
<kw name="Create obs bucket" library="commonawslib">
<var>${obs-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:53:10.642" level="INFO">${randStr} = 9441660462</msg>
<status status="PASS" starttime="20231212 10:53:10.642" endtime="20231212 10:53:10.642"/>
</kw>
<msg timestamp="20231212 10:53:10.643" level="INFO">${postfix} = ozone-test-9441660462</msg>
<status status="PASS" starttime="20231212 10:53:10.642" endtime="20231212 10:53:10.643"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>obs-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:53:10.643" level="INFO">${bucket} = obs-bucket-ozone-test-9441660462</msg>
<status status="PASS" starttime="20231212 10:53:10.643" endtime="20231212 10:53:10.643"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l OBJECT_STORE s3v/${bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:10.645" level="INFO">Running command 'ozone sh bucket create -l OBJECT_STORE s3v/obs-bucket-ozone-test-9441660462 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:14.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:14.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:10.644" endtime="20231212 10:53:14.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:14.646" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:14.645" endtime="20231212 10:53:14.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:14.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:14.646" endtime="20231212 10:53:14.647"/>
</kw>
<msg timestamp="20231212 10:53:14.647" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:53:10.643" endtime="20231212 10:53:14.647"/>
</kw>
<msg timestamp="20231212 10:53:14.647" level="INFO">${obs-bucket} = obs-bucket-ozone-test-9441660462</msg>
<status status="PASS" starttime="20231212 10:53:10.641" endtime="20231212 10:53:14.647"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:14.650" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket obs-bucket-ozone-test-9441660462 --key ozone-test-9501917016/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:15.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:15.178" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:14.649" endtime="20231212 10:53:15.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:15.179" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:15.178" endtime="20231212 10:53:15.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:15.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:15.179" endtime="20231212 10:53:15.179"/>
</kw>
<msg timestamp="20231212 10:53:15.180" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:14.648" endtime="20231212 10:53:15.180"/>
</kw>
<msg timestamp="20231212 10:53:15.180" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:14.648" endtime="20231212 10:53:15.180"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:15.183" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-9441660462 --key ozone-test-9501917016/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:15.653" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:15.653" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:15.181" endtime="20231212 10:53:15.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:15.654" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:15.654" endtime="20231212 10:53:15.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:15.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:15.654" endtime="20231212 10:53:15.655"/>
</kw>
<msg timestamp="20231212 10:53:15.655" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:15.181" endtime="20231212 10:53:15.655"/>
</kw>
<msg timestamp="20231212 10:53:15.655" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:15.180" endtime="20231212 10:53:15.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:15.655" endtime="20231212 10:53:15.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:15.656" endtime="20231212 10:53:15.656"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:15.659" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-9441660462 --key ozone-test-9501917016/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:16.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:16.136" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:15 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:15.657" endtime="20231212 10:53:16.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:16.137" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:53:15 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:16 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:16.137" endtime="20231212 10:53:16.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:16.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:16.137" endtime="20231212 10:53:16.138"/>
</kw>
<msg timestamp="20231212 10:53:16.138" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:15 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:15.657" endtime="20231212 10:53:16.138"/>
</kw>
<msg timestamp="20231212 10:53:16.138" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:15 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:15.656" endtime="20231212 10:53:16.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:10.641" endtime="20231212 10:53:16.139"/>
</test>
<test id="s1-s5-s12-t5" name="Head non existing key" line="58">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:16.143" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:16.623" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:16.623" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:16.141" endtime="20231212 10:53:16.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:16.624" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:16.624" endtime="20231212 10:53:16.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:16.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:16.625" endtime="20231212 10:53:16.625"/>
</kw>
<msg timestamp="20231212 10:53:16.625" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:16.140" endtime="20231212 10:53:16.625"/>
</kw>
<msg timestamp="20231212 10:53:16.626" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:53:16.140" endtime="20231212 10:53:16.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:16.626" endtime="20231212 10:53:16.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:16.626" endtime="20231212 10:53:16.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:16.139" endtime="20231212 10:53:16.627"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:53:03.345" endtime="20231212 10:53:16.627"/>
</suite>
<suite id="s1-s5-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:53:16.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:16.639" endtime="20231212 10:53:16.639"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:53:16.639" endtime="20231212 10:53:16.639"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:53:16.639" endtime="20231212 10:53:16.639"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:16.639" endtime="20231212 10:53:16.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:16.640" endtime="20231212 10:53:16.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:16.640" endtime="20231212 10:53:16.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:16.640" endtime="20231212 10:53:16.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:16.640" endtime="20231212 10:53:16.640"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:53:16.640" endtime="20231212 10:53:16.640"/>
</kw>
<status status="PASS" starttime="20231212 10:53:16.638" endtime="20231212 10:53:16.640"/>
</kw>
<test id="s1-s5-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:16.644" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:53:16.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:16.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:16.642" endtime="20231212 10:53:16.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:16.647" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:16.646" endtime="20231212 10:53:16.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:16.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:16.647" endtime="20231212 10:53:16.647"/>
</kw>
<status status="PASS" starttime="20231212 10:53:16.642" endtime="20231212 10:53:16.648"/>
</kw>
<msg timestamp="20231212 10:53:16.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:16.641" endtime="20231212 10:53:16.648"/>
</kw>
<status status="PASS" starttime="20231212 10:53:16.641" endtime="20231212 10:53:16.648"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:16.651" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:17.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:17.201" level="INFO">${output} = {
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:16.650" endtime="20231212 10:53:17.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:17.202" level="INFO">{
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:17.201" endtime="20231212 10:53:17.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:17.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:17.202" endtime="20231212 10:53:17.203"/>
</kw>
<status status="PASS" starttime="20231212 10:53:16.649" endtime="20231212 10:53:17.203"/>
</kw>
<msg timestamp="20231212 10:53:17.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:16.649" endtime="20231212 10:53:17.203"/>
</kw>
<msg timestamp="20231212 10:53:17.203" level="INFO">${output} = {
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:16.649" endtime="20231212 10:53:17.203"/>
</kw>
<msg timestamp="20231212 10:53:17.204" level="INFO">${result} = {
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:16.648" endtime="20231212 10:53:17.204"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:17.207" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:17.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:17.758" level="INFO">${output} = {
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:17.205" endtime="20231212 10:53:17.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:17.759" level="INFO">{
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:17.759" endtime="20231212 10:53:17.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:17.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:17.759" endtime="20231212 10:53:17.760"/>
</kw>
<status status="PASS" starttime="20231212 10:53:17.205" endtime="20231212 10:53:17.760"/>
</kw>
<msg timestamp="20231212 10:53:17.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:17.205" endtime="20231212 10:53:17.760"/>
</kw>
<msg timestamp="20231212 10:53:17.761" level="INFO">${output} = {
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:17.204" endtime="20231212 10:53:17.761"/>
</kw>
<msg timestamp="20231212 10:53:17.761" level="INFO">${result} = {
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:17.204" endtime="20231212 10:53:17.761"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:17.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:18.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:18.301" level="INFO">${output} = {
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:17.763" endtime="20231212 10:53:18.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:18.302" level="INFO">{
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:18.301" endtime="20231212 10:53:18.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:18.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:18.302" endtime="20231212 10:53:18.302"/>
</kw>
<status status="PASS" starttime="20231212 10:53:17.763" endtime="20231212 10:53:18.302"/>
</kw>
<msg timestamp="20231212 10:53:18.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:17.763" endtime="20231212 10:53:18.303"/>
</kw>
<msg timestamp="20231212 10:53:18.303" level="INFO">${output} = {
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:17.762" endtime="20231212 10:53:18.303"/>
</kw>
<msg timestamp="20231212 10:53:18.303" level="INFO">${result} = {
    "ETag": "\"d90c713c81e130e2fc63ca52cb779748\""
}</msg>
<status status="PASS" starttime="20231212 10:53:17.761" endtime="20231212 10:53:18.303"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:18.307" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:18.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:18.803" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/",
            "LastModified": "2023-12-12T10:53:17.092Z",
            "ETag": "2023-12-12T10:53:17.092Z",...</msg>
<status status="PASS" starttime="20231212 10:53:18.305" endtime="20231212 10:53:18.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:18.805" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/",
            "LastModified": "2023-12-12T10:53:17.092Z",
            "ETag": "2023-12-12T10:53:17.092Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f1",
            "LastModified": "2023-12-12T10:53:17.144Z",
            "ETag": "2023-12-12T10:53:17.144Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f2",
            "LastModified": "2023-12-12T10:53:17.695Z",
            "ETag": "2023-12-12T10:53:17.695Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f3",
            "LastModified": "2023-12-12T10:53:18.247Z",
            "ETag": "2023-12-12T10:53:18.247Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:53:18.804" endtime="20231212 10:53:18.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:18.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:18.805" endtime="20231212 10:53:18.806"/>
</kw>
<status status="PASS" starttime="20231212 10:53:18.305" endtime="20231212 10:53:18.806"/>
</kw>
<msg timestamp="20231212 10:53:18.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:18.304" endtime="20231212 10:53:18.806"/>
</kw>
<msg timestamp="20231212 10:53:18.806" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/",
            "LastModified": "2023-12-12T10:53:17.092Z",
            "ETag": "2023-12-12T10:53:17.092Z",...</msg>
<status status="PASS" starttime="20231212 10:53:18.304" endtime="20231212 10:53:18.806"/>
</kw>
<msg timestamp="20231212 10:53:18.807" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/",
            "LastModified": "2023-12-12T10:53:17.092Z",
            "ETag": "2023-12-12T10:53:17.092Z",...</msg>
<status status="PASS" starttime="20231212 10:53:18.303" endtime="20231212 10:53:18.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:18.807" endtime="20231212 10:53:18.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:18.808" endtime="20231212 10:53:18.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:18.808" endtime="20231212 10:53:18.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:18.809" endtime="20231212 10:53:18.809"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:18.809" endtime="20231212 10:53:18.810"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:18.815" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket encrypted --delete 'Objects=[{Key=ozone-test-9501917016/multidelete/key=value/f1},{Key=ozone-test-9501917016/multidelete/key=value/f2},{Key=ozone-test-9501917016/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:19.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:19.346" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231212 10:53:18.812" endtime="20231212 10:53:19.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:19.348" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:53:19.347" endtime="20231212 10:53:19.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:19.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:19.348" endtime="20231212 10:53:19.348"/>
</kw>
<status status="PASS" starttime="20231212 10:53:18.812" endtime="20231212 10:53:19.349"/>
</kw>
<msg timestamp="20231212 10:53:19.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:18.812" endtime="20231212 10:53:19.349"/>
</kw>
<msg timestamp="20231212 10:53:19.349" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231212 10:53:18.811" endtime="20231212 10:53:19.349"/>
</kw>
<msg timestamp="20231212 10:53:19.349" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231212 10:53:18.810" endtime="20231212 10:53:19.349"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:19.350" endtime="20231212 10:53:19.350"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:19.355" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:19.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:19.842" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/",
            "LastModified": "2023-12-12T10:53:17.092Z",
            "ETag": "2023-12-12T10:53:17.092Z",...</msg>
<status status="PASS" starttime="20231212 10:53:19.352" endtime="20231212 10:53:19.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:19.843" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/",
            "LastModified": "2023-12-12T10:53:17.092Z",
            "ETag": "2023-12-12T10:53:17.092Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/f3",
            "LastModified": "2023-12-12T10:53:18.247Z",
            "ETag": "2023-12-12T10:53:18.247Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:53:19.842" endtime="20231212 10:53:19.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:19.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:19.843" endtime="20231212 10:53:19.843"/>
</kw>
<status status="PASS" starttime="20231212 10:53:19.352" endtime="20231212 10:53:19.844"/>
</kw>
<msg timestamp="20231212 10:53:19.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:19.351" endtime="20231212 10:53:19.844"/>
</kw>
<msg timestamp="20231212 10:53:19.844" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/",
            "LastModified": "2023-12-12T10:53:17.092Z",
            "ETag": "2023-12-12T10:53:17.092Z",...</msg>
<status status="PASS" starttime="20231212 10:53:19.351" endtime="20231212 10:53:19.844"/>
</kw>
<msg timestamp="20231212 10:53:19.844" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/multidelete/key=value/",
            "LastModified": "2023-12-12T10:53:17.092Z",
            "ETag": "2023-12-12T10:53:17.092Z",...</msg>
<status status="PASS" starttime="20231212 10:53:19.350" endtime="20231212 10:53:19.844"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:19.845" endtime="20231212 10:53:19.845"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:19.845" endtime="20231212 10:53:19.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:19.846" endtime="20231212 10:53:19.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:19.846" endtime="20231212 10:53:19.847"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:19.847" endtime="20231212 10:53:19.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:16.641" endtime="20231212 10:53:19.847"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:53:16.629" endtime="20231212 10:53:19.848"/>
</suite>
<suite id="s1-s5-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:53:19.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:19.859" endtime="20231212 10:53:19.859"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:53:19.859" endtime="20231212 10:53:19.859"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:53:19.859" endtime="20231212 10:53:19.859"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:19.859" endtime="20231212 10:53:19.860"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:19.860" endtime="20231212 10:53:19.860"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:19.860" endtime="20231212 10:53:19.860"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:19.860" endtime="20231212 10:53:19.860"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:53:19.860" endtime="20231212 10:53:19.860"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:53:19.861" endtime="20231212 10:53:19.861"/>
</kw>
<status status="PASS" starttime="20231212 10:53:19.858" endtime="20231212 10:53:19.861"/>
</kw>
<test id="s1-s5-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:19.865" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:53:19.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:19.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:19.863" endtime="20231212 10:53:19.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:19.868" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:19.867" endtime="20231212 10:53:19.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:19.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:19.868" endtime="20231212 10:53:19.868"/>
</kw>
<status status="PASS" starttime="20231212 10:53:19.862" endtime="20231212 10:53:19.868"/>
</kw>
<msg timestamp="20231212 10:53:19.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:19.862" endtime="20231212 10:53:19.869"/>
</kw>
<status status="PASS" starttime="20231212 10:53:19.861" endtime="20231212 10:53:19.869"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:19.872" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:20.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:20.406" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:19.871" endtime="20231212 10:53:20.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:20.407" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:20.406" endtime="20231212 10:53:20.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:20.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:20.407" endtime="20231212 10:53:20.407"/>
</kw>
<status status="PASS" starttime="20231212 10:53:19.870" endtime="20231212 10:53:20.407"/>
</kw>
<msg timestamp="20231212 10:53:20.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:19.870" endtime="20231212 10:53:20.408"/>
</kw>
<msg timestamp="20231212 10:53:20.408" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:19.870" endtime="20231212 10:53:20.408"/>
</kw>
<msg timestamp="20231212 10:53:20.408" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:19.869" endtime="20231212 10:53:20.408"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:20.412" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:20.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:20.982" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/putobject/key=value/",
            "LastModified": "2023-12-12T10:53:20.318Z",
            "ETag": "2023-12-12T10:53:20.318Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:53:20.410" endtime="20231212 10:53:20.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:20.983" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9501917016/putobject/key=value/",
            "LastModified": "2023-12-12T10:53:20.318Z",
            "ETag": "2023-12-12T10:53:20.318Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9501917016/putobject/key=value/f1",
            "LastModified": "2023-12-12T10:53:20.350Z",
            "ETag": "2023-12-12T10:53:20.350Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:53:20.983" endtime="20231212 10:53:20.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:20.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:20.983" endtime="20231212 10:53:20.984"/>
</kw>
<status status="PASS" starttime="20231212 10:53:20.409" endtime="20231212 10:53:20.984"/>
</kw>
<msg timestamp="20231212 10:53:20.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:20.409" endtime="20231212 10:53:20.984"/>
</kw>
<msg timestamp="20231212 10:53:20.984" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/putobject/key=value/",
            "LastModified": "2023-12-12T10:53:20.318Z",
            "ETag": "2023-12-12T10:53:20.318Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:53:20.409" endtime="20231212 10:53:20.984"/>
</kw>
<msg timestamp="20231212 10:53:20.984" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/putobject/key=value/",
            "LastModified": "2023-12-12T10:53:20.318Z",
            "ETag": "2023-12-12T10:53:20.318Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:53:20.408" endtime="20231212 10:53:20.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:20.985" endtime="20231212 10:53:20.985"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:20.988" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:20.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:20.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:20.986" endtime="20231212 10:53:20.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:20.990" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:20.990" endtime="20231212 10:53:20.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:20.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:20.991" endtime="20231212 10:53:20.991"/>
</kw>
<status status="PASS" starttime="20231212 10:53:20.986" endtime="20231212 10:53:20.991"/>
</kw>
<msg timestamp="20231212 10:53:20.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:20.985" endtime="20231212 10:53:20.991"/>
</kw>
<status status="PASS" starttime="20231212 10:53:20.985" endtime="20231212 10:53:20.991"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:20.995" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:21.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:21.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:20.994" endtime="20231212 10:53:21.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:21.482" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:21.482" endtime="20231212 10:53:21.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:21.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:21.483" endtime="20231212 10:53:21.483"/>
</kw>
<status status="PASS" starttime="20231212 10:53:20.993" endtime="20231212 10:53:21.483"/>
</kw>
<msg timestamp="20231212 10:53:21.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:20.993" endtime="20231212 10:53:21.483"/>
</kw>
<msg timestamp="20231212 10:53:21.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:20.992" endtime="20231212 10:53:21.483"/>
</kw>
<msg timestamp="20231212 10:53:21.484" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:53:20.992" endtime="20231212 10:53:21.484"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:21.487" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-9501917016/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:21.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:21.963" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/putobject/key=value/",
            "LastModified": "2023-12-12T10:53:20.318Z",
            "ETag": "2023-12-12T10:53:20.318Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:53:21.486" endtime="20231212 10:53:21.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:21.964" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9501917016/putobject/key=value/",
            "LastModified": "2023-12-12T10:53:20.318Z",
            "ETag": "2023-12-12T10:53:20.318Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9501917016/putobject/key=value/f1",
            "LastModified": "2023-12-12T10:53:20.350Z",
            "ETag": "2023-12-12T10:53:20.350Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9501917016/putobject/key=value/zerobyte/",
            "LastModified": "2023-12-12T10:53:21.433Z",
            "ETag": "2023-12-12T10:53:21.433Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:53:21.964" endtime="20231212 10:53:21.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:21.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:21.965" endtime="20231212 10:53:21.965"/>
</kw>
<status status="PASS" starttime="20231212 10:53:21.485" endtime="20231212 10:53:21.965"/>
</kw>
<msg timestamp="20231212 10:53:21.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:21.485" endtime="20231212 10:53:21.965"/>
</kw>
<msg timestamp="20231212 10:53:21.966" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/putobject/key=value/",
            "LastModified": "2023-12-12T10:53:20.318Z",
            "ETag": "2023-12-12T10:53:20.318Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:53:21.484" endtime="20231212 10:53:21.966"/>
</kw>
<msg timestamp="20231212 10:53:21.966" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9501917016/putobject/key=value/",
            "LastModified": "2023-12-12T10:53:20.318Z",
            "ETag": "2023-12-12T10:53:20.318Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:53:21.484" endtime="20231212 10:53:21.966"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:21.966" endtime="20231212 10:53:21.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:19.861" endtime="20231212 10:53:21.967"/>
</test>
<test id="s1-s5-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:21.971" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:22.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:22.471" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:21.970" endtime="20231212 10:53:22.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:22.472" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:22.472" endtime="20231212 10:53:22.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:22.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:22.473" endtime="20231212 10:53:22.473"/>
</kw>
<status status="PASS" starttime="20231212 10:53:21.969" endtime="20231212 10:53:22.473"/>
</kw>
<msg timestamp="20231212 10:53:22.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:21.969" endtime="20231212 10:53:22.473"/>
</kw>
<msg timestamp="20231212 10:53:22.474" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:21.968" endtime="20231212 10:53:22.474"/>
</kw>
<msg timestamp="20231212 10:53:22.474" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:21.968" endtime="20231212 10:53:22.474"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:22.478" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:22.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:22.480" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:53:22.476" endtime="20231212 10:53:22.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:22.481" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:53:22.481" endtime="20231212 10:53:22.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:22.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:22.481" endtime="20231212 10:53:22.482"/>
</kw>
<status status="PASS" starttime="20231212 10:53:22.475" endtime="20231212 10:53:22.482"/>
</kw>
<msg timestamp="20231212 10:53:22.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:22.475" endtime="20231212 10:53:22.482"/>
</kw>
<msg timestamp="20231212 10:53:22.482" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:53:22.474" endtime="20231212 10:53:22.482"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:22.485" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:22.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:22.487" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:53:22.484" endtime="20231212 10:53:22.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:22.488" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:53:22.488" endtime="20231212 10:53:22.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:22.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:22.488" endtime="20231212 10:53:22.489"/>
</kw>
<status status="PASS" starttime="20231212 10:53:22.483" endtime="20231212 10:53:22.489"/>
</kw>
<msg timestamp="20231212 10:53:22.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:22.483" endtime="20231212 10:53:22.489"/>
</kw>
<msg timestamp="20231212 10:53:22.489" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:53:22.482" endtime="20231212 10:53:22.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:22.489" endtime="20231212 10:53:22.490"/>
</kw>
<status status="PASS" starttime="20231212 10:53:22.474" endtime="20231212 10:53:22.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:21.967" endtime="20231212 10:53:22.490"/>
</test>
<test id="s1-s5-s14-t3" name="Get object with wrong signature" line="49">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:53:22.491" endtime="20231212 10:53:22.491"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:22.494" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/encrypted/ozone-test-9501917016/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:22.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:22.506" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:53:22.492" endtime="20231212 10:53:22.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:22.507" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0  37148      0 --:--:-- --:--:-- --:--:-- 41166
HTTP/1.1 403 Forbidden
Date: Tue, 12 Dec 2023 10:53:22 GMT
Cache-Control: no-cache
Expires: Tue, 12 Dec 2023 10:53:22 GMT
Pragma: no-cache
Content-Type: text/plain;charset=utf-8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: FDrZ2CExs29c
x-amz-request-id: 2c611441-f0a7-4dac-aa51-1779b9e651f3
Content-Length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20231212 10:53:22.506" endtime="20231212 10:53:22.507"/>
</kw>
<msg timestamp="20231212 10:53:22.507" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:53:22.492" endtime="20231212 10:53:22.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:22.507" endtime="20231212 10:53:22.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:22.491" endtime="20231212 10:53:22.508"/>
</test>
<test id="s1-s5-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="54">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:22.513" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:23.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:23.027" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:22.511" endtime="20231212 10:53:23.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:23.028" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:23.028" endtime="20231212 10:53:23.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:23.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:23.029" endtime="20231212 10:53:23.029"/>
</kw>
<status status="PASS" starttime="20231212 10:53:22.511" endtime="20231212 10:53:23.029"/>
</kw>
<msg timestamp="20231212 10:53:23.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:22.510" endtime="20231212 10:53:23.029"/>
</kw>
<msg timestamp="20231212 10:53:23.029" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:22.510" endtime="20231212 10:53:23.029"/>
</kw>
<msg timestamp="20231212 10:53:23.030" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:22.509" endtime="20231212 10:53:23.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:23.030" endtime="20231212 10:53:23.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:23.030" endtime="20231212 10:53:23.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:23.031" endtime="20231212 10:53:23.031"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:23.034" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:53:23.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:23.036" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20231212 10:53:23.032" endtime="20231212 10:53:23.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:23.037" level="INFO">Rando</msg>
<status status="PASS" starttime="20231212 10:53:23.037" endtime="20231212 10:53:23.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:23.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:23.037" endtime="20231212 10:53:23.038"/>
</kw>
<status status="PASS" starttime="20231212 10:53:23.032" endtime="20231212 10:53:23.038"/>
</kw>
<msg timestamp="20231212 10:53:23.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:23.032" endtime="20231212 10:53:23.038"/>
</kw>
<msg timestamp="20231212 10:53:23.039" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20231212 10:53:23.031" endtime="20231212 10:53:23.039"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:23.041" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:23.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:23.043" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20231212 10:53:23.040" endtime="20231212 10:53:23.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:23.044" level="INFO">Rando</msg>
<status status="PASS" starttime="20231212 10:53:23.044" endtime="20231212 10:53:23.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:23.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:23.044" endtime="20231212 10:53:23.045"/>
</kw>
<status status="PASS" starttime="20231212 10:53:23.039" endtime="20231212 10:53:23.045"/>
</kw>
<msg timestamp="20231212 10:53:23.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:23.039" endtime="20231212 10:53:23.045"/>
</kw>
<msg timestamp="20231212 10:53:23.045" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20231212 10:53:23.039" endtime="20231212 10:53:23.045"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:23.045" endtime="20231212 10:53:23.046"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:23.049" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:23.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:23.547" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:23.048" endtime="20231212 10:53:23.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:23.548" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:23.547" endtime="20231212 10:53:23.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:23.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:23.548" endtime="20231212 10:53:23.549"/>
</kw>
<status status="PASS" starttime="20231212 10:53:23.047" endtime="20231212 10:53:23.549"/>
</kw>
<msg timestamp="20231212 10:53:23.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:23.047" endtime="20231212 10:53:23.549"/>
</kw>
<msg timestamp="20231212 10:53:23.549" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:23.047" endtime="20231212 10:53:23.549"/>
</kw>
<msg timestamp="20231212 10:53:23.549" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:23.046" endtime="20231212 10:53:23.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:23.549" endtime="20231212 10:53:23.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:23.550" endtime="20231212 10:53:23.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:23.550" endtime="20231212 10:53:23.551"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:23.554" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:53:23.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:23.556" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20231212 10:53:23.552" endtime="20231212 10:53:23.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:23.557" level="INFO">ndo</msg>
<status status="PASS" starttime="20231212 10:53:23.556" endtime="20231212 10:53:23.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:23.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:23.557" endtime="20231212 10:53:23.557"/>
</kw>
<status status="PASS" starttime="20231212 10:53:23.552" endtime="20231212 10:53:23.558"/>
</kw>
<msg timestamp="20231212 10:53:23.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:23.551" endtime="20231212 10:53:23.558"/>
</kw>
<msg timestamp="20231212 10:53:23.558" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20231212 10:53:23.551" endtime="20231212 10:53:23.558"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:23.561" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:23.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:23.563" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20231212 10:53:23.559" endtime="20231212 10:53:23.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:23.563" level="INFO">ndo</msg>
<status status="PASS" starttime="20231212 10:53:23.563" endtime="20231212 10:53:23.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:23.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:23.564" endtime="20231212 10:53:23.564"/>
</kw>
<status status="PASS" starttime="20231212 10:53:23.559" endtime="20231212 10:53:23.564"/>
</kw>
<msg timestamp="20231212 10:53:23.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:23.559" endtime="20231212 10:53:23.564"/>
</kw>
<msg timestamp="20231212 10:53:23.564" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20231212 10:53:23.558" endtime="20231212 10:53:23.565"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:23.565" endtime="20231212 10:53:23.565"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:23.568" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:24.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:24.056" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:23.567" endtime="20231212 10:53:24.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:24.057" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:24.056" endtime="20231212 10:53:24.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:24.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:24.057" endtime="20231212 10:53:24.058"/>
</kw>
<status status="PASS" starttime="20231212 10:53:23.566" endtime="20231212 10:53:24.058"/>
</kw>
<msg timestamp="20231212 10:53:24.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:23.566" endtime="20231212 10:53:24.058"/>
</kw>
<msg timestamp="20231212 10:53:24.058" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:23.566" endtime="20231212 10:53:24.058"/>
</kw>
<msg timestamp="20231212 10:53:24.058" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:23.565" endtime="20231212 10:53:24.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:24.059" endtime="20231212 10:53:24.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:24.059" endtime="20231212 10:53:24.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:24.059" endtime="20231212 10:53:24.060"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:24.063" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:53:24.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:24.065" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20231212 10:53:24.061" endtime="20231212 10:53:24.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:24.065" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20231212 10:53:24.065" endtime="20231212 10:53:24.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:24.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:24.066" endtime="20231212 10:53:24.066"/>
</kw>
<status status="PASS" starttime="20231212 10:53:24.061" endtime="20231212 10:53:24.066"/>
</kw>
<msg timestamp="20231212 10:53:24.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:24.060" endtime="20231212 10:53:24.066"/>
</kw>
<msg timestamp="20231212 10:53:24.067" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20231212 10:53:24.060" endtime="20231212 10:53:24.067"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:24.069" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:24.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:24.071" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20231212 10:53:24.068" endtime="20231212 10:53:24.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:24.072" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20231212 10:53:24.071" endtime="20231212 10:53:24.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:24.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:24.072" endtime="20231212 10:53:24.072"/>
</kw>
<status status="PASS" starttime="20231212 10:53:24.067" endtime="20231212 10:53:24.073"/>
</kw>
<msg timestamp="20231212 10:53:24.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:24.067" endtime="20231212 10:53:24.073"/>
</kw>
<msg timestamp="20231212 10:53:24.073" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20231212 10:53:24.067" endtime="20231212 10:53:24.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:24.073" endtime="20231212 10:53:24.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:22.509" endtime="20231212 10:53:24.074"/>
</test>
<test id="s1-s5-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="80">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:24.078" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:24.557" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:24.557" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231212 10:53:24.076" endtime="20231212 10:53:24.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:24.558" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231212 10:53:24.557" endtime="20231212 10:53:24.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:24.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:24.558" endtime="20231212 10:53:24.559"/>
</kw>
<msg timestamp="20231212 10:53:24.559" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231212 10:53:24.076" endtime="20231212 10:53:24.559"/>
</kw>
<msg timestamp="20231212 10:53:24.559" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231212 10:53:24.075" endtime="20231212 10:53:24.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:24.559" endtime="20231212 10:53:24.560"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:24.074" endtime="20231212 10:53:24.560"/>
</test>
<test id="s1-s5-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="85">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:24.565" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:25.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:25.080" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:24.563" endtime="20231212 10:53:25.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:25.081" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:25.080" endtime="20231212 10:53:25.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:25.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:25.081" endtime="20231212 10:53:25.082"/>
</kw>
<status status="PASS" starttime="20231212 10:53:24.563" endtime="20231212 10:53:25.082"/>
</kw>
<msg timestamp="20231212 10:53:25.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:24.562" endtime="20231212 10:53:25.082"/>
</kw>
<msg timestamp="20231212 10:53:25.082" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:24.562" endtime="20231212 10:53:25.082"/>
</kw>
<msg timestamp="20231212 10:53:25.082" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:24.561" endtime="20231212 10:53:25.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:25.082" endtime="20231212 10:53:25.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:25.083" endtime="20231212 10:53:25.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:25.083" endtime="20231212 10:53:25.084"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:25.087" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:25.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:25.089" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.085" endtime="20231212 10:53:25.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:25.090" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.089" endtime="20231212 10:53:25.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:25.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:25.090" endtime="20231212 10:53:25.091"/>
</kw>
<status status="PASS" starttime="20231212 10:53:25.085" endtime="20231212 10:53:25.091"/>
</kw>
<msg timestamp="20231212 10:53:25.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:25.084" endtime="20231212 10:53:25.091"/>
</kw>
<msg timestamp="20231212 10:53:25.091" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.084" endtime="20231212 10:53:25.091"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:25.094" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:25.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:25.096" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.093" endtime="20231212 10:53:25.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:25.097" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.096" endtime="20231212 10:53:25.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:25.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:25.097" endtime="20231212 10:53:25.097"/>
</kw>
<status status="PASS" starttime="20231212 10:53:25.092" endtime="20231212 10:53:25.098"/>
</kw>
<msg timestamp="20231212 10:53:25.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:25.092" endtime="20231212 10:53:25.098"/>
</kw>
<msg timestamp="20231212 10:53:25.098" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.091" endtime="20231212 10:53:25.098"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:25.098" endtime="20231212 10:53:25.098"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:24.560" endtime="20231212 10:53:25.099"/>
</test>
<test id="s1-s5-s14-t7" name="Get Partial object from s3 with only start offset" line="94">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:25.103" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:25.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:25.609" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:25.102" endtime="20231212 10:53:25.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:25.610" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:25.610" endtime="20231212 10:53:25.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:25.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:25.611" endtime="20231212 10:53:25.611"/>
</kw>
<status status="PASS" starttime="20231212 10:53:25.101" endtime="20231212 10:53:25.611"/>
</kw>
<msg timestamp="20231212 10:53:25.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:25.101" endtime="20231212 10:53:25.611"/>
</kw>
<msg timestamp="20231212 10:53:25.612" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:25.100" endtime="20231212 10:53:25.612"/>
</kw>
<msg timestamp="20231212 10:53:25.612" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:25.100" endtime="20231212 10:53:25.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:25.612" endtime="20231212 10:53:25.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:25.612" endtime="20231212 10:53:25.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:25.613" endtime="20231212 10:53:25.613"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:25.616" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:25.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:25.618" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.615" endtime="20231212 10:53:25.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:25.619" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.619" endtime="20231212 10:53:25.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:25.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:25.619" endtime="20231212 10:53:25.620"/>
</kw>
<status status="PASS" starttime="20231212 10:53:25.614" endtime="20231212 10:53:25.620"/>
</kw>
<msg timestamp="20231212 10:53:25.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:25.614" endtime="20231212 10:53:25.620"/>
</kw>
<msg timestamp="20231212 10:53:25.620" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.613" endtime="20231212 10:53:25.620"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:25.623" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:25.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:25.625" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.622" endtime="20231212 10:53:25.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:25.626" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.625" endtime="20231212 10:53:25.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:25.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:25.626" endtime="20231212 10:53:25.626"/>
</kw>
<status status="PASS" starttime="20231212 10:53:25.621" endtime="20231212 10:53:25.627"/>
</kw>
<msg timestamp="20231212 10:53:25.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:25.621" endtime="20231212 10:53:25.627"/>
</kw>
<msg timestamp="20231212 10:53:25.627" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:25.621" endtime="20231212 10:53:25.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:25.627" endtime="20231212 10:53:25.628"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:25.099" endtime="20231212 10:53:25.628"/>
</test>
<test id="s1-s5-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="103">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:25.632" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:26.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:26.122" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:25.631" endtime="20231212 10:53:26.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:26.123" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:26.122" endtime="20231212 10:53:26.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:26.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:26.123" endtime="20231212 10:53:26.124"/>
</kw>
<status status="PASS" starttime="20231212 10:53:25.630" endtime="20231212 10:53:26.124"/>
</kw>
<msg timestamp="20231212 10:53:26.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:25.630" endtime="20231212 10:53:26.124"/>
</kw>
<msg timestamp="20231212 10:53:26.124" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:25.630" endtime="20231212 10:53:26.124"/>
</kw>
<msg timestamp="20231212 10:53:26.124" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:25.629" endtime="20231212 10:53:26.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:26.125" endtime="20231212 10:53:26.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:26.125" endtime="20231212 10:53:26.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:26.125" endtime="20231212 10:53:26.126"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:26.129" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:53:26.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:26.131" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20231212 10:53:26.127" endtime="20231212 10:53:26.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:26.131" level="INFO">R</msg>
<status status="PASS" starttime="20231212 10:53:26.131" endtime="20231212 10:53:26.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:26.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:26.132" endtime="20231212 10:53:26.132"/>
</kw>
<status status="PASS" starttime="20231212 10:53:26.127" endtime="20231212 10:53:26.132"/>
</kw>
<msg timestamp="20231212 10:53:26.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:26.126" endtime="20231212 10:53:26.132"/>
</kw>
<msg timestamp="20231212 10:53:26.132" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20231212 10:53:26.126" endtime="20231212 10:53:26.132"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:26.135" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:26.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:26.137" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20231212 10:53:26.134" endtime="20231212 10:53:26.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:26.137" level="INFO">R</msg>
<status status="PASS" starttime="20231212 10:53:26.137" endtime="20231212 10:53:26.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:26.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:26.138" endtime="20231212 10:53:26.138"/>
</kw>
<status status="PASS" starttime="20231212 10:53:26.133" endtime="20231212 10:53:26.138"/>
</kw>
<msg timestamp="20231212 10:53:26.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:26.133" endtime="20231212 10:53:26.138"/>
</kw>
<msg timestamp="20231212 10:53:26.139" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20231212 10:53:26.133" endtime="20231212 10:53:26.139"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:26.139" endtime="20231212 10:53:26.139"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:26.142" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:26.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:26.642" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:26.141" endtime="20231212 10:53:26.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:26.643" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:26.642" endtime="20231212 10:53:26.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:26.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:26.643" endtime="20231212 10:53:26.644"/>
</kw>
<status status="PASS" starttime="20231212 10:53:26.141" endtime="20231212 10:53:26.644"/>
</kw>
<msg timestamp="20231212 10:53:26.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:26.140" endtime="20231212 10:53:26.644"/>
</kw>
<msg timestamp="20231212 10:53:26.644" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:26.140" endtime="20231212 10:53:26.644"/>
</kw>
<msg timestamp="20231212 10:53:26.644" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:26.139" endtime="20231212 10:53:26.644"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:26.645" endtime="20231212 10:53:26.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:26.645" endtime="20231212 10:53:26.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:26.646" endtime="20231212 10:53:26.646"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:26.650" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:53:26.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:26.652" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20231212 10:53:26.648" endtime="20231212 10:53:26.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:26.653" level="INFO">o</msg>
<status status="PASS" starttime="20231212 10:53:26.653" endtime="20231212 10:53:26.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:26.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:26.653" endtime="20231212 10:53:26.654"/>
</kw>
<status status="PASS" starttime="20231212 10:53:26.647" endtime="20231212 10:53:26.654"/>
</kw>
<msg timestamp="20231212 10:53:26.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:26.647" endtime="20231212 10:53:26.654"/>
</kw>
<msg timestamp="20231212 10:53:26.654" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20231212 10:53:26.646" endtime="20231212 10:53:26.654"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:26.657" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:26.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:26.659" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20231212 10:53:26.656" endtime="20231212 10:53:26.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:26.660" level="INFO">o</msg>
<status status="PASS" starttime="20231212 10:53:26.659" endtime="20231212 10:53:26.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:26.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:26.660" endtime="20231212 10:53:26.660"/>
</kw>
<status status="PASS" starttime="20231212 10:53:26.655" endtime="20231212 10:53:26.661"/>
</kw>
<msg timestamp="20231212 10:53:26.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:26.655" endtime="20231212 10:53:26.661"/>
</kw>
<msg timestamp="20231212 10:53:26.661" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20231212 10:53:26.654" endtime="20231212 10:53:26.661"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:26.661" endtime="20231212 10:53:26.662"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:25.628" endtime="20231212 10:53:26.662"/>
</test>
<test id="s1-s5-s14-t9" name="Get Partial object from s3 to get last n bytes" line="120">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:26.666" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:27.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:27.180" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:26.665" endtime="20231212 10:53:27.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:27.181" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:27.181" endtime="20231212 10:53:27.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:27.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:27.181" endtime="20231212 10:53:27.182"/>
</kw>
<status status="PASS" starttime="20231212 10:53:26.664" endtime="20231212 10:53:27.182"/>
</kw>
<msg timestamp="20231212 10:53:27.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:26.664" endtime="20231212 10:53:27.182"/>
</kw>
<msg timestamp="20231212 10:53:27.182" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:26.663" endtime="20231212 10:53:27.182"/>
</kw>
<msg timestamp="20231212 10:53:27.183" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:53:26.663" endtime="20231212 10:53:27.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:27.183" endtime="20231212 10:53:27.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:27.183" endtime="20231212 10:53:27.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:27.184" endtime="20231212 10:53:27.184"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:27.187" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:53:27.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:27.189" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20231212 10:53:27.185" endtime="20231212 10:53:27.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:27.190" level="INFO">ext</msg>
<status status="PASS" starttime="20231212 10:53:27.189" endtime="20231212 10:53:27.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:27.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:27.190" endtime="20231212 10:53:27.191"/>
</kw>
<status status="PASS" starttime="20231212 10:53:27.185" endtime="20231212 10:53:27.191"/>
</kw>
<msg timestamp="20231212 10:53:27.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:27.185" endtime="20231212 10:53:27.191"/>
</kw>
<msg timestamp="20231212 10:53:27.191" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20231212 10:53:27.184" endtime="20231212 10:53:27.191"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:27.194" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:27.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:27.196" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20231212 10:53:27.193" endtime="20231212 10:53:27.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:27.197" level="INFO">ext</msg>
<status status="PASS" starttime="20231212 10:53:27.197" endtime="20231212 10:53:27.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:27.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:27.197" endtime="20231212 10:53:27.198"/>
</kw>
<status status="PASS" starttime="20231212 10:53:27.192" endtime="20231212 10:53:27.198"/>
</kw>
<msg timestamp="20231212 10:53:27.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:27.192" endtime="20231212 10:53:27.198"/>
</kw>
<msg timestamp="20231212 10:53:27.198" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20231212 10:53:27.191" endtime="20231212 10:53:27.198"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:27.198" endtime="20231212 10:53:27.199"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:27.202" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:27.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:27.704" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:27.200" endtime="20231212 10:53:27.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:27.706" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:27.705" endtime="20231212 10:53:27.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:27.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:27.706" endtime="20231212 10:53:27.706"/>
</kw>
<status status="PASS" starttime="20231212 10:53:27.200" endtime="20231212 10:53:27.707"/>
</kw>
<msg timestamp="20231212 10:53:27.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:27.200" endtime="20231212 10:53:27.707"/>
</kw>
<msg timestamp="20231212 10:53:27.707" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:27.199" endtime="20231212 10:53:27.707"/>
</kw>
<msg timestamp="20231212 10:53:27.707" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:27.199" endtime="20231212 10:53:27.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:27.707" endtime="20231212 10:53:27.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:27.708" endtime="20231212 10:53:27.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:27.708" endtime="20231212 10:53:27.709"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:27.712" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:27.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:27.714" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:27.710" endtime="20231212 10:53:27.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:27.715" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:27.715" endtime="20231212 10:53:27.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:27.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:27.715" endtime="20231212 10:53:27.716"/>
</kw>
<status status="PASS" starttime="20231212 10:53:27.710" endtime="20231212 10:53:27.716"/>
</kw>
<msg timestamp="20231212 10:53:27.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:27.709" endtime="20231212 10:53:27.716"/>
</kw>
<msg timestamp="20231212 10:53:27.716" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:27.709" endtime="20231212 10:53:27.716"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:27.719" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:27.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:27.721" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:27.718" endtime="20231212 10:53:27.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:27.722" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:27.722" endtime="20231212 10:53:27.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:27.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:27.722" endtime="20231212 10:53:27.723"/>
</kw>
<status status="PASS" starttime="20231212 10:53:27.717" endtime="20231212 10:53:27.723"/>
</kw>
<msg timestamp="20231212 10:53:27.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:27.717" endtime="20231212 10:53:27.723"/>
</kw>
<msg timestamp="20231212 10:53:27.723" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:27.717" endtime="20231212 10:53:27.723"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:27.723" endtime="20231212 10:53:27.724"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:26.662" endtime="20231212 10:53:27.724"/>
</test>
<test id="s1-s5-s14-t10" name="Incorrect values for end and start offset" line="138">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:27.729" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:28.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:28.242" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:27.727" endtime="20231212 10:53:28.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:28.244" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:28 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:28.243" endtime="20231212 10:53:28.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:28.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:28.244" endtime="20231212 10:53:28.244"/>
</kw>
<status status="PASS" starttime="20231212 10:53:27.727" endtime="20231212 10:53:28.244"/>
</kw>
<msg timestamp="20231212 10:53:28.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:27.726" endtime="20231212 10:53:28.245"/>
</kw>
<msg timestamp="20231212 10:53:28.245" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:27.726" endtime="20231212 10:53:28.245"/>
</kw>
<msg timestamp="20231212 10:53:28.245" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:27.725" endtime="20231212 10:53:28.245"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:28.245" endtime="20231212 10:53:28.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:28.246" endtime="20231212 10:53:28.246"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:28.250" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:28.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:28.252" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.247" endtime="20231212 10:53:28.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:28.253" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.252" endtime="20231212 10:53:28.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:28.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:28.253" endtime="20231212 10:53:28.254"/>
</kw>
<status status="PASS" starttime="20231212 10:53:28.247" endtime="20231212 10:53:28.254"/>
</kw>
<msg timestamp="20231212 10:53:28.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:28.247" endtime="20231212 10:53:28.254"/>
</kw>
<msg timestamp="20231212 10:53:28.254" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.246" endtime="20231212 10:53:28.254"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:28.258" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:28.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:28.259" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.256" endtime="20231212 10:53:28.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:28.260" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.260" endtime="20231212 10:53:28.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:28.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:28.260" endtime="20231212 10:53:28.261"/>
</kw>
<status status="PASS" starttime="20231212 10:53:28.255" endtime="20231212 10:53:28.261"/>
</kw>
<msg timestamp="20231212 10:53:28.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:28.255" endtime="20231212 10:53:28.261"/>
</kw>
<msg timestamp="20231212 10:53:28.262" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.254" endtime="20231212 10:53:28.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:28.262" endtime="20231212 10:53:28.262"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:28.266" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:28.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:28.777" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:28.264" endtime="20231212 10:53:28.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:28.778" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:28 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:53:28.777" endtime="20231212 10:53:28.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:28.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:28.778" endtime="20231212 10:53:28.778"/>
</kw>
<status status="PASS" starttime="20231212 10:53:28.264" endtime="20231212 10:53:28.778"/>
</kw>
<msg timestamp="20231212 10:53:28.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:28.263" endtime="20231212 10:53:28.778"/>
</kw>
<msg timestamp="20231212 10:53:28.779" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:28.263" endtime="20231212 10:53:28.779"/>
</kw>
<msg timestamp="20231212 10:53:28.779" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:53:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:53:28.262" endtime="20231212 10:53:28.779"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:28.779" endtime="20231212 10:53:28.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:28.779" endtime="20231212 10:53:28.780"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:28.783" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:28.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:28.785" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.781" endtime="20231212 10:53:28.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:28.786" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.785" endtime="20231212 10:53:28.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:28.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:28.786" endtime="20231212 10:53:28.787"/>
</kw>
<status status="PASS" starttime="20231212 10:53:28.781" endtime="20231212 10:53:28.787"/>
</kw>
<msg timestamp="20231212 10:53:28.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:28.780" endtime="20231212 10:53:28.787"/>
</kw>
<msg timestamp="20231212 10:53:28.787" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.780" endtime="20231212 10:53:28.787"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:28.790" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:28.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:28.791" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.788" endtime="20231212 10:53:28.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:28.792" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.792" endtime="20231212 10:53:28.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:28.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:28.792" endtime="20231212 10:53:28.793"/>
</kw>
<status status="PASS" starttime="20231212 10:53:28.788" endtime="20231212 10:53:28.793"/>
</kw>
<msg timestamp="20231212 10:53:28.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:28.788" endtime="20231212 10:53:28.793"/>
</kw>
<msg timestamp="20231212 10:53:28.793" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:53:28.787" endtime="20231212 10:53:28.793"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:53:28.793" endtime="20231212 10:53:28.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:27.725" endtime="20231212 10:53:28.794"/>
</test>
<test id="s1-s5-s14-t11" name="Zero byte file" line="153">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:28.798" level="INFO">Running command 'ozone sh bucket info /s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:33.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:33.153" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 349200801,
  "usedNamespace" : 55,
  "creationTime" : "2023-12-1...</msg>
<status status="PASS" starttime="20231212 10:53:28.796" endtime="20231212 10:53:33.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:33.154" level="INFO">{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 349200801,
  "usedNamespace" : 55,
  "creationTime" : "2023-12-12T10:51:01.849Z",
  "modificationTime" : "2023-12-12T10:51:01.849Z",
  "encryptionKeyName" : "key1",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20231212 10:53:33.153" endtime="20231212 10:53:33.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:33.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:33.154" endtime="20231212 10:53:33.155"/>
</kw>
<status status="PASS" starttime="20231212 10:53:28.796" endtime="20231212 10:53:33.155"/>
</kw>
<msg timestamp="20231212 10:53:33.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:28.796" endtime="20231212 10:53:33.155"/>
</kw>
<msg timestamp="20231212 10:53:33.155" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 349200801,
  "usedNamespace" : 55,
  "creationTime" : "2023-12-1...</msg>
<status status="PASS" starttime="20231212 10:53:28.795" endtime="20231212 10:53:33.155"/>
</kw>
<kw name="Execute" library="os">
<var>${linked}</var>
<arg>echo '${result}' | jq -j '.sourceVolume,"/",.sourceBucket'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:33.159" level="INFO">Running command 'echo '{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 349200801,
  "usedNamespace" : 55,
  "creationTime" : "2023-12-12T10:51:01.849Z",
  "modificationTime" : "2023-12-12T10:51:01.849Z",
  "encryptionKeyName" : "key1",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}' | jq -j '.sourceVolume,"/",.sourceBucket' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:33.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:33.186" level="INFO">${output} = null/null</msg>
<status status="PASS" starttime="20231212 10:53:33.157" endtime="20231212 10:53:33.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:33.188" level="INFO">null/null</msg>
<status status="PASS" starttime="20231212 10:53:33.187" endtime="20231212 10:53:33.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:33.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:33.188" endtime="20231212 10:53:33.188"/>
</kw>
<status status="PASS" starttime="20231212 10:53:33.156" endtime="20231212 10:53:33.189"/>
</kw>
<msg timestamp="20231212 10:53:33.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:33.156" endtime="20231212 10:53:33.189"/>
</kw>
<msg timestamp="20231212 10:53:33.189" level="INFO">${linked} = null/null</msg>
<status status="PASS" starttime="20231212 10:53:33.155" endtime="20231212 10:53:33.189"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${eval}</var>
<arg>"source" in """${linked}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:53:33.190" level="INFO">${eval} = False</msg>
<status status="PASS" starttime="20231212 10:53:33.189" endtime="20231212 10:53:33.190"/>
</kw>
<if>
<branch type="IF" condition="${eval} == ${True}">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${linked}</arg>
<status status="NOT RUN" starttime="20231212 10:53:33.190" endtime="20231212 10:53:33.190"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:53:33.190" endtime="20231212 10:53:33.190"/>
</branch>
<status status="PASS" starttime="20231212 10:53:33.190" endtime="20231212 10:53:33.190"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${fsolayout}</var>
<arg>"OPTIMIZED" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:53:33.191" level="INFO">${fsolayout} = True</msg>
<status status="PASS" starttime="20231212 10:53:33.190" endtime="20231212 10:53:33.191"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:33.195" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:33.690" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:33.690" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:33.192" endtime="20231212 10:53:33.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:33.691" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:33.691" endtime="20231212 10:53:33.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:33.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:33.692" endtime="20231212 10:53:33.692"/>
</kw>
<msg timestamp="20231212 10:53:33.692" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:33.192" endtime="20231212 10:53:33.692"/>
</kw>
<msg timestamp="20231212 10:53:33.692" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:33.191" endtime="20231212 10:53:33.693"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:33.693" endtime="20231212 10:53:33.693"/>
</kw>
<status status="PASS" starttime="20231212 10:53:33.693" endtime="20231212 10:53:33.694"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:53:33.694" endtime="20231212 10:53:33.694"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:53:33.694" endtime="20231212 10:53:33.694"/>
</branch>
<status status="PASS" starttime="20231212 10:53:33.693" endtime="20231212 10:53:33.694"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:33.697" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:34.186" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:34.186" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:33.695" endtime="20231212 10:53:34.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:34.187" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:34.187" endtime="20231212 10:53:34.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:34.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:34.188" endtime="20231212 10:53:34.188"/>
</kw>
<msg timestamp="20231212 10:53:34.188" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:33.695" endtime="20231212 10:53:34.188"/>
</kw>
<msg timestamp="20231212 10:53:34.188" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:33.694" endtime="20231212 10:53:34.188"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:34.189" endtime="20231212 10:53:34.189"/>
</kw>
<status status="PASS" starttime="20231212 10:53:34.189" endtime="20231212 10:53:34.189"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:53:34.190" endtime="20231212 10:53:34.190"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:53:34.190" endtime="20231212 10:53:34.190"/>
</branch>
<status status="PASS" starttime="20231212 10:53:34.189" endtime="20231212 10:53:34.190"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:34.193" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9501917016/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:34.671" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:34.671" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:34.191" endtime="20231212 10:53:34.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:34.672" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:34.672" endtime="20231212 10:53:34.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:34.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:34.672" endtime="20231212 10:53:34.673"/>
</kw>
<msg timestamp="20231212 10:53:34.673" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:34.191" endtime="20231212 10:53:34.673"/>
</kw>
<msg timestamp="20231212 10:53:34.673" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:53:34.190" endtime="20231212 10:53:34.673"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:34.674" endtime="20231212 10:53:34.674"/>
</kw>
<status status="PASS" starttime="20231212 10:53:34.674" endtime="20231212 10:53:34.674"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:53:34.674" endtime="20231212 10:53:34.674"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:53:34.674" endtime="20231212 10:53:34.675"/>
</branch>
<status status="PASS" starttime="20231212 10:53:34.673" endtime="20231212 10:53:34.675"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:28.795" endtime="20231212 10:53:34.675"/>
</test>
<test id="s1-s5-s14-t12" name="Create file with user defined metadata" line="183">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:34.679" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231212 10:53:34.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:34.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:34.677" endtime="20231212 10:53:34.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:34.681" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:34.681" endtime="20231212 10:53:34.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:34.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:34.681" endtime="20231212 10:53:34.682"/>
</kw>
<status status="PASS" starttime="20231212 10:53:34.677" endtime="20231212 10:53:34.682"/>
</kw>
<msg timestamp="20231212 10:53:34.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:34.676" endtime="20231212 10:53:34.682"/>
</kw>
<status status="PASS" starttime="20231212 10:53:34.676" endtime="20231212 10:53:34.682"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:34.686" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:35.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:35.282" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:34.684" endtime="20231212 10:53:35.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:35.283" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:35.282" endtime="20231212 10:53:35.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:35.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:35.283" endtime="20231212 10:53:35.284"/>
</kw>
<status status="PASS" starttime="20231212 10:53:34.684" endtime="20231212 10:53:35.284"/>
</kw>
<msg timestamp="20231212 10:53:35.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:34.684" endtime="20231212 10:53:35.285"/>
</kw>
<msg timestamp="20231212 10:53:35.285" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:34.683" endtime="20231212 10:53:35.285"/>
</kw>
<status status="PASS" starttime="20231212 10:53:34.683" endtime="20231212 10:53:35.285"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:35.289" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:35.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:35.754" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:35 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:35.287" endtime="20231212 10:53:35.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:35.756" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:53:35 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:35 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20231212 10:53:35.755" endtime="20231212 10:53:35.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:35.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:35.756" endtime="20231212 10:53:35.757"/>
</kw>
<status status="PASS" starttime="20231212 10:53:35.286" endtime="20231212 10:53:35.757"/>
</kw>
<msg timestamp="20231212 10:53:35.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:35.286" endtime="20231212 10:53:35.757"/>
</kw>
<msg timestamp="20231212 10:53:35.758" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:35 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:35.286" endtime="20231212 10:53:35.758"/>
</kw>
<msg timestamp="20231212 10:53:35.758" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:35 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:35.285" endtime="20231212 10:53:35.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:35.758" endtime="20231212 10:53:35.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:35.758" endtime="20231212 10:53:35.759"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:35.762" level="INFO">Running command 'ozone sh key info /s3v/encrypted/ozone-test-9501917016/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:40.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:40.354" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-9501917016/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-12-12T10:53:35.129Z",
  "modifica...</msg>
<status status="PASS" starttime="20231212 10:53:35.760" endtime="20231212 10:53:40.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:40.355" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-9501917016/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-12-12T10:53:35.129Z",
  "modificationTime" : "2023-12-12T10:53:35.211Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200197,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "fileEncryptionInfo" : {
    "cipherSuite" : "AES_CTR_NOPADDING",
    "iv" : "KtqNWqdpWKxeVKmIf+kpxg==",
    "keyName" : "key1",
    "ezKeyVersionName" : "key1@0",
    "cryptoProtocolVersion" : "ENCRYPTION_ZONES",
    "encryptedDataEncryptionKey" : "wYJUt5CBl8e+MSJIJZwARg=="
  },
  "file" : true
}</msg>
<status status="PASS" starttime="20231212 10:53:40.354" endtime="20231212 10:53:40.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:40.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:40.355" endtime="20231212 10:53:40.356"/>
</kw>
<status status="PASS" starttime="20231212 10:53:35.760" endtime="20231212 10:53:40.356"/>
</kw>
<msg timestamp="20231212 10:53:40.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:35.759" endtime="20231212 10:53:40.356"/>
</kw>
<msg timestamp="20231212 10:53:40.356" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-9501917016/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-12-12T10:53:35.129Z",
  "modifica...</msg>
<status status="PASS" starttime="20231212 10:53:35.759" endtime="20231212 10:53:40.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:40.356" endtime="20231212 10:53:40.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:40.357" endtime="20231212 10:53:40.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:34.675" endtime="20231212 10:53:40.357"/>
</test>
<test id="s1-s5-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="195">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:40.362" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231212 10:53:40.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:40.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:40.360" endtime="20231212 10:53:40.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:40.364" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:40.364" endtime="20231212 10:53:40.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:40.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:40.364" endtime="20231212 10:53:40.365"/>
</kw>
<status status="PASS" starttime="20231212 10:53:40.359" endtime="20231212 10:53:40.365"/>
</kw>
<msg timestamp="20231212 10:53:40.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:40.359" endtime="20231212 10:53:40.365"/>
</kw>
<status status="PASS" starttime="20231212 10:53:40.359" endtime="20231212 10:53:40.365"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:40.369" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:40.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:40.933" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:40.367" endtime="20231212 10:53:40.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:40.934" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:40.933" endtime="20231212 10:53:40.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:40.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:40.934" endtime="20231212 10:53:40.935"/>
</kw>
<status status="PASS" starttime="20231212 10:53:40.367" endtime="20231212 10:53:40.935"/>
</kw>
<msg timestamp="20231212 10:53:40.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:40.366" endtime="20231212 10:53:40.935"/>
</kw>
<msg timestamp="20231212 10:53:40.935" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:53:40.366" endtime="20231212 10:53:40.935"/>
</kw>
<status status="PASS" starttime="20231212 10:53:40.365" endtime="20231212 10:53:40.936"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:40.940" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-9501917016/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:41.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:41.422" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:40 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:40.938" endtime="20231212 10:53:41.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:41.423" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:53:40 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:53:41 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20231212 10:53:41.423" endtime="20231212 10:53:41.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:41.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:41.424" endtime="20231212 10:53:41.424"/>
</kw>
<status status="PASS" starttime="20231212 10:53:40.937" endtime="20231212 10:53:41.424"/>
</kw>
<msg timestamp="20231212 10:53:41.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:40.937" endtime="20231212 10:53:41.424"/>
</kw>
<msg timestamp="20231212 10:53:41.425" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:40 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:40.936" endtime="20231212 10:53:41.425"/>
</kw>
<msg timestamp="20231212 10:53:41.425" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:53:40 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:53:40.936" endtime="20231212 10:53:41.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:41.425" endtime="20231212 10:53:41.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:41.426" endtime="20231212 10:53:41.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:40.358" endtime="20231212 10:53:41.426"/>
</test>
<test id="s1-s5-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="203">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:41.430" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231212 10:53:41.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:41.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:41.429" endtime="20231212 10:53:41.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:41.433" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:41.432" endtime="20231212 10:53:41.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:41.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:41.433" endtime="20231212 10:53:41.434"/>
</kw>
<status status="PASS" starttime="20231212 10:53:41.428" endtime="20231212 10:53:41.434"/>
</kw>
<msg timestamp="20231212 10:53:41.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:41.428" endtime="20231212 10:53:41.434"/>
</kw>
<status status="PASS" starttime="20231212 10:53:41.427" endtime="20231212 10:53:41.434"/>
</kw>
<kw name="Execute" library="os">
<var>${custom_metadata_value}</var>
<arg>printf 'v%.0s' {1..3000}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:41.437" level="INFO">Running command 'printf 'v%.0s' {1..3000} 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:41.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:41.440" level="INFO">${output} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20231212 10:53:41.435" endtime="20231212 10:53:41.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:41.441" level="INFO">vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv</msg>
<status status="PASS" starttime="20231212 10:53:41.441" endtime="20231212 10:53:41.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:41.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:41.441" endtime="20231212 10:53:41.442"/>
</kw>
<status status="PASS" starttime="20231212 10:53:41.435" endtime="20231212 10:53:41.442"/>
</kw>
<msg timestamp="20231212 10:53:41.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:41.435" endtime="20231212 10:53:41.442"/>
</kw>
<msg timestamp="20231212 10:53:41.442" level="INFO">${custom_metadata_value} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20231212 10:53:41.434" endtime="20231212 10:53:41.442"/>
</kw>
<kw name="Execute AWSS3APICli and ignore error" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:41.445" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9501917016/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:41.927" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:41.927" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231212 10:53:41.444" endtime="20231212 10:53:41.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:41.928" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231212 10:53:41.927" endtime="20231212 10:53:41.928"/>
</kw>
<msg timestamp="20231212 10:53:41.928" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231212 10:53:41.443" endtime="20231212 10:53:41.928"/>
</kw>
<msg timestamp="20231212 10:53:41.929" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231212 10:53:41.443" endtime="20231212 10:53:41.929"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:41.929" endtime="20231212 10:53:41.929"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:41.427" endtime="20231212 10:53:41.929"/>
</test>
<test id="s1-s5-s14-t15" name="Create small file and expect ETag (MD5) in a reponse header" line="209">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:41.934" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20231212 10:53:41.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:41.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:41.932" endtime="20231212 10:53:41.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:41.940" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:41.940" endtime="20231212 10:53:41.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:41.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:41.940" endtime="20231212 10:53:41.941"/>
</kw>
<status status="PASS" starttime="20231212 10:53:41.932" endtime="20231212 10:53:41.941"/>
</kw>
<msg timestamp="20231212 10:53:41.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:41.931" endtime="20231212 10:53:41.941"/>
</kw>
<status status="PASS" starttime="20231212 10:53:41.931" endtime="20231212 10:53:41.941"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:41.944" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:41.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:41.948" level="INFO">${output} = b6270ce6a8707085273d1a8d12e3ad81</msg>
<status status="PASS" starttime="20231212 10:53:41.943" endtime="20231212 10:53:41.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:41.949" level="INFO">b6270ce6a8707085273d1a8d12e3ad81</msg>
<status status="PASS" starttime="20231212 10:53:41.948" endtime="20231212 10:53:41.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:41.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:41.949" endtime="20231212 10:53:41.949"/>
</kw>
<status status="PASS" starttime="20231212 10:53:41.942" endtime="20231212 10:53:41.950"/>
</kw>
<msg timestamp="20231212 10:53:41.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:41.942" endtime="20231212 10:53:41.950"/>
</kw>
<msg timestamp="20231212 10:53:41.950" level="INFO">${file_md5_checksum} = b6270ce6a8707085273d1a8d12e3ad81</msg>
<status status="PASS" starttime="20231212 10:53:41.941" endtime="20231212 10:53:41.950"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:41.954" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:42.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:42.533" level="INFO">${output} = 2023-12-12 10:53:42,328 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:42,329 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:41.952" endtime="20231212 10:53:42.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:42.534" level="INFO">2023-12-12 10:53:42,328 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:42,329 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://encrypted']
2023-12-12 10:53:42,329 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f57228a59d8&gt;
2023-12-12 10:53:42,329 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f5723699730&gt;
2023-12-12 10:53:42,329 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f57236c7ae8&gt;
2023-12-12 10:53:42,330 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:53:42,334 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f57229d1400&gt;
2023-12-12 10:53:42,334 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f57228b3048&gt;
2023-12-12 10:53:42,335 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,335 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f57228b3048&gt;
2023-12-12 10:53:42,337 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,337 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,337 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f572369a5f8&gt;
2023-12-12 10:53:42,337 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,337 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f572369a5f8&gt;
2023-12-12 10:53:42,337 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,337 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,338 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,338 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f572369a5f8&gt;
2023-12-12 10:53:42,338 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,338 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,338 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,338 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,338 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,338 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,338 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,339 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,339 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,339 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,339 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,339 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,339 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,339 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,340 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,340 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,340 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,340 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,340 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f572369a5f8&gt;
2023-12-12 10:53:42,340 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,340 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,340 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,340 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f572369a5f8&gt;
2023-12-12 10:53:42,341 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,341 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f572369a5f8&gt;
2023-12-12 10:53:42,341 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,341 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,341 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,341 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,341 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f572a5b2a20&gt;
2023-12-12 10:53:42,342 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:53:42,342 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-12-12 10:53:42,342 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:53:42,357 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:53:42,357 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f572435e378&gt;
2023-12-12 10:53:42,358 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:53:42,369 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f57246352f0&gt;
2023-12-12 10:53:42,369 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f57246350d0&gt;
2023-12-12 10:53:42,369 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,372 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:42,373 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:53:42,373 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:42,374 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,374 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f572435e378&gt;
2023-12-12 10:53:42,375 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f57246352f0&gt;
2023-12-12 10:53:42,375 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f57246350d0&gt;
2023-12-12 10:53:42,376 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,378 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:42,379 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:42,380 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,380 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f572435e378&gt;
2023-12-12 10:53:42,381 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f57246352f0&gt;
2023-12-12 10:53:42,381 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f57246350d0&gt;
2023-12-12 10:53:42,382 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,384 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:42,385 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:42,386 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,386 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:53:42,387 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:42,388 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5722152cf8&gt;}) about to wait for the following futures []
2023-12-12 10:53:42,388 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5722152cf8&gt;}) done waiting for dependent futures
2023-12-12 10:53:42,389 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5722152cf8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f572220fbe0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f5722183d30&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f5722183da0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f5722183f28&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5722152cf8&gt;}
2023-12-12 10:53:42,390 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f5722183f28&gt; for transfer request: 0.
2023-12-12 10:53:42,390 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:42,390 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:53:42,391 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:42,391 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:53:42,391 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f572220fbe0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5722166128&gt;, 'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}
2023-12-12 10:53:42,392 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f57243786a8&gt;
2023-12-12 10:53:42,392 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f5724375ae8&gt;
2023-12-12 10:53:42,392 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f5724378f28&gt;
2023-12-12 10:53:42,392 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f5724375a60&gt;
2023-12-12 10:53:42,392 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f57221dd160&gt;&gt;
2023-12-12 10:53:42,392 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f57221dd518&gt;&gt;
2023-12-12 10:53:42,392 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f57243758c8&gt;
2023-12-12 10:53:42,393 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f5724d1b0d0&gt;
2023-12-12 10:53:42,395 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f5724375d90&gt;
2023-12-12 10:53:42,395 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:53:42,395 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f57221dd160&gt;&gt;
2023-12-12 10:53:42,395 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f5724375598&gt;
2023-12-12 10:53:42,395 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f57242fc0d0&gt;
2023-12-12 10:53:42,395 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/encrypted/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'ticM5qhwcIUnPRqNEuOtgQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5722166128&gt;, 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f572220fdd8&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:42,395 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f572689e158&gt;
2023-12-12 10:53:42,396 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f572220fda0&gt;&gt;
2023-12-12 10:53:42,396 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f57221dd588&gt;&gt;
2023-12-12 10:53:42,396 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f57243757b8&gt;
2023-12-12 10:53:42,396 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f57221dd588&gt;&gt;
2023-12-12 10:53:42,396 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:42,397 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:42,397 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/small_file

content-md5:ticM5qhwcIUnPRqNEuOtgQ==
host:s3g:9878
x-amz-content-sha256:e699eb2abec0a8110e4ef75249dee781139a251e4ca134818613782d236a0098
x-amz-date:20231212T105342Z

content-md5;host;x-amz-content-sha256;x-amz-date
e699eb2abec0a8110e4ef75249dee781139a251e4ca134818613782d236a0098
2023-12-12 10:53:42,397 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105342Z
20231212/us-west-1/s3/aws4_request
3d6f20a6dd9592d65913c26d5f57c3df03d20ca132e31cae1d1c78e0200628f0
2023-12-12 10:53:42,397 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
60177d49f2d680e7f2423519f94803655626c9c7c25daf3aeb7e6666d92f93af
2023-12-12 10:53:42,397 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f572689e1e0&gt;
2023-12-12 10:53:42,398 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f57242fc730&gt;
2023-12-12 10:53:42,398 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'ticM5qhwcIUnPRqNEuOtgQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105342Z', 'X-Amz-Content-SHA256': b'e699eb2abec0a8110e4ef75249dee781139a251e4ca134818613782d236a0098', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=60177d49f2d680e7f2423519f94803655626c9c7c25daf3aeb7e6666d92f93af', 'amz-sdk-invocation-id': b'3ca9d56d-6b7a-44b5-8a84-2b2ecd5e4b90', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2023-12-12 10:53:42,399 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:42,400 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:53:42,403 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (17.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (33.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (48.0 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:42,478 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/small_file HTTP/1.1" 200 0
2023-12-12 10:53:42,479 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:42 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:42 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"b6270ce6a8707085273d1a8d12e3ad81"', 'Server': 'Ozone', 'x-amz-id-2': 'SYjVtm8zHD', 'x-amz-request-id': 'd2228f49-25fd-4f08-9b77-33f131e38319', 'Content-Length': '0'}
2023-12-12 10:53:42,479 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:53:42,480 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f57221dd198&gt;
2023-12-12 10:53:42,480 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:42,480 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f57221dd160&gt;&gt;
2023-12-12 10:53:42,480 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f57228a5598&gt;
2023-12-12 10:53:42,481 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 976.6 KiB/976.6 KiB (10.5 MiB/s) with 1 file(s) remaining
upload: ../../tmp/small_file to s3://encrypted/small_file          
2023-12-12 10:53:42,481 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:53:42.534" endtime="20231212 10:53:42.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:42.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:42.535" endtime="20231212 10:53:42.535"/>
</kw>
<status status="PASS" starttime="20231212 10:53:41.951" endtime="20231212 10:53:42.535"/>
</kw>
<msg timestamp="20231212 10:53:42.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:41.951" endtime="20231212 10:53:42.536"/>
</kw>
<msg timestamp="20231212 10:53:42.536" level="INFO">${output} = 2023-12-12 10:53:42,328 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:42,329 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:41.951" endtime="20231212 10:53:42.536"/>
</kw>
<msg timestamp="20231212 10:53:42.536" level="INFO">${result} = 2023-12-12 10:53:42,328 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:42,329 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:41.950" endtime="20231212 10:53:42.536"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:53:42.537" endtime="20231212 10:53:42.537"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:41.930" endtime="20231212 10:53:42.538"/>
</test>
<test id="s1-s5-s14-t16" name="Download small file end expect ETag (MD5) in a response header" line="216">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:42.542" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:42.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:42.546" level="INFO">${output} = b6270ce6a8707085273d1a8d12e3ad81</msg>
<status status="PASS" starttime="20231212 10:53:42.540" endtime="20231212 10:53:42.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:42.547" level="INFO">b6270ce6a8707085273d1a8d12e3ad81</msg>
<status status="PASS" starttime="20231212 10:53:42.546" endtime="20231212 10:53:42.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:42.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:42.547" endtime="20231212 10:53:42.547"/>
</kw>
<status status="PASS" starttime="20231212 10:53:42.540" endtime="20231212 10:53:42.548"/>
</kw>
<msg timestamp="20231212 10:53:42.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:42.539" endtime="20231212 10:53:42.548"/>
</kw>
<msg timestamp="20231212 10:53:42.548" level="INFO">${file_md5_checksum} = b6270ce6a8707085273d1a8d12e3ad81</msg>
<status status="PASS" starttime="20231212 10:53:42.539" endtime="20231212 10:53:42.548"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:42.551" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:43.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:43.127" level="INFO">${output} = 2023-12-12 10:53:42,926 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:42,926 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:42.550" endtime="20231212 10:53:43.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:43.128" level="INFO">2023-12-12 10:53:42,926 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:42,926 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/small_file', '/tmp/small_file_downloaded']
2023-12-12 10:53:42,927 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f222b9c99d8&gt;
2023-12-12 10:53:42,927 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f222c7bd730&gt;
2023-12-12 10:53:42,927 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f222c7ebae8&gt;
2023-12-12 10:53:42,928 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:53:42,931 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f222baf5400&gt;
2023-12-12 10:53:42,932 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f222b9d7048&gt;
2023-12-12 10:53:42,932 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,933 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f222b9d7048&gt;
2023-12-12 10:53:42,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,935 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f222c7be630&gt;
2023-12-12 10:53:42,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,935 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f222c7be630&gt;
2023-12-12 10:53:42,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,935 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f222c7be630&gt;
2023-12-12 10:53:42,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,937 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,937 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,937 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,937 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,937 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,937 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,937 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,938 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,938 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,938 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,938 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f222c7be630&gt;
2023-12-12 10:53:42,938 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,938 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,938 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,939 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f222c7be630&gt;
2023-12-12 10:53:42,939 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,939 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f222c7be630&gt;
2023-12-12 10:53:42,939 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,939 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,939 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,939 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,939 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f22336d6a20&gt;
2023-12-12 10:53:42,940 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:53:42,940 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-12-12 10:53:42,940 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:53:42,955 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:53:42,955 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f222d483378&gt;
2023-12-12 10:53:42,956 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:53:42,967 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f222d7592f0&gt;
2023-12-12 10:53:42,967 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f222d7590d0&gt;
2023-12-12 10:53:42,967 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,970 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:42,971 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:53:42,971 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:42,972 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,972 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f222d483378&gt;
2023-12-12 10:53:42,973 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f222d7592f0&gt;
2023-12-12 10:53:42,973 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f222d7590d0&gt;
2023-12-12 10:53:42,974 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,976 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:42,977 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:42,977 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,978 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f222d483378&gt;
2023-12-12 10:53:42,979 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f222d7592f0&gt;
2023-12-12 10:53:42,979 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f222d7590d0&gt;
2023-12-12 10:53:42,979 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,982 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:42,983 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:42,983 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:42,984 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:53:42,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f222d499ae8&gt;
2023-12-12 10:53:42,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f222d499a60&gt;
2023-12-12 10:53:42,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f222b2a76d8&gt;&gt;
2023-12-12 10:53:42,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f222b2a7a90&gt;&gt;
2023-12-12 10:53:42,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f222d4998c8&gt;
2023-12-12 10:53:42,985 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f222d499d90&gt;
2023-12-12 10:53:42,986 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f222b2a76d8&gt;&gt;
2023-12-12 10:53:42,986 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f222d499598&gt;
2023-12-12 10:53:42,986 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f222d4200d0&gt;
2023-12-12 10:53:42,986 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/encrypted/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f222b2a7390&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:42,986 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f222b2a7358&gt;&gt;
2023-12-12 10:53:42,986 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f222b2a7b00&gt;&gt;
2023-12-12 10:53:42,986 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f222d4997b8&gt;
2023-12-12 10:53:42,987 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f222b2a7b00&gt;&gt;
2023-12-12 10:53:42,987 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:42,987 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:42,987 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105342Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:53:42,987 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105342Z
20231212/us-west-1/s3/aws4_request
c685597d9ffc9bb905afaa48592a1ad999e58bada9a5c293751555224a79df9c
2023-12-12 10:53:42,987 - MainThread - botocore.auth - DEBUG - Signature:
f70af096583ca855bc994e0244ab75811d0db3619dd2c15663bebf53e275d1a8
2023-12-12 10:53:42,987 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f222d420730&gt;
2023-12-12 10:53:42,987 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105342Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=f70af096583ca855bc994e0244ab75811d0db3619dd2c15663bebf53e275d1a8', 'amz-sdk-invocation-id': b'799e5762-d3ab-4274-bb88-1a678035a9e9', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:53:42,989 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:42,995 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/small_file HTTP/1.1" 200 0
2023-12-12 10:53:42,995 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:42 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:42 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"b6270ce6a8707085273d1a8d12e3ad81"', 'Last-Modified': 'Tue, 12 Dec 2023 10:53:42 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'E4UU2oRj', 'x-amz-request-id': 'ecc947c1-4c47-482d-badb-a44ce79c1fff', 'Content-Length': '1000000'}
2023-12-12 10:53:42,995 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:53:42,996 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f222b2a7710&gt;
2023-12-12 10:53:42,996 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:42,996 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f222b2a76d8&gt;&gt;
2023-12-12 10:53:42,996 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f222b9c9598&gt;
2023-12-12 10:53:42,997 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:42,998 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f222b28f828&gt;}) about to wait for the following futures []
2023-12-12 10:53:42,998 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f222b28f828&gt;}) done waiting for dependent futures
2023-12-12 10:53:42,998 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f222b28f828&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f222b333be0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f222b2a7d30&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f222b2a7da0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f222b2a7f28&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f222b28f828&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f222b276358&gt;}
2023-12-12 10:53:42,999 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f222b2a7f28&gt; for transfer request: 0.
2023-12-12 10:53:42,999 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:42,999 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:53:42,999 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:42,999 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:53:43,000 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f222b333be0&gt;, 'bucket': 'encrypted', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f222b28fd30&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f222b28fef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f222b28f828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f222b28fdd8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f222b28f828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f222b28fe10&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f222b28f828&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f222b28ff60&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f222b28f828&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f222b28ff28&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-12-12 10:53:43,000 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f222d499ae8&gt;
2023-12-12 10:53:43,000 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f222d499a60&gt;
2023-12-12 10:53:43,000 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f222b306160&gt;&gt;
2023-12-12 10:53:43,000 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f222b306518&gt;&gt;
2023-12-12 10:53:43,000 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f222d4998c8&gt;
2023-12-12 10:53:43,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f222d499d90&gt;
2023-12-12 10:53:43,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f222b306160&gt;&gt;
2023-12-12 10:53:43,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f222d499598&gt;
2023-12-12 10:53:43,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f222d4200d0&gt;
2023-12-12 10:53:43,001 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/encrypted/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f222b333dd8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:43,002 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f222f9c2158&gt;
2023-12-12 10:53:43,002 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f222b333da0&gt;&gt;
2023-12-12 10:53:43,002 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f222b306588&gt;&gt;
2023-12-12 10:53:43,002 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f222d4997b8&gt;
2023-12-12 10:53:43,002 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f222b306588&gt;&gt;
2023-12-12 10:53:43,002 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:43,002 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:43,002 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105343Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:53:43,002 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105343Z
20231212/us-west-1/s3/aws4_request
1f55a14f6a8ac6f4e228bf2bf4c12775b1d8b39552a14bb93ff9231bb4bf1a84
2023-12-12 10:53:43,003 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
921fc575f2edc827a30abf6be948229d9b727d9e2db433dc09c1164473203258
2023-12-12 10:53:43,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f222f9c21e0&gt;
2023-12-12 10:53:43,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f222d420730&gt;
2023-12-12 10:53:43,003 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105343Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=921fc575f2edc827a30abf6be948229d9b727d9e2db433dc09c1164473203258', 'amz-sdk-invocation-id': b'1fdf5ffa-b265-498a-ab9c-762b1c857883', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:53:43,003 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:43,060 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/small_file HTTP/1.1" 200 1000000
2023-12-12 10:53:43,061 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"b6270ce6a8707085273d1a8d12e3ad81"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 12 Dec 2023 10:53:42 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'MA4wF3t7VSm', 'x-amz-request-id': 'f75c9cdc-f160-4048-8425-7a39eb91677a', 'Content-Length': '1000000'}
2023-12-12 10:53:43,061 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f2228ebc278&gt;
2023-12-12 10:53:43,062 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f222b306198&gt;
2023-12-12 10:53:43,062 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:43,062 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f222b306160&gt;&gt;
2023-12-12 10:53:43,062 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f222b9c9598&gt;
2023-12-12 10:53:43,063 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2023-12-12 10:53:43,063 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-12-12 10:53:43,064 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f222b28fd30&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (3.9 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:43,064 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-12-12 10:53:43,065 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-12-12 10:53:43,065 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f222b28fd30&gt;, 'offset': 262144}
Completed 512.0 KiB/976.6 KiB (7.7 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:43,066 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-12-12 10:53:43,066 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-12-12 10:53:43,066 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f222b28fd30&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (11.2 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:43,067 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-12-12 10:53:43,067 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-12-12 10:53:43,067 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f222b28fd30&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (14.1 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:43,067 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2023-12-12 10:53:43,067 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2023-12-12 10:53:43,067 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f222b28fd30&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f222b2a7da0&gt;}
2023-12-12 10:53:43,068 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/small_file to ../../tmp/small_file_downloaded
2023-12-12 10:53:43,068 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:53:43.128" endtime="20231212 10:53:43.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:43.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:43.129" endtime="20231212 10:53:43.129"/>
</kw>
<status status="PASS" starttime="20231212 10:53:42.549" endtime="20231212 10:53:43.129"/>
</kw>
<msg timestamp="20231212 10:53:43.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:42.549" endtime="20231212 10:53:43.130"/>
</kw>
<msg timestamp="20231212 10:53:43.130" level="INFO">${output} = 2023-12-12 10:53:42,926 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:42,926 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:42.549" endtime="20231212 10:53:43.130"/>
</kw>
<msg timestamp="20231212 10:53:43.131" level="INFO">${result} = 2023-12-12 10:53:42,926 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:42,926 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:42.548" endtime="20231212 10:53:43.131"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:53:43.131" endtime="20231212 10:53:43.132"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:53:43.132" endtime="20231212 10:53:43.133"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:43.137" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:43.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:43.630" level="INFO">${output} = delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20231212 10:53:43.135" endtime="20231212 10:53:43.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:43.631" level="INFO">delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20231212 10:53:43.631" endtime="20231212 10:53:43.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:43.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:43.631" endtime="20231212 10:53:43.632"/>
</kw>
<status status="PASS" starttime="20231212 10:53:43.134" endtime="20231212 10:53:43.632"/>
</kw>
<msg timestamp="20231212 10:53:43.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:43.134" endtime="20231212 10:53:43.632"/>
</kw>
<msg timestamp="20231212 10:53:43.632" level="INFO">${output} = delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20231212 10:53:43.134" endtime="20231212 10:53:43.632"/>
</kw>
<status status="PASS" starttime="20231212 10:53:43.133" endtime="20231212 10:53:43.633"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:43.636" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:43.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:43.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:43.634" endtime="20231212 10:53:43.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:43.639" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:43.638" endtime="20231212 10:53:43.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:43.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:43.639" endtime="20231212 10:53:43.639"/>
</kw>
<status status="PASS" starttime="20231212 10:53:43.634" endtime="20231212 10:53:43.639"/>
</kw>
<msg timestamp="20231212 10:53:43.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:43.633" endtime="20231212 10:53:43.640"/>
</kw>
<status status="PASS" starttime="20231212 10:53:43.633" endtime="20231212 10:53:43.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:42.538" endtime="20231212 10:53:43.640"/>
</test>
<test id="s1-s5-s14-t17" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="225">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:43.645" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:43.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:43.649" level="INFO">${output} = b6270ce6a8707085273d1a8d12e3ad81</msg>
<status status="PASS" starttime="20231212 10:53:43.643" endtime="20231212 10:53:43.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:43.649" level="INFO">b6270ce6a8707085273d1a8d12e3ad81</msg>
<status status="PASS" starttime="20231212 10:53:43.649" endtime="20231212 10:53:43.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:43.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:43.650" endtime="20231212 10:53:43.650"/>
</kw>
<status status="PASS" starttime="20231212 10:53:43.642" endtime="20231212 10:53:43.650"/>
</kw>
<msg timestamp="20231212 10:53:43.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:43.642" endtime="20231212 10:53:43.651"/>
</kw>
<msg timestamp="20231212 10:53:43.651" level="INFO">${file_md5_checksum} = b6270ce6a8707085273d1a8d12e3ad81</msg>
<status status="PASS" starttime="20231212 10:53:43.641" endtime="20231212 10:53:43.651"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:43.654" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://encrypted/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:44.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:44.213" level="INFO">${output} = 2023-12-12 10:53:44,016 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:44,016 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:43.652" endtime="20231212 10:53:44.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:44.214" level="INFO">2023-12-12 10:53:44,016 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:44,016 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://encrypted/test_file']
2023-12-12 10:53:44,017 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f14d3c189d8&gt;
2023-12-12 10:53:44,017 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f14d4a0c730&gt;
2023-12-12 10:53:44,017 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f14d4a3aae8&gt;
2023-12-12 10:53:44,018 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:53:44,022 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f14d3d44400&gt;
2023-12-12 10:53:44,022 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f14d3c26048&gt;
2023-12-12 10:53:44,022 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,023 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f14d3c26048&gt;
2023-12-12 10:53:44,024 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,024 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,025 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f14d4a0d630&gt;
2023-12-12 10:53:44,025 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,025 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f14d4a0d630&gt;
2023-12-12 10:53:44,025 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,025 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,025 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,025 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f14d4a0d630&gt;
2023-12-12 10:53:44,025 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,026 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,026 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,026 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,026 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,026 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,026 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,026 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,027 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,027 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,027 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,027 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,027 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,027 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,027 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,028 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,028 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,028 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,028 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f14d4a0d630&gt;
2023-12-12 10:53:44,028 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,028 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,028 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,028 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f14d4a0d630&gt;
2023-12-12 10:53:44,029 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,029 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f14d4a0d630&gt;
2023-12-12 10:53:44,029 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,029 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,029 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f14d4a0d630&gt;
2023-12-12 10:53:44,029 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2023-12-12 10:53:44,029 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,029 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,029 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f14db925a20&gt;
2023-12-12 10:53:44,030 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:53:44,030 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-12-12 10:53:44,030 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:53:44,045 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:53:44,045 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f14d56d1378&gt;
2023-12-12 10:53:44,046 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:53:44,057 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f14d59a82f0&gt;
2023-12-12 10:53:44,057 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f14d59a80d0&gt;
2023-12-12 10:53:44,057 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,060 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:44,061 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:53:44,061 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:44,062 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,063 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f14d56d1378&gt;
2023-12-12 10:53:44,064 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f14d59a82f0&gt;
2023-12-12 10:53:44,064 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f14d59a80d0&gt;
2023-12-12 10:53:44,064 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,067 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:44,067 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:44,068 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,068 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f14d56d1378&gt;
2023-12-12 10:53:44,070 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f14d59a82f0&gt;
2023-12-12 10:53:44,070 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f14d59a80d0&gt;
2023-12-12 10:53:44,070 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,073 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:44,073 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:44,074 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,074 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:53:44,075 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:44,076 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f14d34c7d30&gt;}) about to wait for the following futures []
2023-12-12 10:53:44,076 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f14d34c7d30&gt;}) done waiting for dependent futures
2023-12-12 10:53:44,076 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f14d34c7d30&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f14d3583c50&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f14d34f7da0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f14d34f7e10&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f14d34f7f98&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f14d34c7d30&gt;}
2023-12-12 10:53:44,077 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f14d34f7f98&gt; for transfer request: 0.
2023-12-12 10:53:44,077 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:44,077 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2023-12-12 10:53:44,078 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2023-12-12 10:53:44,078 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f14d3583c50&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f14d34d9240&gt;, 'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2023-12-12 10:53:44,078 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f14d56eb6a8&gt;
2023-12-12 10:53:44,079 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f14d56e8ae8&gt;
2023-12-12 10:53:44,079 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f14d56ebf28&gt;
2023-12-12 10:53:44,079 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f14d56e8a60&gt;
2023-12-12 10:53:44,079 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f14d35571d0&gt;&gt;
2023-12-12 10:53:44,079 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f14d3557588&gt;&gt;
2023-12-12 10:53:44,079 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f14d56e88c8&gt;
2023-12-12 10:53:44,079 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f14d608f0d0&gt;
2023-12-12 10:53:44,080 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:44,082 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f14d56e8d90&gt;
2023-12-12 10:53:44,082 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:53:44,082 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f14d35571d0&gt;&gt;
2023-12-12 10:53:44,082 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f14d56e8598&gt;
2023-12-12 10:53:44,082 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f14d566f0d0&gt;
2023-12-12 10:53:44,082 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/encrypted/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'ticM5qhwcIUnPRqNEuOtgQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f14d34d9240&gt;, 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f14d3583e48&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:44,082 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f14d7c11158&gt;
2023-12-12 10:53:44,082 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f14d3583e10&gt;&gt;
2023-12-12 10:53:44,083 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f14d35575f8&gt;&gt;
2023-12-12 10:53:44,083 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f14d56e87b8&gt;
2023-12-12 10:53:44,083 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f14d35575f8&gt;&gt;
2023-12-12 10:53:44,083 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:44,084 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:44,084 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_file

content-md5:ticM5qhwcIUnPRqNEuOtgQ==
host:s3g:9878
x-amz-content-sha256:e699eb2abec0a8110e4ef75249dee781139a251e4ca134818613782d236a0098
x-amz-date:20231212T105344Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
e699eb2abec0a8110e4ef75249dee781139a251e4ca134818613782d236a0098
2023-12-12 10:53:44,084 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105344Z
20231212/us-west-1/s3/aws4_request
b71c9936c52ccbcba1502dddb2922f0ee8585837249c4a8b97adb3d5a3d953d5
2023-12-12 10:53:44,084 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
f95933006ae6190fe26e0c35c2eb5bdf3398936239f5991d4dd225cb8f4a1fe7
2023-12-12 10:53:44,084 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f14d7c111e0&gt;
2023-12-12 10:53:44,084 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f14d566f730&gt;
2023-12-12 10:53:44,085 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'ticM5qhwcIUnPRqNEuOtgQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105344Z', 'X-Amz-Content-SHA256': b'e699eb2abec0a8110e4ef75249dee781139a251e4ca134818613782d236a0098', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=f95933006ae6190fe26e0c35c2eb5bdf3398936239f5991d4dd225cb8f4a1fe7', 'amz-sdk-invocation-id': b'fa1944aa-0ea6-4a4d-b0a3-8e60024a2bb4', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2023-12-12 10:53:44,086 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:44,087 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:53:44,088 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (22.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (43.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (63.2 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:44,156 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_file HTTP/1.1" 200 0
2023-12-12 10:53:44,156 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:44 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:44 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"b6270ce6a8707085273d1a8d12e3ad81"', 'Server': 'Ozone', 'x-amz-id-2': '68izkfXw', 'x-amz-request-id': 'dc640c2a-fbb9-45bd-b9f8-8d4d75fefe8d', 'Content-Length': '0'}
2023-12-12 10:53:44,156 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:53:44,157 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f14d3557208&gt;
2023-12-12 10:53:44,157 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:44,157 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f14d35571d0&gt;&gt;
2023-12-12 10:53:44,157 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f14d3c18598&gt;
2023-12-12 10:53:44,158 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 976.6 KiB/976.6 KiB (11.9 MiB/s) with 1 file(s) remaining
upload: ../../tmp/small_file to s3://encrypted/test_file           
2023-12-12 10:53:44,165 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:53:44.214" endtime="20231212 10:53:44.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:44.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:44.215" endtime="20231212 10:53:44.215"/>
</kw>
<status status="PASS" starttime="20231212 10:53:43.652" endtime="20231212 10:53:44.216"/>
</kw>
<msg timestamp="20231212 10:53:44.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:43.652" endtime="20231212 10:53:44.216"/>
</kw>
<msg timestamp="20231212 10:53:44.216" level="INFO">${output} = 2023-12-12 10:53:44,016 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:44,016 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:43.651" endtime="20231212 10:53:44.216"/>
</kw>
<status status="PASS" starttime="20231212 10:53:43.651" endtime="20231212 10:53:44.216"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:44.220" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:44.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:44.777" level="INFO">${output} = 2023-12-12 10:53:44,593 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:44,594 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:44.218" endtime="20231212 10:53:44.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:44.778" level="INFO">2023-12-12 10:53:44,593 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:44,594 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/test_file', '/tmp/test_file_downloaded']
2023-12-12 10:53:44,594 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f1bbbbb79d8&gt;
2023-12-12 10:53:44,594 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f1bbc9ab730&gt;
2023-12-12 10:53:44,595 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f1bbc9d9ae8&gt;
2023-12-12 10:53:44,595 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:53:44,600 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f1bbbce3400&gt;
2023-12-12 10:53:44,600 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f1bbbbc5048&gt;
2023-12-12 10:53:44,601 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,601 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f1bbbbc5048&gt;
2023-12-12 10:53:44,603 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,603 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,603 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1bbc9ac630&gt;
2023-12-12 10:53:44,603 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,603 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1bbc9ac630&gt;
2023-12-12 10:53:44,604 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,604 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,604 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,604 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1bbc9ac630&gt;
2023-12-12 10:53:44,604 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,604 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,604 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,604 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,605 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,605 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,605 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,605 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,605 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,605 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,605 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,605 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,606 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,606 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,606 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,606 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,606 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,606 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,606 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1bbc9ac630&gt;
2023-12-12 10:53:44,606 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,607 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,607 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,607 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1bbc9ac630&gt;
2023-12-12 10:53:44,607 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,607 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1bbc9ac630&gt;
2023-12-12 10:53:44,607 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,607 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,607 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,608 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,608 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1bc38c4a20&gt;
2023-12-12 10:53:44,608 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:53:44,608 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-12-12 10:53:44,609 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:53:44,623 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:53:44,623 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1bbd671378&gt;
2023-12-12 10:53:44,624 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:53:44,635 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1bbd9472f0&gt;
2023-12-12 10:53:44,635 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1bbd9470d0&gt;
2023-12-12 10:53:44,635 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,638 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:44,639 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:53:44,639 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:44,640 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,641 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1bbd671378&gt;
2023-12-12 10:53:44,642 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1bbd9472f0&gt;
2023-12-12 10:53:44,642 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1bbd9470d0&gt;
2023-12-12 10:53:44,642 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,645 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:44,645 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:44,646 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,646 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1bbd671378&gt;
2023-12-12 10:53:44,648 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1bbd9472f0&gt;
2023-12-12 10:53:44,648 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1bbd9470d0&gt;
2023-12-12 10:53:44,648 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,651 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:44,651 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:44,652 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:44,652 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:53:44,653 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f1bbd687ae8&gt;
2023-12-12 10:53:44,653 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f1bbd687a60&gt;
2023-12-12 10:53:44,653 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f1bbb4956d8&gt;&gt;
2023-12-12 10:53:44,653 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f1bbb495a90&gt;&gt;
2023-12-12 10:53:44,653 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f1bbd6878c8&gt;
2023-12-12 10:53:44,654 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f1bbd687d90&gt;
2023-12-12 10:53:44,654 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f1bbb4956d8&gt;&gt;
2023-12-12 10:53:44,654 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f1bbd687598&gt;
2023-12-12 10:53:44,654 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1bbd60e0d0&gt;
2023-12-12 10:53:44,654 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/encrypted/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1bbb495390&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:44,655 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1bbb495358&gt;&gt;
2023-12-12 10:53:44,655 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f1bbb495b00&gt;&gt;
2023-12-12 10:53:44,655 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f1bbd6877b8&gt;
2023-12-12 10:53:44,655 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f1bbb495b00&gt;&gt;
2023-12-12 10:53:44,655 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:44,655 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:44,655 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105344Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:53:44,655 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105344Z
20231212/us-west-1/s3/aws4_request
20fe815946f4c8f638cea4a58d464b56354150d34dfdf73389b52b43a216f9aa
2023-12-12 10:53:44,655 - MainThread - botocore.auth - DEBUG - Signature:
1d90ce2721296293f156b21036994067ad34d6baed1d8761c483de97a9e62ae2
2023-12-12 10:53:44,656 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f1bbd60e730&gt;
2023-12-12 10:53:44,656 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105344Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=1d90ce2721296293f156b21036994067ad34d6baed1d8761c483de97a9e62ae2', 'amz-sdk-invocation-id': b'e861acd4-1726-4200-a4b4-6af938acfdd2', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:53:44,657 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:44,664 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/test_file HTTP/1.1" 200 0
2023-12-12 10:53:44,664 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:44 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:44 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"b6270ce6a8707085273d1a8d12e3ad81"', 'Last-Modified': 'Tue, 12 Dec 2023 10:53:44 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': 'mYXVk8ePEENEApA', 'x-amz-request-id': '98fa221f-4028-4daf-90ed-4fea36195955', 'Content-Length': '1000000'}
2023-12-12 10:53:44,664 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:53:44,665 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1bbb495710&gt;
2023-12-12 10:53:44,665 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:44,665 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f1bbb4956d8&gt;&gt;
2023-12-12 10:53:44,665 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f1bbbbb7598&gt;
2023-12-12 10:53:44,666 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:44,667 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1bbb47e828&gt;}) about to wait for the following futures []
2023-12-12 10:53:44,667 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1bbb47e828&gt;}) done waiting for dependent futures
2023-12-12 10:53:44,667 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1bbb47e828&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1bbb521be0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f1bbb495d30&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f1bbb495da0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f1bbb495f28&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1bbb47e828&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f1bbb464358&gt;}
2023-12-12 10:53:44,668 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1bbb495f28&gt; for transfer request: 0.
2023-12-12 10:53:44,668 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:44,668 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:53:44,668 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:44,668 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:53:44,669 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1bbb521be0&gt;, 'bucket': 'encrypted', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1bbb47ef98&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f1bbb47eef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1bbb47e828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f1bbb47edd8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1bbb47e828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f1bbb47ee10&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1bbb47e828&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f1bbb47ef60&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1bbb47e828&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f1bbb47ed30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-12-12 10:53:44,669 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f1bbd687ae8&gt;
2023-12-12 10:53:44,669 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f1bbd687a60&gt;
2023-12-12 10:53:44,669 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f1bbb4f5160&gt;&gt;
2023-12-12 10:53:44,669 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f1bbb4f5518&gt;&gt;
2023-12-12 10:53:44,669 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f1bbd6878c8&gt;
2023-12-12 10:53:44,669 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f1bbd687d90&gt;
2023-12-12 10:53:44,670 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f1bbb4f5160&gt;&gt;
2023-12-12 10:53:44,670 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f1bbd687598&gt;
2023-12-12 10:53:44,670 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1bbd60e0d0&gt;
2023-12-12 10:53:44,670 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/encrypted/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1bbb521dd8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:44,670 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f1bbfbb0158&gt;
2023-12-12 10:53:44,670 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1bbb521da0&gt;&gt;
2023-12-12 10:53:44,670 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f1bbb4f5588&gt;&gt;
2023-12-12 10:53:44,670 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f1bbd6877b8&gt;
2023-12-12 10:53:44,671 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f1bbb4f5588&gt;&gt;
2023-12-12 10:53:44,671 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:44,671 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:44,671 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105344Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:53:44,671 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105344Z
20231212/us-west-1/s3/aws4_request
3473e125e142efcc36db82b835ba48df2c0f83f24bc4d85d84e53f0f7f886e3f
2023-12-12 10:53:44,671 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
e07c7e4fad5be6fddd165abe43fe40987ba35b81a352a1c831d2de7ff79035a7
2023-12-12 10:53:44,671 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f1bbfbb01e0&gt;
2023-12-12 10:53:44,671 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f1bbd60e730&gt;
2023-12-12 10:53:44,671 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105344Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=e07c7e4fad5be6fddd165abe43fe40987ba35b81a352a1c831d2de7ff79035a7', 'amz-sdk-invocation-id': b'e7d25325-6a09-4104-aa43-f93ebce165a4', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:53:44,672 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:44,708 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/test_file HTTP/1.1" 200 1000000
2023-12-12 10:53:44,708 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:44 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:44 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"b6270ce6a8707085273d1a8d12e3ad81"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 12 Dec 2023 10:53:44 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'TlCxM6fkf2', 'x-amz-request-id': 'd828b65f-b0f9-403d-8ac0-ff33c36b21c3', 'Content-Length': '1000000'}
2023-12-12 10:53:44,708 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f1bb80a72b0&gt;
2023-12-12 10:53:44,710 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1bbb4f5198&gt;
2023-12-12 10:53:44,710 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:44,710 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f1bbb4f5160&gt;&gt;
2023-12-12 10:53:44,710 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f1bbbbb7598&gt;
2023-12-12 10:53:44,711 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (5.8 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:44,711 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-12-12 10:53:44,712 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1bbb47ef98&gt;, 'offset': 0}
2023-12-12 10:53:44,713 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (11.2 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:44,713 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-12-12 10:53:44,713 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1bbb47ef98&gt;, 'offset': 262144}
2023-12-12 10:53:44,713 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
Completed 768.0 KiB/976.6 KiB (16.5 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:44,713 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-12-12 10:53:44,714 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1bbb47ef98&gt;, 'offset': 524288}
2023-12-12 10:53:44,714 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-12-12 10:53:44,714 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-12-12 10:53:44,714 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1bbb47ef98&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (20.6 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:44,715 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2023-12-12 10:53:44,715 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2023-12-12 10:53:44,715 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1bbb47ef98&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f1bbb495da0&gt;}
2023-12-12 10:53:44,715 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/test_file to ../../tmp/test_file_downloaded
2023-12-12 10:53:44,716 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:53:44.777" endtime="20231212 10:53:44.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:44.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:44.779" endtime="20231212 10:53:44.779"/>
</kw>
<status status="PASS" starttime="20231212 10:53:44.218" endtime="20231212 10:53:44.779"/>
</kw>
<msg timestamp="20231212 10:53:44.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:44.218" endtime="20231212 10:53:44.780"/>
</kw>
<msg timestamp="20231212 10:53:44.780" level="INFO">${output} = 2023-12-12 10:53:44,593 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:44,594 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:44.217" endtime="20231212 10:53:44.780"/>
</kw>
<msg timestamp="20231212 10:53:44.781" level="INFO">${result} = 2023-12-12 10:53:44,593 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:44,594 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:44.217" endtime="20231212 10:53:44.781"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:53:44.782" level="INFO">${match} = HEAD /encrypted/test_file HTTP/1.1" 200 0
2023-12-12 10:53:44,664 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:44 GMT', 'Cache-Control': 'no-cache', 'Ex...</msg>
<msg timestamp="20231212 10:53:44.782" level="INFO">${ETag} = b6270ce6a8707085273d1a8d12e3ad81</msg>
<msg timestamp="20231212 10:53:44.782" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20231212 10:53:44.781" endtime="20231212 10:53:44.782"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:53:44.782" endtime="20231212 10:53:44.783"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:53:44.783" endtime="20231212 10:53:44.783"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:53:44.783" endtime="20231212 10:53:44.784"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:44.788" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:45.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:45.265" level="INFO">${output} = delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20231212 10:53:44.786" endtime="20231212 10:53:45.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:45.266" level="INFO">delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20231212 10:53:45.265" endtime="20231212 10:53:45.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:45.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:45.266" endtime="20231212 10:53:45.267"/>
</kw>
<status status="PASS" starttime="20231212 10:53:44.785" endtime="20231212 10:53:45.267"/>
</kw>
<msg timestamp="20231212 10:53:45.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:44.785" endtime="20231212 10:53:45.267"/>
</kw>
<msg timestamp="20231212 10:53:45.267" level="INFO">${output} = delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20231212 10:53:44.784" endtime="20231212 10:53:45.267"/>
</kw>
<status status="PASS" starttime="20231212 10:53:44.784" endtime="20231212 10:53:45.267"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:45.271" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:45.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:45.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:45.269" endtime="20231212 10:53:45.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:45.274" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:45.273" endtime="20231212 10:53:45.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:45.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:45.274" endtime="20231212 10:53:45.275"/>
</kw>
<status status="PASS" starttime="20231212 10:53:45.269" endtime="20231212 10:53:45.275"/>
</kw>
<msg timestamp="20231212 10:53:45.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:45.268" endtime="20231212 10:53:45.275"/>
</kw>
<status status="PASS" starttime="20231212 10:53:45.267" endtime="20231212 10:53:45.275"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:45.278" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:45.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:45.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:45.276" endtime="20231212 10:53:45.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:45.281" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:45.280" endtime="20231212 10:53:45.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:45.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:45.281" endtime="20231212 10:53:45.281"/>
</kw>
<status status="PASS" starttime="20231212 10:53:45.276" endtime="20231212 10:53:45.281"/>
</kw>
<msg timestamp="20231212 10:53:45.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:45.276" endtime="20231212 10:53:45.282"/>
</kw>
<status status="PASS" starttime="20231212 10:53:45.275" endtime="20231212 10:53:45.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:43.640" endtime="20231212 10:53:45.282"/>
</test>
<test id="s1-s5-s14-t18" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="238">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:45.286" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20231212 10:53:45.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:45.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:45.284" endtime="20231212 10:53:45.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:45.321" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:45.321" endtime="20231212 10:53:45.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:45.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:45.322" endtime="20231212 10:53:45.322"/>
</kw>
<status status="PASS" starttime="20231212 10:53:45.284" endtime="20231212 10:53:45.322"/>
</kw>
<msg timestamp="20231212 10:53:45.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:45.283" endtime="20231212 10:53:45.323"/>
</kw>
<status status="PASS" starttime="20231212 10:53:45.283" endtime="20231212 10:53:45.323"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:45.326" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:47.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:47.494" level="INFO">${output} = 2023-12-12 10:53:45,697 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:45,698 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:45.324" endtime="20231212 10:53:47.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:47.495" level="INFO">2023-12-12 10:53:45,697 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:45,698 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://encrypted/']
2023-12-12 10:53:45,698 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f3ea64a79d8&gt;
2023-12-12 10:53:45,698 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f3ea729b730&gt;
2023-12-12 10:53:45,698 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f3ea72c9ae8&gt;
2023-12-12 10:53:45,699 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:53:45,703 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f3ea65d3400&gt;
2023-12-12 10:53:45,703 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f3ea64b5048&gt;
2023-12-12 10:53:45,703 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,704 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f3ea64b5048&gt;
2023-12-12 10:53:45,705 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,705 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,705 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3ea729c630&gt;
2023-12-12 10:53:45,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,706 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3ea729c630&gt;
2023-12-12 10:53:45,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,706 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3ea729c630&gt;
2023-12-12 10:53:45,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,709 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3ea729c630&gt;
2023-12-12 10:53:45,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,709 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3ea729c630&gt;
2023-12-12 10:53:45,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,709 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3ea729c630&gt;
2023-12-12 10:53:45,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3eae1b4a20&gt;
2023-12-12 10:53:45,710 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:53:45,710 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-12-12 10:53:45,711 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:53:45,725 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:53:45,725 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3ea7f60378&gt;
2023-12-12 10:53:45,726 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:53:45,737 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3ea82372f0&gt;
2023-12-12 10:53:45,737 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3ea82370d0&gt;
2023-12-12 10:53:45,737 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:45,740 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:45,741 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:53:45,741 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:45,742 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:45,743 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3ea7f60378&gt;
2023-12-12 10:53:45,744 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3ea82372f0&gt;
2023-12-12 10:53:45,744 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3ea82370d0&gt;
2023-12-12 10:53:45,744 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:45,747 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:45,747 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:45,748 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:45,748 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3ea7f60378&gt;
2023-12-12 10:53:45,750 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3ea82372f0&gt;
2023-12-12 10:53:45,750 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3ea82370d0&gt;
2023-12-12 10:53:45,750 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:45,753 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:45,753 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:45,754 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:45,755 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:53:45,756 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:45,756 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3ea5d54cf8&gt;}) about to wait for the following futures []
2023-12-12 10:53:45,756 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3ea5d54cf8&gt;}) done waiting for dependent futures
2023-12-12 10:53:45,757 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3ea5d54cf8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3ea5e11be0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f3ea5d85d30&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f3ea5d85da0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f3ea5d85f28&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3ea5d54cf8&gt;}
2023-12-12 10:53:45,758 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3ea5d85f28&gt; for transfer request: 0.
2023-12-12 10:53:45,758 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:45,758 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:53:45,758 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3ea5d85f28&gt; for transfer request: 0.
2023-12-12 10:53:45,758 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:53:45,759 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:45,759 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3ea5e11be0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}
2023-12-12 10:53:45,759 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f3ea7f7a6a8&gt;
2023-12-12 10:53:45,759 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea5d66390&gt;]
2023-12-12 10:53:45,760 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f3ea7f77ae8&gt;
2023-12-12 10:53:45,760 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f3ea7f77a60&gt;
2023-12-12 10:53:45,760 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:45,760 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f3ea5ddf518&gt;&gt;
2023-12-12 10:53:45,759 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3ea5d85f28&gt; for transfer request: 0.
2023-12-12 10:53:45,760 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f3ea7f778c8&gt;
2023-12-12 10:53:45,761 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f3ea7f77d90&gt;
2023-12-12 10:53:45,761 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:45,761 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f3ea7f77598&gt;
2023-12-12 10:53:45,761 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3ea7efe0d0&gt;
2023-12-12 10:53:45,761 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/encrypted/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3ea5e11dd8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:45,760 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea5d66390&gt;
2023-12-12 10:53:45,761 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f3eaa4a0158&gt;
2023-12-12 10:53:45,760 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:45,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3ea5e11da0&gt;&gt;
2023-12-12 10:53:45,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f3ea5ddf588&gt;&gt;
2023-12-12 10:53:45,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f3ea7f777b8&gt;
2023-12-12 10:53:45,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f3ea5ddf588&gt;&gt;
2023-12-12 10:53:45,762 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:45,763 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:45,763 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105345Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:53:45,763 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105345Z
20231212/us-west-1/s3/aws4_request
5877a059c6fa510151c34553f72932da00b679da5a7c91ca1bf47c0234e86105
2023-12-12 10:53:45,763 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
2387033dd2a6678708b586bae0aadb830e1a8f189de30cee3f04905f95205078
2023-12-12 10:53:45,763 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f3eaa4a01e0&gt;
2023-12-12 10:53:45,763 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f3ea7efe730&gt;
2023-12-12 10:53:45,763 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea5d66390&gt;]
2023-12-12 10:53:45,764 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploads, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105345Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=2387033dd2a6678708b586bae0aadb830e1a8f189de30cee3f04905f95205078', 'amz-sdk-invocation-id': b'2045283a-2e6b-46c2-8892-6de7ea1ae995', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2023-12-12 10:53:45,765 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:45,764 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3ea5d85f28&gt; for transfer request: 0.
2023-12-12 10:53:45,764 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea5d66390&gt;
2023-12-12 10:53:45,765 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:45,766 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea5d66390&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea5d66908&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea4bec208&gt;]
2023-12-12 10:53:45,766 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:45,766 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea5d66390&gt;
2023-12-12 10:53:45,784 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploads HTTP/1.1" 200 287
2023-12-12 10:53:45,785 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:45 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:45 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'TxvHlY1Aklh', 'x-amz-request-id': '97845cfa-1120-4d85-8045-9136d1518524', 'Content-Length': '287'}
2023-12-12 10:53:45,785 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2023-12-12 10:53:45,786 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3ea5ddf198&gt;
2023-12-12 10:53:45,786 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:45,786 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:45,786 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f3ea64a7598&gt;
2023-12-12 10:53:45,786 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:45,786 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:53:45,787 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:53:45,787 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea5d66908&gt;
2023-12-12 10:53:45,787 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3ea5e11be0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3ea5d664e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': 'ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620'}
2023-12-12 10:53:45,788 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f3ea7f77ae8&gt;
2023-12-12 10:53:45,788 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3ea5e11be0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3ea5d66a20&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': 'ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620'}
2023-12-12 10:53:45,788 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f3ea7f7af28&gt;
2023-12-12 10:53:45,788 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f3ea7f77ae8&gt;
2023-12-12 10:53:45,788 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f3ea7f77a60&gt;
2023-12-12 10:53:45,788 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:45,788 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f3ea7f7af28&gt;
2023-12-12 10:53:45,788 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f3ea5ddf518&gt;&gt;
2023-12-12 10:53:45,789 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f3ea7f77a60&gt;
2023-12-12 10:53:45,789 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f3ea7f778c8&gt;
2023-12-12 10:53:45,789 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:45,789 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f3ea891d0d0&gt;
2023-12-12 10:53:45,789 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f3ea5ddf518&gt;&gt;
2023-12-12 10:53:45,789 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f3ea7f778c8&gt;
2023-12-12 10:53:45,790 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f3ea891d0d0&gt;
2023-12-12 10:53:45,793 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f3ea7f77d90&gt;
2023-12-12 10:53:45,793 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:53:45,793 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:45,793 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f3ea7f77598&gt;
2023-12-12 10:53:45,793 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3ea7efe0d0&gt;
2023-12-12 10:53:45,794 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/encrypted/big_file', 'query_string': {'uploadId': 'ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'iCwFe4vSVkJFT178uuQYCg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3ea5d66a20&gt;, 'url': 'http://s3g:9878/encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3ea5e11dd8&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:45,794 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f3eaa4a0158&gt;
2023-12-12 10:53:45,794 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3ea5e11da0&gt;&gt;
2023-12-12 10:53:45,794 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f3ea5ddf588&gt;&gt;
2023-12-12 10:53:45,794 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f3ea7f777b8&gt;
2023-12-12 10:53:45,794 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f3ea5ddf588&gt;&gt;
2023-12-12 10:53:45,796 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:45,796 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=2&amp;uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620
content-md5:iCwFe4vSVkJFT178uuQYCg==
host:s3g:9878
x-amz-content-sha256:5b92f7ce508a4ca32e1c364eaae57dd70aab997fb55893d1b7f2841d4059f123
x-amz-date:20231212T105345Z

content-md5;host;x-amz-content-sha256;x-amz-date
5b92f7ce508a4ca32e1c364eaae57dd70aab997fb55893d1b7f2841d4059f123
2023-12-12 10:53:45,796 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105345Z
20231212/us-west-1/s3/aws4_request
8279b1ff861a5b56c7395ea1dd75b76672976d3f291e48af38067f0d707a29b4
2023-12-12 10:53:45,796 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
4720d2da9d5ca40bc7b45472f99bfa8feb9b729d48d3b7eaec84cd949b31508e
2023-12-12 10:53:45,796 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f3eaa4a01e0&gt;
2023-12-12 10:53:45,796 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f3ea7efe730&gt;
2023-12-12 10:53:45,797 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'iCwFe4vSVkJFT178uuQYCg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105345Z', 'X-Amz-Content-SHA256': b'5b92f7ce508a4ca32e1c364eaae57dd70aab997fb55893d1b7f2841d4059f123', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=4720d2da9d5ca40bc7b45472f99bfa8feb9b729d48d3b7eaec84cd949b31508e', 'amz-sdk-invocation-id': b'9c10f7cc-81e4-44de-96bc-a008d5d9c594', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2023-12-12 10:53:45,800 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:53:45,800 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (5.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (11.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (16.7 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (21.9 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (27.0 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (32.0 MiB/s) with 1 file(s) remaining  
2023-12-12 10:53:45,810 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f3ea7f77d90&gt;
2023-12-12 10:53:45,810 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:53:45,810 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:45,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f3ea7f77598&gt;
2023-12-12 10:53:45,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3ea7efe0d0&gt;
2023-12-12 10:53:45,811 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/encrypted/big_file', 'query_string': {'uploadId': 'ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'ia7MDfME4C04WKjU0UN4nw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3ea5d664e0&gt;, 'url': 'http://s3g:9878/encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3ea5e11dd8&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:45,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f3eaa4a0158&gt;
2023-12-12 10:53:45,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3ea5e11da0&gt;&gt;
2023-12-12 10:53:45,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f3ea5ddf588&gt;&gt;
2023-12-12 10:53:45,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f3ea7f777b8&gt;
2023-12-12 10:53:45,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f3ea5ddf588&gt;&gt;
2023-12-12 10:53:45,818 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:45,819 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=1&amp;uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620
content-md5:ia7MDfME4C04WKjU0UN4nw==
host:s3g:9878
x-amz-content-sha256:07fd9e8d6b387a2bbf112c6639abb2930bea9dee0d974136f0ec6fb8801598e3
x-amz-date:20231212T105345Z

content-md5;host;x-amz-content-sha256;x-amz-date
07fd9e8d6b387a2bbf112c6639abb2930bea9dee0d974136f0ec6fb8801598e3
2023-12-12 10:53:45,819 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105345Z
20231212/us-west-1/s3/aws4_request
6c94bc2ef60617b45ffd7d34e957c86f26fbf9ebcc6c1be5a7eee6ab77126274
2023-12-12 10:53:45,819 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
3886563fbe480e4b80adbc05330d0ff4680b9b0bcc5aff27db7558f6b9bdc421
2023-12-12 10:53:45,819 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f3eaa4a01e0&gt;
2023-12-12 10:53:45,819 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f3ea7efe730&gt;
2023-12-12 10:53:45,819 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'ia7MDfME4C04WKjU0UN4nw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105345Z', 'X-Amz-Content-SHA256': b'07fd9e8d6b387a2bbf112c6639abb2930bea9dee0d974136f0ec6fb8801598e3', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=3886563fbe480e4b80adbc05330d0ff4680b9b0bcc5aff27db7558f6b9bdc421', 'amz-sdk-invocation-id': b'c21ca126-291a-4ea5-82ef-ea3636143a42', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2023-12-12 10:53:45,820 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2023-12-12 10:53:45,821 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:53:45,823 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (26.6 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (30.2 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (33.8 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (37.3 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (40.7 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (44.1 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (32.8 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (35.1 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (37.4 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (39.7 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (22.6 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (13.5 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (10.7 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 5.2 MiB/9.5 MiB (7.1 MiB/s) with 1 file(s) remaining   
Completed 5.5 MiB/9.5 MiB (6.7 MiB/s) with 1 file(s) remaining   
Completed 5.8 MiB/9.5 MiB (6.5 MiB/s) with 1 file(s) remaining   
2023-12-12 10:53:46,678 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620&amp;partNumber=2 HTTP/1.1" 200 0
2023-12-12 10:53:46,679 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:45 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:45 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/s3v/encrypted/big_file-ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620-2', 'Server': 'Ozone', 'x-amz-id-2': 'fJ6IryCv86COul', 'x-amz-request-id': 'cb8288da-7d6d-4534-b753-9a36fbfc88d3', 'Content-Length': '0'}
2023-12-12 10:53:46,679 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:53:46,680 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3ea5ddf198&gt;
2023-12-12 10:53:46,680 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:46,680 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:46,680 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f3ea64a7598&gt;
2023-12-12 10:53:46,680 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 5.8 MiB/9.5 MiB (6.3 MiB/s) with 1 file(s) remaining   
Completed 6.0 MiB/9.5 MiB (6.5 MiB/s) with 1 file(s) remaining   
Completed 6.3 MiB/9.5 MiB (6.6 MiB/s) with 1 file(s) remaining   
Completed 6.5 MiB/9.5 MiB (6.7 MiB/s) with 1 file(s) remaining   
Completed 6.8 MiB/9.5 MiB (6.7 MiB/s) with 1 file(s) remaining   
Completed 7.0 MiB/9.5 MiB (6.9 MiB/s) with 1 file(s) remaining   
Completed 7.3 MiB/9.5 MiB (6.9 MiB/s) with 1 file(s) remaining   
Completed 7.5 MiB/9.5 MiB (6.9 MiB/s) with 1 file(s) remaining   
Completed 7.8 MiB/9.5 MiB (7.0 MiB/s) with 1 file(s) remaining   
Completed 8.0 MiB/9.5 MiB (7.0 MiB/s) with 1 file(s) remaining   
Completed 8.3 MiB/9.5 MiB (7.1 MiB/s) with 1 file(s) remaining   
Completed 8.5 MiB/9.5 MiB (7.1 MiB/s) with 1 file(s) remaining   
Completed 8.8 MiB/9.5 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 9.0 MiB/9.5 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 9.3 MiB/9.5 MiB (7.3 MiB/s) with 1 file(s) remaining   
Completed 9.5 MiB/9.5 MiB (7.2 MiB/s) with 1 file(s) remaining   
2023-12-12 10:53:47,406 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620&amp;partNumber=1 HTTP/1.1" 200 0
2023-12-12 10:53:47,407 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:45 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:45 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/s3v/encrypted/big_file-ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620-1', 'Server': 'Ozone', 'x-amz-id-2': 'BTDAop9SLhGsXa', 'x-amz-request-id': '85e533c8-0d76-487c-883a-2a7ab46e5eee', 'Content-Length': '0'}
2023-12-12 10:53:47,407 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:53:47,407 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3ea5ddf198&gt;
2023-12-12 10:53:47,408 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:47,408 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:47,408 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f3ea64a7598&gt;
2023-12-12 10:53:47,408 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:47,408 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3ea4bec208&gt;
2023-12-12 10:53:47,408 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:53:47,409 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3ea5e11be0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}, 'upload_id': 'ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620', 'parts': [{'ETag': '/s3v/encrypted/big_file-ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620-1', 'PartNumber': 1}, {'ETag': '/s3v/encrypted/big_file-ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620-2', 'PartNumber': 2}]}
2023-12-12 10:53:47,409 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f3ea7f77a60&gt;
2023-12-12 10:53:47,410 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:47,410 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f3ea5ddf518&gt;&gt;
2023-12-12 10:53:47,410 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f3ea7f778c8&gt;
2023-12-12 10:53:47,411 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f3ea7f77d90&gt;
2023-12-12 10:53:47,411 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:47,411 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f3ea7f77598&gt;
2023-12-12 10:53:47,411 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3ea7efe0d0&gt;
2023-12-12 10:53:47,411 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/encrypted/big_file', 'query_string': {'uploadId': 'ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;/s3v/encrypted/big_file-ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620-1&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;/s3v/encrypted/big_file-ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620-2&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3ea5e11dd8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:47,411 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f3eaa4a0158&gt;
2023-12-12 10:53:47,411 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3ea5e11da0&gt;&gt;
2023-12-12 10:53:47,412 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f3ea5ddf588&gt;&gt;
2023-12-12 10:53:47,412 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f3ea7f777b8&gt;
2023-12-12 10:53:47,412 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f3ea5ddf588&gt;&gt;
2023-12-12 10:53:47,412 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:47,413 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620
host:s3g:9878
x-amz-content-sha256:be23f0a7945ac56248552e97645c89d91e4e7dca26927a8e826a368d6695a448
x-amz-date:20231212T105347Z

host;x-amz-content-sha256;x-amz-date
be23f0a7945ac56248552e97645c89d91e4e7dca26927a8e826a368d6695a448
2023-12-12 10:53:47,413 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105347Z
20231212/us-west-1/s3/aws4_request
cecb9406beeb8089610c02ed1f2056be42f489c42ffd070772cd84404572e602
2023-12-12 10:53:47,413 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
416f250fdb08b1672567b3b682f534f429cf4061d5d571874094d48fa242045b
2023-12-12 10:53:47,413 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f3eaa4a01e0&gt;
2023-12-12 10:53:47,413 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f3ea7efe730&gt;
2023-12-12 10:53:47,413 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105347Z', 'X-Amz-Content-SHA256': b'be23f0a7945ac56248552e97645c89d91e4e7dca26927a8e826a368d6695a448', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=416f250fdb08b1672567b3b682f534f429cf4061d5d571874094d48fa242045b', 'amz-sdk-invocation-id': b'f7e5e641-85c1-458f-b336-a15948b16f3e', 'amz-sdk-request': b'attempt=1', 'Content-Length': '365'}&gt;
2023-12-12 10:53:47,442 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620 HTTP/1.1" 200 290
2023-12-12 10:53:47,443 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'bl2qkq52', 'x-amz-request-id': '45fc66dd-16c4-433c-9a71-501dee083a77', 'Content-Length': '290'}
2023-12-12 10:53:47,443 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;encrypted&lt;/Location&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"a63e37345edf0e2dae44f27da8276432-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2023-12-12 10:53:47,444 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function check_for_200_error at 0x7f3ea7f776a8&gt;
2023-12-12 10:53:47,444 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3ea5ddf198&gt;
2023-12-12 10:53:47,444 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:47,444 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f3ea5ddf160&gt;&gt;
2023-12-12 10:53:47,445 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f3ea64a7598&gt;
2023-12-12 10:53:47,445 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://encrypted/big_file            
2023-12-12 10:53:47,446 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:53:47.494" endtime="20231212 10:53:47.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:47.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:47.496" endtime="20231212 10:53:47.496"/>
</kw>
<status status="PASS" starttime="20231212 10:53:45.324" endtime="20231212 10:53:47.496"/>
</kw>
<msg timestamp="20231212 10:53:47.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:45.324" endtime="20231212 10:53:47.497"/>
</kw>
<msg timestamp="20231212 10:53:47.498" level="INFO">${output} = 2023-12-12 10:53:45,697 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:45,698 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:45.323" endtime="20231212 10:53:47.498"/>
</kw>
<msg timestamp="20231212 10:53:47.498" level="INFO">${result} = 2023-12-12 10:53:45,697 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:45,698 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:45.323" endtime="20231212 10:53:47.498"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:53:47.500" level="INFO">${match} = POST /encrypted/big_file?uploadId=ef369de2-bc4e-41bd-85ef-e51b416c8fcf-111567072511590620 HTTP/1.1" 200 290
2023-12-12 10:53:47,443 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response heade...</msg>
<msg timestamp="20231212 10:53:47.500" level="INFO">${etag1} = a63e37345edf0e2dae44f27da8276432-2</msg>
<status status="PASS" starttime="20231212 10:53:47.498" endtime="20231212 10:53:47.500"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:47.503" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:48.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:48.221" level="INFO">${output} = 2023-12-12 10:53:47,852 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:47,852 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:47.502" endtime="20231212 10:53:48.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:48.223" level="INFO">2023-12-12 10:53:47,852 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:47,852 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/big_file', '/tmp/big_file_downloaded']
2023-12-12 10:53:47,852 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f854180c9d8&gt;
2023-12-12 10:53:47,852 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f8542600730&gt;
2023-12-12 10:53:47,853 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f854262eae8&gt;
2023-12-12 10:53:47,853 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:53:47,857 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f8541939400&gt;
2023-12-12 10:53:47,857 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f854181a048&gt;
2023-12-12 10:53:47,858 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,858 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f854181a048&gt;
2023-12-12 10:53:47,859 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,859 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8542601630&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8542601630&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8542601630&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,860 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,862 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8542601630&gt;
2023-12-12 10:53:47,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,863 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8542601630&gt;
2023-12-12 10:53:47,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,863 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8542601630&gt;
2023-12-12 10:53:47,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8549519a20&gt;
2023-12-12 10:53:47,864 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:53:47,864 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-12-12 10:53:47,864 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:53:47,878 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:53:47,879 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f85432c6378&gt;
2023-12-12 10:53:47,879 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:53:47,890 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f854359c2f0&gt;
2023-12-12 10:53:47,890 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f854359c0d0&gt;
2023-12-12 10:53:47,890 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:47,893 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:47,893 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:53:47,894 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:47,895 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:47,895 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f85432c6378&gt;
2023-12-12 10:53:47,896 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f854359c2f0&gt;
2023-12-12 10:53:47,896 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f854359c0d0&gt;
2023-12-12 10:53:47,896 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:47,899 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:47,899 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:47,900 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:47,900 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f85432c6378&gt;
2023-12-12 10:53:47,902 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f854359c2f0&gt;
2023-12-12 10:53:47,902 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f854359c0d0&gt;
2023-12-12 10:53:47,902 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:47,904 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:47,905 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:47,905 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:47,906 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:53:47,907 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f85432dcae8&gt;
2023-12-12 10:53:47,907 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f85432dca60&gt;
2023-12-12 10:53:47,907 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f85410ea6d8&gt;&gt;
2023-12-12 10:53:47,907 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f85410eaa90&gt;&gt;
2023-12-12 10:53:47,907 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f85432dc8c8&gt;
2023-12-12 10:53:47,907 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f85432dcd90&gt;
2023-12-12 10:53:47,907 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f85410ea6d8&gt;&gt;
2023-12-12 10:53:47,907 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f85432dc598&gt;
2023-12-12 10:53:47,907 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f85432630d0&gt;
2023-12-12 10:53:47,907 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/encrypted/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f85410ea390&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:47,908 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f85410ea358&gt;&gt;
2023-12-12 10:53:47,908 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f85410eab00&gt;&gt;
2023-12-12 10:53:47,908 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f85432dc7b8&gt;
2023-12-12 10:53:47,908 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f85410eab00&gt;&gt;
2023-12-12 10:53:47,908 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:47,909 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:47,909 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105347Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:53:47,909 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105347Z
20231212/us-west-1/s3/aws4_request
e2622ab9e0a266c2a58b3d0d1ad663e8de9ecf845ff01cf22e411b60481731f5
2023-12-12 10:53:47,909 - MainThread - botocore.auth - DEBUG - Signature:
8f416180e9fd29c76ac2c32cf7e636bd557f64079cb6746e6bf97b9bede9603d
2023-12-12 10:53:47,909 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f8543263730&gt;
2023-12-12 10:53:47,909 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/big_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105347Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=8f416180e9fd29c76ac2c32cf7e636bd557f64079cb6746e6bf97b9bede9603d', 'amz-sdk-invocation-id': b'0eb4f344-906a-4f41-8c76-fc31ca3534b6', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:53:47,910 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:47,917 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/big_file HTTP/1.1" 200 0
2023-12-12 10:53:47,917 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"a63e37345edf0e2dae44f27da8276432-2"', 'Last-Modified': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'SieDGiCLBkCxNpw', 'x-amz-request-id': '1a18bf6b-b930-4185-88d7-40d0d96bf76c', 'Content-Length': '10000000'}
2023-12-12 10:53:47,917 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:53:47,918 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f85410ea710&gt;
2023-12-12 10:53:47,918 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:47,918 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f85410ea6d8&gt;&gt;
2023-12-12 10:53:47,918 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f854180c598&gt;
2023-12-12 10:53:47,919 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:47,920 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;}) about to wait for the following futures []
2023-12-12 10:53:47,920 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;}) done waiting for dependent futures
2023-12-12 10:53:47,920 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f8541176be0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f85410ead30&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f85410eada0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410eaf28&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt;}
2023-12-12 10:53:47,921 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410eaf28&gt; for transfer request: 0.
2023-12-12 10:53:47,921 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:47,921 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2023-12-12 10:53:47,921 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2023-12-12 10:53:47,921 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410eaf28&gt; for transfer request: 0.
2023-12-12 10:53:47,922 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f8541176be0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f85410d3ef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f85410d3dd8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f85410d3e10&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f85410d3f60&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f85410d3d30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-12-12 10:53:47,922 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f85432dcae8&gt;
2023-12-12 10:53:47,922 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f85432dca60&gt;
2023-12-12 10:53:47,922 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f8541149160&gt;&gt;
2023-12-12 10:53:47,922 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f8541149518&gt;&gt;
2023-12-12 10:53:47,922 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f85432dc8c8&gt;
2023-12-12 10:53:47,922 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:47,923 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f85432dcd90&gt;
2023-12-12 10:53:47,923 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2023-12-12 10:53:47,923 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f8541149160&gt;&gt;
2023-12-12 10:53:47,923 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f85432dc598&gt;
2023-12-12 10:53:47,924 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f85432630d0&gt;
2023-12-12 10:53:47,923 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:47,924 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/encrypted/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f8541176dd8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:47,923 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2023-12-12 10:53:47,924 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f8545805158&gt;
2023-12-12 10:53:47,924 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f8541176be0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f85410d3ef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f85410d3dd8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f85410d3e10&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f85410d3f60&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f85410d3828&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f85410d3d30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-12-12 10:53:47,925 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f8541176da0&gt;&gt;
2023-12-12 10:53:47,925 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f85432dcae8&gt;
2023-12-12 10:53:47,925 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f8541149588&gt;&gt;
2023-12-12 10:53:47,925 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f85432dca60&gt;
2023-12-12 10:53:47,925 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f85432dc7b8&gt;
2023-12-12 10:53:47,925 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f8541149160&gt;&gt;
2023-12-12 10:53:47,925 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f8541149588&gt;&gt;
2023-12-12 10:53:47,925 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f8541149518&gt;&gt;
2023-12-12 10:53:47,925 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:47,926 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f85432dc8c8&gt;
2023-12-12 10:53:47,926 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f85432dcd90&gt;
2023-12-12 10:53:47,926 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f8541149160&gt;&gt;
2023-12-12 10:53:47,926 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f85432dc598&gt;
2023-12-12 10:53:47,926 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:47,926 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105347Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:53:47,926 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105347Z
20231212/us-west-1/s3/aws4_request
91334a530df9f6d0915e75782a3b6c35ce0dda085b5e0518bb2f775801ba9d4c
2023-12-12 10:53:47,926 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
a144d58a2936462f247859742b1e9bb4cc0627d06e0cfa4d9b75c1decdeda666
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f85458051e0&gt;
2023-12-12 10:53:47,926 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f85432630d0&gt;
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/encrypted/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f8541176dd8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f8545805158&gt;
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f8541176da0&gt;&gt;
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f8541149588&gt;&gt;
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f85432dc7b8&gt;
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f8541149588&gt;&gt;
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f8543263730&gt;
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105347Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=a144d58a2936462f247859742b1e9bb4cc0627d06e0cfa4d9b75c1decdeda666', 'amz-sdk-invocation-id': b'e1235586-9949-4f5b-8fb5-31b1ffce3aa0', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:53:47,928 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:47,927 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:47,929 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105347Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:53:47,929 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105347Z
20231212/us-west-1/s3/aws4_request
7afd9b8ab93827fed4fd84078444b9e3ddbe38b06af3600385f2140453a6b9b3
2023-12-12 10:53:47,929 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
bc5052bb371ef85fa242b07f88b637536755ada7150c85cc3232454503c75213
2023-12-12 10:53:47,929 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f85458051e0&gt;
2023-12-12 10:53:47,929 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f8543263730&gt;
2023-12-12 10:53:47,929 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105347Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=bc5052bb371ef85fa242b07f88b637536755ada7150c85cc3232454503c75213', 'amz-sdk-invocation-id': b'67093919-21f5-4f7e-824f-ffea7f3cf3d1', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:53:47,930 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2023-12-12 10:53:47,986 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/big_file HTTP/1.1" 206 1611392
2023-12-12 10:53:47,986 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'ETag': '"a63e37345edf0e2dae44f27da8276432-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Server': 'Ozone', 'x-amz-id-2': '8Nv0BXjTXbSyc2q', 'x-amz-request-id': 'f6233b60-d374-44d7-a314-a899a4817db9', 'Content-Length': '1611392'}
2023-12-12 10:53:47,986 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f853cd02d68&gt;
2023-12-12 10:53:47,988 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/big_file HTTP/1.1" 206 8388608
2023-12-12 10:53:47,990 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f8541149198&gt;
2023-12-12 10:53:47,990 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'ETag': '"a63e37345edf0e2dae44f27da8276432-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'KJQLb6S63yL', 'x-amz-request-id': 'a86ad584-3a23-416a-9123-62c84d870641', 'Content-Length': '8388608'}
2023-12-12 10:53:47,991 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f853cd08668&gt;
2023-12-12 10:53:47,991 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f8541149198&gt;
2023-12-12 10:53:47,991 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:47,991 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f8541149160&gt;&gt;
2023-12-12 10:53:47,991 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f854180c598&gt;
Completed 256.0 KiB/9.5 MiB (3.5 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:47,992 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:47,993 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:47,990 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:47,994 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f8541149160&gt;&gt;
2023-12-12 10:53:47,995 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f854180c598&gt;
Completed 512.0 KiB/9.5 MiB (6.6 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:48,006 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2023-12-12 10:53:48,006 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-12-12 10:53:48,008 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 0}
2023-12-12 10:53:48,008 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
Completed 768.0 KiB/9.5 MiB (8.6 MiB/s) with 1 file(s) remaining
2023-12-12 10:53:48,009 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.0 MiB/9.5 MiB (11.3 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,009 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,010 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,011 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2023-12-12 10:53:48,011 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2023-12-12 10:53:48,011 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 8388608}
2023-12-12 10:53:48,010 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,011 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.2 MiB/9.5 MiB (13.9 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,010 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,012 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
Completed 1.5 MiB/9.5 MiB (16.5 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,013 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.8 MiB/9.5 MiB (19.2 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,013 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,013 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.0 MiB/9.5 MiB (21.5 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,015 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,015 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.2 MiB/9.5 MiB (24.1 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,015 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,015 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,013 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,016 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (26.5 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,012 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,016 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
Completed 2.8 MiB/9.5 MiB (29.0 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,016 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2023-12-12 10:53:48,018 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2023-12-12 10:53:48,018 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 8650752}
2023-12-12 10:53:48,018 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,016 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,018 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.0 MiB/9.5 MiB (30.9 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,017 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.2 MiB/9.5 MiB (33.2 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,018 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-12-12 10:53:48,020 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-12-12 10:53:48,019 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,026 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,020 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,027 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 262144}
2023-12-12 10:53:48,028 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
Completed 3.5 MiB/9.5 MiB (33.2 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2023-12-12 10:53:48,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 8912896}
2023-12-12 10:53:48,029 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,027 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,029 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-12-12 10:53:48,030 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-12-12 10:53:48,030 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 524288}
2023-12-12 10:53:48,030 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,030 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-12-12 10:53:48,030 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-12-12 10:53:48,030 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 786432}
2023-12-12 10:53:48,031 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,031 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2023-12-12 10:53:48,031 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2023-12-12 10:53:48,031 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 1048576}
2023-12-12 10:53:48,031 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2023-12-12 10:53:48,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2023-12-12 10:53:48,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 9175040}
2023-12-12 10:53:48,032 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2023-12-12 10:53:48,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2023-12-12 10:53:48,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 1310720}
2023-12-12 10:53:48,033 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,036 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,036 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,036 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2023-12-12 10:53:48,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2023-12-12 10:53:48,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 9437184}
Completed 3.5 MiB/9.5 MiB (31.0 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,037 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2023-12-12 10:53:48,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2023-12-12 10:53:48,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 1572864}
2023-12-12 10:53:48,038 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,038 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2023-12-12 10:53:48,038 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2023-12-12 10:53:48,038 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 9699328}
2023-12-12 10:53:48,038 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,038 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2023-12-12 10:53:48,039 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2023-12-12 10:53:48,039 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 1835008}
2023-12-12 10:53:48,039 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,039 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2023-12-12 10:53:48,039 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2023-12-12 10:53:48,039 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 9961472}
2023-12-12 10:53:48,039 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,042 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
Completed 3.8 MiB/9.5 MiB (31.5 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,042 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,042 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2023-12-12 10:53:48,042 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2023-12-12 10:53:48,043 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 2097152}
Completed 4.0 MiB/9.5 MiB (33.3 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,043 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,043 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,043 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,044 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2023-12-12 10:53:48,044 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2023-12-12 10:53:48,044 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 2359296}
2023-12-12 10:53:48,044 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 4.3 MiB/9.5 MiB (34.9 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,045 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,045 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2023-12-12 10:53:48,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2023-12-12 10:53:48,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 2621440}
2023-12-12 10:53:48,045 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,053 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
Completed 4.5 MiB/9.5 MiB (34.5 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,054 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,054 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2023-12-12 10:53:48,054 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2023-12-12 10:53:48,054 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 2883584}
2023-12-12 10:53:48,055 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,066 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,066 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2023-12-12 10:53:48,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2023-12-12 10:53:48,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 3145728}
2023-12-12 10:53:48,067 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
Completed 4.8 MiB/9.5 MiB (33.1 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/9.5 MiB (34.6 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,067 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,067 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,068 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2023-12-12 10:53:48,068 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
Completed 5.3 MiB/9.5 MiB (36.1 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,068 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,068 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 3407872}
2023-12-12 10:53:48,068 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,069 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,069 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2023-12-12 10:53:48,069 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2023-12-12 10:53:48,069 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 3670016}
2023-12-12 10:53:48,070 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,082 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,082 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.5 MiB/9.5 MiB (34.6 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,083 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2023-12-12 10:53:48,083 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2023-12-12 10:53:48,083 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 3932160}
2023-12-12 10:53:48,087 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 5.8 MiB/9.5 MiB (34.4 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,090 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,093 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,094 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,094 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,094 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,094 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.0 MiB/9.5 MiB (35.0 MiB/s) with 1 file(s) remaining 
Completed 6.3 MiB/9.5 MiB (36.4 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,095 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2023-12-12 10:53:48,095 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2023-12-12 10:53:48,095 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 4194304}
2023-12-12 10:53:48,095 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,095 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2023-12-12 10:53:48,095 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2023-12-12 10:53:48,095 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 4456448}
2023-12-12 10:53:48,097 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 6.5 MiB/9.5 MiB (36.6 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,097 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2023-12-12 10:53:48,100 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,102 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,101 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2023-12-12 10:53:48,103 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 4718592}
2023-12-12 10:53:48,103 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,103 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2023-12-12 10:53:48,104 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2023-12-12 10:53:48,104 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 4980736}
2023-12-12 10:53:48,106 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,107 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,107 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.8 MiB/9.5 MiB (36.7 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,108 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,108 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.0 MiB/9.5 MiB (37.8 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,109 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,109 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.3 MiB/9.5 MiB (38.9 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,110 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
2023-12-12 10:53:48,110 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2023-12-12 10:53:48,110 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 5242880}
2023-12-12 10:53:48,110 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,110 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2023-12-12 10:53:48,110 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2023-12-12 10:53:48,110 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 5505024}
2023-12-12 10:53:48,111 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,111 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2023-12-12 10:53:48,111 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2023-12-12 10:53:48,111 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 5767168}
2023-12-12 10:53:48,114 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,117 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,117 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.5 MiB/9.5 MiB (38.6 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,117 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2023-12-12 10:53:48,117 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2023-12-12 10:53:48,118 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 6029312}
2023-12-12 10:53:48,118 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,129 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
Completed 7.8 MiB/9.5 MiB (37.5 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,130 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,131 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,131 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.0 MiB/9.5 MiB (38.4 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,133 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,133 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.3 MiB/9.5 MiB (39.3 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,134 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2023-12-12 10:53:48,134 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2023-12-12 10:53:48,134 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 6291456}
2023-12-12 10:53:48,135 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2023-12-12 10:53:48,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2023-12-12 10:53:48,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 6553600}
2023-12-12 10:53:48,135 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,136 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2023-12-12 10:53:48,136 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2023-12-12 10:53:48,136 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 6815744}
2023-12-12 10:53:48,136 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,147 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,147 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.5 MiB/9.5 MiB (38.0 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,147 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2023-12-12 10:53:48,147 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2023-12-12 10:53:48,148 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 7077888}
2023-12-12 10:53:48,148 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,155 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,155 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.8 MiB/9.5 MiB (37.7 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,156 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,156 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.0 MiB/9.5 MiB (38.6 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,157 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,157 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.3 MiB/9.5 MiB (39.4 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,158 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2023-12-12 10:53:48,158 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2023-12-12 10:53:48,158 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 7340032}
2023-12-12 10:53:48,159 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,159 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2023-12-12 10:53:48,159 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2023-12-12 10:53:48,159 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 7602176}
2023-12-12 10:53:48,159 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,161 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2023-12-12 10:53:48,161 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2023-12-12 10:53:48,161 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 7864320}
2023-12-12 10:53:48,161 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,165 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
2023-12-12 10:53:48,165 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,165 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f85410b9358&gt; for transfer request: 0.
Completed 9.5 MiB/9.5 MiB (39.2 MiB/s) with 1 file(s) remaining 
2023-12-12 10:53:48,166 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:48,166 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,166 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2023-12-12 10:53:48,167 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2023-12-12 10:53:48,167 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'offset': 8126464}
2023-12-12 10:53:48,168 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2023-12-12 10:53:48,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2023-12-12 10:53:48,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f85410d3f98&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f85410eada0&gt;}
download: s3://encrypted/big_file to ../../tmp/big_file_downloaded
2023-12-12 10:53:48,169 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:48,169 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:53:48.222" endtime="20231212 10:53:48.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:48.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:48.223" endtime="20231212 10:53:48.224"/>
</kw>
<status status="PASS" starttime="20231212 10:53:47.501" endtime="20231212 10:53:48.224"/>
</kw>
<msg timestamp="20231212 10:53:48.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:47.501" endtime="20231212 10:53:48.224"/>
</kw>
<msg timestamp="20231212 10:53:48.226" level="INFO">${output} = 2023-12-12 10:53:47,852 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:47,852 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:47.500" endtime="20231212 10:53:48.226"/>
</kw>
<msg timestamp="20231212 10:53:48.226" level="INFO">${file_download_result} = 2023-12-12 10:53:47,852 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:47,852 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:47.500" endtime="20231212 10:53:48.226"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:53:48.228" level="INFO">${match} = GET /encrypted/big_file HTTP/1.1" 206 1611392
2023-12-12 10:53:47,986 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:47 GMT', 'Cache-Control':...</msg>
<msg timestamp="20231212 10:53:48.228" level="INFO">${etag2} = a63e37345edf0e2dae44f27da8276432-2</msg>
<status status="PASS" starttime="20231212 10:53:48.227" endtime="20231212 10:53:48.228"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:53:48.228" endtime="20231212 10:53:48.228"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:48.232" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:48.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:48.710" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20231212 10:53:48.230" endtime="20231212 10:53:48.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:48.711" level="INFO">delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20231212 10:53:48.711" endtime="20231212 10:53:48.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:48.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:48.711" endtime="20231212 10:53:48.712"/>
</kw>
<status status="PASS" starttime="20231212 10:53:48.230" endtime="20231212 10:53:48.712"/>
</kw>
<msg timestamp="20231212 10:53:48.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:48.230" endtime="20231212 10:53:48.712"/>
</kw>
<msg timestamp="20231212 10:53:48.712" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20231212 10:53:48.229" endtime="20231212 10:53:48.712"/>
</kw>
<status status="PASS" starttime="20231212 10:53:48.229" endtime="20231212 10:53:48.713"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:48.716" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:48.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:48.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:48.714" endtime="20231212 10:53:48.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:48.719" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:48.719" endtime="20231212 10:53:48.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:48.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:48.719" endtime="20231212 10:53:48.720"/>
</kw>
<status status="PASS" starttime="20231212 10:53:48.713" endtime="20231212 10:53:48.720"/>
</kw>
<msg timestamp="20231212 10:53:48.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:48.713" endtime="20231212 10:53:48.720"/>
</kw>
<status status="PASS" starttime="20231212 10:53:48.713" endtime="20231212 10:53:48.720"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:45.282" endtime="20231212 10:53:48.721"/>
</test>
<test id="s1-s5-s14-t19" name="Create key twice with different content and expect different ETags" line="249">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:48.724" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20231212 10:53:48.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:48.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:48.723" endtime="20231212 10:53:48.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:48.730" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:48.730" endtime="20231212 10:53:48.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:48.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:48.731" endtime="20231212 10:53:48.731"/>
</kw>
<status status="PASS" starttime="20231212 10:53:48.722" endtime="20231212 10:53:48.731"/>
</kw>
<msg timestamp="20231212 10:53:48.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:48.722" endtime="20231212 10:53:48.731"/>
</kw>
<status status="PASS" starttime="20231212 10:53:48.722" endtime="20231212 10:53:48.732"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:48.735" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20231212 10:53:48.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:48.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:48.734" endtime="20231212 10:53:48.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:48.742" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:48.741" endtime="20231212 10:53:48.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:48.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:48.742" endtime="20231212 10:53:48.742"/>
</kw>
<status status="PASS" starttime="20231212 10:53:48.732" endtime="20231212 10:53:48.743"/>
</kw>
<msg timestamp="20231212 10:53:48.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:48.732" endtime="20231212 10:53:48.743"/>
</kw>
<status status="PASS" starttime="20231212 10:53:48.732" endtime="20231212 10:53:48.743"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:48.746" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:49.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:49.302" level="INFO">${output} = 2023-12-12 10:53:49,111 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:49,111 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:48.745" endtime="20231212 10:53:49.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:49.303" level="INFO">2023-12-12 10:53:49,111 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:49,111 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://encrypted/test_key_to_check_etag_differences']
2023-12-12 10:53:49,111 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f906226e9d8&gt;
2023-12-12 10:53:49,112 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f9063062730&gt;
2023-12-12 10:53:49,112 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f9063090ae8&gt;
2023-12-12 10:53:49,112 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:53:49,116 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f906239a400&gt;
2023-12-12 10:53:49,117 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f906227c048&gt;
2023-12-12 10:53:49,117 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,117 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f906227c048&gt;
2023-12-12 10:53:49,119 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,119 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,119 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9063063630&gt;
2023-12-12 10:53:49,120 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,120 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9063063630&gt;
2023-12-12 10:53:49,120 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,120 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,120 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,120 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9063063630&gt;
2023-12-12 10:53:49,120 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,120 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,121 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,121 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,121 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,121 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,121 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,121 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,121 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,121 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,122 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,122 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,122 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,122 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,122 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,122 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,122 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,123 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,123 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9063063630&gt;
2023-12-12 10:53:49,123 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,123 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,123 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,123 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9063063630&gt;
2023-12-12 10:53:49,123 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,123 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9063063630&gt;
2023-12-12 10:53:49,123 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,124 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,124 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,124 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,124 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9069f7ba20&gt;
2023-12-12 10:53:49,124 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:53:49,124 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-12-12 10:53:49,125 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:53:49,139 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:53:49,139 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f9063d27378&gt;
2023-12-12 10:53:49,140 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:53:49,150 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f9063ffe2f0&gt;
2023-12-12 10:53:49,150 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f9063ffe0d0&gt;
2023-12-12 10:53:49,150 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,153 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:49,154 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:53:49,154 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:49,155 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,155 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f9063d27378&gt;
2023-12-12 10:53:49,156 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f9063ffe2f0&gt;
2023-12-12 10:53:49,156 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f9063ffe0d0&gt;
2023-12-12 10:53:49,156 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,159 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:49,160 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:49,160 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,160 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f9063d27378&gt;
2023-12-12 10:53:49,162 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f9063ffe2f0&gt;
2023-12-12 10:53:49,162 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f9063ffe0d0&gt;
2023-12-12 10:53:49,162 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,165 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:49,166 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:49,167 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,167 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:53:49,168 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:49,169 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9061b1bd68&gt;}) about to wait for the following futures []
2023-12-12 10:53:49,169 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9061b1bd68&gt;}) done waiting for dependent futures
2023-12-12 10:53:49,170 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9061b1bd68&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f9061bd8be0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f9061b4cd68&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f9061b4cdd8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f9061b4cf60&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9061b1bd68&gt;}
2023-12-12 10:53:49,170 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f9061b4cf60&gt; for transfer request: 0.
2023-12-12 10:53:49,170 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:49,171 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:53:49,171 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:49,171 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:53:49,171 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f9061bd8be0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f9061b2b320&gt;, 'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2023-12-12 10:53:49,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f9063d416a8&gt;
2023-12-12 10:53:49,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f9063d3eae8&gt;
2023-12-12 10:53:49,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f9063d41f28&gt;
2023-12-12 10:53:49,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f9063d3ea60&gt;
2023-12-12 10:53:49,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f9061bab160&gt;&gt;
2023-12-12 10:53:49,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f9061bab518&gt;&gt;
2023-12-12 10:53:49,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f9063d3e8c8&gt;
2023-12-12 10:53:49,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f90646e40d0&gt;
2023-12-12 10:53:49,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f9063d3ed90&gt;
2023-12-12 10:53:49,175 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:53:49,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f9061bab160&gt;&gt;
2023-12-12 10:53:49,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f9063d3e598&gt;
2023-12-12 10:53:49,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f9063cc50d0&gt;
2023-12-12 10:53:49,175 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/encrypted/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'g59m/yJ9UgWz3Ck6SftFfA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f9061b2b320&gt;, 'url': 'http://s3g:9878/encrypted/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f9061bd8dd8&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:49,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f9066267158&gt;
2023-12-12 10:53:49,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f9061bd8da0&gt;&gt;
2023-12-12 10:53:49,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f9061bab588&gt;&gt;
2023-12-12 10:53:49,176 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f9063d3e7b8&gt;
2023-12-12 10:53:49,176 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f9061bab588&gt;&gt;
2023-12-12 10:53:49,176 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:49,177 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:49,177 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_key_to_check_etag_differences

content-md5:g59m/yJ9UgWz3Ck6SftFfA==
host:s3g:9878
x-amz-content-sha256:cc9a488e1059bf75f8af5aa90619a2e33eea06ee38b7f5eaf9b2d433cd6ed54b
x-amz-date:20231212T105349Z

content-md5;host;x-amz-content-sha256;x-amz-date
cc9a488e1059bf75f8af5aa90619a2e33eea06ee38b7f5eaf9b2d433cd6ed54b
2023-12-12 10:53:49,177 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105349Z
20231212/us-west-1/s3/aws4_request
3850b7005f5ab1714b296f6808b99d80a49cbeee95f3ad0b14c7c10628791d01
2023-12-12 10:53:49,177 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
e0fc47b6fed1d10e1cfe90a8ce996020f9937570bbaca4fad647b17e54299d25
2023-12-12 10:53:49,177 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f90662671e0&gt;
2023-12-12 10:53:49,177 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f9063cc5730&gt;
2023-12-12 10:53:49,178 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'g59m/yJ9UgWz3Ck6SftFfA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105349Z', 'X-Amz-Content-SHA256': b'cc9a488e1059bf75f8af5aa90619a2e33eea06ee38b7f5eaf9b2d433cd6ed54b', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=e0fc47b6fed1d10e1cfe90a8ce996020f9937570bbaca4fad647b17e54299d25', 'amz-sdk-invocation-id': b'94383cb6-8ea7-43b2-859b-cedd4a6ff1b6', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2023-12-12 10:53:49,179 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:49,179 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:53:49,180 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (24.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (46.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (67.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (86.6 MiB/s) with 1 file(s) remaining  
2023-12-12 10:53:49,255 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-12-12 10:53:49,256 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"839f66ff227d5205b3dc293a49fb457c"', 'Server': 'Ozone', 'x-amz-id-2': 'WC6xqDoIUwV', 'x-amz-request-id': 'eb0ec1aa-548a-4cca-9981-128bbee8867a', 'Content-Length': '0'}
2023-12-12 10:53:49,256 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:53:49,256 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f9061bab198&gt;
2023-12-12 10:53:49,257 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:49,257 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f9061bab160&gt;&gt;
2023-12-12 10:53:49,257 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f906226e598&gt;
2023-12-12 10:53:49,257 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://encrypted/test_key_to_check_etag_differences
2023-12-12 10:53:49,258 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:53:49.302" endtime="20231212 10:53:49.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:49.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:49.304" endtime="20231212 10:53:49.304"/>
</kw>
<status status="PASS" starttime="20231212 10:53:48.744" endtime="20231212 10:53:49.305"/>
</kw>
<msg timestamp="20231212 10:53:49.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:48.744" endtime="20231212 10:53:49.305"/>
</kw>
<msg timestamp="20231212 10:53:49.305" level="INFO">${output} = 2023-12-12 10:53:49,111 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:49,111 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:48.744" endtime="20231212 10:53:49.306"/>
</kw>
<msg timestamp="20231212 10:53:49.306" level="INFO">${file1UploadResult} = 2023-12-12 10:53:49,111 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:49,111 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:48.743" endtime="20231212 10:53:49.306"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:53:49.307" level="INFO">${match} = PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-12-12 10:53:49,256 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:49 GM...</msg>
<msg timestamp="20231212 10:53:49.307" level="INFO">${etag1} = 839f66ff227d5205b3dc293a49fb457c</msg>
<status status="PASS" starttime="20231212 10:53:49.306" endtime="20231212 10:53:49.307"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:49.311" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:49.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:49.879" level="INFO">${output} = 2023-12-12 10:53:49,688 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:49,689 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:49.309" endtime="20231212 10:53:49.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:49.880" level="INFO">2023-12-12 10:53:49,688 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:49,689 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://encrypted/test_key_to_check_etag_differences']
2023-12-12 10:53:49,689 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f7a3b1f39d8&gt;
2023-12-12 10:53:49,689 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f7a3bfe7730&gt;
2023-12-12 10:53:49,690 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f7a3c015ae8&gt;
2023-12-12 10:53:49,690 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:53:49,694 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f7a3b31f400&gt;
2023-12-12 10:53:49,695 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f7a3b201048&gt;
2023-12-12 10:53:49,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,695 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f7a3b201048&gt;
2023-12-12 10:53:49,697 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,697 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,697 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7a3bfe8630&gt;
2023-12-12 10:53:49,698 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,698 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7a3bfe8630&gt;
2023-12-12 10:53:49,698 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,698 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,698 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,698 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7a3bfe8630&gt;
2023-12-12 10:53:49,698 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,699 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,699 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,699 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,699 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,699 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,699 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,699 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,701 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7a3bfe8630&gt;
2023-12-12 10:53:49,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,701 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7a3bfe8630&gt;
2023-12-12 10:53:49,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,702 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7a3bfe8630&gt;
2023-12-12 10:53:49,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7a42f00a20&gt;
2023-12-12 10:53:49,703 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:53:49,703 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-12-12 10:53:49,703 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:53:49,718 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:53:49,718 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f7a3ccac378&gt;
2023-12-12 10:53:49,719 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:53:49,729 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f7a3cf832f0&gt;
2023-12-12 10:53:49,729 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f7a3cf830d0&gt;
2023-12-12 10:53:49,729 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,732 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:49,733 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:53:49,733 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:49,734 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,734 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f7a3ccac378&gt;
2023-12-12 10:53:49,735 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f7a3cf832f0&gt;
2023-12-12 10:53:49,735 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f7a3cf830d0&gt;
2023-12-12 10:53:49,736 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,738 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:49,739 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:49,740 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,740 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f7a3ccac378&gt;
2023-12-12 10:53:49,741 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f7a3cf832f0&gt;
2023-12-12 10:53:49,741 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f7a3cf830d0&gt;
2023-12-12 10:53:49,741 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,744 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:53:49,745 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:53:49,745 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:53:49,746 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:53:49,747 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:49,747 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7a3aaa0d68&gt;}) about to wait for the following futures []
2023-12-12 10:53:49,748 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7a3aaa0d68&gt;}) done waiting for dependent futures
2023-12-12 10:53:49,748 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7a3aaa0d68&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f7a3ab5dbe0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f7a3aad1d68&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f7a3aad1dd8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f7a3aad1f60&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7a3aaa0d68&gt;}
2023-12-12 10:53:49,749 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f7a3aad1f60&gt; for transfer request: 0.
2023-12-12 10:53:49,749 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:53:49,749 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:53:49,749 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:53:49,749 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f7a3ab5dbe0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f7a3aab0320&gt;, 'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2023-12-12 10:53:49,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f7a3ccc66a8&gt;
2023-12-12 10:53:49,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f7a3ccc3ae8&gt;
2023-12-12 10:53:49,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f7a3ccc6f28&gt;
2023-12-12 10:53:49,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f7a3ccc3a60&gt;
2023-12-12 10:53:49,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f7a3ab2b160&gt;&gt;
2023-12-12 10:53:49,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f7a3ab2b518&gt;&gt;
2023-12-12 10:53:49,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f7a3ccc38c8&gt;
2023-12-12 10:53:49,751 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f7a3d6690d0&gt;
2023-12-12 10:53:49,750 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:49,753 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f7a3ccc3d90&gt;
2023-12-12 10:53:49,753 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:53:49,753 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f7a3ab2b160&gt;&gt;
2023-12-12 10:53:49,753 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f7a3ccc3598&gt;
2023-12-12 10:53:49,753 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f7a3cc4a0d0&gt;
2023-12-12 10:53:49,754 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/encrypted/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'z1FOtVtLlKOwlceLwf9Thg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f7a3aab0320&gt;, 'url': 'http://s3g:9878/encrypted/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f7a3ab5ddd8&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2023-12-12 10:53:49,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f7a3f1ec158&gt;
2023-12-12 10:53:49,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f7a3ab5dda0&gt;&gt;
2023-12-12 10:53:49,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f7a3ab2b588&gt;&gt;
2023-12-12 10:53:49,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f7a3ccc37b8&gt;
2023-12-12 10:53:49,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f7a3ab2b588&gt;&gt;
2023-12-12 10:53:49,754 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:53:49,756 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:53:49,756 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_key_to_check_etag_differences

content-md5:z1FOtVtLlKOwlceLwf9Thg==
host:s3g:9878
x-amz-content-sha256:1a43c55a7f40041d6b88b1803951e9a90c50f67988ed6450720c7b59e026fed7
x-amz-date:20231212T105349Z

content-md5;host;x-amz-content-sha256;x-amz-date
1a43c55a7f40041d6b88b1803951e9a90c50f67988ed6450720c7b59e026fed7
2023-12-12 10:53:49,756 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105349Z
20231212/us-west-1/s3/aws4_request
4381159f932ed01971f8a5615a10b9a20b18febfc82f1902eb7e889434e0b70b
2023-12-12 10:53:49,756 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
5a68830f7439be18116eaaf48be90e0326b0c2f8e2e850c4cc3c2210f69213a3
2023-12-12 10:53:49,756 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f7a3f1ec1e0&gt;
2023-12-12 10:53:49,756 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f7a3cc4a730&gt;
2023-12-12 10:53:49,756 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'z1FOtVtLlKOwlceLwf9Thg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105349Z', 'X-Amz-Content-SHA256': b'1a43c55a7f40041d6b88b1803951e9a90c50f67988ed6450720c7b59e026fed7', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=5a68830f7439be18116eaaf48be90e0326b0c2f8e2e850c4cc3c2210f69213a3', 'amz-sdk-invocation-id': b'5dca68a6-b204-40ec-ae11-9a18e805f681', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2023-12-12 10:53:49,757 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:53:49,758 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:53:49,759 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (22.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (43.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (62.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (79.8 MiB/s) with 1 file(s) remaining  
2023-12-12 10:53:49,818 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-12-12 10:53:49,818 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:53:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"cf514eb55b4b94a3b095c78bc1ff5386"', 'Server': 'Ozone', 'x-amz-id-2': 'OY2VH62PW4s2Oo', 'x-amz-request-id': '76414c08-cd25-4f62-8412-e6da6caa268c', 'Content-Length': '0'}
2023-12-12 10:53:49,819 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:53:49,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f7a3ab2b198&gt;
2023-12-12 10:53:49,820 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:53:49,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f7a3ab2b160&gt;&gt;
2023-12-12 10:53:49,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f7a3b1f3598&gt;
upload: ../../tmp/file2 to s3://encrypted/test_key_to_check_etag_differences
2023-12-12 10:53:49,820 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:53:49,821 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:53:49.879" endtime="20231212 10:53:49.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:49.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:49.880" endtime="20231212 10:53:49.881"/>
</kw>
<status status="PASS" starttime="20231212 10:53:49.309" endtime="20231212 10:53:49.881"/>
</kw>
<msg timestamp="20231212 10:53:49.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:49.308" endtime="20231212 10:53:49.881"/>
</kw>
<msg timestamp="20231212 10:53:49.882" level="INFO">${output} = 2023-12-12 10:53:49,688 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:49,689 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:49.308" endtime="20231212 10:53:49.882"/>
</kw>
<msg timestamp="20231212 10:53:49.882" level="INFO">${file2UploadResult} = 2023-12-12 10:53:49,688 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:53:49,689 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:53:49.307" endtime="20231212 10:53:49.882"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:53:49.883" level="INFO">${match} = PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-12-12 10:53:49,818 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:53:49 GM...</msg>
<msg timestamp="20231212 10:53:49.883" level="INFO">${etag2} = cf514eb55b4b94a3b095c78bc1ff5386</msg>
<status status="PASS" starttime="20231212 10:53:49.882" endtime="20231212 10:53:49.883"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:53:49.883" endtime="20231212 10:53:49.883"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:49.887" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:50.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:50.404" level="INFO">${output} = delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231212 10:53:49.885" endtime="20231212 10:53:50.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:50.405" level="INFO">delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231212 10:53:50.405" endtime="20231212 10:53:50.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:50.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:50.406" endtime="20231212 10:53:50.407"/>
</kw>
<status status="PASS" starttime="20231212 10:53:49.884" endtime="20231212 10:53:50.407"/>
</kw>
<msg timestamp="20231212 10:53:50.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:49.884" endtime="20231212 10:53:50.407"/>
</kw>
<msg timestamp="20231212 10:53:50.407" level="INFO">${output} = delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231212 10:53:49.884" endtime="20231212 10:53:50.407"/>
</kw>
<status status="PASS" starttime="20231212 10:53:49.883" endtime="20231212 10:53:50.407"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:50.411" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:50.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:50.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:50.409" endtime="20231212 10:53:50.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:50.414" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:50.414" endtime="20231212 10:53:50.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:50.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:50.414" endtime="20231212 10:53:50.415"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.408" endtime="20231212 10:53:50.415"/>
</kw>
<msg timestamp="20231212 10:53:50.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:50.408" endtime="20231212 10:53:50.415"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.407" endtime="20231212 10:53:50.415"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:50.418" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:50.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:50.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:50.416" endtime="20231212 10:53:50.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:50.421" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:50.421" endtime="20231212 10:53:50.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:50.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:50.421" endtime="20231212 10:53:50.422"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.416" endtime="20231212 10:53:50.422"/>
</kw>
<msg timestamp="20231212 10:53:50.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:50.416" endtime="20231212 10:53:50.422"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.415" endtime="20231212 10:53:50.422"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:53:48.721" endtime="20231212 10:53:50.423"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:53:19.849" endtime="20231212 10:53:50.424"/>
</suite>
<suite id="s1-s5-s15" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:50.435" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:50.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:50.437" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:53:50.433" endtime="20231212 10:53:50.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:50.438" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:53:50.438" endtime="20231212 10:53:50.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:50.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:50.438" endtime="20231212 10:53:50.439"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.433" endtime="20231212 10:53:50.439"/>
</kw>
<msg timestamp="20231212 10:53:50.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:50.432" endtime="20231212 10:53:50.439"/>
</kw>
<msg timestamp="20231212 10:53:50.439" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:53:50.432" endtime="20231212 10:53:50.439"/>
</kw>
<msg timestamp="20231212 10:53:50.440" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:53:50.432" endtime="20231212 10:53:50.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:53:50.440" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:53:50.440" endtime="20231212 10:53:50.440"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:50.444" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:50.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:50.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:53:50.442" endtime="20231212 10:53:50.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:50.482" level="INFO"/>
<status status="PASS" starttime="20231212 10:53:50.481" endtime="20231212 10:53:50.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:50.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:50.482" endtime="20231212 10:53:50.482"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.441" endtime="20231212 10:53:50.483"/>
</kw>
<msg timestamp="20231212 10:53:50.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:50.441" endtime="20231212 10:53:50.483"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.441" endtime="20231212 10:53:50.483"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.440" endtime="20231212 10:53:50.483"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.432" endtime="20231212 10:53:50.483"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.431" endtime="20231212 10:53:50.483"/>
</kw>
<test id="s1-s5-s15-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:53:50.484" endtime="20231212 10:53:50.485"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:50.487" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:54.148" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:53:54.148" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231212 10:53:50.485" endtime="20231212 10:53:54.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:54.149" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231212 10:53:54.148" endtime="20231212 10:53:54.149"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.485" endtime="20231212 10:53:54.149"/>
</kw>
<status status="PASS" starttime="20231212 10:53:50.485" endtime="20231212 10:53:54.149"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:54.153" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:53:57.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:53:57.769" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=cb7736286a704b56ca1f3dcf42d9ad0987e95b15d21bfc14282fc544b8c63f94
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:53:54.151" endtime="20231212 10:53:57.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:53:57.771" level="INFO">awsAccessKey=testuser2
awsSecret=cb7736286a704b56ca1f3dcf42d9ad0987e95b15d21bfc14282fc544b8c63f94
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:53:57.770" endtime="20231212 10:53:57.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:53:57.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:53:57.771" endtime="20231212 10:53:57.771"/>
</kw>
<status status="PASS" starttime="20231212 10:53:54.150" endtime="20231212 10:53:57.771"/>
</kw>
<msg timestamp="20231212 10:53:57.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:53:54.150" endtime="20231212 10:53:57.772"/>
</kw>
<msg timestamp="20231212 10:53:57.772" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=cb7736286a704b56ca1f3dcf42d9ad0987e95b15d21bfc14282fc544b8c63f94
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:53:54.150" endtime="20231212 10:53:57.772"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:57.772" endtime="20231212 10:53:57.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:53:57.773" endtime="20231212 10:53:57.773"/>
</kw>
<status status="PASS" starttime="20231212 10:53:57.772" endtime="20231212 10:53:57.773"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:53:57.776" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:01.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:01.138" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:53:57.774" endtime="20231212 10:54:01.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:01.139" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:54:01.139" endtime="20231212 10:54:01.140"/>
</kw>
<status status="PASS" starttime="20231212 10:53:57.774" endtime="20231212 10:54:01.140"/>
</kw>
<status status="PASS" starttime="20231212 10:53:57.773" endtime="20231212 10:54:01.140"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231212 10:53:50.483" endtime="20231212 10:54:01.140"/>
</test>
<test id="s1-s5-s15-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:54:01.141" endtime="20231212 10:54:01.142"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:54:01.142" endtime="20231212 10:54:01.143"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:01.145" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:04.648" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:54:04.648" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231212 10:54:01.143" endtime="20231212 10:54:04.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:04.649" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231212 10:54:04.648" endtime="20231212 10:54:04.649"/>
</kw>
<status status="PASS" starttime="20231212 10:54:01.143" endtime="20231212 10:54:04.649"/>
</kw>
<status status="PASS" starttime="20231212 10:54:01.143" endtime="20231212 10:54:04.649"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:04.653" level="INFO">Running command 'ozone s3 getsecret -u testuser2 --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:08.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:08.139" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=596b0edb0246b2770c384e3562692a4e124d113c3b709be211fb84ebde7007c3
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:54:04.651" endtime="20231212 10:54:08.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:08.140" level="INFO">awsAccessKey=testuser2
awsSecret=596b0edb0246b2770c384e3562692a4e124d113c3b709be211fb84ebde7007c3
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:54:08.139" endtime="20231212 10:54:08.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:08.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:08.140" endtime="20231212 10:54:08.141"/>
</kw>
<status status="PASS" starttime="20231212 10:54:04.650" endtime="20231212 10:54:08.141"/>
</kw>
<msg timestamp="20231212 10:54:08.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:04.650" endtime="20231212 10:54:08.141"/>
</kw>
<msg timestamp="20231212 10:54:08.142" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=596b0edb0246b2770c384e3562692a4e124d113c3b709be211fb84ebde7007c3
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:54:04.649" endtime="20231212 10:54:08.142"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:08.142" endtime="20231212 10:54:08.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:08.143" endtime="20231212 10:54:08.143"/>
</kw>
<status status="PASS" starttime="20231212 10:54:08.142" endtime="20231212 10:54:08.143"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:08.147" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:11.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:11.634" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:54:08.144" endtime="20231212 10:54:11.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:11.635" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:54:11.634" endtime="20231212 10:54:11.635"/>
</kw>
<status status="PASS" starttime="20231212 10:54:08.144" endtime="20231212 10:54:11.635"/>
</kw>
<status status="PASS" starttime="20231212 10:54:08.143" endtime="20231212 10:54:11.635"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231212 10:54:01.141" endtime="20231212 10:54:11.636"/>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20231212 10:53:50.426" endtime="20231212 10:54:11.636"/>
</suite>
<suite id="s1-s5-s16" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:11.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.647" endtime="20231212 10:54:11.648"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.648" endtime="20231212 10:54:11.648"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.648" endtime="20231212 10:54:11.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.648" endtime="20231212 10:54:11.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.648" endtime="20231212 10:54:11.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.649" endtime="20231212 10:54:11.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.649" endtime="20231212 10:54:11.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.649" endtime="20231212 10:54:11.649"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.649" endtime="20231212 10:54:11.649"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.647" endtime="20231212 10:54:11.649"/>
</kw>
<test id="s1-s5-s16-t1" name="S3 Gateway Generate Secret" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:11.654" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:11.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:11.656" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:11.652" endtime="20231212 10:54:11.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:11.657" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:54:11.657" endtime="20231212 10:54:11.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:11.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.657" endtime="20231212 10:54:11.658"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.652" endtime="20231212 10:54:11.658"/>
</kw>
<msg timestamp="20231212 10:54:11.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.651" endtime="20231212 10:54:11.658"/>
</kw>
<msg timestamp="20231212 10:54:11.658" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:11.651" endtime="20231212 10:54:11.658"/>
</kw>
<msg timestamp="20231212 10:54:11.658" level="INFO">${principal} = HTTP/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:11.651" endtime="20231212 10:54:11.658"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:11.662" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:11.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:11.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:11.660" endtime="20231212 10:54:11.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:11.700" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:11.699" endtime="20231212 10:54:11.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:11.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.700" endtime="20231212 10:54:11.701"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.660" endtime="20231212 10:54:11.701"/>
</kw>
<msg timestamp="20231212 10:54:11.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.660" endtime="20231212 10:54:11.701"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.659" endtime="20231212 10:54:11.701"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.659" endtime="20231212 10:54:11.701"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.650" endtime="20231212 10:54:11.701"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.650" endtime="20231212 10:54:11.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:11.705" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:11.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:11.797" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:11.703" endtime="20231212 10:54:11.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:11.798" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; PUT /secret HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret'
* Found bundle for host s3g: 0x180ef90
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggECj/CVMYNKhjB5RsdBsdN8lkfeu/Vo38/CViay7Te1tTvDvfPXl0FTmTrlzJlnyDM9NwAaEe7AfbPKyZb7y3QElKEEAxddB3N14febMH95jG9/FO7DITUIl0cdBhZztL09bWrNBUau27DAkhapwtCf5OFFADeOOs2gs2dXOMwbh2NwBvHcn82W1cqi3EyvQAR2uMElMBdY1b9tFJQg5xZOhRXWDuxdC+fCzDlBCFAx3O7foGVfWGY5Pw+lwtX1diatFcSfQgszoLlEOBn4D3IUyH8a4P2AKBZAdpUJM+swXcXI+1j7PP64SYLNgXC/a2upD1qDgVMBNPqibsxlyaFTVuBVpIHSMIHPoAMCARKigccEgcTszsZVIIVR/uIWVuaZdizIeF9MrPeVs1IfjohOcYjZe3J930uwpK29VDdT4JFMeVl7gT0RwaJYnmC3uaX9rc0Aoo0lCanyVyNfKammTYGFFbvaIlq8NFkkV0L9+2Yqx1Hd0vjvyua2vd5Yll9C5NOU53Wpsj+jTHdmCC4XaiCCYEGaExoT6qCu6pZmHCYiJsYMQH6pndR0GhaI0oRdDaZi+tOVC7M4we5Ds0HG53u8B9IH0O6mO4853z06dwK2IbW9nQpG
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 12 Dec 2023 10:54:11 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 12 Dec 2023 10:54:11 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCQ3QS7GGTje9M1mMAxsO/xSqsCPikrb6d1soCI0M0ZOYLDU4raB+CDy39xwnRgR9m+5BGLPUdYgBh1N9GQ2BR2Jsp
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1702414451754&amp;s=MinQQpoQqCJ3pGiAmdWm58Sr2ROeT+vzIL6k1tE+Uwc="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: l2R2kVu15
&lt; x-amz-request-id: 7168107f-3a11-4eff-9c54-1beafa37fc3e
&lt; Content-Length: 212
&lt; 
{ [data not shown]

100   212  100   212    0     0   2438      0 --:--:-- --:--:-- --:--:--  2438
* Closing connection 0
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;HTTP/s3g@EXAMPLE.COM&lt;/awsAccessKey&gt;&lt;awsSecret&gt;72b3c4886bf12bb60ac2b4ff40624e7ff5b8b75e31b022b98077a41a418ed7da&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.797" endtime="20231212 10:54:11.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:11.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.798" endtime="20231212 10:54:11.799"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.702" endtime="20231212 10:54:11.799"/>
</kw>
<msg timestamp="20231212 10:54:11.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.702" endtime="20231212 10:54:11.799"/>
</kw>
<msg timestamp="20231212 10:54:11.800" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:11.702" endtime="20231212 10:54:11.800"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:11.800" endtime="20231212 10:54:11.800"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:54:11.801" endtime="20231212 10:54:11.801"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.800" endtime="20231212 10:54:11.801"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.801" endtime="20231212 10:54:11.802"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:54:11.801" endtime="20231212 10:54:11.802"/>
</branch>
<status status="PASS" starttime="20231212 10:54:11.800" endtime="20231212 10:54:11.802"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:11.649" endtime="20231212 10:54:11.802"/>
</test>
<test id="s1-s5-s16-t2" name="S3 Gateway Generate Secret By Username" line="42">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:11.807" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:11.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:11.810" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:11.805" endtime="20231212 10:54:11.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:11.810" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:54:11.810" endtime="20231212 10:54:11.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:11.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.811" endtime="20231212 10:54:11.811"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.805" endtime="20231212 10:54:11.811"/>
</kw>
<msg timestamp="20231212 10:54:11.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.805" endtime="20231212 10:54:11.811"/>
</kw>
<msg timestamp="20231212 10:54:11.812" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:11.804" endtime="20231212 10:54:11.812"/>
</kw>
<msg timestamp="20231212 10:54:11.812" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:11.804" endtime="20231212 10:54:11.812"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:54:11.812" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:11.812" endtime="20231212 10:54:11.812"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:11.815" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:11.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:11.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:11.814" endtime="20231212 10:54:11.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:11.858" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:11.857" endtime="20231212 10:54:11.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:11.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.858" endtime="20231212 10:54:11.858"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.814" endtime="20231212 10:54:11.859"/>
</kw>
<msg timestamp="20231212 10:54:11.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.813" endtime="20231212 10:54:11.859"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.813" endtime="20231212 10:54:11.859"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.812" endtime="20231212 10:54:11.859"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.804" endtime="20231212 10:54:11.859"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.803" endtime="20231212 10:54:11.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:11.862" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:11.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:11.916" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:11.860" endtime="20231212 10:54:11.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:11.917" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; PUT /secret/testuser2 HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret/testuser2'
* Found bundle for host s3g: 0x257ffe0
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; PUT /secret/testuser2 HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARwwggEYoAMCARKhAwIBAaKCAQoEggEGMuvVFgQHfcRRubvxrh/YOPh10yXVE3uY6y9Tyt1qLmGwlP7wiKzMyASQg5CG4mPuQT9GuOytAVOlABdL8u5WgVAWtijFSwitVgyXR9Z3CyTpnfyUze40x1etoXx/HTw/n+wO5lcwdxw/UqabP8O4KfexPPGf9Mt/Lii/TXukP2fEZet3NYATJtEu1G+42v8h/Daj1cImy49SUEIMxkjKYTx2LiqeJbfi7jhZBEDqPiC3LYqIm5k1tg8w56LELM9W5rw1cOFhnsSNRbUHbbXCx6brA1AxUr7Qvp/laIo8dR64w3LLwVvP+CIkQMP7U9h/DLCUx1jwRYhQQF9NpIGzWTWuKp28jaSB1jCB06ADAgESooHLBIHILksHTwjlONqVmY78gWVs83o2XJOEjP1czcjK4EscHdKZVGdLc5Z4gn3ogxvQ3/ef5c0nkeCteIuJ6DswMgbpZnsDn5cKIu+tgn5igIrW/uHIDMCVCZNqIcSZKJQVv/QDe3qteflwTvBvGph9s2lWCz5zvLkiZZDxcT3aORHcH3h+vSGx+LoQsxOF6y9woKnCo++IWDh4Hoh9tXf1gmVjWipbAKw6SS8s41OuDvdHkRvgZbj29jK8khcbtq/VlrO0daiUCiDxUiE=
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 12 Dec 2023 10:54:11 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 12 Dec 2023 10:54:11 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCAuD9+lBsbyrcsn20u4lDxZ8yQvKj0/lU2/k4w5mxVpOZRvPrBhRVkSC5IaeGXxKeFcuwB1v37pXbCDwt9vcQTq+r
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1702414451907&amp;s=in4FhO7XxckC1oI8ccCZqUJhOXb84A6Xpubwya54kGE="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: hG5rUs3O4PmI03K
&lt; x-amz-request-id: 48de8903-2a60-45b0-b116-c6f78b3e14c9
&lt; Content-Length: 201
&lt; 
{ [data not shown]

100   201  100   201    0     0   4099      0 --:--:-- --:--:-- --:--:--  4099
* Closing connection 0
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser2&lt;/awsAccessKey&gt;&lt;awsSecret&gt;21fd5568123539bd405d505ee7d5cd9f0482f409456caf9ca77c3fcca0ee24b7&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.917" endtime="20231212 10:54:11.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:11.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.918" endtime="20231212 10:54:11.919"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.860" endtime="20231212 10:54:11.919"/>
</kw>
<msg timestamp="20231212 10:54:11.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.860" endtime="20231212 10:54:11.919"/>
</kw>
<msg timestamp="20231212 10:54:11.919" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:11.859" endtime="20231212 10:54:11.919"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:11.920" endtime="20231212 10:54:11.920"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:54:11.920" endtime="20231212 10:54:11.921"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.920" endtime="20231212 10:54:11.921"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.921" endtime="20231212 10:54:11.921"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:54:11.921" endtime="20231212 10:54:11.921"/>
</branch>
<status status="PASS" starttime="20231212 10:54:11.919" endtime="20231212 10:54:11.921"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:11.802" endtime="20231212 10:54:11.921"/>
</test>
<doc>S3 Secret Generate test</doc>
<status status="PASS" starttime="20231212 10:54:11.638" endtime="20231212 10:54:11.922"/>
</suite>
<suite id="s1-s5-s17" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:11.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.932" endtime="20231212 10:54:11.933"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.933" endtime="20231212 10:54:11.933"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.933" endtime="20231212 10:54:11.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.933" endtime="20231212 10:54:11.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.933" endtime="20231212 10:54:11.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.934" endtime="20231212 10:54:11.934"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.934" endtime="20231212 10:54:11.934"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.934" endtime="20231212 10:54:11.934"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:54:11.934" endtime="20231212 10:54:11.934"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.932" endtime="20231212 10:54:11.934"/>
</kw>
<test id="s1-s5-s17-t1" name="S3 Gateway Revoke Secret" line="33">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:11.939" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:11.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:11.941" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:11.937" endtime="20231212 10:54:11.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:11.942" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:54:11.942" endtime="20231212 10:54:11.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:11.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.942" endtime="20231212 10:54:11.943"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.937" endtime="20231212 10:54:11.943"/>
</kw>
<msg timestamp="20231212 10:54:11.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.936" endtime="20231212 10:54:11.943"/>
</kw>
<msg timestamp="20231212 10:54:11.943" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:11.936" endtime="20231212 10:54:11.943"/>
</kw>
<msg timestamp="20231212 10:54:11.944" level="INFO">${principal} = HTTP/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:11.936" endtime="20231212 10:54:11.944"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:11.947" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:11.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:11.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:11.946" endtime="20231212 10:54:11.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:11.972" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:11.972" endtime="20231212 10:54:11.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:11.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:11.973" endtime="20231212 10:54:11.973"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.945" endtime="20231212 10:54:11.973"/>
</kw>
<msg timestamp="20231212 10:54:11.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.945" endtime="20231212 10:54:11.973"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.944" endtime="20231212 10:54:11.974"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.944" endtime="20231212 10:54:11.974"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.935" endtime="20231212 10:54:11.974"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.935" endtime="20231212 10:54:11.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:11.977" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:12.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:12.049" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:11.975" endtime="20231212 10:54:12.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:12.050" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; DELETE /secret HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret'
* Found bundle for host s3g: 0x1458f90
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; DELETE /secret HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggEC1Vpfqp+I5h0mImLxVvk6P5NhLRFkQoV7zfSFiJDFuyN1KWGhUz2C8peCB3gFBCIRvV2XpIryklpOvrURADHGpL7+URSxrss/deDyFa0LpDbUQo4Vfql7xoKHYFuyzbq66MHO0ESuwa0HO3QefHCUnFLpISfmLx206+s1RQ+yBAinDAVBAWUiCLeJ91M5sYiA69L3ahm++Boc1N2YyYusJ0Jmy/1iveYR7khMDxQc2dQrDcCcNzmfsqHVYALxvHVOeDB3t0VXchP8HZzYt6ROguH9kBKwwDbfl6QpQho8tSe0GJW1mg+ZWL8/JJBctiLboJhwq8DYRdCnDXWAlrmfRbFOpIHSMIHPoAMCARKigccEgcSCsxEsGL/Ej8LN/gTYhthxgZ7ZwBUrtefEjLcF638gzsygtjstWFJ8l5X6avVGLkZ4VTF9MmEQM8DC7ltdxVAH20OBupYXcE3s+9TOP5EfKzkHkdXFXYeFxoWpvOWwY5UVBh+N4fVSgXGyli3kkFDVk4pEc7woRxyU9mc1KLfve8PIKlDbDbB5LcWDjQnGOAp3BO2t7ykjihDbvpxSWKITE43DKgbWmJgqYxwlBRpc2yLDIbJAyZHGQocdSuvd0t9KfBBd
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 12 Dec 2023 10:54:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 12 Dec 2023 10:54:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCuEh+x+KiahX3GHrmkNUC461Uk+6ENKk7VFljCFcK/wMljTwdyuR00cdC3XmHDUiY7+oiPBbH+ikEt9j/hqHD+OaQ
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1702414452038&amp;s=5arghruWA//ZzwgAx8mcgngVydKhTTU7nXg+AWerc3c="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: zVFAC95zl2pZfpK
&lt; x-amz-request-id: bcdb410b-e8db-48ba-8dea-86dc3405f744
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0</msg>
<status status="PASS" starttime="20231212 10:54:12.050" endtime="20231212 10:54:12.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:12.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:12.050" endtime="20231212 10:54:12.051"/>
</kw>
<status status="PASS" starttime="20231212 10:54:11.975" endtime="20231212 10:54:12.051"/>
</kw>
<msg timestamp="20231212 10:54:12.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:11.975" endtime="20231212 10:54:12.051"/>
</kw>
<msg timestamp="20231212 10:54:12.052" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:11.974" endtime="20231212 10:54:12.052"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:12.052" endtime="20231212 10:54:12.053"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.052" endtime="20231212 10:54:12.053"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.053" endtime="20231212 10:54:12.053"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:54:12.053" endtime="20231212 10:54:12.053"/>
</branch>
<status status="PASS" starttime="20231212 10:54:12.052" endtime="20231212 10:54:12.053"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:11.934" endtime="20231212 10:54:12.053"/>
</test>
<test id="s1-s5-s17-t2" name="S3 Gateway Revoke Secret By Username" line="42">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:12.059" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:12.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:12.061" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:12.057" endtime="20231212 10:54:12.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:12.062" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:54:12.062" endtime="20231212 10:54:12.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:12.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:12.062" endtime="20231212 10:54:12.063"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.056" endtime="20231212 10:54:12.063"/>
</kw>
<msg timestamp="20231212 10:54:12.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:12.056" endtime="20231212 10:54:12.063"/>
</kw>
<msg timestamp="20231212 10:54:12.063" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:12.056" endtime="20231212 10:54:12.063"/>
</kw>
<msg timestamp="20231212 10:54:12.064" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:12.055" endtime="20231212 10:54:12.064"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:54:12.064" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:12.064" endtime="20231212 10:54:12.064"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:12.068" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:12.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:12.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:12.066" endtime="20231212 10:54:12.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:12.093" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:12.092" endtime="20231212 10:54:12.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:12.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:12.093" endtime="20231212 10:54:12.093"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.066" endtime="20231212 10:54:12.094"/>
</kw>
<msg timestamp="20231212 10:54:12.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:12.065" endtime="20231212 10:54:12.094"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.065" endtime="20231212 10:54:12.094"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.064" endtime="20231212 10:54:12.094"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.055" endtime="20231212 10:54:12.094"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.055" endtime="20231212 10:54:12.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:12.097" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:9878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:12.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:12.132" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:12.096" endtime="20231212 10:54:12.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:12.133" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; DELETE /secret/testuser2 HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret/testuser2'
* Found bundle for host s3g: 0x1396fe0
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; DELETE /secret/testuser2 HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARwwggEYoAMCARKhAwIBAaKCAQoEggEGBWE8Ao9zIIdh2OpQbDW7KQycDu6doZVkNECrWQZ40hjW2nrP7JPxqqVlgKpp31FzE/X2+hl+0Ce8CVjV0aBYDlGXxRknGcnqbInFRJjQVhtyUnY/CW6k6OGkuijB9r71EUrp0NzBAW/r2jQmj9z1j0ITznmmHTZ23YTnOS2fXfLTmgr1TAJZlCj+5W1du4jP4gGITP2nV4npX6L4V2Tp7uhmV6mg00GFC2HNFSsx0K390tal1VGdGoEu5XayAeWUEvQ9z+PX2u8kp/9KiB2KRdx+A+xKAQvoSGTo/IhgvY97glh1cl4BIkOi0oBRH47GLyhQ6Ae8Uc27A68e23aaZrI+JLkk26SB1jCB06ADAgESooHLBIHIsD74ZIINoDmIegCU/UL9sbigGccC9v14pBTQMACsAcID/QM9t8JBQDQ9wEqhk7qFuNWimG/mc2yViQsgYpworALKsbBM795HNw5juYA6kpU9NKOTW8DGdLCS0V6/EkaMkhRpT2+Cy4/A0hI3aNBxdyZLwbrXR3SrWpIIE4QuIoeN6yej6HKgn6LNfDyu1dMtSNgZTVhopbqc2gkwu2+2F6yybLa2PQ6MrPtCPgCUbLaAQy5Lcb2MCvmsLFapDAYiNsJCgnNfLXI=
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 12 Dec 2023 10:54:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 12 Dec 2023 10:54:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC52UCmFCZQ8HO1+nbnBowDiytsk2StFuDF25zI6gt2DczZDc1pQsr74xmJCQPWoMcov8YzcliKi0GOnNSTdxmj1oc
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1702414452123&amp;s=dkz4qYC09azoABZr3Sl3B6m3PZylHu00tRIuDTl5P9M="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: EiaFgqleX4VfyP
&lt; x-amz-request-id: 7fc27214-9755-46c5-83d8-37ffd7e6641a
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0</msg>
<status status="PASS" starttime="20231212 10:54:12.133" endtime="20231212 10:54:12.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:12.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:12.134" endtime="20231212 10:54:12.134"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.095" endtime="20231212 10:54:12.134"/>
</kw>
<msg timestamp="20231212 10:54:12.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:12.095" endtime="20231212 10:54:12.134"/>
</kw>
<msg timestamp="20231212 10:54:12.135" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:12.094" endtime="20231212 10:54:12.135"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:12.135" endtime="20231212 10:54:12.136"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.135" endtime="20231212 10:54:12.136"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.136" endtime="20231212 10:54:12.136"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:54:12.136" endtime="20231212 10:54:12.136"/>
</branch>
<status status="PASS" starttime="20231212 10:54:12.135" endtime="20231212 10:54:12.136"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:12.054" endtime="20231212 10:54:12.136"/>
</test>
<doc>S3 Secret Revoke test</doc>
<status status="PASS" starttime="20231212 10:54:11.923" endtime="20231212 10:54:12.137"/>
</suite>
<suite id="s1-s5-s18" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:12.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:12.147" endtime="20231212 10:54:12.147"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.148" endtime="20231212 10:54:12.148"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.148" endtime="20231212 10:54:12.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.148" endtime="20231212 10:54:12.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.148" endtime="20231212 10:54:12.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.148" endtime="20231212 10:54:12.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.149" endtime="20231212 10:54:12.149"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.149" endtime="20231212 10:54:12.149"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:54:12.149" endtime="20231212 10:54:12.149"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.147" endtime="20231212 10:54:12.149"/>
</kw>
<test id="s1-s5-s18-t1" name="S3 Gateway Web UI" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:12.154" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:12.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:12.157" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:12.153" endtime="20231212 10:54:12.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:12.158" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:54:12.157" endtime="20231212 10:54:12.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:12.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:12.158" endtime="20231212 10:54:12.158"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.151" endtime="20231212 10:54:12.158"/>
</kw>
<msg timestamp="20231212 10:54:12.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:12.151" endtime="20231212 10:54:12.159"/>
</kw>
<msg timestamp="20231212 10:54:12.159" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:12.151" endtime="20231212 10:54:12.159"/>
</kw>
<msg timestamp="20231212 10:54:12.159" level="INFO">${principal} = HTTP/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:12.150" endtime="20231212 10:54:12.159"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:12.162" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:12.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:12.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:12.161" endtime="20231212 10:54:12.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:12.196" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:12.196" endtime="20231212 10:54:12.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:12.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:12.196" endtime="20231212 10:54:12.197"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.160" endtime="20231212 10:54:12.197"/>
</kw>
<msg timestamp="20231212 10:54:12.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:12.160" endtime="20231212 10:54:12.197"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.160" endtime="20231212 10:54:12.197"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.159" endtime="20231212 10:54:12.197"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.150" endtime="20231212 10:54:12.197"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.150" endtime="20231212 10:54:12.197"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:12.201" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:12.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:12.211" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:12.199" endtime="20231212 10:54:12.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:12.212" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Tue, 12 Dec 2023 10:54:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 12 Dec 2023 10:54:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20231212 10:54:12.211" endtime="20231212 10:54:12.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:12.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:12.212" endtime="20231212 10:54:12.213"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.198" endtime="20231212 10:54:12.213"/>
</kw>
<msg timestamp="20231212 10:54:12.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:12.198" endtime="20231212 10:54:12.213"/>
</kw>
<msg timestamp="20231212 10:54:12.213" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:12.198" endtime="20231212 10:54:12.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location:</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:12.213" endtime="20231212 10:54:12.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:12.214" endtime="20231212 10:54:12.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:12.217" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:12.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:12.258" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:12.216" endtime="20231212 10:54:12.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:12.259" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 462
&lt; 
* Ignoring the response-body
{ [data not shown]

100   462  100   462    0     0  18124      0 --:--:-- --:--:-- --:--:-- 18480
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/static/index.html'
* Found bundle for host s3g: 0x172efa0
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET /static/index.html HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggECBDKAg60gKBJOlKkjnyvOcVNqCYxmZ13YJ3/c+2z0F63KDg6xJeaHO9+aMDDuiUWCXcxd4u3Rtk73JEzmvzYMGrGoTIo3IeUnHN9CLzk/M9DKty0YfJQXjUXbOiTLEe+S1C1CA2Pt+dvUNuSApuYC7fDkcMbPhRb/e5Q2c3UgSWVQFckJl+n6LqWV6yNWtAW9mJgswD1EZlYwp7uI8WcGwUH2jp6m2LtxN4AzN0q8mYe0hc6CDdqct8ggCIGBkqNIIV/dfOBoA23azakAThMgzZLUWDRxRjtGarjZl0LB4lboyjmFCe5tdSF31a2BowH1ybZNP6P1N75tebfe8HQcvGWkpIHSMIHPoAMCARKigccEgcSKzzBzPUs2wSBOhd0JEGjSYM58AoDqu9yf001YB+EfzAIUiNqQFeM0IfClxjwEE1a5ndgsGGanzrxT/sX+K69Ln7XHJu3wJB22crZClzvcGA6V6wzsgQ7pPf/k1xFNF7XZI9QFwcSFlzb+PvSfM6BjHgt1SFrRQctmQ2XwPDR//1/VEev7HdUGW3LTkuxxTUnqZh7qn6IYWjuqpqN1wkBSQ4m9BPV96phOP2dPK5o6iIXuq0Tqq/YCdbrg6ukveSS/WqHe
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 12 Dec 2023 10:54:12 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCzUbBg5KozhJwiIxxpXATqQsVldChNiOqaJOpmgBRq+znBzicFeyMdeDnC9JW3LfFMHKz+usxtYjef2EfUU0cNq7M
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1702414452249&amp;s=9t+8Y1bn37sC3noFpTi5wRuQwMuqvOt6ap9mWqrTpYo="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 12 Dec 2023 10:14:48 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0  85659      0 --:--:-- --:--:-- --:--:-- 85659
* Closing connection 0
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20231212 10:54:12.259" endtime="20231212 10:54:12.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:12.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:12.260" endtime="20231212 10:54:12.260"/>
</kw>
<status status="PASS" starttime="20231212 10:54:12.215" endtime="20231212 10:54:12.260"/>
</kw>
<msg timestamp="20231212 10:54:12.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:12.215" endtime="20231212 10:54:12.261"/>
</kw>
<msg timestamp="20231212 10:54:12.261" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:54:12.214" endtime="20231212 10:54:12.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:12.261" endtime="20231212 10:54:12.262"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:12.149" endtime="20231212 10:54:12.262"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20231212 10:54:12.138" endtime="20231212 10:54:12.262"/>
</suite>
<status status="PASS" starttime="20231212 10:50:48.119" endtime="20231212 10:54:12.266"/>
</suite>
<suite id="s1-s6" name="s3-link" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:54:15.825" endtime="20231212 10:54:15.825"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:54:15.826" level="INFO">${randStr} = 2974773025</msg>
<status status="PASS" starttime="20231212 10:54:15.826" endtime="20231212 10:54:15.826"/>
</kw>
<msg timestamp="20231212 10:54:15.827" level="INFO">${random} = ozone-test-2974773025</msg>
<status status="PASS" starttime="20231212 10:54:15.826" endtime="20231212 10:54:15.827"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:54:15.828" level="INFO">${PREFIX} = ozone-test-2974773025</msg>
<status status="PASS" starttime="20231212 10:54:15.827" endtime="20231212 10:54:15.828"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.826" endtime="20231212 10:54:15.828"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.825" endtime="20231212 10:54:15.828"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:15.840" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:15.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:15.841" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20231212 10:54:15.828" endtime="20231212 10:54:15.841"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:15.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:15.841" endtime="20231212 10:54:15.841"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20231212 10:54:15.841" endtime="20231212 10:54:15.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:15.842" endtime="20231212 10:54:15.842"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20231212 10:54:15.842" endtime="20231212 10:54:15.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:15.842" endtime="20231212 10:54:15.842"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.828" endtime="20231212 10:54:15.842"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.828" endtime="20231212 10:54:15.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:15.846" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:15.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:15.849" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:15.845" endtime="20231212 10:54:15.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:15.849" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:54:15.849" endtime="20231212 10:54:15.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:15.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:15.849" endtime="20231212 10:54:15.850"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.844" endtime="20231212 10:54:15.850"/>
</kw>
<msg timestamp="20231212 10:54:15.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:15.844" endtime="20231212 10:54:15.850"/>
</kw>
<msg timestamp="20231212 10:54:15.850" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:54:15.844" endtime="20231212 10:54:15.850"/>
</kw>
<msg timestamp="20231212 10:54:15.850" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:15.844" endtime="20231212 10:54:15.851"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:54:15.851" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:15.851" endtime="20231212 10:54:15.851"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:15.854" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:15.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:15.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:15.853" endtime="20231212 10:54:15.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:15.881" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:15.881" endtime="20231212 10:54:15.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:15.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:15.881" endtime="20231212 10:54:15.882"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.852" endtime="20231212 10:54:15.882"/>
</kw>
<msg timestamp="20231212 10:54:15.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:15.852" endtime="20231212 10:54:15.882"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.852" endtime="20231212 10:54:15.882"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.851" endtime="20231212 10:54:15.882"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.843" endtime="20231212 10:54:15.882"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.843" endtime="20231212 10:54:15.883"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:15.886" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:19.518" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:54:19.518" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/s3g@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231212 10:54:15.884" endtime="20231212 10:54:19.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:19.519" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/s3g@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231212 10:54:19.518" endtime="20231212 10:54:19.519"/>
</kw>
<msg timestamp="20231212 10:54:19.519" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/s3g@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231212 10:54:15.884" endtime="20231212 10:54:19.519"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:19.519" endtime="20231212 10:54:19.520"/>
</kw>
<msg timestamp="20231212 10:54:19.520" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231212 10:54:19.519" endtime="20231212 10:54:19.520"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:19.523" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:22.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:22.855" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:54:19.521" endtime="20231212 10:54:22.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:22.855" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:54:22.855" endtime="20231212 10:54:22.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:22.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:22.856" endtime="20231212 10:54:22.856"/>
</kw>
<status status="PASS" starttime="20231212 10:54:19.521" endtime="20231212 10:54:22.856"/>
</kw>
<msg timestamp="20231212 10:54:22.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:19.521" endtime="20231212 10:54:22.856"/>
</kw>
<status status="PASS" starttime="20231212 10:54:19.520" endtime="20231212 10:54:22.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:22.860" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:26.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:26.268" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=5d446705bb702065a0cee44ea33ecf31403f502cf4ac03e4bf16fd4bc37bb88e
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:54:22.858" endtime="20231212 10:54:26.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:26.269" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=5d446705bb702065a0cee44ea33ecf31403f502cf4ac03e4bf16fd4bc37bb88e
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:54:26.269" endtime="20231212 10:54:26.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:26.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:26.269" endtime="20231212 10:54:26.270"/>
</kw>
<status status="PASS" starttime="20231212 10:54:22.857" endtime="20231212 10:54:26.270"/>
</kw>
<msg timestamp="20231212 10:54:26.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:22.857" endtime="20231212 10:54:26.271"/>
</kw>
<msg timestamp="20231212 10:54:26.271" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=5d446705bb702065a0cee44ea33ecf31403f502cf4ac03e4bf16fd4bc37bb88e
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:54:22.857" endtime="20231212 10:54:26.271"/>
</kw>
<status status="PASS" starttime="20231212 10:54:19.520" endtime="20231212 10:54:26.271"/>
</branch>
<status status="PASS" starttime="20231212 10:54:19.520" endtime="20231212 10:54:26.271"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231212 10:54:26.272" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231212 10:54:26.271" endtime="20231212 10:54:26.272"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231212 10:54:26.272" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231212 10:54:26.272" endtime="20231212 10:54:26.272"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231212 10:54:26.273" level="INFO">${secret} = ['5d446705bb702065a0cee44ea33ecf31403f502cf4ac03e4bf16fd4bc37bb88e']</msg>
<status status="PASS" starttime="20231212 10:54:26.273" endtime="20231212 10:54:26.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:54:26.274" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:54:26.273" endtime="20231212 10:54:26.274"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:54:26.276" level="INFO">${secret} = 5d446705bb702065a0cee44ea33ecf31403f502cf4ac03e4bf16fd4bc37bb88e</msg>
<status status="PASS" starttime="20231212 10:54:26.275" endtime="20231212 10:54:26.276"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:26.279" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:26.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:26.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:26.277" endtime="20231212 10:54:26.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:26.691" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:26.691" endtime="20231212 10:54:26.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:26.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:26.692" endtime="20231212 10:54:26.692"/>
</kw>
<status status="PASS" starttime="20231212 10:54:26.277" endtime="20231212 10:54:26.692"/>
</kw>
<msg timestamp="20231212 10:54:26.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:26.276" endtime="20231212 10:54:26.692"/>
</kw>
<status status="PASS" starttime="20231212 10:54:26.276" endtime="20231212 10:54:26.692"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:26.697" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:27.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:27.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:26.694" endtime="20231212 10:54:27.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:27.116" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:27.116" endtime="20231212 10:54:27.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:27.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:27.117" endtime="20231212 10:54:27.117"/>
</kw>
<status status="PASS" starttime="20231212 10:54:26.693" endtime="20231212 10:54:27.117"/>
</kw>
<msg timestamp="20231212 10:54:27.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:26.693" endtime="20231212 10:54:27.117"/>
</kw>
<status status="PASS" starttime="20231212 10:54:26.693" endtime="20231212 10:54:27.117"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:27.120" level="INFO">Running command 'aws configure set aws_secret_access_key 5d446705bb702065a0cee44ea33ecf31403f502cf4ac03e4bf16fd4bc37bb88e 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:27.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:27.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:27.119" endtime="20231212 10:54:27.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:27.527" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:27.526" endtime="20231212 10:54:27.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:27.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:27.527" endtime="20231212 10:54:27.527"/>
</kw>
<status status="PASS" starttime="20231212 10:54:27.118" endtime="20231212 10:54:27.527"/>
</kw>
<msg timestamp="20231212 10:54:27.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:27.118" endtime="20231212 10:54:27.527"/>
</kw>
<status status="PASS" starttime="20231212 10:54:27.117" endtime="20231212 10:54:27.527"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:27.531" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:27.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:27.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:27.529" endtime="20231212 10:54:27.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:27.935" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:27.935" endtime="20231212 10:54:27.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:27.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:27.935" endtime="20231212 10:54:27.936"/>
</kw>
<status status="PASS" starttime="20231212 10:54:27.528" endtime="20231212 10:54:27.936"/>
</kw>
<msg timestamp="20231212 10:54:27.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:27.528" endtime="20231212 10:54:27.936"/>
</kw>
<status status="PASS" starttime="20231212 10:54:27.528" endtime="20231212 10:54:27.936"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:27.939" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:28.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:28.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:27.937" endtime="20231212 10:54:28.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:28.342" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:28.342" endtime="20231212 10:54:28.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:28.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:28.343" endtime="20231212 10:54:28.343"/>
</kw>
<status status="PASS" starttime="20231212 10:54:27.937" endtime="20231212 10:54:28.343"/>
</kw>
<msg timestamp="20231212 10:54:28.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:27.937" endtime="20231212 10:54:28.343"/>
</kw>
<status status="PASS" starttime="20231212 10:54:27.936" endtime="20231212 10:54:28.344"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.883" endtime="20231212 10:54:28.344"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.883" endtime="20231212 10:54:28.344"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:54:28.344" endtime="20231212 10:54:28.344"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.843" endtime="20231212 10:54:28.344"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.842" endtime="20231212 10:54:28.344"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:54:28.344" endtime="20231212 10:54:28.345"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:28.347" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://omservice/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:32.414" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:54:32.414" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20231212 10:54:28.346" endtime="20231212 10:54:32.414"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:32.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:32.415" endtime="20231212 10:54:32.415"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:32.415" endtime="20231212 10:54:32.415"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:32.415" endtime="20231212 10:54:32.416"/>
</kw>
<msg timestamp="20231212 10:54:32.416" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231212 10:54:28.345" endtime="20231212 10:54:32.416"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:54:32.416" endtime="20231212 10:54:32.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:32.419" level="INFO">Running command 'ozone sh volume create o3://omservice/legacy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:36.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:36.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:32.417" endtime="20231212 10:54:36.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:36.496" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:36.495" endtime="20231212 10:54:36.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:36.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:36.496" endtime="20231212 10:54:36.496"/>
</kw>
<status status="PASS" starttime="20231212 10:54:32.417" endtime="20231212 10:54:36.497"/>
</kw>
<msg timestamp="20231212 10:54:36.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:32.417" endtime="20231212 10:54:36.497"/>
</kw>
<status status="PASS" starttime="20231212 10:54:32.416" endtime="20231212 10:54:36.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:36.501" level="INFO">Running command 'ozone sh bucket create o3://omservice/legacy/source-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:40.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:40.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:36.498" endtime="20231212 10:54:40.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:40.615" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:40.614" endtime="20231212 10:54:40.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:40.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:40.615" endtime="20231212 10:54:40.615"/>
</kw>
<status status="PASS" starttime="20231212 10:54:36.498" endtime="20231212 10:54:40.615"/>
</kw>
<msg timestamp="20231212 10:54:40.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:36.498" endtime="20231212 10:54:40.616"/>
</kw>
<status status="PASS" starttime="20231212 10:54:36.497" endtime="20231212 10:54:40.616"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:40.619" level="INFO">Running command 'ozone sh bucket link o3://omservice/legacy/source-bucket o3://omservice/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:44.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:44.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:40.618" endtime="20231212 10:54:44.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:44.866" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:44.865" endtime="20231212 10:54:44.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:44.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:44.866" endtime="20231212 10:54:44.866"/>
</kw>
<status status="PASS" starttime="20231212 10:54:40.617" endtime="20231212 10:54:44.867"/>
</kw>
<msg timestamp="20231212 10:54:44.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:40.617" endtime="20231212 10:54:44.867"/>
</kw>
<status status="PASS" starttime="20231212 10:54:40.616" endtime="20231212 10:54:44.867"/>
</kw>
<status status="PASS" starttime="20231212 10:54:40.616" endtime="20231212 10:54:44.867"/>
</kw>
<status status="PASS" starttime="20231212 10:54:28.345" endtime="20231212 10:54:44.867"/>
</kw>
<status status="PASS" starttime="20231212 10:54:28.345" endtime="20231212 10:54:44.867"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:54:44.867" endtime="20231212 10:54:44.868"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 10:54:44.868" endtime="20231212 10:54:44.868"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:54:44.869" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20231212 10:54:44.868" endtime="20231212 10:54:44.869"/>
</kw>
<status status="PASS" starttime="20231212 10:54:15.825" endtime="20231212 10:54:44.869"/>
</kw>
<suite id="s1-s6-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:44.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:44.878" endtime="20231212 10:54:44.879"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:44.879" endtime="20231212 10:54:44.879"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:44.879" endtime="20231212 10:54:44.879"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:44.879" endtime="20231212 10:54:44.879"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:44.879" endtime="20231212 10:54:44.879"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:44.879" endtime="20231212 10:54:44.879"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:44.880" endtime="20231212 10:54:44.880"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:44.880" endtime="20231212 10:54:44.880"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:54:44.880" endtime="20231212 10:54:44.880"/>
</kw>
<status status="PASS" starttime="20231212 10:54:44.878" endtime="20231212 10:54:44.880"/>
</kw>
<test id="s1-s6-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:44.884" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:54:44.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:44.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:44.882" endtime="20231212 10:54:44.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:44.887" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:44.886" endtime="20231212 10:54:44.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:44.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:44.887" endtime="20231212 10:54:44.887"/>
</kw>
<status status="PASS" starttime="20231212 10:54:44.881" endtime="20231212 10:54:44.887"/>
</kw>
<msg timestamp="20231212 10:54:44.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:44.881" endtime="20231212 10:54:44.888"/>
</kw>
<status status="PASS" starttime="20231212 10:54:44.881" endtime="20231212 10:54:44.888"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:44.891" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:45.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:45.494" level="INFO">${output} = Completed 29 Bytes/29 Bytes (267 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                  </msg>
<status status="PASS" starttime="20231212 10:54:44.890" endtime="20231212 10:54:45.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:45.495" level="INFO">Completed 29 Bytes/29 Bytes (267 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                  </msg>
<status status="PASS" starttime="20231212 10:54:45.494" endtime="20231212 10:54:45.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:45.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:45.495" endtime="20231212 10:54:45.495"/>
</kw>
<status status="PASS" starttime="20231212 10:54:44.889" endtime="20231212 10:54:45.495"/>
</kw>
<msg timestamp="20231212 10:54:45.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:44.889" endtime="20231212 10:54:45.496"/>
</kw>
<msg timestamp="20231212 10:54:45.496" level="INFO">${output} = Completed 29 Bytes/29 Bytes (267 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                  </msg>
<status status="PASS" starttime="20231212 10:54:44.888" endtime="20231212 10:54:45.496"/>
</kw>
<msg timestamp="20231212 10:54:45.496" level="INFO">${result} = Completed 29 Bytes/29 Bytes (267 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                  </msg>
<status status="PASS" starttime="20231212 10:54:44.888" endtime="20231212 10:54:45.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:45.496" endtime="20231212 10:54:45.496"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:45.500" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:46.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:46.009" level="INFO">${output} = Completed 29 Bytes/29 Bytes (653 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20231212 10:54:45.498" endtime="20231212 10:54:46.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:46.010" level="INFO">Completed 29 Bytes/29 Bytes (653 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20231212 10:54:46.009" endtime="20231212 10:54:46.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:46.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:46.010" endtime="20231212 10:54:46.011"/>
</kw>
<status status="PASS" starttime="20231212 10:54:45.498" endtime="20231212 10:54:46.011"/>
</kw>
<msg timestamp="20231212 10:54:46.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:45.497" endtime="20231212 10:54:46.011"/>
</kw>
<msg timestamp="20231212 10:54:46.011" level="INFO">${output} = Completed 29 Bytes/29 Bytes (653 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20231212 10:54:45.497" endtime="20231212 10:54:46.011"/>
</kw>
<msg timestamp="20231212 10:54:46.011" level="INFO">${result} = Completed 29 Bytes/29 Bytes (653 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20231212 10:54:45.497" endtime="20231212 10:54:46.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:46.012" endtime="20231212 10:54:46.012"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:46.016" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:46.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:46.506" level="INFO">${output} =                            PRE dir1/
2023-12-12 10:54:45         29 testfile</msg>
<status status="PASS" starttime="20231212 10:54:46.014" endtime="20231212 10:54:46.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:46.507" level="INFO">                           PRE dir1/
2023-12-12 10:54:45         29 testfile</msg>
<status status="PASS" starttime="20231212 10:54:46.507" endtime="20231212 10:54:46.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:46.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:46.508" endtime="20231212 10:54:46.508"/>
</kw>
<status status="PASS" starttime="20231212 10:54:46.013" endtime="20231212 10:54:46.508"/>
</kw>
<msg timestamp="20231212 10:54:46.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:46.013" endtime="20231212 10:54:46.508"/>
</kw>
<msg timestamp="20231212 10:54:46.509" level="INFO">${output} =                            PRE dir1/
2023-12-12 10:54:45         29 testfile</msg>
<status status="PASS" starttime="20231212 10:54:46.013" endtime="20231212 10:54:46.509"/>
</kw>
<msg timestamp="20231212 10:54:46.509" level="INFO">${result} =                            PRE dir1/
2023-12-12 10:54:45         29 testfile</msg>
<status status="PASS" starttime="20231212 10:54:46.012" endtime="20231212 10:54:46.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:46.509" endtime="20231212 10:54:46.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:46.509" endtime="20231212 10:54:46.510"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:46.510" endtime="20231212 10:54:46.510"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:46.514" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:47.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:47.016" level="INFO">${output} =                            PRE dir2/
2023-12-12 10:54:45          0 </msg>
<status status="PASS" starttime="20231212 10:54:46.512" endtime="20231212 10:54:47.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:47.017" level="INFO">                           PRE dir2/
2023-12-12 10:54:45          0 </msg>
<status status="PASS" starttime="20231212 10:54:47.016" endtime="20231212 10:54:47.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:47.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:47.017" endtime="20231212 10:54:47.018"/>
</kw>
<status status="PASS" starttime="20231212 10:54:46.512" endtime="20231212 10:54:47.018"/>
</kw>
<msg timestamp="20231212 10:54:47.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:46.511" endtime="20231212 10:54:47.018"/>
</kw>
<msg timestamp="20231212 10:54:47.018" level="INFO">${output} =                            PRE dir2/
2023-12-12 10:54:45          0 </msg>
<status status="PASS" starttime="20231212 10:54:46.511" endtime="20231212 10:54:47.018"/>
</kw>
<msg timestamp="20231212 10:54:47.018" level="INFO">${result} =                            PRE dir2/
2023-12-12 10:54:45          0 </msg>
<status status="PASS" starttime="20231212 10:54:46.510" endtime="20231212 10:54:47.018"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:47.019" endtime="20231212 10:54:47.019"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:47.019" endtime="20231212 10:54:47.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:47.019" endtime="20231212 10:54:47.020"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:47.023" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:47.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:47.518" level="INFO">${output} = 2023-12-12 10:54:45         29 file</msg>
<status status="PASS" starttime="20231212 10:54:47.021" endtime="20231212 10:54:47.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:47.519" level="INFO">2023-12-12 10:54:45         29 file</msg>
<status status="PASS" starttime="20231212 10:54:47.518" endtime="20231212 10:54:47.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:47.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:47.519" endtime="20231212 10:54:47.520"/>
</kw>
<status status="PASS" starttime="20231212 10:54:47.021" endtime="20231212 10:54:47.520"/>
</kw>
<msg timestamp="20231212 10:54:47.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:47.021" endtime="20231212 10:54:47.520"/>
</kw>
<msg timestamp="20231212 10:54:47.520" level="INFO">${output} = 2023-12-12 10:54:45         29 file</msg>
<status status="PASS" starttime="20231212 10:54:47.020" endtime="20231212 10:54:47.520"/>
</kw>
<msg timestamp="20231212 10:54:47.520" level="INFO">${result} = 2023-12-12 10:54:45         29 file</msg>
<status status="PASS" starttime="20231212 10:54:47.020" endtime="20231212 10:54:47.520"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:47.520" endtime="20231212 10:54:47.521"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:47.521" endtime="20231212 10:54:47.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:47.521" endtime="20231212 10:54:47.522"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:44.880" endtime="20231212 10:54:47.522"/>
</test>
<test id="s1-s6-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:47.526" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:54:47.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:47.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:47.524" endtime="20231212 10:54:47.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:47.529" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:47.528" endtime="20231212 10:54:47.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:47.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:47.529" endtime="20231212 10:54:47.529"/>
</kw>
<status status="PASS" starttime="20231212 10:54:47.524" endtime="20231212 10:54:47.529"/>
</kw>
<msg timestamp="20231212 10:54:47.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:47.523" endtime="20231212 10:54:47.529"/>
</kw>
<status status="PASS" starttime="20231212 10:54:47.523" endtime="20231212 10:54:47.530"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:47.533" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:48.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:48.054" level="INFO">${output} = Completed 29 Bytes/29 Bytes (527 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20231212 10:54:47.532" endtime="20231212 10:54:48.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:48.055" level="INFO">Completed 29 Bytes/29 Bytes (527 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20231212 10:54:48.054" endtime="20231212 10:54:48.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:48.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:48.055" endtime="20231212 10:54:48.056"/>
</kw>
<status status="PASS" starttime="20231212 10:54:47.531" endtime="20231212 10:54:48.056"/>
</kw>
<msg timestamp="20231212 10:54:48.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:47.531" endtime="20231212 10:54:48.056"/>
</kw>
<msg timestamp="20231212 10:54:48.056" level="INFO">${output} = Completed 29 Bytes/29 Bytes (527 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20231212 10:54:47.530" endtime="20231212 10:54:48.056"/>
</kw>
<msg timestamp="20231212 10:54:48.056" level="INFO">${result} = Completed 29 Bytes/29 Bytes (527 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20231212 10:54:47.530" endtime="20231212 10:54:48.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:48.056" endtime="20231212 10:54:48.057"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:48.060" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:48.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:48.548" level="INFO">${output} = 2023-12-12 10:54:47          0 
2023-12-12 10:54:47         29 a+b</msg>
<status status="PASS" starttime="20231212 10:54:48.058" endtime="20231212 10:54:48.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:48.549" level="INFO">2023-12-12 10:54:47          0 
2023-12-12 10:54:47         29 a+b</msg>
<status status="PASS" starttime="20231212 10:54:48.549" endtime="20231212 10:54:48.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:48.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:48.550" endtime="20231212 10:54:48.550"/>
</kw>
<status status="PASS" starttime="20231212 10:54:48.058" endtime="20231212 10:54:48.550"/>
</kw>
<msg timestamp="20231212 10:54:48.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:48.058" endtime="20231212 10:54:48.551"/>
</kw>
<msg timestamp="20231212 10:54:48.551" level="INFO">${output} = 2023-12-12 10:54:47          0 
2023-12-12 10:54:47         29 a+b</msg>
<status status="PASS" starttime="20231212 10:54:48.057" endtime="20231212 10:54:48.551"/>
</kw>
<msg timestamp="20231212 10:54:48.551" level="INFO">${result} = 2023-12-12 10:54:47          0 
2023-12-12 10:54:47         29 a+b</msg>
<status status="PASS" starttime="20231212 10:54:48.057" endtime="20231212 10:54:48.551"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:48.551" endtime="20231212 10:54:48.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:48.551" endtime="20231212 10:54:48.552"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:47.522" endtime="20231212 10:54:48.552"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:54:44.869" endtime="20231212 10:54:48.553"/>
</suite>
<suite id="s1-s6-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:48.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:48.568" endtime="20231212 10:54:48.568"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:48.568" endtime="20231212 10:54:48.568"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:48.569" endtime="20231212 10:54:48.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:48.569" endtime="20231212 10:54:48.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:48.569" endtime="20231212 10:54:48.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:48.569" endtime="20231212 10:54:48.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:48.569" endtime="20231212 10:54:48.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:48.569" endtime="20231212 10:54:48.569"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:54:48.570" endtime="20231212 10:54:48.570"/>
</kw>
<status status="PASS" starttime="20231212 10:54:48.568" endtime="20231212 10:54:48.570"/>
</kw>
<test id="s1-s6-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:48.574" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:51.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:51.089" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20231212 10:54:48.572" endtime="20231212 10:54:51.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:51.089" level="INFO">test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To continue receiving service updates, bug fixes, and security updates please upgrade to Python 3.7 or later. More information can be found here: https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/
  warnings.warn(warning, PythonDeprecationWarning)
ok
test_list_bucket (__main__.TestBotoClient) ... {'ResponseMetadata': {'RequestId': '9fdbcef3-8020-4a4a-87fc-034f3271dbcc', 'HostId': '76Zf8o5zjllSiXn', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:48 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:48 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-qcpxhyjksa', 'server': 'Ozone', 'x-amz-id-2': '76Zf8o5zjllSiXn', 'x-amz-request-id': '9fdbcef3-8020-4a4a-87fc-034f3271dbcc', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-qcpxhyjksa'}
None
None
None
{'ResponseMetadata': {'RequestId': 'c9926bec-b30a-4d1c-aaf0-289af700083b', 'HostId': 'gNX5MLdksWKti', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:49 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:49 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-ixzladyfej', 'server': 'Ozone', 'x-amz-id-2': 'gNX5MLdksWKti', 'x-amz-request-id': 'c9926bec-b30a-4d1c-aaf0-289af700083b', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-ixzladyfej'}
{'ResponseMetadata': {'RequestId': 'bd0d0aa5-595d-4255-a96c-706917359ee0', 'HostId': 'yxGyOe6i', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:49 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:49 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'yxGyOe6i', 'x-amz-request-id': 'bd0d0aa5-595d-4255-a96c-706917359ee0', 'transfer-encoding': 'chunked'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-ixzladyfej', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 54, 49, 896000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-3420531212', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 16, 316000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-5327802324', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 16, 811000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-5397555353', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 18, 368000, tzinfo=tzlocal())}, {'Name': 'bucket-twaamrkruk', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 13, 903000, tzinfo=tzlocal())}, {'Name': 'destbucket-21697', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 52, 37, 762000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 1, 849000, tzinfo=tzlocal())}, {'Name': 'legacy-bucket-ozone-test-9375936535', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 53, 9, 559000, tzinfo=tzlocal())}, {'Name': 'link', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 54, 44, 784000, tzinfo=tzlocal())}, {'Name': 'obs-bucket-ozone-test-9441660462', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 53, 14, 577000, tzinfo=tzlocal())}, {'Name': 'ozone-test-qcpxhyjksa', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 54, 48, 927000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted0', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 344000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted1', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 308000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted10', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 427000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted11', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 447000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted12', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 442000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted13', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 463000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted14', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 458000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted15', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 455000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted16', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 460000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted17', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 528000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted18', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 528000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted19', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 462000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted2', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 335000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted20', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 528000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted21', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 583000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted22', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 591000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted23', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 527000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted24', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 626000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted25', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 704000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted26', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 609000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted27', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 626000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted28', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 608000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted29', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 689000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted3', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 349000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted30', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 637000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted31', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 708000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted32', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 680000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted33', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 712000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted34', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 693000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted35', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 736000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted36', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 691000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted37', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 692000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted38', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 767000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted39', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 756000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted4', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 327000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted40', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 741000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted41', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 738000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted42', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 740000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted43', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 820000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted44', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 830000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted45', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 782000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted46', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 778000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted47', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 797000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted48', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 797000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted49', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 863000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted5', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 349000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted50', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 899000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted51', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 902000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted52', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 823000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted53', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 825000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted54', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 844000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted55', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 862000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted56', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 897000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted57', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 968000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted58', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 902000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted59', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 869000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted6', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 304000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted60', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 935000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted61', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 907000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted62', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 929000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted63', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 968000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted64', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 12000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted65', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 933000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted66', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 968000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted67', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 989000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted68', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 968000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted69', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 986000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted7', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 304000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted70', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 988000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted71', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 21000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted72', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 49000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted73', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 60000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted74', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 110000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted75', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 71000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted76', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 26000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted77', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 46000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted78', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 79000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted79', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 209000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted8', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 348000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted80', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 191000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted81', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 68000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted82', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 65000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted83', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 81000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted84', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 260000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted85', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 298000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted86', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 228000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted87', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 211000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted88', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 134000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted89', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 211000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted9', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 38, 310000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted90', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 264000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted91', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 320000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted92', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 286000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted93', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 293000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted94', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 248000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted95', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 275000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted96', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 247000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted97', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 287000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted98', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 288000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted99', 'CreationDate': datetime.datetime(2023, 12, 12, 10, 51, 39, 320000, tzinfo=tzlocal())}]}ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 2.240s

OK

{'ResponseMetadata': {'RequestId': '6e7b455c-d654-4e67-a275-59f7b53af14c', 'HostId': '8olAnPB8GxcfI', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:49 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:49 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '8olAnPB8GxcfI', 'x-amz-request-id': '6e7b455c-d654-4e67-a275-59f7b53af14c', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'dbd870b1-9994-4fcc-819e-9e22710c7d95', 'HostId': 'uxglKplZo', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:49 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:49 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'uxglKplZo', 'x-amz-request-id': 'dbd870b1-9994-4fcc-819e-9e22710c7d95'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'e9656651-272e-4e87-9b23-a13dcbc08f43', 'HostId': 'jmrdIGz09ST0e', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:50 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:50 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Tue, 12 Dec 2023 10:54:50 GMT', 'server': 'Ozone', 'x-amz-id-2': 'jmrdIGz09ST0e', 'x-amz-request-id': 'e9656651-272e-4e87-9b23-a13dcbc08f43', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 12, 12, 10, 54, 50, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 12, 12, 10, 54, 50, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'f48f87a1-2068-410a-9ef9-835e7ee119d9', 'HostId': 'Xk4vjR967W', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:50 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:50 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Xk4vjR967W', 'x-amz-request-id': 'f48f87a1-2068-410a-9ef9-835e7ee119d9', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': 'a0ade4de-ee9c-4330-833e-c5b778a884c5', 'HostId': 'AQsmvTvsD', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:50 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:50 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Tue, 12 Dec 2023 10:54:49 GMT', 'server': 'Ozone', 'x-amz-id-2': 'AQsmvTvsD', 'x-amz-request-id': 'a0ade4de-ee9c-4330-833e-c5b778a884c5', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 12, 12, 10, 54, 49, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 12, 12, 10, 54, 50, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'a932da5d-4e57-46cb-8300-43996f68a2ec', 'HostId': 'S9Qs1PFDh6ITq4', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:50 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:50 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'S9Qs1PFDh6ITq4', 'x-amz-request-id': 'a932da5d-4e57-46cb-8300-43996f68a2ec', 'content-length': '284'}, 'RetryAttempts': 0}, 'Bucket': 'link', 'Key': 'qhcuppjujb', 'UploadId': '519f4b45-0590-4b09-b7cb-ac1ef4c3b8ee-111567076732305646'}
{'ResponseMetadata': {'RequestId': '766e2351-ab28-480f-ba84-ba5e6fb6e2eb', 'HostId': 'f9dmEbjjC6o', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 12 Dec 2023 10:54:50 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 12 Dec 2023 10:54:50 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'f9dmEbjjC6o', 'x-amz-request-id': '766e2351-ab28-480f-ba84-ba5e6fb6e2eb', 'content-length': '282'}, 'RetryAttempts': 0}, 'Location': 'link', 'Bucket': 'link', 'Key': 'qhcuppjujb', 'ETag': '"24d794dfc756320ffadb905d526299bc-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20231212 10:54:51.089" endtime="20231212 10:54:51.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:51.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:51.090" endtime="20231212 10:54:51.090"/>
</kw>
<status status="PASS" starttime="20231212 10:54:48.571" endtime="20231212 10:54:51.091"/>
</kw>
<msg timestamp="20231212 10:54:51.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:48.571" endtime="20231212 10:54:51.091"/>
</kw>
<msg timestamp="20231212 10:54:51.091" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20231212 10:54:48.571" endtime="20231212 10:54:51.091"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20231212 10:54:48.570" endtime="20231212 10:54:51.092"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20231212 10:54:48.554" endtime="20231212 10:54:51.092"/>
</suite>
<suite id="s1-s6-s3" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:51.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:51.104" endtime="20231212 10:54:51.104"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:51.104" endtime="20231212 10:54:51.104"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:51.104" endtime="20231212 10:54:51.104"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:51.104" endtime="20231212 10:54:51.104"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:51.105" endtime="20231212 10:54:51.105"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:51.105" endtime="20231212 10:54:51.105"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:51.105" endtime="20231212 10:54:51.105"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:51.105" endtime="20231212 10:54:51.105"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:54:51.105" endtime="20231212 10:54:51.105"/>
</kw>
<status status="PASS" starttime="20231212 10:54:51.103" endtime="20231212 10:54:51.105"/>
</kw>
<test id="s1-s6-s3-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create link" library="commonawslib">
<arg>to-be-deleted</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:51.110" level="INFO">Running command 'ozone sh bucket link o3://omservice/legacy/source-bucket o3://omservice/s3v/to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:55.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:55.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:51.108" endtime="20231212 10:54:55.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:55.509" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:55.508" endtime="20231212 10:54:55.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:55.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:55.509" endtime="20231212 10:54:55.510"/>
</kw>
<status status="PASS" starttime="20231212 10:54:51.108" endtime="20231212 10:54:55.510"/>
</kw>
<msg timestamp="20231212 10:54:55.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:51.107" endtime="20231212 10:54:55.510"/>
</kw>
<status status="PASS" starttime="20231212 10:54:51.107" endtime="20231212 10:54:55.510"/>
</kw>
<status status="PASS" starttime="20231212 10:54:51.107" endtime="20231212 10:54:55.510"/>
</kw>
<msg timestamp="20231212 10:54:55.510" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20231212 10:54:51.106" endtime="20231212 10:54:55.510"/>
</kw>
<msg timestamp="20231212 10:54:55.511" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20231212 10:54:51.106" endtime="20231212 10:54:55.511"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:55.514" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:56.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:56.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:55.512" endtime="20231212 10:54:56.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:56.018" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:56.017" endtime="20231212 10:54:56.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:56.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:56.018" endtime="20231212 10:54:56.018"/>
</kw>
<status status="PASS" starttime="20231212 10:54:55.512" endtime="20231212 10:54:56.018"/>
</kw>
<msg timestamp="20231212 10:54:56.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:55.512" endtime="20231212 10:54:56.019"/>
</kw>
<msg timestamp="20231212 10:54:56.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:55.511" endtime="20231212 10:54:56.019"/>
</kw>
<status status="PASS" starttime="20231212 10:54:55.511" endtime="20231212 10:54:56.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:51.105" endtime="20231212 10:54:56.019"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:54:51.093" endtime="20231212 10:54:56.020"/>
</suite>
<suite id="s1-s6-s4" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:56.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:56.030" endtime="20231212 10:54:56.031"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.031" endtime="20231212 10:54:56.031"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.031" endtime="20231212 10:54:56.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.031" endtime="20231212 10:54:56.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.031" endtime="20231212 10:54:56.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.031" endtime="20231212 10:54:56.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.032" endtime="20231212 10:54:56.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.032" endtime="20231212 10:54:56.032"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.032" endtime="20231212 10:54:56.032"/>
</kw>
<status status="PASS" starttime="20231212 10:54:56.030" endtime="20231212 10:54:56.032"/>
</kw>
<test id="s1-s6-s4-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:56.036" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:56.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:56.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:56.034" endtime="20231212 10:54:56.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:56.525" level="INFO"/>
<status status="PASS" starttime="20231212 10:54:56.525" endtime="20231212 10:54:56.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:56.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:56.526" endtime="20231212 10:54:56.526"/>
</kw>
<status status="PASS" starttime="20231212 10:54:56.034" endtime="20231212 10:54:56.526"/>
</kw>
<msg timestamp="20231212 10:54:56.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:56.033" endtime="20231212 10:54:56.526"/>
</kw>
<msg timestamp="20231212 10:54:56.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:54:56.033" endtime="20231212 10:54:56.527"/>
</kw>
<msg timestamp="20231212 10:54:56.527" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:54:56.033" endtime="20231212 10:54:56.527"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:56.032" endtime="20231212 10:54:56.527"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:54:56.021" endtime="20231212 10:54:56.527"/>
</suite>
<suite id="s1-s6-s5" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:54:56.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:56.538" endtime="20231212 10:54:56.538"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.538" endtime="20231212 10:54:56.538"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.538" endtime="20231212 10:54:56.539"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.539" endtime="20231212 10:54:56.539"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.539" endtime="20231212 10:54:56.539"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.539" endtime="20231212 10:54:56.539"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.539" endtime="20231212 10:54:56.539"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.539" endtime="20231212 10:54:56.539"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:54:56.540" endtime="20231212 10:54:56.540"/>
</kw>
<status status="PASS" starttime="20231212 10:54:56.537" endtime="20231212 10:54:56.540"/>
</kw>
<test id="s1-s6-s5-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:56.544" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:54:57.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:54:57.076" level="INFO">${output} = bucket-ixzladyfej
bucket-ozone-test-3420531212
bucket-ozone-test-5327802324
bucket-ozone-test-5397555353
bucket-twaamrkruk
destbucket-21697
encrypted
legacy-bucket-ozone-test-9375936535
link
obs-bucke...</msg>
<status status="PASS" starttime="20231212 10:54:56.542" endtime="20231212 10:54:57.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:54:57.077" level="INFO">bucket-ixzladyfej
bucket-ozone-test-3420531212
bucket-ozone-test-5327802324
bucket-ozone-test-5397555353
bucket-twaamrkruk
destbucket-21697
encrypted
legacy-bucket-ozone-test-9375936535
link
obs-bucket-ozone-test-9441660462
s3bg-encrypted0
s3bg-encrypted1
s3bg-encrypted10
s3bg-encrypted11
s3bg-encrypted12
s3bg-encrypted13
s3bg-encrypted14
s3bg-encrypted15
s3bg-encrypted16
s3bg-encrypted17
s3bg-encrypted18
s3bg-encrypted19
s3bg-encrypted2
s3bg-encrypted20
s3bg-encrypted21
s3bg-encrypted22
s3bg-encrypted23
s3bg-encrypted24
s3bg-encrypted25
s3bg-encrypted26
s3bg-encrypted27
s3bg-encrypted28
s3bg-encrypted29
s3bg-encrypted3
s3bg-encrypted30
s3bg-encrypted31
s3bg-encrypted32
s3bg-encrypted33
s3bg-encrypted34
s3bg-encrypted35
s3bg-encrypted36
s3bg-encrypted37
s3bg-encrypted38
s3bg-encrypted39
s3bg-encrypted4
s3bg-encrypted40
s3bg-encrypted41
s3bg-encrypted42
s3bg-encrypted43
s3bg-encrypted44
s3bg-encrypted45
s3bg-encrypted46
s3bg-encrypted47
s3bg-encrypted48
s3bg-encrypted49
s3bg-encrypted5
s3bg-encrypted50
s3bg-encrypted51
s3bg-encrypted52
s3bg-encrypted53
s3bg-encrypted54
s3bg-encrypted55
s3bg-encrypted56
s3bg-encrypted57
s3bg-encrypted58
s3bg-encrypted59
s3bg-encrypted6
s3bg-encrypted60
s3bg-encrypted61
s3bg-encrypted62
s3bg-encrypted63
s3bg-encrypted64
s3bg-encrypted65
s3bg-encrypted66
s3bg-encrypted67
s3bg-encrypted68
s3bg-encrypted69
s3bg-encrypted7
s3bg-encrypted70
s3bg-encrypted71
s3bg-encrypted72
s3bg-encrypted73
s3bg-encrypted74
s3bg-encrypted75
s3bg-encrypted76
s3bg-encrypted77
s3bg-encrypted78
s3bg-encrypted79
s3bg-encrypted8
s3bg-encrypted80
s3bg-encrypted81
s3bg-encrypted82
s3bg-encrypted83
s3bg-encrypted84
s3bg-encrypted85
s3bg-encrypted86
s3bg-encrypted87
s3bg-encrypted88
s3bg-encrypted89
s3bg-encrypted9
s3bg-encrypted90
s3bg-encrypted91
s3bg-encrypted92
s3bg-encrypted93
s3bg-encrypted94
s3bg-encrypted95
s3bg-encrypted96
s3bg-encrypted97
s3bg-encrypted98
s3bg-encrypted99</msg>
<status status="PASS" starttime="20231212 10:54:57.076" endtime="20231212 10:54:57.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:54:57.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:54:57.077" endtime="20231212 10:54:57.078"/>
</kw>
<status status="PASS" starttime="20231212 10:54:56.541" endtime="20231212 10:54:57.078"/>
</kw>
<msg timestamp="20231212 10:54:57.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:56.541" endtime="20231212 10:54:57.078"/>
</kw>
<msg timestamp="20231212 10:54:57.078" level="INFO">${output} = bucket-ixzladyfej
bucket-ozone-test-3420531212
bucket-ozone-test-5327802324
bucket-ozone-test-5397555353
bucket-twaamrkruk
destbucket-21697
encrypted
legacy-bucket-ozone-test-9375936535
link
obs-bucke...</msg>
<status status="PASS" starttime="20231212 10:54:56.541" endtime="20231212 10:54:57.078"/>
</kw>
<msg timestamp="20231212 10:54:57.078" level="INFO">${result} = bucket-ixzladyfej
bucket-ozone-test-3420531212
bucket-ozone-test-5327802324
bucket-ozone-test-5397555353
bucket-twaamrkruk
destbucket-21697
encrypted
legacy-bucket-ozone-test-9375936535
link
obs-bucke...</msg>
<status status="PASS" starttime="20231212 10:54:56.540" endtime="20231212 10:54:57.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:54:57.079" endtime="20231212 10:54:57.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:56.540" endtime="20231212 10:54:57.079"/>
</test>
<test id="s1-s6-s5-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:54:57.080" endtime="20231212 10:54:57.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:54:57.083" level="INFO">Running command 'ozone sh bucket info /s3v/link | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:01.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:01.245" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20231212 10:54:57.082" endtime="20231212 10:55:01.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:01.246" level="INFO">testuser</msg>
<status status="PASS" starttime="20231212 10:55:01.246" endtime="20231212 10:55:01.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:01.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:01.247" endtime="20231212 10:55:01.247"/>
</kw>
<status status="PASS" starttime="20231212 10:54:57.081" endtime="20231212 10:55:01.247"/>
</kw>
<msg timestamp="20231212 10:55:01.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:54:57.081" endtime="20231212 10:55:01.247"/>
</kw>
<msg timestamp="20231212 10:55:01.247" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20231212 10:54:57.081" endtime="20231212 10:55:01.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:01.248" endtime="20231212 10:55:01.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:54:57.079" endtime="20231212 10:55:01.248"/>
</test>
<test id="s1-s6-s5-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:01.253" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:01.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:01.651" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:55:01.251" endtime="20231212 10:55:01.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:01.652" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:55:01.652" endtime="20231212 10:55:01.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:01.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:01.653" endtime="20231212 10:55:01.653"/>
</kw>
<status status="PASS" starttime="20231212 10:55:01.250" endtime="20231212 10:55:01.653"/>
</kw>
<msg timestamp="20231212 10:55:01.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:01.250" endtime="20231212 10:55:01.653"/>
</kw>
<msg timestamp="20231212 10:55:01.654" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:55:01.250" endtime="20231212 10:55:01.654"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231212 10:55:01.654" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:55:01.654" endtime="20231212 10:55:01.654"/>
</kw>
<status status="PASS" starttime="20231212 10:55:01.249" endtime="20231212 10:55:01.654"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:01.658" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:02.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:02.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:01.656" endtime="20231212 10:55:02.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:02.055" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:02.055" endtime="20231212 10:55:02.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:02.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:02.055" endtime="20231212 10:55:02.056"/>
</kw>
<status status="PASS" starttime="20231212 10:55:01.655" endtime="20231212 10:55:02.056"/>
</kw>
<msg timestamp="20231212 10:55:02.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:01.655" endtime="20231212 10:55:02.056"/>
</kw>
<status status="PASS" starttime="20231212 10:55:01.655" endtime="20231212 10:55:02.056"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:02.059" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:02.536" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:02.536" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231212 10:55:02.057" endtime="20231212 10:55:02.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:02.537" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231212 10:55:02.537" endtime="20231212 10:55:02.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:02.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:02.537" endtime="20231212 10:55:02.538"/>
</kw>
<msg timestamp="20231212 10:55:02.538" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231212 10:55:02.057" endtime="20231212 10:55:02.538"/>
</kw>
<msg timestamp="20231212 10:55:02.538" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231212 10:55:02.056" endtime="20231212 10:55:02.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:02.538" endtime="20231212 10:55:02.539"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:02.543" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:02.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:02.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:02.541" endtime="20231212 10:55:02.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:02.942" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:02.941" endtime="20231212 10:55:02.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:02.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:02.942" endtime="20231212 10:55:02.942"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.540" endtime="20231212 10:55:02.942"/>
</kw>
<msg timestamp="20231212 10:55:02.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:02.540" endtime="20231212 10:55:02.943"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.539" endtime="20231212 10:55:02.943"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.539" endtime="20231212 10:55:02.943"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:01.249" endtime="20231212 10:55:02.943"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:54:56.529" endtime="20231212 10:55:02.944"/>
</suite>
<suite id="s1-s6-s6" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:55:02.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:02.957" endtime="20231212 10:55:02.958"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:55:02.958" endtime="20231212 10:55:02.958"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:55:02.958" endtime="20231212 10:55:02.958"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:02.958" endtime="20231212 10:55:02.958"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:02.958" endtime="20231212 10:55:02.958"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:02.958" endtime="20231212 10:55:02.958"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:02.959" endtime="20231212 10:55:02.959"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:02.959" endtime="20231212 10:55:02.959"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:55:02.959" endtime="20231212 10:55:02.959"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.957" endtime="20231212 10:55:02.959"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:02.962" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:02.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:02.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:02.960" endtime="20231212 10:55:02.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:02.992" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:02.992" endtime="20231212 10:55:02.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:02.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:02.992" endtime="20231212 10:55:02.993"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.960" endtime="20231212 10:55:02.993"/>
</kw>
<msg timestamp="20231212 10:55:02.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:02.960" endtime="20231212 10:55:02.993"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.959" endtime="20231212 10:55:02.993"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.959" endtime="20231212 10:55:02.994"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:02.997" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:03.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:03.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:02.995" endtime="20231212 10:55:03.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:03.006" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:03.005" endtime="20231212 10:55:03.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:03.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:03.006" endtime="20231212 10:55:03.006"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.995" endtime="20231212 10:55:03.007"/>
</kw>
<msg timestamp="20231212 10:55:03.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:02.995" endtime="20231212 10:55:03.007"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.994" endtime="20231212 10:55:03.007"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.994" endtime="20231212 10:55:03.007"/>
</kw>
<status status="PASS" starttime="20231212 10:55:02.957" endtime="20231212 10:55:03.007"/>
</kw>
<test id="s1-s6-s6-t1" name="Test Multipart Upload With Adjusted Length" line="57">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:03.009" level="INFO">${randStr} = 6180493705</msg>
<status status="PASS" starttime="20231212 10:55:03.009" endtime="20231212 10:55:03.009"/>
</kw>
<msg timestamp="20231212 10:55:03.009" level="INFO">${random} = ozone-test-6180493705</msg>
<status status="PASS" starttime="20231212 10:55:03.008" endtime="20231212 10:55:03.009"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:03.010" level="INFO">${PREFIX} = ozone-test-6180493705</msg>
<status status="PASS" starttime="20231212 10:55:03.009" endtime="20231212 10:55:03.010"/>
</kw>
<status status="PASS" starttime="20231212 10:55:03.008" endtime="20231212 10:55:03.010"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:03.014" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key multipart/adjusted_length_ozone-test-6180493705 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:03.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:03.501" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-6180493705",
    "UploadId": "751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833"
}</msg>
<status status="PASS" starttime="20231212 10:55:03.012" endtime="20231212 10:55:03.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:03.502" level="INFO">{
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-6180493705",
    "UploadId": "751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833"
}</msg>
<status status="PASS" starttime="20231212 10:55:03.502" endtime="20231212 10:55:03.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:03.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:03.502" endtime="20231212 10:55:03.503"/>
</kw>
<status status="PASS" starttime="20231212 10:55:03.012" endtime="20231212 10:55:03.503"/>
</kw>
<msg timestamp="20231212 10:55:03.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:03.011" endtime="20231212 10:55:03.503"/>
</kw>
<msg timestamp="20231212 10:55:03.503" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-6180493705",
    "UploadId": "751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833"
}</msg>
<status status="PASS" starttime="20231212 10:55:03.011" endtime="20231212 10:55:03.503"/>
</kw>
<msg timestamp="20231212 10:55:03.503" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-6180493705",
    "UploadId": "751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833"
}</msg>
<status status="PASS" starttime="20231212 10:55:03.011" endtime="20231212 10:55:03.503"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:03.506" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-6180493705",
    "UploadId": "751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:03.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:03.533" level="INFO">${output} = 751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833</msg>
<status status="PASS" starttime="20231212 10:55:03.504" endtime="20231212 10:55:03.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:03.534" level="INFO">751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833</msg>
<status status="PASS" starttime="20231212 10:55:03.534" endtime="20231212 10:55:03.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:03.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:03.534" endtime="20231212 10:55:03.535"/>
</kw>
<msg timestamp="20231212 10:55:03.535" level="INFO">${upload_id} = 751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833</msg>
<status status="PASS" starttime="20231212 10:55:03.504" endtime="20231212 10:55:03.535"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20231212 10:55:03.536" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20231212 10:55:03.535" endtime="20231212 10:55:03.536"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:55:03.537" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20231212 10:55:03.536" endtime="20231212 10:55:03.537"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:03.540" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key multipart/adjusted_length_ozone-test-6180493705 --part-number 1 --body /tmp/part1 --upload-id 751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:04.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:04.212" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:03.539" endtime="20231212 10:55:04.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:04.213" level="INFO">{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:04.213" endtime="20231212 10:55:04.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:04.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:04.214" endtime="20231212 10:55:04.214"/>
</kw>
<status status="PASS" starttime="20231212 10:55:03.538" endtime="20231212 10:55:04.214"/>
</kw>
<msg timestamp="20231212 10:55:04.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:03.538" endtime="20231212 10:55:04.214"/>
</kw>
<msg timestamp="20231212 10:55:04.215" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:03.537" endtime="20231212 10:55:04.215"/>
</kw>
<msg timestamp="20231212 10:55:04.215" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:03.537" endtime="20231212 10:55:04.215"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:04.218" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:04.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:04.246" level="INFO">${output} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1</msg>
<status status="PASS" starttime="20231212 10:55:04.216" endtime="20231212 10:55:04.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:04.247" level="INFO">/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1</msg>
<status status="PASS" starttime="20231212 10:55:04.246" endtime="20231212 10:55:04.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:04.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:04.247" endtime="20231212 10:55:04.247"/>
</kw>
<status status="PASS" starttime="20231212 10:55:04.216" endtime="20231212 10:55:04.247"/>
</kw>
<msg timestamp="20231212 10:55:04.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:04.216" endtime="20231212 10:55:04.247"/>
</kw>
<msg timestamp="20231212 10:55:04.248" level="INFO">${etag} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1</msg>
<status status="PASS" starttime="20231212 10:55:04.215" endtime="20231212 10:55:04.248"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20231212 10:55:04.248" endtime="20231212 10:55:04.248"/>
</kw>
<status status="PASS" starttime="20231212 10:55:03.536" endtime="20231212 10:55:04.248"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:55:04.249" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20231212 10:55:04.249" endtime="20231212 10:55:04.249"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:04.253" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key multipart/adjusted_length_ozone-test-6180493705 --part-number 2 --body /tmp/part2 --upload-id 751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:04.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:04.865" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:04.251" endtime="20231212 10:55:04.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:04.867" level="INFO">{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:04.866" endtime="20231212 10:55:04.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:04.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:04.867" endtime="20231212 10:55:04.867"/>
</kw>
<status status="PASS" starttime="20231212 10:55:04.250" endtime="20231212 10:55:04.868"/>
</kw>
<msg timestamp="20231212 10:55:04.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:04.250" endtime="20231212 10:55:04.868"/>
</kw>
<msg timestamp="20231212 10:55:04.868" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:04.250" endtime="20231212 10:55:04.868"/>
</kw>
<msg timestamp="20231212 10:55:04.868" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:04.249" endtime="20231212 10:55:04.868"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:04.872" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:04.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:04.899" level="INFO">${output} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-2</msg>
<status status="PASS" starttime="20231212 10:55:04.870" endtime="20231212 10:55:04.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:04.900" level="INFO">/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-2</msg>
<status status="PASS" starttime="20231212 10:55:04.900" endtime="20231212 10:55:04.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:04.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:04.900" endtime="20231212 10:55:04.901"/>
</kw>
<status status="PASS" starttime="20231212 10:55:04.869" endtime="20231212 10:55:04.901"/>
</kw>
<msg timestamp="20231212 10:55:04.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:04.869" endtime="20231212 10:55:04.901"/>
</kw>
<msg timestamp="20231212 10:55:04.901" level="INFO">${etag} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-2</msg>
<status status="PASS" starttime="20231212 10:55:04.868" endtime="20231212 10:55:04.901"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20231212 10:55:04.901" endtime="20231212 10:55:04.902"/>
</kw>
<status status="PASS" starttime="20231212 10:55:04.248" endtime="20231212 10:55:04.902"/>
</iter>
<status status="PASS" starttime="20231212 10:55:03.536" endtime="20231212 10:55:04.902"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231212 10:55:04.903" level="INFO">${parts} = {ETag=/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1,PartNumber=1},{ETag=/legacy/source-bucket/multipart/adjusted_lengt...</msg>
<status status="PASS" starttime="20231212 10:55:04.902" endtime="20231212 10:55:04.903"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:04.906" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket link --key multipart/adjusted_length_ozone-test-6180493705 --upload-id 751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-1,PartNumber=1},{ETag=/legacy/source-bucket/multipart/adjusted_length_ozone-test-6180493705-751dc7a7-f085-4cd3-81e5-5970e3b07506-111567077601902833-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:05.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:05.425" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-6180493705",
    "ETag": "\"0a514e71bbcb0655d25c9f84ed08d065-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:04.905" endtime="20231212 10:55:05.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:05.426" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-6180493705",
    "ETag": "\"0a514e71bbcb0655d25c9f84ed08d065-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:05.425" endtime="20231212 10:55:05.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:05.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:05.426" endtime="20231212 10:55:05.427"/>
</kw>
<status status="PASS" starttime="20231212 10:55:04.904" endtime="20231212 10:55:05.427"/>
</kw>
<msg timestamp="20231212 10:55:05.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:04.904" endtime="20231212 10:55:05.427"/>
</kw>
<msg timestamp="20231212 10:55:05.427" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-6180493705",
    "ETag": "\"0a514e71bbcb0655d25c9f84ed08d065-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:04.903" endtime="20231212 10:55:05.427"/>
</kw>
<status status="PASS" starttime="20231212 10:55:04.903" endtime="20231212 10:55:05.427"/>
</kw>
<status status="PASS" starttime="20231212 10:55:03.010" endtime="20231212 10:55:05.427"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:05.429" level="INFO">${randStr} = 8150162946</msg>
<status status="PASS" starttime="20231212 10:55:05.428" endtime="20231212 10:55:05.429"/>
</kw>
<msg timestamp="20231212 10:55:05.429" level="INFO">${random} = ozone-test-8150162946</msg>
<status status="PASS" starttime="20231212 10:55:05.428" endtime="20231212 10:55:05.429"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:05.432" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key multipart/adjusted_length_ozone-test-6180493705 /tmp/verifyozone-test-8150162946 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:05.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:05.984" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:05 GMT",
    "ContentLength": 6291456,
    "ETag": "\"0a514e71bbcb0655d25c9f84ed08d065-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:05.431" endtime="20231212 10:55:05.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:05.985" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:05 GMT",
    "ContentLength": 6291456,
    "ETag": "\"0a514e71bbcb0655d25c9f84ed08d065-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:05 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:05.985" endtime="20231212 10:55:05.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:05.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:05.985" endtime="20231212 10:55:05.986"/>
</kw>
<status status="PASS" starttime="20231212 10:55:05.430" endtime="20231212 10:55:05.987"/>
</kw>
<msg timestamp="20231212 10:55:05.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:05.430" endtime="20231212 10:55:05.987"/>
</kw>
<msg timestamp="20231212 10:55:05.987" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:05 GMT",
    "ContentLength": 6291456,
    "ETag": "\"0a514e71bbcb0655d25c9f84ed08d065-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:05.429" endtime="20231212 10:55:05.987"/>
</kw>
<status status="PASS" starttime="20231212 10:55:05.429" endtime="20231212 10:55:05.987"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231212 10:55:05.987" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20231212 10:55:05.987" endtime="20231212 10:55:05.988"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:05.991" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-8150162946'.</msg>
<msg timestamp="20231212 10:55:05.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:05.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:05.989" endtime="20231212 10:55:05.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:05.998" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:05.997" endtime="20231212 10:55:05.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:05.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:05.998" endtime="20231212 10:55:05.999"/>
</kw>
<status status="PASS" starttime="20231212 10:55:05.988" endtime="20231212 10:55:05.999"/>
</kw>
<msg timestamp="20231212 10:55:05.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:05.988" endtime="20231212 10:55:05.999"/>
</kw>
<status status="PASS" starttime="20231212 10:55:05.988" endtime="20231212 10:55:05.999"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:06.003" level="INFO">Running command 'md5sum /tmp/originalozone-test-8150162946 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:06.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:06.016" level="INFO">${output} = cebcac562600670659386727d0a20a4a</msg>
<status status="PASS" starttime="20231212 10:55:06.001" endtime="20231212 10:55:06.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:06.016" level="INFO">cebcac562600670659386727d0a20a4a</msg>
<status status="PASS" starttime="20231212 10:55:06.016" endtime="20231212 10:55:06.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:06.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:06.017" endtime="20231212 10:55:06.017"/>
</kw>
<status status="PASS" starttime="20231212 10:55:06.001" endtime="20231212 10:55:06.017"/>
</kw>
<msg timestamp="20231212 10:55:06.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:06.000" endtime="20231212 10:55:06.017"/>
</kw>
<msg timestamp="20231212 10:55:06.017" level="INFO">${checksumbefore} = cebcac562600670659386727d0a20a4a</msg>
<status status="PASS" starttime="20231212 10:55:06.000" endtime="20231212 10:55:06.017"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:06.020" level="INFO">Running command 'md5sum /tmp/verifyozone-test-8150162946 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:06.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:06.033" level="INFO">${output} = cebcac562600670659386727d0a20a4a</msg>
<status status="PASS" starttime="20231212 10:55:06.019" endtime="20231212 10:55:06.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:06.034" level="INFO">cebcac562600670659386727d0a20a4a</msg>
<status status="PASS" starttime="20231212 10:55:06.034" endtime="20231212 10:55:06.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:06.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:06.035" endtime="20231212 10:55:06.035"/>
</kw>
<status status="PASS" starttime="20231212 10:55:06.018" endtime="20231212 10:55:06.035"/>
</kw>
<msg timestamp="20231212 10:55:06.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:06.018" endtime="20231212 10:55:06.036"/>
</kw>
<msg timestamp="20231212 10:55:06.036" level="INFO">${checksumafter} = cebcac562600670659386727d0a20a4a</msg>
<status status="PASS" starttime="20231212 10:55:06.018" endtime="20231212 10:55:06.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:06.036" endtime="20231212 10:55:06.036"/>
</kw>
<status status="PASS" starttime="20231212 10:55:05.999" endtime="20231212 10:55:06.036"/>
</kw>
<status status="PASS" starttime="20231212 10:55:05.428" endtime="20231212 10:55:06.036"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:03.007" endtime="20231212 10:55:06.037"/>
</test>
<test id="s1-s6-s6-t2" name="Test Multipart Upload" line="61">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:06.039" level="INFO">${randStr} = 3346665989</msg>
<status status="PASS" starttime="20231212 10:55:06.038" endtime="20231212 10:55:06.039"/>
</kw>
<msg timestamp="20231212 10:55:06.039" level="INFO">${random} = ozone-test-3346665989</msg>
<status status="PASS" starttime="20231212 10:55:06.038" endtime="20231212 10:55:06.039"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:06.040" level="INFO">${PREFIX} = ozone-test-3346665989</msg>
<status status="PASS" starttime="20231212 10:55:06.039" endtime="20231212 10:55:06.040"/>
</kw>
<status status="PASS" starttime="20231212 10:55:06.038" endtime="20231212 10:55:06.040"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:06.044" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-3346665989/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:06.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:06.536" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "90699571-cd05-4dba-9dda-46783d1347fe-111567077800607988"
}</msg>
<status status="PASS" starttime="20231212 10:55:06.042" endtime="20231212 10:55:06.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:06.537" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "90699571-cd05-4dba-9dda-46783d1347fe-111567077800607988"
}</msg>
<status status="PASS" starttime="20231212 10:55:06.536" endtime="20231212 10:55:06.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:06.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:06.537" endtime="20231212 10:55:06.538"/>
</kw>
<status status="PASS" starttime="20231212 10:55:06.041" endtime="20231212 10:55:06.538"/>
</kw>
<msg timestamp="20231212 10:55:06.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:06.041" endtime="20231212 10:55:06.538"/>
</kw>
<msg timestamp="20231212 10:55:06.538" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "90699571-cd05-4dba-9dda-46783d1347fe-111567077800607988"
}</msg>
<status status="PASS" starttime="20231212 10:55:06.040" endtime="20231212 10:55:06.539"/>
</kw>
<msg timestamp="20231212 10:55:06.539" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "90699571-cd05-4dba-9dda-46783d1347fe-111567077800607988"
}</msg>
<status status="PASS" starttime="20231212 10:55:06.040" endtime="20231212 10:55:06.539"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:06.542" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "90699571-cd05-4dba-9dda-46783d1347fe-111567077800607988"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:06.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:06.574" level="INFO">${output} = 90699571-cd05-4dba-9dda-46783d1347fe-111567077800607988</msg>
<status status="PASS" starttime="20231212 10:55:06.539" endtime="20231212 10:55:06.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:06.575" level="INFO">90699571-cd05-4dba-9dda-46783d1347fe-111567077800607988</msg>
<status status="PASS" starttime="20231212 10:55:06.574" endtime="20231212 10:55:06.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:06.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:06.575" endtime="20231212 10:55:06.576"/>
</kw>
<msg timestamp="20231212 10:55:06.576" level="INFO">${uploadID} = 90699571-cd05-4dba-9dda-46783d1347fe-111567077800607988</msg>
<status status="PASS" starttime="20231212 10:55:06.539" endtime="20231212 10:55:06.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:06.576" endtime="20231212 10:55:06.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:06.576" endtime="20231212 10:55:06.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:06.577" endtime="20231212 10:55:06.577"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:06.581" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-3346665989/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:07.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:07.094" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397"
}</msg>
<status status="PASS" starttime="20231212 10:55:06.579" endtime="20231212 10:55:07.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:07.095" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397"
}</msg>
<status status="PASS" starttime="20231212 10:55:07.094" endtime="20231212 10:55:07.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:07.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:07.095" endtime="20231212 10:55:07.096"/>
</kw>
<status status="PASS" starttime="20231212 10:55:06.579" endtime="20231212 10:55:07.096"/>
</kw>
<msg timestamp="20231212 10:55:07.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:06.578" endtime="20231212 10:55:07.096"/>
</kw>
<msg timestamp="20231212 10:55:07.096" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397"
}</msg>
<status status="PASS" starttime="20231212 10:55:06.578" endtime="20231212 10:55:07.096"/>
</kw>
<msg timestamp="20231212 10:55:07.096" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397"
}</msg>
<status status="PASS" starttime="20231212 10:55:06.577" endtime="20231212 10:55:07.097"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:07.099" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-3346665989/multipartKey",
    "UploadId": "41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:07.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:07.127" level="INFO">${output} = 41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397</msg>
<status status="PASS" starttime="20231212 10:55:07.097" endtime="20231212 10:55:07.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:07.128" level="INFO">41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397</msg>
<status status="PASS" starttime="20231212 10:55:07.127" endtime="20231212 10:55:07.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:07.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:07.128" endtime="20231212 10:55:07.129"/>
</kw>
<msg timestamp="20231212 10:55:07.129" level="INFO">${nextUploadID} = 41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397</msg>
<status status="PASS" starttime="20231212 10:55:07.097" endtime="20231212 10:55:07.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:07.129" endtime="20231212 10:55:07.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:07.130" endtime="20231212 10:55:07.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:07.130" endtime="20231212 10:55:07.131"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20231212 10:55:07.131" endtime="20231212 10:55:07.131"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:07.136" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:07.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:07.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:07.134" endtime="20231212 10:55:07.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:07.157" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:07.156" endtime="20231212 10:55:07.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:07.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:07.157" endtime="20231212 10:55:07.158"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.133" endtime="20231212 10:55:07.158"/>
</kw>
<msg timestamp="20231212 10:55:07.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:07.132" endtime="20231212 10:55:07.158"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.132" endtime="20231212 10:55:07.158"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.132" endtime="20231212 10:55:07.158"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.131" endtime="20231212 10:55:07.158"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:07.162" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-3346665989/multipartKey --part-number 1 --body /tmp/part1 --upload-id 41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:07.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:07.767" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-3346665989/multipartKey-41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:07.160" endtime="20231212 10:55:07.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:07.768" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-3346665989/multipartKey-41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:07.767" endtime="20231212 10:55:07.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:07.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:07.768" endtime="20231212 10:55:07.768"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.160" endtime="20231212 10:55:07.769"/>
</kw>
<msg timestamp="20231212 10:55:07.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:07.159" endtime="20231212 10:55:07.769"/>
</kw>
<msg timestamp="20231212 10:55:07.769" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-3346665989/multipartKey-41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:07.159" endtime="20231212 10:55:07.769"/>
</kw>
<msg timestamp="20231212 10:55:07.769" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-3346665989/multipartKey-41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:07.158" endtime="20231212 10:55:07.769"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:07.769" endtime="20231212 10:55:07.770"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:07.773" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:07.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:07.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:07.771" endtime="20231212 10:55:07.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:07.793" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:07.793" endtime="20231212 10:55:07.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:07.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:07.794" endtime="20231212 10:55:07.794"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.771" endtime="20231212 10:55:07.794"/>
</kw>
<msg timestamp="20231212 10:55:07.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:07.771" endtime="20231212 10:55:07.794"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.770" endtime="20231212 10:55:07.794"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.770" endtime="20231212 10:55:07.795"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.770" endtime="20231212 10:55:07.795"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:07.798" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-3346665989/multipartKey --part-number 1 --body /tmp/part1 --upload-id 41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:08.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:08.461" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-3346665989/multipartKey-41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:07.796" endtime="20231212 10:55:08.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:08.462" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-3346665989/multipartKey-41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:08.461" endtime="20231212 10:55:08.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:08.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:08.462" endtime="20231212 10:55:08.462"/>
</kw>
<status status="PASS" starttime="20231212 10:55:07.796" endtime="20231212 10:55:08.463"/>
</kw>
<msg timestamp="20231212 10:55:08.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:07.796" endtime="20231212 10:55:08.463"/>
</kw>
<msg timestamp="20231212 10:55:08.463" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-3346665989/multipartKey-41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:07.795" endtime="20231212 10:55:08.463"/>
</kw>
<msg timestamp="20231212 10:55:08.463" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-3346665989/multipartKey-41464c3f-c3a2-437b-958a-eb94b13a1b89-111567077836849397-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:07.795" endtime="20231212 10:55:08.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:08.463" endtime="20231212 10:55:08.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:06.037" endtime="20231212 10:55:08.464"/>
</test>
<test id="s1-s6-s6-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:08.466" level="INFO">${randStr} = 0488920429</msg>
<status status="PASS" starttime="20231212 10:55:08.466" endtime="20231212 10:55:08.466"/>
</kw>
<msg timestamp="20231212 10:55:08.466" level="INFO">${random} = ozone-test-0488920429</msg>
<status status="PASS" starttime="20231212 10:55:08.465" endtime="20231212 10:55:08.466"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:08.467" level="INFO">${PREFIX} = ozone-test-0488920429</msg>
<status status="PASS" starttime="20231212 10:55:08.467" endtime="20231212 10:55:08.467"/>
</kw>
<status status="PASS" starttime="20231212 10:55:08.465" endtime="20231212 10:55:08.467"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:08.470" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-0488920429/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:08.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:08.960" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0488920429/multipartKey1",
    "UploadId": "7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432"
}</msg>
<status status="PASS" starttime="20231212 10:55:08.469" endtime="20231212 10:55:08.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:08.961" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-0488920429/multipartKey1",
    "UploadId": "7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432"
}</msg>
<status status="PASS" starttime="20231212 10:55:08.961" endtime="20231212 10:55:08.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:08.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:08.962" endtime="20231212 10:55:08.962"/>
</kw>
<status status="PASS" starttime="20231212 10:55:08.468" endtime="20231212 10:55:08.963"/>
</kw>
<msg timestamp="20231212 10:55:08.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:08.468" endtime="20231212 10:55:08.963"/>
</kw>
<msg timestamp="20231212 10:55:08.963" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0488920429/multipartKey1",
    "UploadId": "7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432"
}</msg>
<status status="PASS" starttime="20231212 10:55:08.468" endtime="20231212 10:55:08.963"/>
</kw>
<msg timestamp="20231212 10:55:08.963" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-0488920429/multipartKey1",
    "UploadId": "7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432"
}</msg>
<status status="PASS" starttime="20231212 10:55:08.467" endtime="20231212 10:55:08.963"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:08.966" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-0488920429/multipartKey1",
    "UploadId": "7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:09.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:09.005" level="INFO">${output} = 7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432</msg>
<status status="PASS" starttime="20231212 10:55:08.964" endtime="20231212 10:55:09.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:09.006" level="INFO">7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432</msg>
<status status="PASS" starttime="20231212 10:55:09.006" endtime="20231212 10:55:09.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:09.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:09.007" endtime="20231212 10:55:09.007"/>
</kw>
<msg timestamp="20231212 10:55:09.008" level="INFO">${uploadID} = 7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432</msg>
<status status="PASS" starttime="20231212 10:55:08.963" endtime="20231212 10:55:09.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:09.008" endtime="20231212 10:55:09.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:09.009" endtime="20231212 10:55:09.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:09.009" endtime="20231212 10:55:09.010"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:09.015" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:09.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:09.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:09.012" endtime="20231212 10:55:09.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:09.036" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:09.035" endtime="20231212 10:55:09.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:09.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:09.036" endtime="20231212 10:55:09.036"/>
</kw>
<status status="PASS" starttime="20231212 10:55:09.012" endtime="20231212 10:55:09.036"/>
</kw>
<msg timestamp="20231212 10:55:09.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:09.011" endtime="20231212 10:55:09.037"/>
</kw>
<status status="PASS" starttime="20231212 10:55:09.011" endtime="20231212 10:55:09.037"/>
</kw>
<status status="PASS" starttime="20231212 10:55:09.010" endtime="20231212 10:55:09.037"/>
</kw>
<status status="PASS" starttime="20231212 10:55:09.010" endtime="20231212 10:55:09.037"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:09.041" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-0488920429/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:09.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:09.619" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:09.039" endtime="20231212 10:55:09.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:09.620" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:09.620" endtime="20231212 10:55:09.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:09.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:09.621" endtime="20231212 10:55:09.621"/>
</kw>
<status status="PASS" starttime="20231212 10:55:09.038" endtime="20231212 10:55:09.621"/>
</kw>
<msg timestamp="20231212 10:55:09.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:09.038" endtime="20231212 10:55:09.622"/>
</kw>
<msg timestamp="20231212 10:55:09.622" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:09.038" endtime="20231212 10:55:09.622"/>
</kw>
<msg timestamp="20231212 10:55:09.622" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:09.037" endtime="20231212 10:55:09.622"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:09.625" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:09.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:09.652" level="INFO">${output} = /legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-1</msg>
<status status="PASS" starttime="20231212 10:55:09.623" endtime="20231212 10:55:09.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:09.653" level="INFO">/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-1</msg>
<status status="PASS" starttime="20231212 10:55:09.653" endtime="20231212 10:55:09.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:09.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:09.654" endtime="20231212 10:55:09.654"/>
</kw>
<msg timestamp="20231212 10:55:09.654" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-1</msg>
<status status="PASS" starttime="20231212 10:55:09.622" endtime="20231212 10:55:09.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:09.655" endtime="20231212 10:55:09.655"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:09.658" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231212 10:55:09.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:09.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:09.657" endtime="20231212 10:55:09.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:09.661" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:09.660" endtime="20231212 10:55:09.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:09.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:09.661" endtime="20231212 10:55:09.662"/>
</kw>
<status status="PASS" starttime="20231212 10:55:09.656" endtime="20231212 10:55:09.662"/>
</kw>
<msg timestamp="20231212 10:55:09.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:09.656" endtime="20231212 10:55:09.662"/>
</kw>
<status status="PASS" starttime="20231212 10:55:09.655" endtime="20231212 10:55:09.662"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:09.666" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-0488920429/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:10.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:10.220" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:09.664" endtime="20231212 10:55:10.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:10.221" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:10.221" endtime="20231212 10:55:10.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:10.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:10.221" endtime="20231212 10:55:10.222"/>
</kw>
<status status="PASS" starttime="20231212 10:55:09.664" endtime="20231212 10:55:10.222"/>
</kw>
<msg timestamp="20231212 10:55:10.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:09.664" endtime="20231212 10:55:10.222"/>
</kw>
<msg timestamp="20231212 10:55:10.222" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:09.663" endtime="20231212 10:55:10.223"/>
</kw>
<msg timestamp="20231212 10:55:10.223" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:09.663" endtime="20231212 10:55:10.223"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:10.226" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:10.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:10.254" level="INFO">${output} = /legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-2</msg>
<status status="PASS" starttime="20231212 10:55:10.224" endtime="20231212 10:55:10.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:10.255" level="INFO">/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-2</msg>
<status status="PASS" starttime="20231212 10:55:10.254" endtime="20231212 10:55:10.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:10.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:10.255" endtime="20231212 10:55:10.255"/>
</kw>
<msg timestamp="20231212 10:55:10.256" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-2</msg>
<status status="PASS" starttime="20231212 10:55:10.223" endtime="20231212 10:55:10.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:10.256" endtime="20231212 10:55:10.256"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:10.260" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432 --bucket link --key ozone-test-0488920429/multipartKey1 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-0488920429/multipartKey1-7fc29383-c036-4ef3-bc63-7141e70a64de-111567077958877432-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:10.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:10.758" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-0488920429/multipartKey1",
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:10.258" endtime="20231212 10:55:10.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:10.759" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-0488920429/multipartKey1",
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:10.759" endtime="20231212 10:55:10.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:10.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:10.760" endtime="20231212 10:55:10.760"/>
</kw>
<status status="PASS" starttime="20231212 10:55:10.258" endtime="20231212 10:55:10.760"/>
</kw>
<msg timestamp="20231212 10:55:10.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:10.257" endtime="20231212 10:55:10.760"/>
</kw>
<msg timestamp="20231212 10:55:10.761" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-0488920429/multipartKey1",
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:10.257" endtime="20231212 10:55:10.761"/>
</kw>
<msg timestamp="20231212 10:55:10.761" level="INFO">${result} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-0488920429/multipartKey1",
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:10.256" endtime="20231212 10:55:10.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:10.761" endtime="20231212 10:55:10.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:10.761" endtime="20231212 10:55:10.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:10.762" endtime="20231212 10:55:10.762"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:10.766" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-0488920429/multipartKey1 /tmp/ozone-test-0488920429-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:11.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:11.324" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 5242886,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:10.764" endtime="20231212 10:55:11.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:11.325" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 5242886,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:11.325" endtime="20231212 10:55:11.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:11.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:11.326" endtime="20231212 10:55:11.326"/>
</kw>
<status status="PASS" starttime="20231212 10:55:10.764" endtime="20231212 10:55:11.326"/>
</kw>
<msg timestamp="20231212 10:55:11.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:10.763" endtime="20231212 10:55:11.326"/>
</kw>
<msg timestamp="20231212 10:55:11.327" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 5242886,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:10.763" endtime="20231212 10:55:11.327"/>
</kw>
<msg timestamp="20231212 10:55:11.327" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 5242886,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:10.762" endtime="20231212 10:55:11.327"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:11.330" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-0488920429-multipartKey1'.</msg>
<msg timestamp="20231212 10:55:11.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:11.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:11.328" endtime="20231212 10:55:11.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:11.337" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:11.336" endtime="20231212 10:55:11.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:11.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:11.337" endtime="20231212 10:55:11.337"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.328" endtime="20231212 10:55:11.338"/>
</kw>
<msg timestamp="20231212 10:55:11.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:11.328" endtime="20231212 10:55:11.338"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.327" endtime="20231212 10:55:11.338"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:11.341" level="INFO">Running command 'md5sum /tmp/ozone-test-0488920429-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:11.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:11.353" level="INFO">${output} = 6048f4034050683ad5674da31478a295</msg>
<status status="PASS" starttime="20231212 10:55:11.340" endtime="20231212 10:55:11.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:11.354" level="INFO">6048f4034050683ad5674da31478a295</msg>
<status status="PASS" starttime="20231212 10:55:11.353" endtime="20231212 10:55:11.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:11.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:11.354" endtime="20231212 10:55:11.354"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.339" endtime="20231212 10:55:11.355"/>
</kw>
<msg timestamp="20231212 10:55:11.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:11.339" endtime="20231212 10:55:11.355"/>
</kw>
<msg timestamp="20231212 10:55:11.355" level="INFO">${checksumbefore} = 6048f4034050683ad5674da31478a295</msg>
<status status="PASS" starttime="20231212 10:55:11.339" endtime="20231212 10:55:11.355"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:11.358" level="INFO">Running command 'md5sum /tmp/ozone-test-0488920429-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:11.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:11.369" level="INFO">${output} = 6048f4034050683ad5674da31478a295</msg>
<status status="PASS" starttime="20231212 10:55:11.356" endtime="20231212 10:55:11.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:11.370" level="INFO">6048f4034050683ad5674da31478a295</msg>
<status status="PASS" starttime="20231212 10:55:11.370" endtime="20231212 10:55:11.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:11.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:11.371" endtime="20231212 10:55:11.371"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.356" endtime="20231212 10:55:11.371"/>
</kw>
<msg timestamp="20231212 10:55:11.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:11.356" endtime="20231212 10:55:11.372"/>
</kw>
<msg timestamp="20231212 10:55:11.372" level="INFO">${checksumafter} = 6048f4034050683ad5674da31478a295</msg>
<status status="PASS" starttime="20231212 10:55:11.355" endtime="20231212 10:55:11.372"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:11.372" endtime="20231212 10:55:11.372"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.338" endtime="20231212 10:55:11.372"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:11.376" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-0488920429/multipartKey1 --part-number 1 /tmp/ozone-test-0488920429-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:11.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:11.898" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 5242880,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:11.374" endtime="20231212 10:55:11.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:11.899" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 5242880,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:11.898" endtime="20231212 10:55:11.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:11.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:11.899" endtime="20231212 10:55:11.899"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.374" endtime="20231212 10:55:11.899"/>
</kw>
<msg timestamp="20231212 10:55:11.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:11.373" endtime="20231212 10:55:11.900"/>
</kw>
<msg timestamp="20231212 10:55:11.900" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 5242880,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:11.373" endtime="20231212 10:55:11.900"/>
</kw>
<msg timestamp="20231212 10:55:11.900" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 5242880,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:11.372" endtime="20231212 10:55:11.900"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:11.904" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:11.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:11.915" level="INFO">${output} = df3a745193d0c6790d97da37f982e65f</msg>
<status status="PASS" starttime="20231212 10:55:11.902" endtime="20231212 10:55:11.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:11.916" level="INFO">df3a745193d0c6790d97da37f982e65f</msg>
<status status="PASS" starttime="20231212 10:55:11.915" endtime="20231212 10:55:11.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:11.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:11.916" endtime="20231212 10:55:11.916"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.901" endtime="20231212 10:55:11.916"/>
</kw>
<msg timestamp="20231212 10:55:11.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:11.901" endtime="20231212 10:55:11.916"/>
</kw>
<msg timestamp="20231212 10:55:11.917" level="INFO">${checksumbefore} = df3a745193d0c6790d97da37f982e65f</msg>
<status status="PASS" starttime="20231212 10:55:11.901" endtime="20231212 10:55:11.917"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:11.919" level="INFO">Running command 'md5sum /tmp/ozone-test-0488920429-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:11.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:11.931" level="INFO">${output} = df3a745193d0c6790d97da37f982e65f</msg>
<status status="PASS" starttime="20231212 10:55:11.918" endtime="20231212 10:55:11.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:11.932" level="INFO">df3a745193d0c6790d97da37f982e65f</msg>
<status status="PASS" starttime="20231212 10:55:11.931" endtime="20231212 10:55:11.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:11.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:11.932" endtime="20231212 10:55:11.933"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.917" endtime="20231212 10:55:11.933"/>
</kw>
<msg timestamp="20231212 10:55:11.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:11.917" endtime="20231212 10:55:11.933"/>
</kw>
<msg timestamp="20231212 10:55:11.933" level="INFO">${checksumafter} = df3a745193d0c6790d97da37f982e65f</msg>
<status status="PASS" starttime="20231212 10:55:11.917" endtime="20231212 10:55:11.933"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:11.933" endtime="20231212 10:55:11.934"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.900" endtime="20231212 10:55:11.934"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:11.938" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-0488920429/multipartKey1 --part-number 2 /tmp/ozone-test-0488920429-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:12.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:12.429" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 6,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:55:11.936" endtime="20231212 10:55:12.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:12.430" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 6,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:12 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:12.430" endtime="20231212 10:55:12.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:12.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:12.430" endtime="20231212 10:55:12.431"/>
</kw>
<status status="PASS" starttime="20231212 10:55:11.935" endtime="20231212 10:55:12.431"/>
</kw>
<msg timestamp="20231212 10:55:12.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:11.935" endtime="20231212 10:55:12.431"/>
</kw>
<msg timestamp="20231212 10:55:12.431" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 6,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:55:11.934" endtime="20231212 10:55:12.431"/>
</kw>
<msg timestamp="20231212 10:55:12.432" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:10 GMT",
    "ContentLength": 6,
    "ETag": "\"6f189c92595b848046d5d1a8e29d68c6-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:55:11.934" endtime="20231212 10:55:12.432"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:12.435" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:12.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:12.437" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:55:12.433" endtime="20231212 10:55:12.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:12.438" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:55:12.438" endtime="20231212 10:55:12.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:12.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:12.438" endtime="20231212 10:55:12.439"/>
</kw>
<status status="PASS" starttime="20231212 10:55:12.433" endtime="20231212 10:55:12.439"/>
</kw>
<msg timestamp="20231212 10:55:12.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:12.433" endtime="20231212 10:55:12.439"/>
</kw>
<msg timestamp="20231212 10:55:12.439" level="INFO">${checksumbefore} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:55:12.432" endtime="20231212 10:55:12.439"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:12.442" level="INFO">Running command 'md5sum /tmp/ozone-test-0488920429-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:12.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:12.444" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:55:12.440" endtime="20231212 10:55:12.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:12.444" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:55:12.444" endtime="20231212 10:55:12.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:12.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:12.445" endtime="20231212 10:55:12.445"/>
</kw>
<status status="PASS" starttime="20231212 10:55:12.440" endtime="20231212 10:55:12.445"/>
</kw>
<msg timestamp="20231212 10:55:12.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:12.440" endtime="20231212 10:55:12.445"/>
</kw>
<msg timestamp="20231212 10:55:12.446" level="INFO">${checksumafter} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231212 10:55:12.439" endtime="20231212 10:55:12.446"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:12.446" endtime="20231212 10:55:12.446"/>
</kw>
<status status="PASS" starttime="20231212 10:55:12.432" endtime="20231212 10:55:12.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:08.464" endtime="20231212 10:55:12.446"/>
</test>
<test id="s1-s6-s6-t4" name="Test Multipart Upload Complete Entity too small" line="124">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:12.448" level="INFO">${randStr} = 7746531063</msg>
<status status="PASS" starttime="20231212 10:55:12.448" endtime="20231212 10:55:12.449"/>
</kw>
<msg timestamp="20231212 10:55:12.449" level="INFO">${random} = ozone-test-7746531063</msg>
<status status="PASS" starttime="20231212 10:55:12.448" endtime="20231212 10:55:12.449"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:12.449" level="INFO">${PREFIX} = ozone-test-7746531063</msg>
<status status="PASS" starttime="20231212 10:55:12.449" endtime="20231212 10:55:12.449"/>
</kw>
<status status="PASS" starttime="20231212 10:55:12.447" endtime="20231212 10:55:12.449"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:12.452" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-7746531063/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:12.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:12.951" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-7746531063/multipartKey2",
    "UploadId": "b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539"
}</msg>
<status status="PASS" starttime="20231212 10:55:12.451" endtime="20231212 10:55:12.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:12.952" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-7746531063/multipartKey2",
    "UploadId": "b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539"
}</msg>
<status status="PASS" starttime="20231212 10:55:12.951" endtime="20231212 10:55:12.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:12.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:12.952" endtime="20231212 10:55:12.953"/>
</kw>
<status status="PASS" starttime="20231212 10:55:12.451" endtime="20231212 10:55:12.953"/>
</kw>
<msg timestamp="20231212 10:55:12.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:12.450" endtime="20231212 10:55:12.953"/>
</kw>
<msg timestamp="20231212 10:55:12.953" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-7746531063/multipartKey2",
    "UploadId": "b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539"
}</msg>
<status status="PASS" starttime="20231212 10:55:12.450" endtime="20231212 10:55:12.953"/>
</kw>
<msg timestamp="20231212 10:55:12.954" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-7746531063/multipartKey2",
    "UploadId": "b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539"
}</msg>
<status status="PASS" starttime="20231212 10:55:12.449" endtime="20231212 10:55:12.954"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:12.956" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-7746531063/multipartKey2",
    "UploadId": "b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:12.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:12.985" level="INFO">${output} = b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539</msg>
<status status="PASS" starttime="20231212 10:55:12.954" endtime="20231212 10:55:12.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:12.986" level="INFO">b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539</msg>
<status status="PASS" starttime="20231212 10:55:12.985" endtime="20231212 10:55:12.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:12.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:12.986" endtime="20231212 10:55:12.986"/>
</kw>
<msg timestamp="20231212 10:55:12.986" level="INFO">${uploadID} = b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539</msg>
<status status="PASS" starttime="20231212 10:55:12.954" endtime="20231212 10:55:12.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:12.987" endtime="20231212 10:55:12.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:12.987" endtime="20231212 10:55:12.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:12.988" endtime="20231212 10:55:12.988"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:12.991" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20231212 10:55:12.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:12.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:12.989" endtime="20231212 10:55:12.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:12.994" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:12.993" endtime="20231212 10:55:12.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:12.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:12.994" endtime="20231212 10:55:12.994"/>
</kw>
<status status="PASS" starttime="20231212 10:55:12.989" endtime="20231212 10:55:12.995"/>
</kw>
<msg timestamp="20231212 10:55:12.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:12.989" endtime="20231212 10:55:12.995"/>
</kw>
<status status="PASS" starttime="20231212 10:55:12.988" endtime="20231212 10:55:12.995"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:12.998" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-7746531063/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:13.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:13.549" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:12.997" endtime="20231212 10:55:13.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:13.550" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:13.550" endtime="20231212 10:55:13.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:13.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:13.551" endtime="20231212 10:55:13.551"/>
</kw>
<status status="PASS" starttime="20231212 10:55:12.996" endtime="20231212 10:55:13.551"/>
</kw>
<msg timestamp="20231212 10:55:13.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:12.996" endtime="20231212 10:55:13.552"/>
</kw>
<msg timestamp="20231212 10:55:13.552" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:12.996" endtime="20231212 10:55:13.552"/>
</kw>
<msg timestamp="20231212 10:55:13.552" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:12.995" endtime="20231212 10:55:13.552"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:13.555" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:13.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:13.582" level="INFO">${output} = /legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-1</msg>
<status status="PASS" starttime="20231212 10:55:13.553" endtime="20231212 10:55:13.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:13.583" level="INFO">/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-1</msg>
<status status="PASS" starttime="20231212 10:55:13.582" endtime="20231212 10:55:13.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:13.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:13.583" endtime="20231212 10:55:13.584"/>
</kw>
<msg timestamp="20231212 10:55:13.584" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-1</msg>
<status status="PASS" starttime="20231212 10:55:13.552" endtime="20231212 10:55:13.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:13.584" endtime="20231212 10:55:13.584"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:13.588" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231212 10:55:13.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:13.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:13.586" endtime="20231212 10:55:13.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:13.590" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:13.590" endtime="20231212 10:55:13.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:13.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:13.590" endtime="20231212 10:55:13.591"/>
</kw>
<status status="PASS" starttime="20231212 10:55:13.585" endtime="20231212 10:55:13.591"/>
</kw>
<msg timestamp="20231212 10:55:13.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:13.585" endtime="20231212 10:55:13.591"/>
</kw>
<status status="PASS" starttime="20231212 10:55:13.585" endtime="20231212 10:55:13.591"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:13.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-7746531063/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:14.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:14.133" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:13.593" endtime="20231212 10:55:14.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:14.134" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:14.134" endtime="20231212 10:55:14.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:14.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:14.134" endtime="20231212 10:55:14.135"/>
</kw>
<status status="PASS" starttime="20231212 10:55:13.593" endtime="20231212 10:55:14.135"/>
</kw>
<msg timestamp="20231212 10:55:14.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:13.593" endtime="20231212 10:55:14.135"/>
</kw>
<msg timestamp="20231212 10:55:14.135" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:13.592" endtime="20231212 10:55:14.135"/>
</kw>
<msg timestamp="20231212 10:55:14.136" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:13.591" endtime="20231212 10:55:14.136"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:14.138" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:14.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:14.167" level="INFO">${output} = /legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-2</msg>
<status status="PASS" starttime="20231212 10:55:14.136" endtime="20231212 10:55:14.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:14.168" level="INFO">/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-2</msg>
<status status="PASS" starttime="20231212 10:55:14.168" endtime="20231212 10:55:14.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:14.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:14.169" endtime="20231212 10:55:14.169"/>
</kw>
<msg timestamp="20231212 10:55:14.169" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-2</msg>
<status status="PASS" starttime="20231212 10:55:14.136" endtime="20231212 10:55:14.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:14.169" endtime="20231212 10:55:14.170"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:14.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539 --bucket link --key ozone-test-7746531063/multipartKey2 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-7746531063/multipartKey2-b79f3e8f-5823-4287-8422-66cb648f7d32-111567078220300539-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:14.661" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:14.661" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231212 10:55:14.171" endtime="20231212 10:55:14.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:14.662" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20231212 10:55:14.661" endtime="20231212 10:55:14.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:14.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:14.662" endtime="20231212 10:55:14.663"/>
</kw>
<msg timestamp="20231212 10:55:14.663" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231212 10:55:14.171" endtime="20231212 10:55:14.663"/>
</kw>
<msg timestamp="20231212 10:55:14.663" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231212 10:55:14.170" endtime="20231212 10:55:14.663"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:14.663" endtime="20231212 10:55:14.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:12.447" endtime="20231212 10:55:14.664"/>
</test>
<test id="s1-s6-s6-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="147">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:14.666" level="INFO">${randStr} = 9939099488</msg>
<status status="PASS" starttime="20231212 10:55:14.666" endtime="20231212 10:55:14.666"/>
</kw>
<msg timestamp="20231212 10:55:14.666" level="INFO">${random} = ozone-test-9939099488</msg>
<status status="PASS" starttime="20231212 10:55:14.665" endtime="20231212 10:55:14.666"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:14.667" level="INFO">${PREFIX} = ozone-test-9939099488</msg>
<status status="PASS" starttime="20231212 10:55:14.666" endtime="20231212 10:55:14.667"/>
</kw>
<status status="PASS" starttime="20231212 10:55:14.665" endtime="20231212 10:55:14.667"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:14.670" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-9939099488/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:15.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:15.191" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9939099488/multipartKey3",
    "UploadId": "1106ac78-217d-4001-a784-2d1402149122-111567078367494398"
}</msg>
<status status="PASS" starttime="20231212 10:55:14.668" endtime="20231212 10:55:15.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:15.192" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-9939099488/multipartKey3",
    "UploadId": "1106ac78-217d-4001-a784-2d1402149122-111567078367494398"
}</msg>
<status status="PASS" starttime="20231212 10:55:15.191" endtime="20231212 10:55:15.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:15.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:15.192" endtime="20231212 10:55:15.192"/>
</kw>
<status status="PASS" starttime="20231212 10:55:14.668" endtime="20231212 10:55:15.192"/>
</kw>
<msg timestamp="20231212 10:55:15.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:14.668" endtime="20231212 10:55:15.193"/>
</kw>
<msg timestamp="20231212 10:55:15.193" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9939099488/multipartKey3",
    "UploadId": "1106ac78-217d-4001-a784-2d1402149122-111567078367494398"
}</msg>
<status status="PASS" starttime="20231212 10:55:14.667" endtime="20231212 10:55:15.193"/>
</kw>
<msg timestamp="20231212 10:55:15.193" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-9939099488/multipartKey3",
    "UploadId": "1106ac78-217d-4001-a784-2d1402149122-111567078367494398"
}</msg>
<status status="PASS" starttime="20231212 10:55:14.667" endtime="20231212 10:55:15.193"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:15.196" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-9939099488/multipartKey3",
    "UploadId": "1106ac78-217d-4001-a784-2d1402149122-111567078367494398"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:15.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:15.223" level="INFO">${output} = 1106ac78-217d-4001-a784-2d1402149122-111567078367494398</msg>
<status status="PASS" starttime="20231212 10:55:15.194" endtime="20231212 10:55:15.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:15.224" level="INFO">1106ac78-217d-4001-a784-2d1402149122-111567078367494398</msg>
<status status="PASS" starttime="20231212 10:55:15.223" endtime="20231212 10:55:15.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:15.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:15.224" endtime="20231212 10:55:15.224"/>
</kw>
<msg timestamp="20231212 10:55:15.225" level="INFO">${uploadID} = 1106ac78-217d-4001-a784-2d1402149122-111567078367494398</msg>
<status status="PASS" starttime="20231212 10:55:15.193" endtime="20231212 10:55:15.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:15.225" endtime="20231212 10:55:15.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:15.225" endtime="20231212 10:55:15.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:15.226" endtime="20231212 10:55:15.226"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:15.230" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 1106ac78-217d-4001-a784-2d1402149122-111567078367494398 --bucket link --key ozone-test-9939099488/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:15.712" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:15.712" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:15.228" endtime="20231212 10:55:15.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:15.713" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231212 10:55:15.712" endtime="20231212 10:55:15.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:15.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:15.713" endtime="20231212 10:55:15.714"/>
</kw>
<msg timestamp="20231212 10:55:15.714" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:15.227" endtime="20231212 10:55:15.714"/>
</kw>
<msg timestamp="20231212 10:55:15.714" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:15.226" endtime="20231212 10:55:15.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:15.714" endtime="20231212 10:55:15.714"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:15.718" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 1106ac78-217d-4001-a784-2d1402149122-111567078367494398 --bucket link --key ozone-test-9939099488/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:16.211" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:16.211" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:15.716" endtime="20231212 10:55:16.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:16.212" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231212 10:55:16.211" endtime="20231212 10:55:16.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:16.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:16.212" endtime="20231212 10:55:16.212"/>
</kw>
<msg timestamp="20231212 10:55:16.213" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:15.715" endtime="20231212 10:55:16.213"/>
</kw>
<msg timestamp="20231212 10:55:16.213" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:15.715" endtime="20231212 10:55:16.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:16.213" endtime="20231212 10:55:16.213"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:16.218" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:16.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:16.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:16.216" endtime="20231212 10:55:16.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:16.237" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:16.237" endtime="20231212 10:55:16.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:16.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:16.238" endtime="20231212 10:55:16.238"/>
</kw>
<status status="PASS" starttime="20231212 10:55:16.215" endtime="20231212 10:55:16.238"/>
</kw>
<msg timestamp="20231212 10:55:16.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:16.215" endtime="20231212 10:55:16.238"/>
</kw>
<status status="PASS" starttime="20231212 10:55:16.214" endtime="20231212 10:55:16.239"/>
</kw>
<status status="PASS" starttime="20231212 10:55:16.214" endtime="20231212 10:55:16.239"/>
</kw>
<status status="PASS" starttime="20231212 10:55:16.214" endtime="20231212 10:55:16.239"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:16.242" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-9939099488/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 1106ac78-217d-4001-a784-2d1402149122-111567078367494398 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:16.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:16.906" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:16.241" endtime="20231212 10:55:16.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:16.907" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:16.906" endtime="20231212 10:55:16.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:16.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:16.907" endtime="20231212 10:55:16.907"/>
</kw>
<status status="PASS" starttime="20231212 10:55:16.240" endtime="20231212 10:55:16.908"/>
</kw>
<msg timestamp="20231212 10:55:16.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:16.240" endtime="20231212 10:55:16.908"/>
</kw>
<msg timestamp="20231212 10:55:16.908" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:16.239" endtime="20231212 10:55:16.908"/>
</kw>
<msg timestamp="20231212 10:55:16.908" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:16.239" endtime="20231212 10:55:16.908"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:16.912" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:16.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:16.940" level="INFO">${output} = /legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1</msg>
<status status="PASS" starttime="20231212 10:55:16.909" endtime="20231212 10:55:16.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:16.941" level="INFO">/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1</msg>
<status status="PASS" starttime="20231212 10:55:16.941" endtime="20231212 10:55:16.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:16.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:16.942" endtime="20231212 10:55:16.943"/>
</kw>
<msg timestamp="20231212 10:55:16.943" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1</msg>
<status status="PASS" starttime="20231212 10:55:16.909" endtime="20231212 10:55:16.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:16.944" endtime="20231212 10:55:16.944"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:16.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-9939099488/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 1106ac78-217d-4001-a784-2d1402149122-111567078367494398 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:17.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:17.599" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:16.947" endtime="20231212 10:55:17.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:17.600" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:17.600" endtime="20231212 10:55:17.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:17.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:17.600" endtime="20231212 10:55:17.601"/>
</kw>
<status status="PASS" starttime="20231212 10:55:16.947" endtime="20231212 10:55:17.601"/>
</kw>
<msg timestamp="20231212 10:55:17.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:16.946" endtime="20231212 10:55:17.601"/>
</kw>
<msg timestamp="20231212 10:55:17.601" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:16.945" endtime="20231212 10:55:17.601"/>
</kw>
<msg timestamp="20231212 10:55:17.602" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:16.944" endtime="20231212 10:55:17.602"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:17.604" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:17.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:17.632" level="INFO">${output} = /legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-2</msg>
<status status="PASS" starttime="20231212 10:55:17.602" endtime="20231212 10:55:17.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:17.633" level="INFO">/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-2</msg>
<status status="PASS" starttime="20231212 10:55:17.632" endtime="20231212 10:55:17.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:17.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:17.633" endtime="20231212 10:55:17.633"/>
</kw>
<msg timestamp="20231212 10:55:17.633" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-2</msg>
<status status="PASS" starttime="20231212 10:55:17.602" endtime="20231212 10:55:17.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:17.634" endtime="20231212 10:55:17.634"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:17.637" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20231212 10:55:17.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:17.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:17.635" endtime="20231212 10:55:17.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:17.639" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:17.639" endtime="20231212 10:55:17.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:17.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:17.640" endtime="20231212 10:55:17.640"/>
</kw>
<status status="PASS" starttime="20231212 10:55:17.635" endtime="20231212 10:55:17.640"/>
</kw>
<msg timestamp="20231212 10:55:17.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:17.635" endtime="20231212 10:55:17.640"/>
</kw>
<status status="PASS" starttime="20231212 10:55:17.634" endtime="20231212 10:55:17.640"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:17.644" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-9939099488/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 1106ac78-217d-4001-a784-2d1402149122-111567078367494398 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:18.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:18.201" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-3"
}</msg>
<status status="PASS" starttime="20231212 10:55:17.642" endtime="20231212 10:55:18.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:18.202" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-3"
}</msg>
<status status="PASS" starttime="20231212 10:55:18.201" endtime="20231212 10:55:18.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:18.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:18.202" endtime="20231212 10:55:18.203"/>
</kw>
<status status="PASS" starttime="20231212 10:55:17.642" endtime="20231212 10:55:18.203"/>
</kw>
<msg timestamp="20231212 10:55:18.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:17.642" endtime="20231212 10:55:18.203"/>
</kw>
<msg timestamp="20231212 10:55:18.203" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-3"
}</msg>
<status status="PASS" starttime="20231212 10:55:17.641" endtime="20231212 10:55:18.203"/>
</kw>
<msg timestamp="20231212 10:55:18.203" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-3"
}</msg>
<status status="PASS" starttime="20231212 10:55:17.641" endtime="20231212 10:55:18.203"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:18.206" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:18.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:18.234" level="INFO">${output} = /legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-3</msg>
<status status="PASS" starttime="20231212 10:55:18.204" endtime="20231212 10:55:18.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:18.235" level="INFO">/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-3</msg>
<status status="PASS" starttime="20231212 10:55:18.234" endtime="20231212 10:55:18.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:18.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:18.235" endtime="20231212 10:55:18.235"/>
</kw>
<msg timestamp="20231212 10:55:18.236" level="INFO">${eTag3} = /legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-3</msg>
<status status="PASS" starttime="20231212 10:55:18.204" endtime="20231212 10:55:18.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:18.236" endtime="20231212 10:55:18.236"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:18.239" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 1106ac78-217d-4001-a784-2d1402149122-111567078367494398 --bucket link --key ozone-test-9939099488/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:18.744" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:18.744" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:18.238" endtime="20231212 10:55:18.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:18.745" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231212 10:55:18.745" endtime="20231212 10:55:18.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:18.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:18.746" endtime="20231212 10:55:18.746"/>
</kw>
<msg timestamp="20231212 10:55:18.746" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:18.237" endtime="20231212 10:55:18.746"/>
</kw>
<msg timestamp="20231212 10:55:18.747" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:18.236" endtime="20231212 10:55:18.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:18.747" endtime="20231212 10:55:18.747"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:18.750" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 1106ac78-217d-4001-a784-2d1402149122-111567078367494398 --bucket link --key ozone-test-9939099488/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:19.244" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:19.244" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:18.749" endtime="20231212 10:55:19.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:19.245" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231212 10:55:19.244" endtime="20231212 10:55:19.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:19.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:19.245" endtime="20231212 10:55:19.246"/>
</kw>
<msg timestamp="20231212 10:55:19.246" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:18.748" endtime="20231212 10:55:19.246"/>
</kw>
<msg timestamp="20231212 10:55:19.246" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231212 10:55:18.747" endtime="20231212 10:55:19.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:19.246" endtime="20231212 10:55:19.247"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:19.250" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 1106ac78-217d-4001-a784-2d1402149122-111567078367494398 --bucket link --key ozone-test-9939099488/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:19.762" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:19.762" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231212 10:55:19.248" endtime="20231212 10:55:19.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:19.763" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231212 10:55:19.762" endtime="20231212 10:55:19.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:19.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:19.763" endtime="20231212 10:55:19.763"/>
</kw>
<msg timestamp="20231212 10:55:19.764" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231212 10:55:19.248" endtime="20231212 10:55:19.764"/>
</kw>
<msg timestamp="20231212 10:55:19.764" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231212 10:55:19.247" endtime="20231212 10:55:19.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:19.764" endtime="20231212 10:55:19.764"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:19.768" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 1106ac78-217d-4001-a784-2d1402149122-111567078367494398 --bucket link --key ozone-test-9939099488/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-9939099488/multipartKey3-1106ac78-217d-4001-a784-2d1402149122-111567078367494398-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:20.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:20.261" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9939099488/multipartKey3",
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\""
}</msg>
<status status="PASS" starttime="20231212 10:55:19.766" endtime="20231212 10:55:20.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:20.262" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9939099488/multipartKey3",
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\""
}</msg>
<status status="PASS" starttime="20231212 10:55:20.261" endtime="20231212 10:55:20.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:20.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:20.262" endtime="20231212 10:55:20.262"/>
</kw>
<status status="PASS" starttime="20231212 10:55:19.766" endtime="20231212 10:55:20.263"/>
</kw>
<msg timestamp="20231212 10:55:20.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:19.766" endtime="20231212 10:55:20.263"/>
</kw>
<msg timestamp="20231212 10:55:20.263" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9939099488/multipartKey3",
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\""
}</msg>
<status status="PASS" starttime="20231212 10:55:19.765" endtime="20231212 10:55:20.263"/>
</kw>
<msg timestamp="20231212 10:55:20.263" level="INFO">${result} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9939099488/multipartKey3",
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\""
}</msg>
<status status="PASS" starttime="20231212 10:55:19.765" endtime="20231212 10:55:20.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:20.263" endtime="20231212 10:55:20.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:20.264" endtime="20231212 10:55:20.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:20.264" endtime="20231212 10:55:20.265"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:20.269" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-9939099488/multipartKey3 /tmp/ozone-test-9939099488-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:20.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:20.810" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 5242886,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:20.267" endtime="20231212 10:55:20.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:20.812" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 5242886,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:20 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:20.811" endtime="20231212 10:55:20.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:20.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:20.812" endtime="20231212 10:55:20.813"/>
</kw>
<status status="PASS" starttime="20231212 10:55:20.267" endtime="20231212 10:55:20.813"/>
</kw>
<msg timestamp="20231212 10:55:20.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:20.266" endtime="20231212 10:55:20.814"/>
</kw>
<msg timestamp="20231212 10:55:20.814" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 5242886,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:20.266" endtime="20231212 10:55:20.814"/>
</kw>
<msg timestamp="20231212 10:55:20.814" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 5242886,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:20.265" endtime="20231212 10:55:20.814"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:20.832" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-9939099488-multipartKey3'.</msg>
<msg timestamp="20231212 10:55:20.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:20.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:20.816" endtime="20231212 10:55:20.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:20.846" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:20.845" endtime="20231212 10:55:20.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:20.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:20.846" endtime="20231212 10:55:20.847"/>
</kw>
<status status="PASS" starttime="20231212 10:55:20.815" endtime="20231212 10:55:20.847"/>
</kw>
<msg timestamp="20231212 10:55:20.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:20.815" endtime="20231212 10:55:20.847"/>
</kw>
<status status="PASS" starttime="20231212 10:55:20.814" endtime="20231212 10:55:20.847"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:20.860" level="INFO">Running command 'md5sum /tmp/ozone-test-9939099488-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:20.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:20.880" level="INFO">${output} = 3ddb2a0fecad31740324bddbf7a674b0</msg>
<status status="PASS" starttime="20231212 10:55:20.858" endtime="20231212 10:55:20.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:20.884" level="INFO">3ddb2a0fecad31740324bddbf7a674b0</msg>
<status status="PASS" starttime="20231212 10:55:20.883" endtime="20231212 10:55:20.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:20.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:20.884" endtime="20231212 10:55:20.891"/>
</kw>
<status status="PASS" starttime="20231212 10:55:20.858" endtime="20231212 10:55:20.891"/>
</kw>
<msg timestamp="20231212 10:55:20.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:20.857" endtime="20231212 10:55:20.891"/>
</kw>
<msg timestamp="20231212 10:55:20.892" level="INFO">${checksumbefore} = 3ddb2a0fecad31740324bddbf7a674b0</msg>
<status status="PASS" starttime="20231212 10:55:20.856" endtime="20231212 10:55:20.892"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:20.897" level="INFO">Running command 'md5sum /tmp/ozone-test-9939099488-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:20.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:20.909" level="INFO">${output} = 3ddb2a0fecad31740324bddbf7a674b0</msg>
<status status="PASS" starttime="20231212 10:55:20.893" endtime="20231212 10:55:20.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:20.910" level="INFO">3ddb2a0fecad31740324bddbf7a674b0</msg>
<status status="PASS" starttime="20231212 10:55:20.909" endtime="20231212 10:55:20.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:20.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:20.910" endtime="20231212 10:55:20.911"/>
</kw>
<status status="PASS" starttime="20231212 10:55:20.893" endtime="20231212 10:55:20.911"/>
</kw>
<msg timestamp="20231212 10:55:20.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:20.893" endtime="20231212 10:55:20.911"/>
</kw>
<msg timestamp="20231212 10:55:20.911" level="INFO">${checksumafter} = 3ddb2a0fecad31740324bddbf7a674b0</msg>
<status status="PASS" starttime="20231212 10:55:20.892" endtime="20231212 10:55:20.911"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:20.911" endtime="20231212 10:55:20.912"/>
</kw>
<status status="PASS" starttime="20231212 10:55:20.848" endtime="20231212 10:55:20.912"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:20.916" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-9939099488/multipartKey3 --part-number 1 /tmp/ozone-test-9939099488-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:21.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:21.431" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 5242880,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:20.914" endtime="20231212 10:55:21.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:21.432" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 5242880,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:21.431" endtime="20231212 10:55:21.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:21.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:21.432" endtime="20231212 10:55:21.432"/>
</kw>
<status status="PASS" starttime="20231212 10:55:20.913" endtime="20231212 10:55:21.433"/>
</kw>
<msg timestamp="20231212 10:55:21.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:20.913" endtime="20231212 10:55:21.433"/>
</kw>
<msg timestamp="20231212 10:55:21.433" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 5242880,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:20.912" endtime="20231212 10:55:21.433"/>
</kw>
<msg timestamp="20231212 10:55:21.433" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 5242880,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:20.912" endtime="20231212 10:55:21.433"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:21.437" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:21.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:21.449" level="INFO">${output} = cb0ba321263f0fef04aae0f5d60eaf12</msg>
<status status="PASS" starttime="20231212 10:55:21.435" endtime="20231212 10:55:21.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:21.449" level="INFO">cb0ba321263f0fef04aae0f5d60eaf12</msg>
<status status="PASS" starttime="20231212 10:55:21.449" endtime="20231212 10:55:21.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:21.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:21.450" endtime="20231212 10:55:21.450"/>
</kw>
<status status="PASS" starttime="20231212 10:55:21.434" endtime="20231212 10:55:21.450"/>
</kw>
<msg timestamp="20231212 10:55:21.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:21.434" endtime="20231212 10:55:21.451"/>
</kw>
<msg timestamp="20231212 10:55:21.451" level="INFO">${checksumbefore} = cb0ba321263f0fef04aae0f5d60eaf12</msg>
<status status="PASS" starttime="20231212 10:55:21.434" endtime="20231212 10:55:21.451"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:21.454" level="INFO">Running command 'md5sum /tmp/ozone-test-9939099488-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:21.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:21.465" level="INFO">${output} = cb0ba321263f0fef04aae0f5d60eaf12</msg>
<status status="PASS" starttime="20231212 10:55:21.452" endtime="20231212 10:55:21.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:21.465" level="INFO">cb0ba321263f0fef04aae0f5d60eaf12</msg>
<status status="PASS" starttime="20231212 10:55:21.465" endtime="20231212 10:55:21.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:21.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:21.466" endtime="20231212 10:55:21.466"/>
</kw>
<status status="PASS" starttime="20231212 10:55:21.452" endtime="20231212 10:55:21.466"/>
</kw>
<msg timestamp="20231212 10:55:21.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:21.451" endtime="20231212 10:55:21.466"/>
</kw>
<msg timestamp="20231212 10:55:21.467" level="INFO">${checksumafter} = cb0ba321263f0fef04aae0f5d60eaf12</msg>
<status status="PASS" starttime="20231212 10:55:21.451" endtime="20231212 10:55:21.467"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:21.467" endtime="20231212 10:55:21.467"/>
</kw>
<status status="PASS" starttime="20231212 10:55:21.433" endtime="20231212 10:55:21.467"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:21.470" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-9939099488/multipartKey3 --part-number 3 /tmp/ozone-test-9939099488-multipartKey3-part3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:21.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:21.975" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 6,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:55:21.469" endtime="20231212 10:55:21.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:21.976" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 6,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:21.975" endtime="20231212 10:55:21.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:21.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:21.976" endtime="20231212 10:55:21.976"/>
</kw>
<status status="PASS" starttime="20231212 10:55:21.468" endtime="20231212 10:55:21.977"/>
</kw>
<msg timestamp="20231212 10:55:21.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:21.468" endtime="20231212 10:55:21.977"/>
</kw>
<msg timestamp="20231212 10:55:21.977" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 6,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:55:21.468" endtime="20231212 10:55:21.977"/>
</kw>
<msg timestamp="20231212 10:55:21.977" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:20 GMT",
    "ContentLength": 6,
    "ETag": "\"8150a143496f7974a0dbdc5e1cfccdca-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231212 10:55:21.467" endtime="20231212 10:55:21.977"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part3</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:21.981" level="INFO">Running command 'md5sum /tmp/part3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:21.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:21.984" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:55:21.979" endtime="20231212 10:55:21.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:21.985" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:55:21.984" endtime="20231212 10:55:21.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:21.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:21.985" endtime="20231212 10:55:21.985"/>
</kw>
<status status="PASS" starttime="20231212 10:55:21.979" endtime="20231212 10:55:21.985"/>
</kw>
<msg timestamp="20231212 10:55:21.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:21.978" endtime="20231212 10:55:21.986"/>
</kw>
<msg timestamp="20231212 10:55:21.986" level="INFO">${checksumbefore} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:55:21.978" endtime="20231212 10:55:21.986"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:21.989" level="INFO">Running command 'md5sum /tmp/ozone-test-9939099488-multipartKey3-part3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:21.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:21.991" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:55:21.987" endtime="20231212 10:55:21.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:21.992" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:55:21.991" endtime="20231212 10:55:21.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:21.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:21.992" endtime="20231212 10:55:21.993"/>
</kw>
<status status="PASS" starttime="20231212 10:55:21.987" endtime="20231212 10:55:21.993"/>
</kw>
<msg timestamp="20231212 10:55:21.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:21.986" endtime="20231212 10:55:21.993"/>
</kw>
<msg timestamp="20231212 10:55:21.993" level="INFO">${checksumafter} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231212 10:55:21.986" endtime="20231212 10:55:21.993"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:21.993" endtime="20231212 10:55:21.994"/>
</kw>
<status status="PASS" starttime="20231212 10:55:21.977" endtime="20231212 10:55:21.994"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:14.664" endtime="20231212 10:55:21.994"/>
</test>
<test id="s1-s6-s6-t6" name="Test abort Multipart upload" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:21.996" level="INFO">${randStr} = 0302747690</msg>
<status status="PASS" starttime="20231212 10:55:21.996" endtime="20231212 10:55:21.996"/>
</kw>
<msg timestamp="20231212 10:55:21.996" level="INFO">${random} = ozone-test-0302747690</msg>
<status status="PASS" starttime="20231212 10:55:21.996" endtime="20231212 10:55:21.996"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:21.997" level="INFO">${PREFIX} = ozone-test-0302747690</msg>
<status status="PASS" starttime="20231212 10:55:21.997" endtime="20231212 10:55:21.997"/>
</kw>
<status status="PASS" starttime="20231212 10:55:21.995" endtime="20231212 10:55:21.997"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:22.000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-0302747690/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:22.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:22.497" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0302747690/multipartKey4",
    "UploadId": "f1d34d89-2ea5-45ba-9612-431e005ebd05-111567078846955778"
}</msg>
<status status="PASS" starttime="20231212 10:55:21.999" endtime="20231212 10:55:22.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:22.497" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-0302747690/multipartKey4",
    "UploadId": "f1d34d89-2ea5-45ba-9612-431e005ebd05-111567078846955778"
}</msg>
<status status="PASS" starttime="20231212 10:55:22.497" endtime="20231212 10:55:22.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:22.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:22.498" endtime="20231212 10:55:22.498"/>
</kw>
<status status="PASS" starttime="20231212 10:55:21.998" endtime="20231212 10:55:22.498"/>
</kw>
<msg timestamp="20231212 10:55:22.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:21.998" endtime="20231212 10:55:22.499"/>
</kw>
<msg timestamp="20231212 10:55:22.499" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0302747690/multipartKey4",
    "UploadId": "f1d34d89-2ea5-45ba-9612-431e005ebd05-111567078846955778"
}</msg>
<status status="PASS" starttime="20231212 10:55:21.998" endtime="20231212 10:55:22.499"/>
</kw>
<msg timestamp="20231212 10:55:22.499" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-0302747690/multipartKey4",
    "UploadId": "f1d34d89-2ea5-45ba-9612-431e005ebd05-111567078846955778"
}</msg>
<status status="PASS" starttime="20231212 10:55:21.997" endtime="20231212 10:55:22.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:22.501" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-0302747690/multipartKey4",
    "UploadId": "f1d34d89-2ea5-45ba-9612-431e005ebd05-111567078846955778"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:22.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:22.529" level="INFO">${output} = f1d34d89-2ea5-45ba-9612-431e005ebd05-111567078846955778</msg>
<status status="PASS" starttime="20231212 10:55:22.500" endtime="20231212 10:55:22.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:22.530" level="INFO">f1d34d89-2ea5-45ba-9612-431e005ebd05-111567078846955778</msg>
<status status="PASS" starttime="20231212 10:55:22.529" endtime="20231212 10:55:22.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:22.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:22.530" endtime="20231212 10:55:22.530"/>
</kw>
<msg timestamp="20231212 10:55:22.531" level="INFO">${uploadID} = f1d34d89-2ea5-45ba-9612-431e005ebd05-111567078846955778</msg>
<status status="PASS" starttime="20231212 10:55:22.499" endtime="20231212 10:55:22.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:22.531" endtime="20231212 10:55:22.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:22.531" endtime="20231212 10:55:22.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:22.532" endtime="20231212 10:55:22.532"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:22.535" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-0302747690/multipartKey4 --upload-id f1d34d89-2ea5-45ba-9612-431e005ebd05-111567078846955778 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:23.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:23.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:22.533" endtime="20231212 10:55:23.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:23.038" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:23.037" endtime="20231212 10:55:23.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:23.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:23.038" endtime="20231212 10:55:23.039"/>
</kw>
<msg timestamp="20231212 10:55:23.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:22.533" endtime="20231212 10:55:23.039"/>
</kw>
<msg timestamp="20231212 10:55:23.039" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:55:22.532" endtime="20231212 10:55:23.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:21.995" endtime="20231212 10:55:23.040"/>
</test>
<test id="s1-s6-s6-t7" name="Test abort Multipart upload with invalid uploadId" line="207">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:23.043" level="INFO">${randStr} = 3811370697</msg>
<status status="PASS" starttime="20231212 10:55:23.042" endtime="20231212 10:55:23.043"/>
</kw>
<msg timestamp="20231212 10:55:23.043" level="INFO">${random} = ozone-test-3811370697</msg>
<status status="PASS" starttime="20231212 10:55:23.042" endtime="20231212 10:55:23.043"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:23.044" level="INFO">${PREFIX} = ozone-test-3811370697</msg>
<status status="PASS" starttime="20231212 10:55:23.043" endtime="20231212 10:55:23.044"/>
</kw>
<status status="PASS" starttime="20231212 10:55:23.041" endtime="20231212 10:55:23.044"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:23.047" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-3811370697/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:23.538" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:23.538" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231212 10:55:23.045" endtime="20231212 10:55:23.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:23.539" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20231212 10:55:23.539" endtime="20231212 10:55:23.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:23.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:23.540" endtime="20231212 10:55:23.540"/>
</kw>
<msg timestamp="20231212 10:55:23.540" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231212 10:55:23.045" endtime="20231212 10:55:23.540"/>
</kw>
<msg timestamp="20231212 10:55:23.541" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231212 10:55:23.044" endtime="20231212 10:55:23.541"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:23.040" endtime="20231212 10:55:23.541"/>
</test>
<test id="s1-s6-s6-t8" name="Upload part with Incorrect uploadID" line="210">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:23.543" level="INFO">${randStr} = 4064484102</msg>
<status status="PASS" starttime="20231212 10:55:23.543" endtime="20231212 10:55:23.543"/>
</kw>
<msg timestamp="20231212 10:55:23.543" level="INFO">${random} = ozone-test-4064484102</msg>
<status status="PASS" starttime="20231212 10:55:23.542" endtime="20231212 10:55:23.543"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:23.544" level="INFO">${PREFIX} = ozone-test-4064484102</msg>
<status status="PASS" starttime="20231212 10:55:23.544" endtime="20231212 10:55:23.544"/>
</kw>
<status status="PASS" starttime="20231212 10:55:23.542" endtime="20231212 10:55:23.544"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:23.547" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-4064484102/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:24.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:24.075" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4064484102/multipartKey",
    "UploadId": "76a5e317-fd3b-4561-b7b9-07149d33e236-111567078947946755"
}</msg>
<status status="PASS" starttime="20231212 10:55:23.546" endtime="20231212 10:55:24.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:24.076" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-4064484102/multipartKey",
    "UploadId": "76a5e317-fd3b-4561-b7b9-07149d33e236-111567078947946755"
}</msg>
<status status="PASS" starttime="20231212 10:55:24.076" endtime="20231212 10:55:24.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:24.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:24.077" endtime="20231212 10:55:24.077"/>
</kw>
<status status="PASS" starttime="20231212 10:55:23.545" endtime="20231212 10:55:24.077"/>
</kw>
<msg timestamp="20231212 10:55:24.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:23.545" endtime="20231212 10:55:24.077"/>
</kw>
<msg timestamp="20231212 10:55:24.077" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4064484102/multipartKey",
    "UploadId": "76a5e317-fd3b-4561-b7b9-07149d33e236-111567078947946755"
}</msg>
<status status="PASS" starttime="20231212 10:55:23.545" endtime="20231212 10:55:24.077"/>
</kw>
<msg timestamp="20231212 10:55:24.078" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-4064484102/multipartKey",
    "UploadId": "76a5e317-fd3b-4561-b7b9-07149d33e236-111567078947946755"
}</msg>
<status status="PASS" starttime="20231212 10:55:23.544" endtime="20231212 10:55:24.078"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:24.081" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:55:24.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:24.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:24.079" endtime="20231212 10:55:24.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:24.083" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:24.083" endtime="20231212 10:55:24.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:24.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:24.083" endtime="20231212 10:55:24.084"/>
</kw>
<status status="PASS" starttime="20231212 10:55:24.079" endtime="20231212 10:55:24.084"/>
</kw>
<msg timestamp="20231212 10:55:24.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:24.078" endtime="20231212 10:55:24.084"/>
</kw>
<status status="PASS" starttime="20231212 10:55:24.078" endtime="20231212 10:55:24.084"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:24.088" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-4064484102/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:24.589" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:24.589" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231212 10:55:24.086" endtime="20231212 10:55:24.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:24.590" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20231212 10:55:24.589" endtime="20231212 10:55:24.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:24.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:24.590" endtime="20231212 10:55:24.591"/>
</kw>
<msg timestamp="20231212 10:55:24.591" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231212 10:55:24.085" endtime="20231212 10:55:24.591"/>
</kw>
<msg timestamp="20231212 10:55:24.591" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231212 10:55:24.084" endtime="20231212 10:55:24.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:24.591" endtime="20231212 10:55:24.592"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:23.541" endtime="20231212 10:55:24.592"/>
</test>
<test id="s1-s6-s6-t9" name="Test list parts" line="216">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:24.594" level="INFO">${randStr} = 1791792364</msg>
<status status="PASS" starttime="20231212 10:55:24.594" endtime="20231212 10:55:24.594"/>
</kw>
<msg timestamp="20231212 10:55:24.594" level="INFO">${random} = ozone-test-1791792364</msg>
<status status="PASS" starttime="20231212 10:55:24.594" endtime="20231212 10:55:24.594"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:24.595" level="INFO">${PREFIX} = ozone-test-1791792364</msg>
<status status="PASS" starttime="20231212 10:55:24.595" endtime="20231212 10:55:24.595"/>
</kw>
<status status="PASS" starttime="20231212 10:55:24.593" endtime="20231212 10:55:24.595"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:24.598" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-1791792364/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:25.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:25.095" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1791792364/multipartKey5",
    "UploadId": "7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237"
}</msg>
<status status="PASS" starttime="20231212 10:55:24.597" endtime="20231212 10:55:25.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:25.096" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-1791792364/multipartKey5",
    "UploadId": "7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237"
}</msg>
<status status="PASS" starttime="20231212 10:55:25.096" endtime="20231212 10:55:25.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:25.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:25.096" endtime="20231212 10:55:25.097"/>
</kw>
<status status="PASS" starttime="20231212 10:55:24.596" endtime="20231212 10:55:25.097"/>
</kw>
<msg timestamp="20231212 10:55:25.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:24.596" endtime="20231212 10:55:25.097"/>
</kw>
<msg timestamp="20231212 10:55:25.097" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1791792364/multipartKey5",
    "UploadId": "7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237"
}</msg>
<status status="PASS" starttime="20231212 10:55:24.596" endtime="20231212 10:55:25.097"/>
</kw>
<msg timestamp="20231212 10:55:25.098" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-1791792364/multipartKey5",
    "UploadId": "7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237"
}</msg>
<status status="PASS" starttime="20231212 10:55:24.595" endtime="20231212 10:55:25.098"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:25.100" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-1791792364/multipartKey5",
    "UploadId": "7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:25.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:25.127" level="INFO">${output} = 7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237</msg>
<status status="PASS" starttime="20231212 10:55:25.098" endtime="20231212 10:55:25.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:25.128" level="INFO">7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237</msg>
<status status="PASS" starttime="20231212 10:55:25.128" endtime="20231212 10:55:25.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:25.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:25.128" endtime="20231212 10:55:25.129"/>
</kw>
<msg timestamp="20231212 10:55:25.129" level="INFO">${uploadID} = 7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237</msg>
<status status="PASS" starttime="20231212 10:55:25.098" endtime="20231212 10:55:25.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:25.129" endtime="20231212 10:55:25.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:25.130" endtime="20231212 10:55:25.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:25.130" endtime="20231212 10:55:25.131"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:25.134" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:25.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:25.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:25.133" endtime="20231212 10:55:25.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:25.155" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:25.154" endtime="20231212 10:55:25.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:25.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:25.155" endtime="20231212 10:55:25.156"/>
</kw>
<status status="PASS" starttime="20231212 10:55:25.132" endtime="20231212 10:55:25.156"/>
</kw>
<msg timestamp="20231212 10:55:25.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:25.132" endtime="20231212 10:55:25.156"/>
</kw>
<status status="PASS" starttime="20231212 10:55:25.132" endtime="20231212 10:55:25.156"/>
</kw>
<status status="PASS" starttime="20231212 10:55:25.131" endtime="20231212 10:55:25.156"/>
</kw>
<status status="PASS" starttime="20231212 10:55:25.131" endtime="20231212 10:55:25.156"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:25.160" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1791792364/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:25.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:25.829" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:25.158" endtime="20231212 10:55:25.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:25.830" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:25.830" endtime="20231212 10:55:25.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:25.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:25.831" endtime="20231212 10:55:25.831"/>
</kw>
<status status="PASS" starttime="20231212 10:55:25.158" endtime="20231212 10:55:25.832"/>
</kw>
<msg timestamp="20231212 10:55:25.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:25.158" endtime="20231212 10:55:25.832"/>
</kw>
<msg timestamp="20231212 10:55:25.832" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:25.157" endtime="20231212 10:55:25.832"/>
</kw>
<msg timestamp="20231212 10:55:25.832" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1"
}</msg>
<status status="PASS" starttime="20231212 10:55:25.156" endtime="20231212 10:55:25.832"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:25.835" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:25.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:25.866" level="INFO">${output} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1</msg>
<status status="PASS" starttime="20231212 10:55:25.833" endtime="20231212 10:55:25.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:25.867" level="INFO">/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1</msg>
<status status="PASS" starttime="20231212 10:55:25.867" endtime="20231212 10:55:25.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:25.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:25.868" endtime="20231212 10:55:25.868"/>
</kw>
<msg timestamp="20231212 10:55:25.868" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1</msg>
<status status="PASS" starttime="20231212 10:55:25.832" endtime="20231212 10:55:25.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:25.868" endtime="20231212 10:55:25.869"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:25.872" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231212 10:55:25.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:25.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:25.870" endtime="20231212 10:55:25.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:25.874" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:25.874" endtime="20231212 10:55:25.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:25.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:25.874" endtime="20231212 10:55:25.875"/>
</kw>
<status status="PASS" starttime="20231212 10:55:25.870" endtime="20231212 10:55:25.875"/>
</kw>
<msg timestamp="20231212 10:55:25.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:25.869" endtime="20231212 10:55:25.875"/>
</kw>
<status status="PASS" starttime="20231212 10:55:25.869" endtime="20231212 10:55:25.875"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:25.878" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1791792364/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:26.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:26.449" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:25.877" endtime="20231212 10:55:26.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:26.451" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:26.450" endtime="20231212 10:55:26.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:26.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:26.451" endtime="20231212 10:55:26.451"/>
</kw>
<status status="PASS" starttime="20231212 10:55:25.876" endtime="20231212 10:55:26.452"/>
</kw>
<msg timestamp="20231212 10:55:26.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:25.876" endtime="20231212 10:55:26.452"/>
</kw>
<msg timestamp="20231212 10:55:26.452" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:25.876" endtime="20231212 10:55:26.452"/>
</kw>
<msg timestamp="20231212 10:55:26.452" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2"
}</msg>
<status status="PASS" starttime="20231212 10:55:25.875" endtime="20231212 10:55:26.452"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:26.455" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:26.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:26.485" level="INFO">${output} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2</msg>
<status status="PASS" starttime="20231212 10:55:26.453" endtime="20231212 10:55:26.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:26.486" level="INFO">/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2</msg>
<status status="PASS" starttime="20231212 10:55:26.486" endtime="20231212 10:55:26.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:26.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:26.487" endtime="20231212 10:55:26.487"/>
</kw>
<msg timestamp="20231212 10:55:26.487" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2</msg>
<status status="PASS" starttime="20231212 10:55:26.453" endtime="20231212 10:55:26.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:26.488" endtime="20231212 10:55:26.488"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:26.492" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-1791792364/multipartKey5 --upload-id 7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:26.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:26.967" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-...</msg>
<status status="PASS" starttime="20231212 10:55:26.490" endtime="20231212 10:55:26.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:26.968" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:55:26.392Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20231212 10:55:26.968" endtime="20231212 10:55:26.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:26.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:26.969" endtime="20231212 10:55:26.969"/>
</kw>
<status status="PASS" starttime="20231212 10:55:26.490" endtime="20231212 10:55:26.969"/>
</kw>
<msg timestamp="20231212 10:55:26.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:26.489" endtime="20231212 10:55:26.969"/>
</kw>
<msg timestamp="20231212 10:55:26.970" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-...</msg>
<status status="PASS" starttime="20231212 10:55:26.489" endtime="20231212 10:55:26.970"/>
</kw>
<msg timestamp="20231212 10:55:26.970" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-...</msg>
<status status="PASS" starttime="20231212 10:55:26.488" endtime="20231212 10:55:26.970"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:26.972" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:55:26.392Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:27.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:27.001" level="INFO">${output} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1</msg>
<status status="PASS" starttime="20231212 10:55:26.971" endtime="20231212 10:55:27.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:27.002" level="INFO">/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1</msg>
<status status="PASS" starttime="20231212 10:55:27.001" endtime="20231212 10:55:27.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:27.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:27.002" endtime="20231212 10:55:27.002"/>
</kw>
<msg timestamp="20231212 10:55:27.002" level="INFO">${part1} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1</msg>
<status status="PASS" starttime="20231212 10:55:26.970" endtime="20231212 10:55:27.002"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:27.005" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:55:26.392Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:27.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:27.033" level="INFO">${output} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2</msg>
<status status="PASS" starttime="20231212 10:55:27.003" endtime="20231212 10:55:27.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:27.034" level="INFO">/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2</msg>
<status status="PASS" starttime="20231212 10:55:27.033" endtime="20231212 10:55:27.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:27.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:27.034" endtime="20231212 10:55:27.034"/>
</kw>
<msg timestamp="20231212 10:55:27.035" level="INFO">${part2} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2</msg>
<status status="PASS" starttime="20231212 10:55:27.003" endtime="20231212 10:55:27.035"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:27.035" endtime="20231212 10:55:27.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:27.035" endtime="20231212 10:55:27.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:27.036" endtime="20231212 10:55:27.036"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:27.040" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-1791792364/multipartKey5 --upload-id 7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:27.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:27.522" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-...</msg>
<status status="PASS" starttime="20231212 10:55:27.038" endtime="20231212 10:55:27.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:27.523" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20231212 10:55:27.522" endtime="20231212 10:55:27.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:27.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:27.523" endtime="20231212 10:55:27.523"/>
</kw>
<status status="PASS" starttime="20231212 10:55:27.038" endtime="20231212 10:55:27.524"/>
</kw>
<msg timestamp="20231212 10:55:27.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:27.037" endtime="20231212 10:55:27.524"/>
</kw>
<msg timestamp="20231212 10:55:27.524" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-...</msg>
<status status="PASS" starttime="20231212 10:55:27.037" endtime="20231212 10:55:27.524"/>
</kw>
<msg timestamp="20231212 10:55:27.524" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-...</msg>
<status status="PASS" starttime="20231212 10:55:27.036" endtime="20231212 10:55:27.524"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:27.527" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:27.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:27.554" level="INFO">${output} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1</msg>
<status status="PASS" starttime="20231212 10:55:27.525" endtime="20231212 10:55:27.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:27.555" level="INFO">/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1</msg>
<status status="PASS" starttime="20231212 10:55:27.555" endtime="20231212 10:55:27.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:27.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:27.556" endtime="20231212 10:55:27.556"/>
</kw>
<msg timestamp="20231212 10:55:27.556" level="INFO">${part1} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1</msg>
<status status="PASS" starttime="20231212 10:55:27.524" endtime="20231212 10:55:27.556"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:27.559" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-12-12T10:55:25.774Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:27.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:27.586" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231212 10:55:27.557" endtime="20231212 10:55:27.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:27.587" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231212 10:55:27.586" endtime="20231212 10:55:27.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:27.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:27.587" endtime="20231212 10:55:27.587"/>
</kw>
<msg timestamp="20231212 10:55:27.588" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231212 10:55:27.557" endtime="20231212 10:55:27.588"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:27.588" endtime="20231212 10:55:27.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:27.588" endtime="20231212 10:55:27.589"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:27.593" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-1791792364/multipartKey5 --upload-id 7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:28.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:28.066" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:55:26.392Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-...</msg>
<status status="PASS" starttime="20231212 10:55:27.591" endtime="20231212 10:55:28.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:28.067" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:55:26.392Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20231212 10:55:28.066" endtime="20231212 10:55:28.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:28.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:28.067" endtime="20231212 10:55:28.067"/>
</kw>
<status status="PASS" starttime="20231212 10:55:27.590" endtime="20231212 10:55:28.068"/>
</kw>
<msg timestamp="20231212 10:55:28.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:27.590" endtime="20231212 10:55:28.068"/>
</kw>
<msg timestamp="20231212 10:55:28.068" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:55:26.392Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-...</msg>
<status status="PASS" starttime="20231212 10:55:27.589" endtime="20231212 10:55:28.068"/>
</kw>
<msg timestamp="20231212 10:55:28.068" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:55:26.392Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-...</msg>
<status status="PASS" starttime="20231212 10:55:27.589" endtime="20231212 10:55:28.068"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:28.071" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-12-12T10:55:26.392Z",
            "ETag": "/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:28.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:28.099" level="INFO">${output} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2</msg>
<status status="PASS" starttime="20231212 10:55:28.069" endtime="20231212 10:55:28.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:28.100" level="INFO">/legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2</msg>
<status status="PASS" starttime="20231212 10:55:28.100" endtime="20231212 10:55:28.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:28.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:28.100" endtime="20231212 10:55:28.101"/>
</kw>
<msg timestamp="20231212 10:55:28.101" level="INFO">${part2} = /legacy/source-bucket/ozone-test-1791792364/multipartKey5-7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237-2</msg>
<status status="PASS" starttime="20231212 10:55:28.068" endtime="20231212 10:55:28.101"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:28.101" endtime="20231212 10:55:28.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:28.102" endtime="20231212 10:55:28.102"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:28.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-1791792364/multipartKey5 --upload-id 7a23df3b-9e09-4a09-b432-f8fff3c8cf59-111567079017087237 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:28.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:28.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:28.103" endtime="20231212 10:55:28.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:28.609" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:28.609" endtime="20231212 10:55:28.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:28.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:28.610" endtime="20231212 10:55:28.610"/>
</kw>
<msg timestamp="20231212 10:55:28.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:28.103" endtime="20231212 10:55:28.610"/>
</kw>
<msg timestamp="20231212 10:55:28.611" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:55:28.102" endtime="20231212 10:55:28.611"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:24.592" endtime="20231212 10:55:28.611"/>
</test>
<test id="s1-s6-s6-t10" name="Test Multipart Upload with the simplified aws s3 cp API" line="258">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:28.613" level="INFO">${randStr} = 6159634686</msg>
<status status="PASS" starttime="20231212 10:55:28.613" endtime="20231212 10:55:28.613"/>
</kw>
<msg timestamp="20231212 10:55:28.614" level="INFO">${random} = ozone-test-6159634686</msg>
<status status="PASS" starttime="20231212 10:55:28.613" endtime="20231212 10:55:28.614"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:28.614" level="INFO">${PREFIX} = ozone-test-6159634686</msg>
<status status="PASS" starttime="20231212 10:55:28.614" endtime="20231212 10:55:28.614"/>
</kw>
<status status="PASS" starttime="20231212 10:55:28.612" endtime="20231212 10:55:28.614"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:28.618" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:28.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:28.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:28.616" endtime="20231212 10:55:28.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:28.693" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:28.693" endtime="20231212 10:55:28.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:28.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:28.694" endtime="20231212 10:55:28.694"/>
</kw>
<status status="PASS" starttime="20231212 10:55:28.615" endtime="20231212 10:55:28.694"/>
</kw>
<msg timestamp="20231212 10:55:28.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:28.615" endtime="20231212 10:55:28.694"/>
</kw>
<status status="PASS" starttime="20231212 10:55:28.615" endtime="20231212 10:55:28.695"/>
</kw>
<status status="PASS" starttime="20231212 10:55:28.614" endtime="20231212 10:55:28.695"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:28.699" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:29.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:29.647" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (13.4 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20231212 10:55:28.697" endtime="20231212 10:55:29.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:29.648" level="INFO">Completed 256.0 KiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (13.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (17.5 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (21.6 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (25.2 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (25.5 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (29.0 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (32.4 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (35.6 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (34.1 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (35.9 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (38.4 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (41.0 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (43.2 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (43.6 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (45.8 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (47.7 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (50.2 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (52.4 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (54.7 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (56.9 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (49.4 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (51.2 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (53.0 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (53.7 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (53.9 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (55.5 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (57.3 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (58.9 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (60.5 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (62.2 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (63.7 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (65.0 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (66.5 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (68.0 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (69.7 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (71.2 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (72.8 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (73.3 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (74.8 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (76.1 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (77.6 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (79.0 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (80.4 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (81.9 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (83.3 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (84.7 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (86.0 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (87.5 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (88.9 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (88.1 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (89.3 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (90.5 MiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (91.8 MiB/s) with 1 file(s) remaining 
Completed 14.0 MiB/22.0 MiB (92.7 MiB/s) with 1 file(s) remaining 
Completed 14.2 MiB/22.0 MiB (94.0 MiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (95.4 MiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (96.8 MiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (98.3 MiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (99.7 MiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (101.0 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (100.4 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (101.8 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (103.1 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (101.7 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (103.0 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (101.9 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (103.0 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (104.0 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (105.1 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (106.2 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (107.2 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (108.0 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (97.9 MiB/s) with 1 file(s) remaining 
Completed 19.0 MiB/22.0 MiB (98.4 MiB/s) with 1 file(s) remaining 
Completed 19.2 MiB/22.0 MiB (99.0 MiB/s) with 1 file(s) remaining 
Completed 19.5 MiB/22.0 MiB (97.6 MiB/s) with 1 file(s) remaining 
Completed 19.8 MiB/22.0 MiB (93.7 MiB/s) with 1 file(s) remaining 
Completed 20.0 MiB/22.0 MiB (94.0 MiB/s) with 1 file(s) remaining 
Completed 20.2 MiB/22.0 MiB (94.7 MiB/s) with 1 file(s) remaining 
Completed 20.5 MiB/22.0 MiB (93.9 MiB/s) with 1 file(s) remaining 
Completed 20.8 MiB/22.0 MiB (85.5 MiB/s) with 1 file(s) remaining 
Completed 21.0 MiB/22.0 MiB (84.2 MiB/s) with 1 file(s) remaining 
Completed 21.2 MiB/22.0 MiB (84.9 MiB/s) with 1 file(s) remaining 
Completed 21.5 MiB/22.0 MiB (84.7 MiB/s) with 1 file(s) remaining 
Completed 21.8 MiB/22.0 MiB (85.3 MiB/s) with 1 file(s) remaining 
Completed 22.0 MiB/22.0 MiB (86.0 MiB/s) with 1 file(s) remaining 
upload: ../../tmp/part1 to s3://link/mpyawscli                    </msg>
<status status="PASS" starttime="20231212 10:55:29.647" endtime="20231212 10:55:29.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:29.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:29.648" endtime="20231212 10:55:29.649"/>
</kw>
<status status="PASS" starttime="20231212 10:55:28.696" endtime="20231212 10:55:29.649"/>
</kw>
<msg timestamp="20231212 10:55:29.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:28.696" endtime="20231212 10:55:29.649"/>
</kw>
<msg timestamp="20231212 10:55:29.649" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (13.4 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20231212 10:55:28.695" endtime="20231212 10:55:29.649"/>
</kw>
<status status="PASS" starttime="20231212 10:55:28.695" endtime="20231212 10:55:29.649"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:29.654" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://link/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:42.110" level="INFO">${rc} = 1</msg>
<msg timestamp="20231212 10:55:42.110" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20231212 10:55:29.652" endtime="20231212 10:55:42.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:42.111" level="INFO">Completed 256.0 KiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (11.7 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/22.0 MiB (14.6 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (17.1 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (22.2 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (23.9 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (26.5 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (29.0 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (31.5 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (28.8 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (30.8 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (33.0 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (35.1 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (36.4 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (38.4 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (40.5 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (42.5 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (40.8 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (42.5 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (44.4 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (46.3 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (45.4 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (47.1 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (48.8 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (50.5 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (51.8 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (53.5 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (55.1 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (56.6 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (56.6 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (57.6 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (59.0 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (60.4 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (58.2 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (60.5 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (62.0 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (63.4 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (64.9 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (65.9 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (65.9 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (64.2 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (65.3 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (66.3 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (65.2 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (66.4 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (67.5 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (68.8 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (67.3 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (68.4 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (69.6 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (70.8 MiB/s) with 1 file(s) remaining
download failed: s3://link/mpyawscli to ../../tmp/part1.result An error occurred (500) when calling the GetObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20231212 10:55:42.111" endtime="20231212 10:55:42.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:42.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20231212 10:55:42.112" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20231212 10:55:42.111" endtime="20231212 10:55:42.112"/>
</kw>
<status status="FAIL" starttime="20231212 10:55:29.651" endtime="20231212 10:55:42.112"/>
</kw>
<msg timestamp="20231212 10:55:42.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231212 10:55:29.651" endtime="20231212 10:55:42.112"/>
</kw>
<status status="FAIL" starttime="20231212 10:55:29.650" endtime="20231212 10:55:42.112"/>
</kw>
<status status="FAIL" starttime="20231212 10:55:29.650" endtime="20231212 10:55:42.113"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<status status="NOT RUN" starttime="20231212 10:55:42.113" endtime="20231212 10:55:42.113"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<status status="NOT RUN" starttime="20231212 10:55:42.113" endtime="20231212 10:55:42.113"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231212 10:55:28.611" endtime="20231212 10:55:42.113">1 != 0</status>
</test>
<test id="s1-s6-s6-t11" name="Test Multipart Upload Put With Copy" line="265">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:42.115" level="INFO">${randStr} = 0605896892</msg>
<status status="PASS" starttime="20231212 10:55:42.115" endtime="20231212 10:55:42.116"/>
</kw>
<msg timestamp="20231212 10:55:42.116" level="INFO">${random} = ozone-test-0605896892</msg>
<status status="PASS" starttime="20231212 10:55:42.115" endtime="20231212 10:55:42.116"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:42.116" level="INFO">${PREFIX} = ozone-test-0605896892</msg>
<status status="PASS" starttime="20231212 10:55:42.116" endtime="20231212 10:55:42.116"/>
</kw>
<status status="PASS" starttime="20231212 10:55:42.114" endtime="20231212 10:55:42.116"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:42.120" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:42.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:42.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:42.118" endtime="20231212 10:55:42.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:42.143" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:42.142" endtime="20231212 10:55:42.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:42.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:42.143" endtime="20231212 10:55:42.144"/>
</kw>
<status status="PASS" starttime="20231212 10:55:42.118" endtime="20231212 10:55:42.144"/>
</kw>
<msg timestamp="20231212 10:55:42.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:42.117" endtime="20231212 10:55:42.144"/>
</kw>
<status status="PASS" starttime="20231212 10:55:42.117" endtime="20231212 10:55:42.144"/>
</kw>
<status status="PASS" starttime="20231212 10:55:42.117" endtime="20231212 10:55:42.144"/>
</kw>
<status status="PASS" starttime="20231212 10:55:42.116" endtime="20231212 10:55:42.144"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:42.148" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-0605896892/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:42.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:42.782" level="INFO">${output} = {
    "ETag": "\"dc7e553a225404e59c8dc6e85c6e6915\""
}</msg>
<status status="PASS" starttime="20231212 10:55:42.146" endtime="20231212 10:55:42.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:42.783" level="INFO">{
    "ETag": "\"dc7e553a225404e59c8dc6e85c6e6915\""
}</msg>
<status status="PASS" starttime="20231212 10:55:42.782" endtime="20231212 10:55:42.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:42.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:42.783" endtime="20231212 10:55:42.784"/>
</kw>
<status status="PASS" starttime="20231212 10:55:42.146" endtime="20231212 10:55:42.784"/>
</kw>
<msg timestamp="20231212 10:55:42.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:42.145" endtime="20231212 10:55:42.784"/>
</kw>
<msg timestamp="20231212 10:55:42.784" level="INFO">${output} = {
    "ETag": "\"dc7e553a225404e59c8dc6e85c6e6915\""
}</msg>
<status status="PASS" starttime="20231212 10:55:42.145" endtime="20231212 10:55:42.784"/>
</kw>
<msg timestamp="20231212 10:55:42.784" level="INFO">${result} = {
    "ETag": "\"dc7e553a225404e59c8dc6e85c6e6915\""
}</msg>
<status status="PASS" starttime="20231212 10:55:42.144" endtime="20231212 10:55:42.784"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:42.788" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-0605896892/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:43.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:43.290" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0605896892/copytest/destination",
    "UploadId": "0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837"
}</msg>
<status status="PASS" starttime="20231212 10:55:42.786" endtime="20231212 10:55:43.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:43.291" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-0605896892/copytest/destination",
    "UploadId": "0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837"
}</msg>
<status status="PASS" starttime="20231212 10:55:43.290" endtime="20231212 10:55:43.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:43.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:43.291" endtime="20231212 10:55:43.292"/>
</kw>
<status status="PASS" starttime="20231212 10:55:42.786" endtime="20231212 10:55:43.292"/>
</kw>
<msg timestamp="20231212 10:55:43.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:42.785" endtime="20231212 10:55:43.292"/>
</kw>
<msg timestamp="20231212 10:55:43.292" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0605896892/copytest/destination",
    "UploadId": "0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837"
}</msg>
<status status="PASS" starttime="20231212 10:55:42.785" endtime="20231212 10:55:43.292"/>
</kw>
<msg timestamp="20231212 10:55:43.293" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-0605896892/copytest/destination",
    "UploadId": "0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837"
}</msg>
<status status="PASS" starttime="20231212 10:55:42.784" endtime="20231212 10:55:43.293"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:43.295" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-0605896892/copytest/destination",
    "UploadId": "0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:43.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:43.324" level="INFO">${output} = 0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837</msg>
<status status="PASS" starttime="20231212 10:55:43.293" endtime="20231212 10:55:43.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:43.325" level="INFO">0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837</msg>
<status status="PASS" starttime="20231212 10:55:43.325" endtime="20231212 10:55:43.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:43.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:43.326" endtime="20231212 10:55:43.326"/>
</kw>
<msg timestamp="20231212 10:55:43.326" level="INFO">${uploadID} = 0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837</msg>
<status status="PASS" starttime="20231212 10:55:43.293" endtime="20231212 10:55:43.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:43.327" endtime="20231212 10:55:43.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:43.327" endtime="20231212 10:55:43.327"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:43.331" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-0605896892/copytest/destination --upload-id 0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837 --part-number 1 --copy-source link/ozone-test-0605896892/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:44.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:44.002" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-0605896892/copytest/destination-0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837-1",
        "LastModified": "2023-12...</msg>
<status status="PASS" starttime="20231212 10:55:43.330" endtime="20231212 10:55:44.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:44.003" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-0605896892/copytest/destination-0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837-1",
        "LastModified": "2023-12-12T10:55:43.951Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:44.003" endtime="20231212 10:55:44.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:44.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:44.003" endtime="20231212 10:55:44.004"/>
</kw>
<status status="PASS" starttime="20231212 10:55:43.329" endtime="20231212 10:55:44.004"/>
</kw>
<msg timestamp="20231212 10:55:44.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:43.329" endtime="20231212 10:55:44.004"/>
</kw>
<msg timestamp="20231212 10:55:44.004" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-0605896892/copytest/destination-0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837-1",
        "LastModified": "2023-12...</msg>
<status status="PASS" starttime="20231212 10:55:43.328" endtime="20231212 10:55:44.004"/>
</kw>
<msg timestamp="20231212 10:55:44.004" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-0605896892/copytest/destination-0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837-1",
        "LastModified": "2023-12...</msg>
<status status="PASS" starttime="20231212 10:55:43.328" endtime="20231212 10:55:44.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:44.005" endtime="20231212 10:55:44.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:44.005" endtime="20231212 10:55:44.005"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:44.008" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-0605896892/copytest/destination-0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837-1",
        "LastModified": "2023-12-12T10:55:43.951Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:44.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:44.036" level="INFO">${output} = /legacy/source-bucket/ozone-test-0605896892/copytest/destination-0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837-1</msg>
<status status="PASS" starttime="20231212 10:55:44.006" endtime="20231212 10:55:44.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:44.037" level="INFO">/legacy/source-bucket/ozone-test-0605896892/copytest/destination-0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837-1</msg>
<status status="PASS" starttime="20231212 10:55:44.036" endtime="20231212 10:55:44.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:44.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:44.037" endtime="20231212 10:55:44.038"/>
</kw>
<msg timestamp="20231212 10:55:44.038" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-0605896892/copytest/destination-0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837-1</msg>
<status status="PASS" starttime="20231212 10:55:44.006" endtime="20231212 10:55:44.038"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:44.042" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837 --bucket link --key ozone-test-0605896892/copytest/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-0605896892/copytest/destination-0d59d663-146c-4e8c-a1ac-ae0a615f9b2f-111567080209645837-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:44.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:44.521" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-0605896892/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231212 10:55:44.040" endtime="20231212 10:55:44.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:44.522" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-0605896892/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231212 10:55:44.521" endtime="20231212 10:55:44.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:44.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:44.522" endtime="20231212 10:55:44.523"/>
</kw>
<status status="PASS" starttime="20231212 10:55:44.039" endtime="20231212 10:55:44.523"/>
</kw>
<msg timestamp="20231212 10:55:44.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:44.039" endtime="20231212 10:55:44.523"/>
</kw>
<msg timestamp="20231212 10:55:44.523" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-0605896892/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231212 10:55:44.039" endtime="20231212 10:55:44.523"/>
</kw>
<status status="PASS" starttime="20231212 10:55:44.038" endtime="20231212 10:55:44.523"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:44.527" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-0605896892/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:45.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:45.088" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:44 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:44.525" endtime="20231212 10:55:45.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:45.089" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:44 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:44 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:45.089" endtime="20231212 10:55:45.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:45.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:45.089" endtime="20231212 10:55:45.090"/>
</kw>
<status status="PASS" starttime="20231212 10:55:44.525" endtime="20231212 10:55:45.090"/>
</kw>
<msg timestamp="20231212 10:55:45.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:44.525" endtime="20231212 10:55:45.090"/>
</kw>
<msg timestamp="20231212 10:55:45.091" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:44 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231212 10:55:44.524" endtime="20231212 10:55:45.091"/>
</kw>
<status status="PASS" starttime="20231212 10:55:44.524" endtime="20231212 10:55:45.091"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:45.095" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:45.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:45.106" level="INFO">${output} = dc7e553a225404e59c8dc6e85c6e6915</msg>
<status status="PASS" starttime="20231212 10:55:45.093" endtime="20231212 10:55:45.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:45.108" level="INFO">dc7e553a225404e59c8dc6e85c6e6915</msg>
<status status="PASS" starttime="20231212 10:55:45.107" endtime="20231212 10:55:45.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:45.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:45.108" endtime="20231212 10:55:45.108"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.092" endtime="20231212 10:55:45.109"/>
</kw>
<msg timestamp="20231212 10:55:45.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:45.092" endtime="20231212 10:55:45.109"/>
</kw>
<msg timestamp="20231212 10:55:45.109" level="INFO">${checksumbefore} = dc7e553a225404e59c8dc6e85c6e6915</msg>
<status status="PASS" starttime="20231212 10:55:45.091" endtime="20231212 10:55:45.109"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:45.113" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:45.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:45.124" level="INFO">${output} = dc7e553a225404e59c8dc6e85c6e6915</msg>
<status status="PASS" starttime="20231212 10:55:45.111" endtime="20231212 10:55:45.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:45.125" level="INFO">dc7e553a225404e59c8dc6e85c6e6915</msg>
<status status="PASS" starttime="20231212 10:55:45.125" endtime="20231212 10:55:45.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:45.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:45.126" endtime="20231212 10:55:45.126"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.110" endtime="20231212 10:55:45.126"/>
</kw>
<msg timestamp="20231212 10:55:45.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:45.110" endtime="20231212 10:55:45.126"/>
</kw>
<msg timestamp="20231212 10:55:45.127" level="INFO">${checksumafter} = dc7e553a225404e59c8dc6e85c6e6915</msg>
<status status="PASS" starttime="20231212 10:55:45.109" endtime="20231212 10:55:45.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:45.127" endtime="20231212 10:55:45.127"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.091" endtime="20231212 10:55:45.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:42.114" endtime="20231212 10:55:45.128"/>
</test>
<test id="s1-s6-s6-t12" name="Test Multipart Upload Put With Copy and range" line="287">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:45.130" level="INFO">${randStr} = 7281474341</msg>
<status status="PASS" starttime="20231212 10:55:45.130" endtime="20231212 10:55:45.130"/>
</kw>
<msg timestamp="20231212 10:55:45.130" level="INFO">${random} = ozone-test-7281474341</msg>
<status status="PASS" starttime="20231212 10:55:45.129" endtime="20231212 10:55:45.130"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:45.131" level="INFO">${PREFIX} = ozone-test-7281474341</msg>
<status status="PASS" starttime="20231212 10:55:45.131" endtime="20231212 10:55:45.131"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.129" endtime="20231212 10:55:45.131"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:45.135" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:45.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:45.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:45.133" endtime="20231212 10:55:45.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:45.173" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:45.172" endtime="20231212 10:55:45.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:45.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:45.173" endtime="20231212 10:55:45.173"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.133" endtime="20231212 10:55:45.173"/>
</kw>
<msg timestamp="20231212 10:55:45.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:45.132" endtime="20231212 10:55:45.174"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.132" endtime="20231212 10:55:45.174"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.132" endtime="20231212 10:55:45.174"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.131" endtime="20231212 10:55:45.174"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:45.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-7281474341/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:45.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:45.858" level="INFO">${output} = {
    "ETag": "\"2a45cea4779ea033c92eb28f779bc0d0\""
}</msg>
<status status="PASS" starttime="20231212 10:55:45.176" endtime="20231212 10:55:45.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:45.859" level="INFO">{
    "ETag": "\"2a45cea4779ea033c92eb28f779bc0d0\""
}</msg>
<status status="PASS" starttime="20231212 10:55:45.859" endtime="20231212 10:55:45.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:45.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:45.859" endtime="20231212 10:55:45.860"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.175" endtime="20231212 10:55:45.860"/>
</kw>
<msg timestamp="20231212 10:55:45.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:45.175" endtime="20231212 10:55:45.860"/>
</kw>
<msg timestamp="20231212 10:55:45.860" level="INFO">${output} = {
    "ETag": "\"2a45cea4779ea033c92eb28f779bc0d0\""
}</msg>
<status status="PASS" starttime="20231212 10:55:45.175" endtime="20231212 10:55:45.860"/>
</kw>
<msg timestamp="20231212 10:55:45.861" level="INFO">${result} = {
    "ETag": "\"2a45cea4779ea033c92eb28f779bc0d0\""
}</msg>
<status status="PASS" starttime="20231212 10:55:45.174" endtime="20231212 10:55:45.861"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:45.864" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-7281474341/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:46.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:46.344" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-7281474341/copyrange/destination",
    "UploadId": "5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392"
}</msg>
<status status="PASS" starttime="20231212 10:55:45.862" endtime="20231212 10:55:46.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:46.345" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-7281474341/copyrange/destination",
    "UploadId": "5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392"
}</msg>
<status status="PASS" starttime="20231212 10:55:46.345" endtime="20231212 10:55:46.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:46.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:46.345" endtime="20231212 10:55:46.346"/>
</kw>
<status status="PASS" starttime="20231212 10:55:45.862" endtime="20231212 10:55:46.346"/>
</kw>
<msg timestamp="20231212 10:55:46.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:45.862" endtime="20231212 10:55:46.346"/>
</kw>
<msg timestamp="20231212 10:55:46.346" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-7281474341/copyrange/destination",
    "UploadId": "5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392"
}</msg>
<status status="PASS" starttime="20231212 10:55:45.861" endtime="20231212 10:55:46.346"/>
</kw>
<msg timestamp="20231212 10:55:46.347" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-7281474341/copyrange/destination",
    "UploadId": "5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392"
}</msg>
<status status="PASS" starttime="20231212 10:55:45.861" endtime="20231212 10:55:46.347"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:46.349" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-7281474341/copyrange/destination",
    "UploadId": "5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:46.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:46.376" level="INFO">${output} = 5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392</msg>
<status status="PASS" starttime="20231212 10:55:46.347" endtime="20231212 10:55:46.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:46.377" level="INFO">5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392</msg>
<status status="PASS" starttime="20231212 10:55:46.376" endtime="20231212 10:55:46.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:46.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:46.377" endtime="20231212 10:55:46.378"/>
</kw>
<msg timestamp="20231212 10:55:46.378" level="INFO">${uploadID} = 5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392</msg>
<status status="PASS" starttime="20231212 10:55:46.347" endtime="20231212 10:55:46.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:46.378" endtime="20231212 10:55:46.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:46.378" endtime="20231212 10:55:46.379"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:46.383" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-7281474341/copyrange/destination --upload-id 5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392 --part-number 1 --copy-source link/ozone-test-7281474341/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:47.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:47.095" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-1",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:46.381" endtime="20231212 10:55:47.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:47.097" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-1",
        "LastModified": "2023-12-12T10:55:47.049Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:47.096" endtime="20231212 10:55:47.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:47.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:47.097" endtime="20231212 10:55:47.097"/>
</kw>
<status status="PASS" starttime="20231212 10:55:46.381" endtime="20231212 10:55:47.097"/>
</kw>
<msg timestamp="20231212 10:55:47.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:46.380" endtime="20231212 10:55:47.098"/>
</kw>
<msg timestamp="20231212 10:55:47.098" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-1",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:46.380" endtime="20231212 10:55:47.098"/>
</kw>
<msg timestamp="20231212 10:55:47.098" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-1",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:46.379" endtime="20231212 10:55:47.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:47.098" endtime="20231212 10:55:47.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:47.099" endtime="20231212 10:55:47.099"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:47.101" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-1",
        "LastModified": "2023-12-12T10:55:47.049Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:47.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:47.128" level="INFO">${output} = /legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-1</msg>
<status status="PASS" starttime="20231212 10:55:47.100" endtime="20231212 10:55:47.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:47.129" level="INFO">/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-1</msg>
<status status="PASS" starttime="20231212 10:55:47.128" endtime="20231212 10:55:47.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:47.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:47.129" endtime="20231212 10:55:47.130"/>
</kw>
<msg timestamp="20231212 10:55:47.130" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-1</msg>
<status status="PASS" starttime="20231212 10:55:47.099" endtime="20231212 10:55:47.130"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:47.135" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-7281474341/copyrange/destination --upload-id 5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392 --part-number 2 --copy-source link/ozone-test-7281474341/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:47.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:47.645" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-2",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:47.133" endtime="20231212 10:55:47.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:47.646" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-2",
        "LastModified": "2023-12-12T10:55:47.598Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:47.645" endtime="20231212 10:55:47.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:47.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:47.646" endtime="20231212 10:55:47.647"/>
</kw>
<status status="PASS" starttime="20231212 10:55:47.133" endtime="20231212 10:55:47.647"/>
</kw>
<msg timestamp="20231212 10:55:47.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:47.131" endtime="20231212 10:55:47.647"/>
</kw>
<msg timestamp="20231212 10:55:47.647" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-2",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:47.131" endtime="20231212 10:55:47.647"/>
</kw>
<msg timestamp="20231212 10:55:47.647" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-2",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:47.130" endtime="20231212 10:55:47.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:47.648" endtime="20231212 10:55:47.648"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:47.648" endtime="20231212 10:55:47.648"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:47.651" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-2",
        "LastModified": "2023-12-12T10:55:47.598Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:47.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:47.679" level="INFO">${output} = /legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-2</msg>
<status status="PASS" starttime="20231212 10:55:47.649" endtime="20231212 10:55:47.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:47.680" level="INFO">/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-2</msg>
<status status="PASS" starttime="20231212 10:55:47.679" endtime="20231212 10:55:47.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:47.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:47.680" endtime="20231212 10:55:47.680"/>
</kw>
<msg timestamp="20231212 10:55:47.681" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-2</msg>
<status status="PASS" starttime="20231212 10:55:47.649" endtime="20231212 10:55:47.681"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:47.685" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392 --bucket link --key ozone-test-7281474341/copyrange/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-7281474341/copyrange/destination-5960f530-3142-4848-b84a-844c97cbf26e-111567080409989392-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:48.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:48.170" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-7281474341/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:47.683" endtime="20231212 10:55:48.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:48.171" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-7281474341/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:48.171" endtime="20231212 10:55:48.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:48.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:48.172" endtime="20231212 10:55:48.172"/>
</kw>
<status status="PASS" starttime="20231212 10:55:47.682" endtime="20231212 10:55:48.172"/>
</kw>
<msg timestamp="20231212 10:55:48.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:47.682" endtime="20231212 10:55:48.172"/>
</kw>
<msg timestamp="20231212 10:55:48.173" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-7281474341/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:47.682" endtime="20231212 10:55:48.173"/>
</kw>
<status status="PASS" starttime="20231212 10:55:47.681" endtime="20231212 10:55:48.173"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:48.176" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-7281474341/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:48.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:48.743" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:48 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231212 10:55:48.175" endtime="20231212 10:55:48.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:48.744" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:48 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:48 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:48.743" endtime="20231212 10:55:48.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:48.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:48.744" endtime="20231212 10:55:48.744"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.174" endtime="20231212 10:55:48.745"/>
</kw>
<msg timestamp="20231212 10:55:48.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:48.174" endtime="20231212 10:55:48.745"/>
</kw>
<msg timestamp="20231212 10:55:48.745" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:48 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231212 10:55:48.173" endtime="20231212 10:55:48.745"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.173" endtime="20231212 10:55:48.745"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:48.749" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:48.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:48.769" level="INFO">${output} = 2a45cea4779ea033c92eb28f779bc0d0</msg>
<status status="PASS" starttime="20231212 10:55:48.747" endtime="20231212 10:55:48.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:48.770" level="INFO">2a45cea4779ea033c92eb28f779bc0d0</msg>
<status status="PASS" starttime="20231212 10:55:48.770" endtime="20231212 10:55:48.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:48.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:48.770" endtime="20231212 10:55:48.771"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.746" endtime="20231212 10:55:48.771"/>
</kw>
<msg timestamp="20231212 10:55:48.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:48.746" endtime="20231212 10:55:48.771"/>
</kw>
<msg timestamp="20231212 10:55:48.771" level="INFO">${checksumbefore} = 2a45cea4779ea033c92eb28f779bc0d0</msg>
<status status="PASS" starttime="20231212 10:55:48.746" endtime="20231212 10:55:48.771"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:48.774" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:48.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:48.794" level="INFO">${output} = 2a45cea4779ea033c92eb28f779bc0d0</msg>
<status status="PASS" starttime="20231212 10:55:48.773" endtime="20231212 10:55:48.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:48.795" level="INFO">2a45cea4779ea033c92eb28f779bc0d0</msg>
<status status="PASS" starttime="20231212 10:55:48.795" endtime="20231212 10:55:48.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:48.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:48.795" endtime="20231212 10:55:48.796"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.772" endtime="20231212 10:55:48.796"/>
</kw>
<msg timestamp="20231212 10:55:48.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:48.772" endtime="20231212 10:55:48.796"/>
</kw>
<msg timestamp="20231212 10:55:48.796" level="INFO">${checksumafter} = 2a45cea4779ea033c92eb28f779bc0d0</msg>
<status status="PASS" starttime="20231212 10:55:48.772" endtime="20231212 10:55:48.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:48.797" endtime="20231212 10:55:48.797"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.745" endtime="20231212 10:55:48.797"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:45.128" endtime="20231212 10:55:48.797"/>
</test>
<test id="s1-s6-s6-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="314">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:48.799" level="INFO">${randStr} = 3945403631</msg>
<status status="PASS" starttime="20231212 10:55:48.799" endtime="20231212 10:55:48.800"/>
</kw>
<msg timestamp="20231212 10:55:48.800" level="INFO">${random} = ozone-test-3945403631</msg>
<status status="PASS" starttime="20231212 10:55:48.799" endtime="20231212 10:55:48.800"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:48.800" level="INFO">${PREFIX} = ozone-test-3945403631</msg>
<status status="PASS" starttime="20231212 10:55:48.800" endtime="20231212 10:55:48.800"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.798" endtime="20231212 10:55:48.800"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:48.804" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:48.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:48.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:48.802" endtime="20231212 10:55:48.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:48.841" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:48.841" endtime="20231212 10:55:48.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:48.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:48.841" endtime="20231212 10:55:48.842"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.802" endtime="20231212 10:55:48.842"/>
</kw>
<msg timestamp="20231212 10:55:48.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:48.802" endtime="20231212 10:55:48.842"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.801" endtime="20231212 10:55:48.842"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.801" endtime="20231212 10:55:48.842"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.801" endtime="20231212 10:55:48.842"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231212 10:55:48.843" level="INFO">${curDate} = 2023-12-12 10:55:48.843</msg>
<status status="PASS" starttime="20231212 10:55:48.843" endtime="20231212 10:55:48.843"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20231212 10:55:48.846" level="INFO">${beforeCreate} = 2023-12-11 10:55:48.843</msg>
<status status="PASS" starttime="20231212 10:55:48.843" endtime="20231212 10:55:48.847"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20231212 10:55:48.847" level="INFO">${tomorrow} = 2023-12-13 10:55:48.843</msg>
<status status="PASS" starttime="20231212 10:55:48.847" endtime="20231212 10:55:48.847"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:48.851" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-3945403631/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:49.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:49.521" level="INFO">${output} = {
    "ETag": "\"a04d3ae513f5edcb060d9da1d4ce9ca1\""
}</msg>
<status status="PASS" starttime="20231212 10:55:48.849" endtime="20231212 10:55:49.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:49.522" level="INFO">{
    "ETag": "\"a04d3ae513f5edcb060d9da1d4ce9ca1\""
}</msg>
<status status="PASS" starttime="20231212 10:55:49.522" endtime="20231212 10:55:49.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:49.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:49.523" endtime="20231212 10:55:49.523"/>
</kw>
<status status="PASS" starttime="20231212 10:55:48.848" endtime="20231212 10:55:49.523"/>
</kw>
<msg timestamp="20231212 10:55:49.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:48.848" endtime="20231212 10:55:49.523"/>
</kw>
<msg timestamp="20231212 10:55:49.524" level="INFO">${output} = {
    "ETag": "\"a04d3ae513f5edcb060d9da1d4ce9ca1\""
}</msg>
<status status="PASS" starttime="20231212 10:55:48.848" endtime="20231212 10:55:49.524"/>
</kw>
<msg timestamp="20231212 10:55:49.524" level="INFO">${result} = {
    "ETag": "\"a04d3ae513f5edcb060d9da1d4ce9ca1\""
}</msg>
<status status="PASS" starttime="20231212 10:55:48.847" endtime="20231212 10:55:49.524"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:49.529" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-3945403631/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:50.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:50.020" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3945403631/copyrange/destination",
    "UploadId": "aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660"
}</msg>
<status status="PASS" starttime="20231212 10:55:49.526" endtime="20231212 10:55:50.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:50.021" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-3945403631/copyrange/destination",
    "UploadId": "aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660"
}</msg>
<status status="PASS" starttime="20231212 10:55:50.021" endtime="20231212 10:55:50.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:50.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:50.022" endtime="20231212 10:55:50.022"/>
</kw>
<status status="PASS" starttime="20231212 10:55:49.526" endtime="20231212 10:55:50.022"/>
</kw>
<msg timestamp="20231212 10:55:50.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:49.526" endtime="20231212 10:55:50.022"/>
</kw>
<msg timestamp="20231212 10:55:50.023" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3945403631/copyrange/destination",
    "UploadId": "aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660"
}</msg>
<status status="PASS" starttime="20231212 10:55:49.525" endtime="20231212 10:55:50.023"/>
</kw>
<msg timestamp="20231212 10:55:50.023" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-3945403631/copyrange/destination",
    "UploadId": "aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660"
}</msg>
<status status="PASS" starttime="20231212 10:55:49.524" endtime="20231212 10:55:50.023"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:50.026" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-3945403631/copyrange/destination",
    "UploadId": "aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:50.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:50.053" level="INFO">${output} = aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660</msg>
<status status="PASS" starttime="20231212 10:55:50.024" endtime="20231212 10:55:50.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:50.054" level="INFO">aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660</msg>
<status status="PASS" starttime="20231212 10:55:50.054" endtime="20231212 10:55:50.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:50.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:50.054" endtime="20231212 10:55:50.055"/>
</kw>
<msg timestamp="20231212 10:55:50.055" level="INFO">${uploadID} = aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660</msg>
<status status="PASS" starttime="20231212 10:55:50.023" endtime="20231212 10:55:50.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:50.055" endtime="20231212 10:55:50.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:50.056" endtime="20231212 10:55:50.056"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:50.061" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-3945403631/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:50.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:50.542" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:55:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"a04d3ae513f5edcb060d9da1d4ce9ca1\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231212 10:55:50.058" endtime="20231212 10:55:50.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:50.543" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:55:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"a04d3ae513f5edcb060d9da1d4ce9ca1\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:50 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:50.543" endtime="20231212 10:55:50.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:50.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:50.543" endtime="20231212 10:55:50.544"/>
</kw>
<status status="PASS" starttime="20231212 10:55:50.058" endtime="20231212 10:55:50.544"/>
</kw>
<msg timestamp="20231212 10:55:50.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:50.058" endtime="20231212 10:55:50.544"/>
</kw>
<msg timestamp="20231212 10:55:50.544" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:55:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"a04d3ae513f5edcb060d9da1d4ce9ca1\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231212 10:55:50.057" endtime="20231212 10:55:50.544"/>
</kw>
<msg timestamp="20231212 10:55:50.544" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:55:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"a04d3ae513f5edcb060d9da1d4ce9ca1\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231212 10:55:50.056" endtime="20231212 10:55:50.544"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:50.547" level="INFO">Running command 'echo '{
    "LastModified": "Tue, 12 Dec 2023 10:55:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"a04d3ae513f5edcb060d9da1d4ce9ca1\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:50 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:50.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:50.575" level="INFO">${output} = Tue, 12 Dec 2023 10:55:49 GMT</msg>
<status status="PASS" starttime="20231212 10:55:50.545" endtime="20231212 10:55:50.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:50.576" level="INFO">Tue, 12 Dec 2023 10:55:49 GMT</msg>
<status status="PASS" starttime="20231212 10:55:50.575" endtime="20231212 10:55:50.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:50.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:50.576" endtime="20231212 10:55:50.577"/>
</kw>
<msg timestamp="20231212 10:55:50.577" level="INFO">${lastModified} = Tue, 12 Dec 2023 10:55:49 GMT</msg>
<status status="PASS" starttime="20231212 10:55:50.545" endtime="20231212 10:55:50.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:50.577" endtime="20231212 10:55:50.577"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20231212 10:55:50.580" level="INFO">${lmDate} = 2023-12-12 10:55:49.000</msg>
<status status="PASS" starttime="20231212 10:55:50.578" endtime="20231212 10:55:50.580"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20231212 10:55:50.581" level="INFO">${afterCreate} = 2023-12-12 10:55:52.000</msg>
<status status="PASS" starttime="20231212 10:55:50.580" endtime="20231212 10:55:50.581"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231212 10:55:50.582" level="INFO">${latestDate} = 2023-12-12 10:55:50.582</msg>
<status status="PASS" starttime="20231212 10:55:50.581" endtime="20231212 10:55:50.582"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20231212 10:55:50.582" level="INFO">${sleepSeconds} = 1.418</msg>
<status status="PASS" starttime="20231212 10:55:50.582" endtime="20231212 10:55:50.582"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231212 10:55:52.001" level="INFO">Slept 1 second 418 milliseconds</msg>
<status status="PASS" starttime="20231212 10:55:50.583" endtime="20231212 10:55:52.002"/>
</kw>
<status status="PASS" starttime="20231212 10:55:50.583" endtime="20231212 10:55:52.002"/>
</kw>
<status status="PASS" starttime="20231212 10:55:50.581" endtime="20231212 10:55:52.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:52.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-3945403631/copyrange/destination --upload-id aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660 --part-number 1 --copy-source link/ozone-test-3945403631/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-12-12 10:55:52.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:52.474" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:52.475" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:55:52.003" endtime="20231212 10:55:52.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:52.476" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:55:52.475" endtime="20231212 10:55:52.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:52.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:52.476" endtime="20231212 10:55:52.476"/>
</kw>
<msg timestamp="20231212 10:55:52.477" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:55:52.003" endtime="20231212 10:55:52.477"/>
</kw>
<msg timestamp="20231212 10:55:52.477" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:55:52.002" endtime="20231212 10:55:52.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:52.477" endtime="20231212 10:55:52.477"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:52.481" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-3945403631/copyrange/destination --upload-id aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660 --part-number 2 --copy-source link/ozone-test-3945403631/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-12-11 10:55:48.843' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:52.963" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:55:52.963" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:55:52.479" endtime="20231212 10:55:52.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:52.964" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:55:52.964" endtime="20231212 10:55:52.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:52.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:52.965" endtime="20231212 10:55:52.965"/>
</kw>
<msg timestamp="20231212 10:55:52.965" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:55:52.478" endtime="20231212 10:55:52.965"/>
</kw>
<msg timestamp="20231212 10:55:52.965" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231212 10:55:52.477" endtime="20231212 10:55:52.965"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:52.966" endtime="20231212 10:55:52.966"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:52.969" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-3945403631/copyrange/destination --upload-id aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660 --part-number 1 --copy-source link/ozone-test-3945403631/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-12-11 10:55:48.843' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:53.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:53.656" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:52.968" endtime="20231212 10:55:53.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:53.657" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-12-12T10:55:53.609Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:53.657" endtime="20231212 10:55:53.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:53.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:53.658" endtime="20231212 10:55:53.658"/>
</kw>
<msg timestamp="20231212 10:55:53.658" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:52.967" endtime="20231212 10:55:53.658"/>
</kw>
<msg timestamp="20231212 10:55:53.658" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:52.966" endtime="20231212 10:55:53.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:53.659" endtime="20231212 10:55:53.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:53.659" endtime="20231212 10:55:53.659"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:53.662" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-12-12T10:55:53.609Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:53.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:53.688" level="INFO">${output} = /legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1</msg>
<status status="PASS" starttime="20231212 10:55:53.660" endtime="20231212 10:55:53.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:53.689" level="INFO">/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1</msg>
<status status="PASS" starttime="20231212 10:55:53.689" endtime="20231212 10:55:53.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:53.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:53.689" endtime="20231212 10:55:53.690"/>
</kw>
<msg timestamp="20231212 10:55:53.690" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1</msg>
<status status="PASS" starttime="20231212 10:55:53.660" endtime="20231212 10:55:53.690"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:53.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-3945403631/copyrange/destination --upload-id aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660 --part-number 2 --copy-source link/ozone-test-3945403631/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-12-12 10:55:52.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:54.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:54.230" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-2",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:53.692" endtime="20231212 10:55:54.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:54.231" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-2",
        "LastModified": "2023-12-12T10:55:54.186Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:54.231" endtime="20231212 10:55:54.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:54.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:54.232" endtime="20231212 10:55:54.232"/>
</kw>
<msg timestamp="20231212 10:55:54.232" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-2",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:53.691" endtime="20231212 10:55:54.232"/>
</kw>
<msg timestamp="20231212 10:55:54.232" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-2",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:53.690" endtime="20231212 10:55:54.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:54.233" endtime="20231212 10:55:54.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:54.233" endtime="20231212 10:55:54.233"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:54.236" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-2",
        "LastModified": "2023-12-12T10:55:54.186Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:54.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:54.263" level="INFO">${output} = /legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-2</msg>
<status status="PASS" starttime="20231212 10:55:54.234" endtime="20231212 10:55:54.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:54.264" level="INFO">/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-2</msg>
<status status="PASS" starttime="20231212 10:55:54.264" endtime="20231212 10:55:54.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:54.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:54.265" endtime="20231212 10:55:54.265"/>
</kw>
<msg timestamp="20231212 10:55:54.265" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-2</msg>
<status status="PASS" starttime="20231212 10:55:54.234" endtime="20231212 10:55:54.265"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:54.269" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-3945403631/copyrange/destination --upload-id aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660 --part-number 1 --copy-source link/ozone-test-3945403631/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-12-13 10:55:48.843' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:54.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:54.976" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:54.267" endtime="20231212 10:55:54.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:54.977" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-12-12T10:55:54.927Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:54.977" endtime="20231212 10:55:54.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:54.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:54.977" endtime="20231212 10:55:54.978"/>
</kw>
<msg timestamp="20231212 10:55:54.978" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:54.266" endtime="20231212 10:55:54.978"/>
</kw>
<msg timestamp="20231212 10:55:54.978" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-1...</msg>
<status status="PASS" starttime="20231212 10:55:54.265" endtime="20231212 10:55:54.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:54.979" endtime="20231212 10:55:54.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:54.979" endtime="20231212 10:55:54.979"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:54.982" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1",
        "LastModified": "2023-12-12T10:55:54.927Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:55.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:55.009" level="INFO">${output} = /legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1</msg>
<status status="PASS" starttime="20231212 10:55:54.980" endtime="20231212 10:55:55.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:55.010" level="INFO">/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1</msg>
<status status="PASS" starttime="20231212 10:55:55.009" endtime="20231212 10:55:55.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:55.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:55.010" endtime="20231212 10:55:55.011"/>
</kw>
<msg timestamp="20231212 10:55:55.011" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1</msg>
<status status="PASS" starttime="20231212 10:55:54.979" endtime="20231212 10:55:55.011"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:55.015" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660 --bucket link --key ozone-test-3945403631/copyrange/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-3945403631/copyrange/destination-aa5bfcf6-0bfa-49bb-b569-d8fc049f3fe7-111567080650768660-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:55.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:55.488" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3945403631/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:55.013" endtime="20231212 10:55:55.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:55.489" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3945403631/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:55.489" endtime="20231212 10:55:55.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:55.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:55.489" endtime="20231212 10:55:55.490"/>
</kw>
<status status="PASS" starttime="20231212 10:55:55.013" endtime="20231212 10:55:55.490"/>
</kw>
<msg timestamp="20231212 10:55:55.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:55.012" endtime="20231212 10:55:55.490"/>
</kw>
<msg timestamp="20231212 10:55:55.490" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3945403631/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231212 10:55:55.012" endtime="20231212 10:55:55.490"/>
</kw>
<status status="PASS" starttime="20231212 10:55:55.011" endtime="20231212 10:55:55.491"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:55.494" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-3945403631/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:56.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:56.060" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:55 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231212 10:55:55.493" endtime="20231212 10:55:56.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:56.061" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:55 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:55:55 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:55:56.060" endtime="20231212 10:55:56.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:56.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:56.061" endtime="20231212 10:55:56.062"/>
</kw>
<status status="PASS" starttime="20231212 10:55:55.492" endtime="20231212 10:55:56.062"/>
</kw>
<msg timestamp="20231212 10:55:56.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:55.492" endtime="20231212 10:55:56.062"/>
</kw>
<msg timestamp="20231212 10:55:56.062" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:55:55 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231212 10:55:55.491" endtime="20231212 10:55:56.062"/>
</kw>
<status status="PASS" starttime="20231212 10:55:55.491" endtime="20231212 10:55:56.062"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:56.066" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:56.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:56.086" level="INFO">${output} = a04d3ae513f5edcb060d9da1d4ce9ca1</msg>
<status status="PASS" starttime="20231212 10:55:56.064" endtime="20231212 10:55:56.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:56.087" level="INFO">a04d3ae513f5edcb060d9da1d4ce9ca1</msg>
<status status="PASS" starttime="20231212 10:55:56.087" endtime="20231212 10:55:56.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:56.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:56.088" endtime="20231212 10:55:56.088"/>
</kw>
<status status="PASS" starttime="20231212 10:55:56.064" endtime="20231212 10:55:56.088"/>
</kw>
<msg timestamp="20231212 10:55:56.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:56.063" endtime="20231212 10:55:56.088"/>
</kw>
<msg timestamp="20231212 10:55:56.089" level="INFO">${checksumbefore} = a04d3ae513f5edcb060d9da1d4ce9ca1</msg>
<status status="PASS" starttime="20231212 10:55:56.063" endtime="20231212 10:55:56.089"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:56.092" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:56.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:56.112" level="INFO">${output} = a04d3ae513f5edcb060d9da1d4ce9ca1</msg>
<status status="PASS" starttime="20231212 10:55:56.090" endtime="20231212 10:55:56.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:56.113" level="INFO">a04d3ae513f5edcb060d9da1d4ce9ca1</msg>
<status status="PASS" starttime="20231212 10:55:56.113" endtime="20231212 10:55:56.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:56.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:56.114" endtime="20231212 10:55:56.114"/>
</kw>
<status status="PASS" starttime="20231212 10:55:56.090" endtime="20231212 10:55:56.114"/>
</kw>
<msg timestamp="20231212 10:55:56.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:56.089" endtime="20231212 10:55:56.114"/>
</kw>
<msg timestamp="20231212 10:55:56.115" level="INFO">${checksumafter} = a04d3ae513f5edcb060d9da1d4ce9ca1</msg>
<status status="PASS" starttime="20231212 10:55:56.089" endtime="20231212 10:55:56.115"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:56.115" endtime="20231212 10:55:56.115"/>
</kw>
<status status="PASS" starttime="20231212 10:55:56.062" endtime="20231212 10:55:56.115"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:48.798" endtime="20231212 10:55:56.115"/>
</test>
<test id="s1-s6-s6-t14" name="Test Multipart Upload list" line="367">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:56.118" level="INFO">${randStr} = 5543063998</msg>
<status status="PASS" starttime="20231212 10:55:56.118" endtime="20231212 10:55:56.118"/>
</kw>
<msg timestamp="20231212 10:55:56.119" level="INFO">${random} = ozone-test-5543063998</msg>
<status status="PASS" starttime="20231212 10:55:56.117" endtime="20231212 10:55:56.119"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231212 10:55:56.119" level="INFO">${PREFIX} = ozone-test-5543063998</msg>
<status status="PASS" starttime="20231212 10:55:56.119" endtime="20231212 10:55:56.119"/>
</kw>
<status status="PASS" starttime="20231212 10:55:56.117" endtime="20231212 10:55:56.119"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:56.123" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-5543063998/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:56.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:56.610" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key1",
    "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720"
}</msg>
<status status="PASS" starttime="20231212 10:55:56.121" endtime="20231212 10:55:56.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:56.611" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key1",
    "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720"
}</msg>
<status status="PASS" starttime="20231212 10:55:56.611" endtime="20231212 10:55:56.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:56.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:56.612" endtime="20231212 10:55:56.612"/>
</kw>
<status status="PASS" starttime="20231212 10:55:56.121" endtime="20231212 10:55:56.612"/>
</kw>
<msg timestamp="20231212 10:55:56.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:56.120" endtime="20231212 10:55:56.612"/>
</kw>
<msg timestamp="20231212 10:55:56.613" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key1",
    "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720"
}</msg>
<status status="PASS" starttime="20231212 10:55:56.120" endtime="20231212 10:55:56.613"/>
</kw>
<msg timestamp="20231212 10:55:56.613" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key1",
    "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720"
}</msg>
<status status="PASS" starttime="20231212 10:55:56.119" endtime="20231212 10:55:56.613"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:56.615" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key1",
    "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:56.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:56.642" level="INFO">${output} = c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720</msg>
<status status="PASS" starttime="20231212 10:55:56.613" endtime="20231212 10:55:56.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:56.643" level="INFO">c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720</msg>
<status status="PASS" starttime="20231212 10:55:56.642" endtime="20231212 10:55:56.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:56.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:56.643" endtime="20231212 10:55:56.644"/>
</kw>
<msg timestamp="20231212 10:55:56.644" level="INFO">${uploadID1} = c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720</msg>
<status status="PASS" starttime="20231212 10:55:56.613" endtime="20231212 10:55:56.644"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:56.644" endtime="20231212 10:55:56.644"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:56.645" endtime="20231212 10:55:56.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:56.645" endtime="20231212 10:55:56.645"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:56.649" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-5543063998/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:57.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:57.146" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key2",
    "UploadId": "9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737"
}</msg>
<status status="PASS" starttime="20231212 10:55:56.647" endtime="20231212 10:55:57.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:57.147" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key2",
    "UploadId": "9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737"
}</msg>
<status status="PASS" starttime="20231212 10:55:57.146" endtime="20231212 10:55:57.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:57.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:57.147" endtime="20231212 10:55:57.148"/>
</kw>
<status status="PASS" starttime="20231212 10:55:56.647" endtime="20231212 10:55:57.148"/>
</kw>
<msg timestamp="20231212 10:55:57.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:56.646" endtime="20231212 10:55:57.148"/>
</kw>
<msg timestamp="20231212 10:55:57.148" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key2",
    "UploadId": "9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737"
}</msg>
<status status="PASS" starttime="20231212 10:55:56.646" endtime="20231212 10:55:57.148"/>
</kw>
<msg timestamp="20231212 10:55:57.148" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key2",
    "UploadId": "9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737"
}</msg>
<status status="PASS" starttime="20231212 10:55:56.645" endtime="20231212 10:55:57.148"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:57.151" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-5543063998/listtest/key2",
    "UploadId": "9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:57.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:57.178" level="INFO">${output} = 9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737</msg>
<status status="PASS" starttime="20231212 10:55:57.149" endtime="20231212 10:55:57.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:57.179" level="INFO">9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737</msg>
<status status="PASS" starttime="20231212 10:55:57.178" endtime="20231212 10:55:57.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:57.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:57.179" endtime="20231212 10:55:57.179"/>
</kw>
<msg timestamp="20231212 10:55:57.180" level="INFO">${uploadID2} = 9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737</msg>
<status status="PASS" starttime="20231212 10:55:57.148" endtime="20231212 10:55:57.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:57.180" endtime="20231212 10:55:57.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:57.180" endtime="20231212 10:55:57.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:57.181" endtime="20231212 10:55:57.181"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:57.184" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket link --prefix ozone-test-5543063998/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:57.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:57.662" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720",
            "Key": "ozone-test-5543063998/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231212 10:55:57.183" endtime="20231212 10:55:57.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:57.663" level="INFO">{
    "Uploads": [
        {
            "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720",
            "Key": "ozone-test-5543063998/listtest/key1",
            "Initiated": "2023-12-12T10:55:56.540Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737",
            "Key": "ozone-test-5543063998/listtest/key2",
            "Initiated": "2023-12-12T10:55:57.096Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:55:57.663" endtime="20231212 10:55:57.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:57.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:57.664" endtime="20231212 10:55:57.664"/>
</kw>
<status status="PASS" starttime="20231212 10:55:57.182" endtime="20231212 10:55:57.664"/>
</kw>
<msg timestamp="20231212 10:55:57.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:57.182" endtime="20231212 10:55:57.664"/>
</kw>
<msg timestamp="20231212 10:55:57.665" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720",
            "Key": "ozone-test-5543063998/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231212 10:55:57.182" endtime="20231212 10:55:57.665"/>
</kw>
<msg timestamp="20231212 10:55:57.665" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720",
            "Key": "ozone-test-5543063998/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231212 10:55:57.181" endtime="20231212 10:55:57.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:57.665" endtime="20231212 10:55:57.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:57.665" endtime="20231212 10:55:57.666"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:57.669" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "c43edc06-7956-47bb-8a38-ed7020579130-111567081081405720",
            "Key": "ozone-test-5543063998/listtest/key1",
            "Initiated": "2023-12-12T10:55:56.540Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "9857cc7d-1baa-487f-ae0d-72e6f85cfe1a-111567081117843737",
            "Key": "ozone-test-5543063998/listtest/key2",
            "Initiated": "2023-12-12T10:55:57.096Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:57.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:57.697" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20231212 10:55:57.667" endtime="20231212 10:55:57.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:57.699" level="INFO">2</msg>
<status status="PASS" starttime="20231212 10:55:57.698" endtime="20231212 10:55:57.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:57.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:57.699" endtime="20231212 10:55:57.699"/>
</kw>
<msg timestamp="20231212 10:55:57.700" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20231212 10:55:57.666" endtime="20231212 10:55:57.700"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:55:57.700" endtime="20231212 10:55:57.700"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:56.116" endtime="20231212 10:55:57.701"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20231212 10:55:02.945" endtime="20231212 10:55:57.702"/>
</suite>
<suite id="s1-s6-s7" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:55:57.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:57.717" endtime="20231212 10:55:57.717"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:55:57.717" endtime="20231212 10:55:57.717"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:55:57.717" endtime="20231212 10:55:57.717"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:57.718" endtime="20231212 10:55:57.718"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:57.718" endtime="20231212 10:55:57.718"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:57.718" endtime="20231212 10:55:57.718"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:57.718" endtime="20231212 10:55:57.718"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:55:57.718" endtime="20231212 10:55:57.718"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:55:57.719" endtime="20231212 10:55:57.719"/>
</kw>
<status status="PASS" starttime="20231212 10:55:57.716" endtime="20231212 10:55:57.719"/>
</kw>
<test id="s1-s6-s7-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:55:57.721" level="INFO">${postfix} = 00122</msg>
<status status="PASS" starttime="20231212 10:55:57.720" endtime="20231212 10:55:57.721"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:55:57.721" level="INFO">${DESTBUCKET} = destbucket-00122</msg>
<status status="PASS" starttime="20231212 10:55:57.721" endtime="20231212 10:55:57.721"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:57.725" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-00122 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:58.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:58.219" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-00122"
}</msg>
<status status="PASS" starttime="20231212 10:55:57.723" endtime="20231212 10:55:58.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:58.220" level="INFO">{
    "Location": "http://s3g:9878/destbucket-00122"
}</msg>
<status status="PASS" starttime="20231212 10:55:58.220" endtime="20231212 10:55:58.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:58.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:58.220" endtime="20231212 10:55:58.221"/>
</kw>
<status status="PASS" starttime="20231212 10:55:57.723" endtime="20231212 10:55:58.221"/>
</kw>
<msg timestamp="20231212 10:55:58.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:57.723" endtime="20231212 10:55:58.221"/>
</kw>
<msg timestamp="20231212 10:55:58.221" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-00122"
}</msg>
<status status="PASS" starttime="20231212 10:55:57.722" endtime="20231212 10:55:58.222"/>
</kw>
<status status="PASS" starttime="20231212 10:55:57.722" endtime="20231212 10:55:58.222"/>
</kw>
<status status="PASS" starttime="20231212 10:55:57.720" endtime="20231212 10:55:58.222"/>
</kw>
<status status="PASS" starttime="20231212 10:55:57.720" endtime="20231212 10:55:58.222"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:58.226" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20231212 10:55:58.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:58.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:55:58.224" endtime="20231212 10:55:58.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:58.229" level="INFO"/>
<status status="PASS" starttime="20231212 10:55:58.228" endtime="20231212 10:55:58.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:58.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:58.229" endtime="20231212 10:55:58.230"/>
</kw>
<status status="PASS" starttime="20231212 10:55:58.223" endtime="20231212 10:55:58.230"/>
</kw>
<msg timestamp="20231212 10:55:58.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:58.223" endtime="20231212 10:55:58.230"/>
</kw>
<status status="PASS" starttime="20231212 10:55:58.222" endtime="20231212 10:55:58.230"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:58.234" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:58.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:58.759" level="INFO">${output} = {
    "ETag": "\"b0b82a23a41d7c8e613ff642be0ba84d\""
}</msg>
<status status="PASS" starttime="20231212 10:55:58.232" endtime="20231212 10:55:58.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:58.760" level="INFO">{
    "ETag": "\"b0b82a23a41d7c8e613ff642be0ba84d\""
}</msg>
<status status="PASS" starttime="20231212 10:55:58.759" endtime="20231212 10:55:58.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:58.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:58.760" endtime="20231212 10:55:58.760"/>
</kw>
<status status="PASS" starttime="20231212 10:55:58.232" endtime="20231212 10:55:58.760"/>
</kw>
<msg timestamp="20231212 10:55:58.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:58.231" endtime="20231212 10:55:58.761"/>
</kw>
<msg timestamp="20231212 10:55:58.761" level="INFO">${output} = {
    "ETag": "\"b0b82a23a41d7c8e613ff642be0ba84d\""
}</msg>
<status status="PASS" starttime="20231212 10:55:58.231" endtime="20231212 10:55:58.761"/>
</kw>
<msg timestamp="20231212 10:55:58.761" level="INFO">${result} = {
    "ETag": "\"b0b82a23a41d7c8e613ff642be0ba84d\""
}</msg>
<status status="PASS" starttime="20231212 10:55:58.230" endtime="20231212 10:55:58.761"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:58.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:59.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:59.239" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/",
            "LastModified": "2023-12-12T10:55:58.667Z",
            "ETag": "2023-12-12T10:55:58.667Z",
...</msg>
<status status="PASS" starttime="20231212 10:55:58.763" endtime="20231212 10:55:59.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:59.240" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/",
            "LastModified": "2023-12-12T10:55:58.667Z",
            "ETag": "2023-12-12T10:55:58.667Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:55:58.712Z",
            "ETag": "2023-12-12T10:55:58.712Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:55:59.240" endtime="20231212 10:55:59.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:59.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:59.240" endtime="20231212 10:55:59.241"/>
</kw>
<status status="PASS" starttime="20231212 10:55:58.762" endtime="20231212 10:55:59.241"/>
</kw>
<msg timestamp="20231212 10:55:59.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:58.762" endtime="20231212 10:55:59.241"/>
</kw>
<msg timestamp="20231212 10:55:59.241" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/",
            "LastModified": "2023-12-12T10:55:58.667Z",
            "ETag": "2023-12-12T10:55:58.667Z",
...</msg>
<status status="PASS" starttime="20231212 10:55:58.762" endtime="20231212 10:55:59.241"/>
</kw>
<msg timestamp="20231212 10:55:59.242" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/",
            "LastModified": "2023-12-12T10:55:58.667Z",
            "ETag": "2023-12-12T10:55:58.667Z",
...</msg>
<status status="PASS" starttime="20231212 10:55:58.761" endtime="20231212 10:55:59.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:55:59.242" endtime="20231212 10:55:59.242"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:59.246" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-00122 --key ozone-test-5543063998/copyobject/key=value/f1 --copy-source link/ozone-test-5543063998/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:55:59.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:55:59.819" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "7a74203e-f5a2-47c4-823e-a8e4ffacbb46",
        "LastModified": "2023-12-12T10:55:59.729Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:59.244" endtime="20231212 10:55:59.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:55:59.821" level="INFO">{
    "CopyObjectResult": {
        "ETag": "7a74203e-f5a2-47c4-823e-a8e4ffacbb46",
        "LastModified": "2023-12-12T10:55:59.729Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:59.820" endtime="20231212 10:55:59.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:55:59.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:55:59.821" endtime="20231212 10:55:59.821"/>
</kw>
<status status="PASS" starttime="20231212 10:55:59.244" endtime="20231212 10:55:59.822"/>
</kw>
<msg timestamp="20231212 10:55:59.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:59.244" endtime="20231212 10:55:59.822"/>
</kw>
<msg timestamp="20231212 10:55:59.822" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "7a74203e-f5a2-47c4-823e-a8e4ffacbb46",
        "LastModified": "2023-12-12T10:55:59.729Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:59.243" endtime="20231212 10:55:59.822"/>
</kw>
<msg timestamp="20231212 10:55:59.822" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "7a74203e-f5a2-47c4-823e-a8e4ffacbb46",
        "LastModified": "2023-12-12T10:55:59.729Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:55:59.242" endtime="20231212 10:55:59.822"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:55:59.826" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-00122 --prefix ozone-test-5543063998/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:00.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:00.295" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:55:59.729Z",
            "ETag": "2023-12-12T10:55:59.729Z"...</msg>
<status status="PASS" starttime="20231212 10:55:59.824" endtime="20231212 10:56:00.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:00.296" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:55:59.729Z",
            "ETag": "2023-12-12T10:55:59.729Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:56:00.295" endtime="20231212 10:56:00.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:00.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:00.296" endtime="20231212 10:56:00.296"/>
</kw>
<status status="PASS" starttime="20231212 10:55:59.824" endtime="20231212 10:56:00.296"/>
</kw>
<msg timestamp="20231212 10:56:00.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:55:59.823" endtime="20231212 10:56:00.297"/>
</kw>
<msg timestamp="20231212 10:56:00.297" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:55:59.729Z",
            "ETag": "2023-12-12T10:55:59.729Z"...</msg>
<status status="PASS" starttime="20231212 10:55:59.823" endtime="20231212 10:56:00.297"/>
</kw>
<msg timestamp="20231212 10:56:00.297" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:55:59.729Z",
            "ETag": "2023-12-12T10:55:59.729Z"...</msg>
<status status="PASS" starttime="20231212 10:55:59.822" endtime="20231212 10:56:00.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:00.297" endtime="20231212 10:56:00.297"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:00.301" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-00122 --key ozone-test-5543063998/copyobject/key=value/f1 --copy-source link/ozone-test-5543063998/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:00.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:00.837" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "fc873d37-c5d5-4f63-b9a3-892a1bfc66f3",
        "LastModified": "2023-12-12T10:56:00.776Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:00.300" endtime="20231212 10:56:00.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:00.837" level="INFO">{
    "CopyObjectResult": {
        "ETag": "fc873d37-c5d5-4f63-b9a3-892a1bfc66f3",
        "LastModified": "2023-12-12T10:56:00.776Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:00.837" endtime="20231212 10:56:00.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:00.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:00.838" endtime="20231212 10:56:00.838"/>
</kw>
<status status="PASS" starttime="20231212 10:56:00.299" endtime="20231212 10:56:00.839"/>
</kw>
<msg timestamp="20231212 10:56:00.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:00.299" endtime="20231212 10:56:00.839"/>
</kw>
<msg timestamp="20231212 10:56:00.839" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "fc873d37-c5d5-4f63-b9a3-892a1bfc66f3",
        "LastModified": "2023-12-12T10:56:00.776Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:00.298" endtime="20231212 10:56:00.839"/>
</kw>
<msg timestamp="20231212 10:56:00.839" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "fc873d37-c5d5-4f63-b9a3-892a1bfc66f3",
        "LastModified": "2023-12-12T10:56:00.776Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:00.298" endtime="20231212 10:56:00.839"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:00.843" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-00122 --prefix ozone-test-5543063998/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:01.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:01.313" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:56:00.776Z",
            "ETag": "2023-12-12T10:56:00.776Z"...</msg>
<status status="PASS" starttime="20231212 10:56:00.841" endtime="20231212 10:56:01.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:01.313" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:56:00.776Z",
            "ETag": "2023-12-12T10:56:00.776Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:56:01.313" endtime="20231212 10:56:01.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:01.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:01.314" endtime="20231212 10:56:01.314"/>
</kw>
<status status="PASS" starttime="20231212 10:56:00.841" endtime="20231212 10:56:01.314"/>
</kw>
<msg timestamp="20231212 10:56:01.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:00.841" endtime="20231212 10:56:01.314"/>
</kw>
<msg timestamp="20231212 10:56:01.315" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:56:00.776Z",
            "ETag": "2023-12-12T10:56:00.776Z"...</msg>
<status status="PASS" starttime="20231212 10:56:00.840" endtime="20231212 10:56:01.315"/>
</kw>
<msg timestamp="20231212 10:56:01.315" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/copyobject/key=value/f1",
            "LastModified": "2023-12-12T10:56:00.776Z",
            "ETag": "2023-12-12T10:56:00.776Z"...</msg>
<status status="PASS" starttime="20231212 10:56:00.839" endtime="20231212 10:56:01.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:01.315" endtime="20231212 10:56:01.315"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:55:57.719" endtime="20231212 10:56:01.315"/>
</test>
<test id="s1-s6-s7-t2" name="Copy Object Where Bucket is not available" line="52">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:01.320" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-5543063998/copyobject/key=value/f1 --copy-source link/ozone-test-5543063998/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:01.788" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:01.788" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:01.318" endtime="20231212 10:56:01.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:01.789" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:01.789" endtime="20231212 10:56:01.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:01.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:01.790" endtime="20231212 10:56:01.790"/>
</kw>
<msg timestamp="20231212 10:56:01.790" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:01.317" endtime="20231212 10:56:01.790"/>
</kw>
<msg timestamp="20231212 10:56:01.791" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:01.317" endtime="20231212 10:56:01.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:01.791" endtime="20231212 10:56:01.791"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:01.794" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-00122 --key ozone-test-5543063998/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-5543063998/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:02.274" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:02.274" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:01.792" endtime="20231212 10:56:02.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:02.275" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:02.275" endtime="20231212 10:56:02.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:02.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:02.276" endtime="20231212 10:56:02.276"/>
</kw>
<msg timestamp="20231212 10:56:02.276" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:01.792" endtime="20231212 10:56:02.276"/>
</kw>
<msg timestamp="20231212 10:56:02.276" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:01.791" endtime="20231212 10:56:02.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:02.277" endtime="20231212 10:56:02.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:01.316" endtime="20231212 10:56:02.277"/>
</test>
<test id="s1-s6-s7-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:02.282" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-00122 --key ozone-test-5543063998/copyobject/key=value/f1 --copy-source destbucket-00122/ozone-test-5543063998/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:02.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:02.760" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "058421fc-b0bc-4a29-a24c-2bf10a899056",
        "LastModified": "2023-12-12T10:56:02.717Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:02.280" endtime="20231212 10:56:02.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:02.761" level="INFO">{
    "CopyObjectResult": {
        "ETag": "058421fc-b0bc-4a29-a24c-2bf10a899056",
        "LastModified": "2023-12-12T10:56:02.717Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:02.760" endtime="20231212 10:56:02.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:02.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:02.761" endtime="20231212 10:56:02.762"/>
</kw>
<status status="PASS" starttime="20231212 10:56:02.280" endtime="20231212 10:56:02.762"/>
</kw>
<msg timestamp="20231212 10:56:02.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:02.280" endtime="20231212 10:56:02.762"/>
</kw>
<msg timestamp="20231212 10:56:02.762" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "058421fc-b0bc-4a29-a24c-2bf10a899056",
        "LastModified": "2023-12-12T10:56:02.717Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:02.279" endtime="20231212 10:56:02.762"/>
</kw>
<msg timestamp="20231212 10:56:02.762" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "058421fc-b0bc-4a29-a24c-2bf10a899056",
        "LastModified": "2023-12-12T10:56:02.717Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:02.278" endtime="20231212 10:56:02.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:02.762" endtime="20231212 10:56:02.763"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:02.278" endtime="20231212 10:56:02.763"/>
</test>
<test id="s1-s6-s7-t4" name="Copy Object Where Key not available" line="62">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:02.767" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-00122 --key ozone-test-5543063998/copyobject/key=value/f1 --copy-source link/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:03.243" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:03.243" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:02.765" endtime="20231212 10:56:03.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:03.244" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:03.244" endtime="20231212 10:56:03.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:03.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:03.244" endtime="20231212 10:56:03.245"/>
</kw>
<msg timestamp="20231212 10:56:03.245" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:02.765" endtime="20231212 10:56:03.245"/>
</kw>
<msg timestamp="20231212 10:56:03.245" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:02.764" endtime="20231212 10:56:03.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:03.245" endtime="20231212 10:56:03.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:02.763" endtime="20231212 10:56:03.246"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:55:57.705" endtime="20231212 10:56:03.247"/>
</suite>
<suite id="s1-s6-s8" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:56:03.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:03.259" endtime="20231212 10:56:03.259"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:03.259" endtime="20231212 10:56:03.259"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:03.259" endtime="20231212 10:56:03.259"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:03.259" endtime="20231212 10:56:03.259"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:03.260" endtime="20231212 10:56:03.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:03.260" endtime="20231212 10:56:03.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:03.260" endtime="20231212 10:56:03.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:03.260" endtime="20231212 10:56:03.260"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:56:03.260" endtime="20231212 10:56:03.260"/>
</kw>
<status status="PASS" starttime="20231212 10:56:03.258" endtime="20231212 10:56:03.260"/>
</kw>
<test id="s1-s6-s8-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:03.264" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:56:03.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:03.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:03.262" endtime="20231212 10:56:03.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:03.267" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:03.266" endtime="20231212 10:56:03.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:03.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:03.267" endtime="20231212 10:56:03.267"/>
</kw>
<status status="PASS" starttime="20231212 10:56:03.262" endtime="20231212 10:56:03.267"/>
</kw>
<msg timestamp="20231212 10:56:03.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:03.261" endtime="20231212 10:56:03.267"/>
</kw>
<status status="PASS" starttime="20231212 10:56:03.261" endtime="20231212 10:56:03.268"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:03.270" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:03.759" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:03.759" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:03.269" endtime="20231212 10:56:03.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:03.760" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:03.760" endtime="20231212 10:56:03.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:03.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:03.760" endtime="20231212 10:56:03.761"/>
</kw>
<msg timestamp="20231212 10:56:03.761" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:03.268" endtime="20231212 10:56:03.761"/>
</kw>
<msg timestamp="20231212 10:56:03.761" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:03.268" endtime="20231212 10:56:03.761"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:03.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:04.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:04.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:03.763" endtime="20231212 10:56:04.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:04.230" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:04.229" endtime="20231212 10:56:04.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:04.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:04.230" endtime="20231212 10:56:04.231"/>
</kw>
<status status="PASS" starttime="20231212 10:56:03.763" endtime="20231212 10:56:04.231"/>
</kw>
<msg timestamp="20231212 10:56:04.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:03.763" endtime="20231212 10:56:04.231"/>
</kw>
<msg timestamp="20231212 10:56:04.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:03.762" endtime="20231212 10:56:04.231"/>
</kw>
<msg timestamp="20231212 10:56:04.231" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:03.762" endtime="20231212 10:56:04.231"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:04.231" endtime="20231212 10:56:04.232"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:04.235" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:04.702" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:04.702" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:04.233" endtime="20231212 10:56:04.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:04.703" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:04.703" endtime="20231212 10:56:04.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:04.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:04.704" endtime="20231212 10:56:04.704"/>
</kw>
<msg timestamp="20231212 10:56:04.704" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:04.232" endtime="20231212 10:56:04.704"/>
</kw>
<msg timestamp="20231212 10:56:04.704" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:04.232" endtime="20231212 10:56:04.704"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:04.708" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:05.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:05.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:04.706" endtime="20231212 10:56:05.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:05.188" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:05.188" endtime="20231212 10:56:05.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:05.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:05.188" endtime="20231212 10:56:05.189"/>
</kw>
<status status="PASS" starttime="20231212 10:56:04.706" endtime="20231212 10:56:05.189"/>
</kw>
<msg timestamp="20231212 10:56:05.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:04.706" endtime="20231212 10:56:05.189"/>
</kw>
<msg timestamp="20231212 10:56:05.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:04.705" endtime="20231212 10:56:05.189"/>
</kw>
<msg timestamp="20231212 10:56:05.190" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:04.705" endtime="20231212 10:56:05.190"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:05.190" endtime="20231212 10:56:05.190"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:05.194" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:05.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:05.703" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:05.192" endtime="20231212 10:56:05.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:05.704" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:05.704" endtime="20231212 10:56:05.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:05.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:05.704" endtime="20231212 10:56:05.705"/>
</kw>
<status status="PASS" starttime="20231212 10:56:05.191" endtime="20231212 10:56:05.705"/>
</kw>
<msg timestamp="20231212 10:56:05.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:05.191" endtime="20231212 10:56:05.705"/>
</kw>
<msg timestamp="20231212 10:56:05.705" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:05.191" endtime="20231212 10:56:05.705"/>
</kw>
<msg timestamp="20231212 10:56:05.706" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:05.190" endtime="20231212 10:56:05.706"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:05.709" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:06.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:06.176" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:05 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:05.707" endtime="20231212 10:56:06.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:06.177" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:56:05 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:06 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:06.177" endtime="20231212 10:56:06.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:06.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:06.177" endtime="20231212 10:56:06.178"/>
</kw>
<msg timestamp="20231212 10:56:06.178" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:05 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:05.706" endtime="20231212 10:56:06.178"/>
</kw>
<status status="PASS" starttime="20231212 10:56:05.706" endtime="20231212 10:56:06.178"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:06.182" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:06.645" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:06.645" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:06.180" endtime="20231212 10:56:06.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:06.646" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:06.646" endtime="20231212 10:56:06.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:06.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:06.646" endtime="20231212 10:56:06.647"/>
</kw>
<msg timestamp="20231212 10:56:06.647" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:06.179" endtime="20231212 10:56:06.647"/>
</kw>
<status status="PASS" starttime="20231212 10:56:06.178" endtime="20231212 10:56:06.647"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:06.651" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:07.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:07.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:06.649" endtime="20231212 10:56:07.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:07.128" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:07.127" endtime="20231212 10:56:07.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:07.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:07.128" endtime="20231212 10:56:07.128"/>
</kw>
<status status="PASS" starttime="20231212 10:56:06.649" endtime="20231212 10:56:07.128"/>
</kw>
<msg timestamp="20231212 10:56:07.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:06.648" endtime="20231212 10:56:07.128"/>
</kw>
<msg timestamp="20231212 10:56:07.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:06.648" endtime="20231212 10:56:07.129"/>
</kw>
<msg timestamp="20231212 10:56:07.129" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:06.647" endtime="20231212 10:56:07.129"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:07.129" endtime="20231212 10:56:07.129"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:07.133" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket link --key ozone-test-5543063998/word.txt --copy-source link/ozone-test-5543063998/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:07.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:07.665" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "c3d626a6-7209-4d39-ac4b-3f1187c0637a",
        "LastModified": "2023-12-12T10:56:07.609Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:07.131" endtime="20231212 10:56:07.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:07.666" level="INFO">{
    "CopyObjectResult": {
        "ETag": "c3d626a6-7209-4d39-ac4b-3f1187c0637a",
        "LastModified": "2023-12-12T10:56:07.609Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:07.666" endtime="20231212 10:56:07.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:07.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:07.667" endtime="20231212 10:56:07.667"/>
</kw>
<status status="PASS" starttime="20231212 10:56:07.131" endtime="20231212 10:56:07.667"/>
</kw>
<msg timestamp="20231212 10:56:07.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:07.131" endtime="20231212 10:56:07.667"/>
</kw>
<msg timestamp="20231212 10:56:07.668" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "c3d626a6-7209-4d39-ac4b-3f1187c0637a",
        "LastModified": "2023-12-12T10:56:07.609Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:07.130" endtime="20231212 10:56:07.668"/>
</kw>
<msg timestamp="20231212 10:56:07.668" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "c3d626a6-7209-4d39-ac4b-3f1187c0637a",
        "LastModified": "2023-12-12T10:56:07.609Z"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:07.130" endtime="20231212 10:56:07.668"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:07.671" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:08.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:08.156" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:07.669" endtime="20231212 10:56:08.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:08.158" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:56:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:08 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:08.157" endtime="20231212 10:56:08.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:08.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:08.158" endtime="20231212 10:56:08.158"/>
</kw>
<msg timestamp="20231212 10:56:08.159" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:07.669" endtime="20231212 10:56:08.159"/>
</kw>
<status status="PASS" starttime="20231212 10:56:07.668" endtime="20231212 10:56:08.159"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:08.163" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-5543063998/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:08.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:08.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:08.161" endtime="20231212 10:56:08.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:08.641" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:08.640" endtime="20231212 10:56:08.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:08.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:08.641" endtime="20231212 10:56:08.641"/>
</kw>
<status status="PASS" starttime="20231212 10:56:08.160" endtime="20231212 10:56:08.641"/>
</kw>
<msg timestamp="20231212 10:56:08.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:08.160" endtime="20231212 10:56:08.641"/>
</kw>
<msg timestamp="20231212 10:56:08.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:08.160" endtime="20231212 10:56:08.642"/>
</kw>
<status status="PASS" starttime="20231212 10:56:08.159" endtime="20231212 10:56:08.642"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:08.645" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:09.124" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:09.124" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:08.643" endtime="20231212 10:56:09.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:09.126" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:09.125" endtime="20231212 10:56:09.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:09.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:09.126" endtime="20231212 10:56:09.126"/>
</kw>
<msg timestamp="20231212 10:56:09.126" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:08.643" endtime="20231212 10:56:09.127"/>
</kw>
<status status="PASS" starttime="20231212 10:56:08.642" endtime="20231212 10:56:09.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:03.261" endtime="20231212 10:56:09.127"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:56:03.248" endtime="20231212 10:56:09.128"/>
</suite>
<suite id="s1-s6-s9" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:56:09.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:09.139" endtime="20231212 10:56:09.139"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:09.139" endtime="20231212 10:56:09.139"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:09.139" endtime="20231212 10:56:09.139"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:09.140" endtime="20231212 10:56:09.140"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:09.140" endtime="20231212 10:56:09.140"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:09.140" endtime="20231212 10:56:09.140"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:09.140" endtime="20231212 10:56:09.140"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:09.140" endtime="20231212 10:56:09.140"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:56:09.141" endtime="20231212 10:56:09.141"/>
</kw>
<status status="PASS" starttime="20231212 10:56:09.138" endtime="20231212 10:56:09.141"/>
</kw>
<test id="s1-s6-s9-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:09.144" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:56:09.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:09.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:09.142" endtime="20231212 10:56:09.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:09.147" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:09.147" endtime="20231212 10:56:09.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:09.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:09.148" endtime="20231212 10:56:09.148"/>
</kw>
<status status="PASS" starttime="20231212 10:56:09.142" endtime="20231212 10:56:09.148"/>
</kw>
<msg timestamp="20231212 10:56:09.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:09.142" endtime="20231212 10:56:09.148"/>
</kw>
<status status="PASS" starttime="20231212 10:56:09.141" endtime="20231212 10:56:09.148"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:09.152" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:09.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:09.678" level="INFO">${output} = {
    "ETag": "\"32f55503c189f53d3b9738c18657516f\""
}</msg>
<status status="PASS" starttime="20231212 10:56:09.150" endtime="20231212 10:56:09.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:09.679" level="INFO">{
    "ETag": "\"32f55503c189f53d3b9738c18657516f\""
}</msg>
<status status="PASS" starttime="20231212 10:56:09.678" endtime="20231212 10:56:09.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:09.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:09.679" endtime="20231212 10:56:09.679"/>
</kw>
<status status="PASS" starttime="20231212 10:56:09.150" endtime="20231212 10:56:09.680"/>
</kw>
<msg timestamp="20231212 10:56:09.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:09.150" endtime="20231212 10:56:09.680"/>
</kw>
<msg timestamp="20231212 10:56:09.680" level="INFO">${output} = {
    "ETag": "\"32f55503c189f53d3b9738c18657516f\""
}</msg>
<status status="PASS" starttime="20231212 10:56:09.149" endtime="20231212 10:56:09.680"/>
</kw>
<msg timestamp="20231212 10:56:09.680" level="INFO">${result} = {
    "ETag": "\"32f55503c189f53d3b9738c18657516f\""
}</msg>
<status status="PASS" starttime="20231212 10:56:09.149" endtime="20231212 10:56:09.680"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:09.685" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:10.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:10.173" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:56:09.595Z",
            "ETag": "2023-12-12T10:56:09.595Z...</msg>
<status status="PASS" starttime="20231212 10:56:09.683" endtime="20231212 10:56:10.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:10.174" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5543063998/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:56:09.595Z",
            "ETag": "2023-12-12T10:56:09.595Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-5543063998/deletetestapi/key=value/f1",
            "LastModified": "2023-12-12T10:56:09.623Z",
            "ETag": "2023-12-12T10:56:09.623Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:56:10.173" endtime="20231212 10:56:10.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:10.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:10.174" endtime="20231212 10:56:10.174"/>
</kw>
<status status="PASS" starttime="20231212 10:56:09.682" endtime="20231212 10:56:10.175"/>
</kw>
<msg timestamp="20231212 10:56:10.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:09.682" endtime="20231212 10:56:10.175"/>
</kw>
<msg timestamp="20231212 10:56:10.175" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:56:09.595Z",
            "ETag": "2023-12-12T10:56:09.595Z...</msg>
<status status="PASS" starttime="20231212 10:56:09.681" endtime="20231212 10:56:10.175"/>
</kw>
<msg timestamp="20231212 10:56:10.175" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:56:09.595Z",
            "ETag": "2023-12-12T10:56:09.595Z...</msg>
<status status="PASS" starttime="20231212 10:56:09.680" endtime="20231212 10:56:10.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:10.176" endtime="20231212 10:56:10.176"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:10.180" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-5543063998/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:10.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:10.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:10.178" endtime="20231212 10:56:10.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:10.666" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:10.666" endtime="20231212 10:56:10.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:10.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:10.667" endtime="20231212 10:56:10.667"/>
</kw>
<status status="PASS" starttime="20231212 10:56:10.178" endtime="20231212 10:56:10.667"/>
</kw>
<msg timestamp="20231212 10:56:10.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:10.177" endtime="20231212 10:56:10.667"/>
</kw>
<msg timestamp="20231212 10:56:10.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:10.177" endtime="20231212 10:56:10.668"/>
</kw>
<msg timestamp="20231212 10:56:10.668" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:10.176" endtime="20231212 10:56:10.668"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:10.671" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:11.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:11.144" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:56:09.595Z",
            "ETag": "2023-12-12T10:56:09.595Z...</msg>
<status status="PASS" starttime="20231212 10:56:10.670" endtime="20231212 10:56:11.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:11.145" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5543063998/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:56:09.595Z",
            "ETag": "2023-12-12T10:56:09.595Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:56:11.144" endtime="20231212 10:56:11.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:11.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:11.145" endtime="20231212 10:56:11.145"/>
</kw>
<status status="PASS" starttime="20231212 10:56:10.669" endtime="20231212 10:56:11.146"/>
</kw>
<msg timestamp="20231212 10:56:11.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:10.669" endtime="20231212 10:56:11.146"/>
</kw>
<msg timestamp="20231212 10:56:11.146" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:56:09.595Z",
            "ETag": "2023-12-12T10:56:09.595Z...</msg>
<status status="PASS" starttime="20231212 10:56:10.669" endtime="20231212 10:56:11.146"/>
</kw>
<msg timestamp="20231212 10:56:11.146" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/deletetestapi/key=value/",
            "LastModified": "2023-12-12T10:56:09.595Z",
            "ETag": "2023-12-12T10:56:09.595Z...</msg>
<status status="PASS" starttime="20231212 10:56:10.668" endtime="20231212 10:56:11.146"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:11.146" endtime="20231212 10:56:11.147"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:09.141" endtime="20231212 10:56:11.147"/>
</test>
<test id="s1-s6-s9-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:11.152" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:11.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:11.616" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0302747690/
                           PRE ozone-test-0488920429/
             ...</msg>
<status status="PASS" starttime="20231212 10:56:11.150" endtime="20231212 10:56:11.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:11.617" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0302747690/
                           PRE ozone-test-0488920429/
                           PRE ozone-test-0605896892/
                           PRE ozone-test-1791792364/
                           PRE ozone-test-3346665989/
                           PRE ozone-test-3945403631/
                           PRE ozone-test-4064484102/
                           PRE ozone-test-5543063998/
                           PRE ozone-test-7281474341/
                           PRE ozone-test-7746531063/
                           PRE ozone-test-9939099488/
                           PRE specialchars/
2023-12-12 10:54:50       4068 README1.md
2023-12-12 10:54:49       4068 README10.md
2023-12-12 10:55:29   23068672 mpyawscli
2023-12-12 10:54:49   10485761 multiUpload.1.gz
2023-12-12 10:54:49   10485761 multiUpload.2.gz
2023-12-12 10:54:50   20971522 qhcuppjujb
2023-12-12 10:54:45         29 testfile</msg>
<status status="PASS" starttime="20231212 10:56:11.616" endtime="20231212 10:56:11.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:11.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:11.617" endtime="20231212 10:56:11.617"/>
</kw>
<status status="PASS" starttime="20231212 10:56:11.149" endtime="20231212 10:56:11.617"/>
</kw>
<msg timestamp="20231212 10:56:11.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:11.149" endtime="20231212 10:56:11.618"/>
</kw>
<msg timestamp="20231212 10:56:11.618" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0302747690/
                           PRE ozone-test-0488920429/
             ...</msg>
<status status="PASS" starttime="20231212 10:56:11.149" endtime="20231212 10:56:11.618"/>
</kw>
<msg timestamp="20231212 10:56:11.618" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0302747690/
                           PRE ozone-test-0488920429/
             ...</msg>
<status status="PASS" starttime="20231212 10:56:11.148" endtime="20231212 10:56:11.618"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:11.618" endtime="20231212 10:56:11.619"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:11.622" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:12.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:12.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:11.620" endtime="20231212 10:56:12.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:12.110" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:12.110" endtime="20231212 10:56:12.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:12.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:12.111" endtime="20231212 10:56:12.111"/>
</kw>
<status status="PASS" starttime="20231212 10:56:11.620" endtime="20231212 10:56:12.111"/>
</kw>
<msg timestamp="20231212 10:56:12.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:11.620" endtime="20231212 10:56:12.111"/>
</kw>
<msg timestamp="20231212 10:56:12.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:11.619" endtime="20231212 10:56:12.112"/>
</kw>
<msg timestamp="20231212 10:56:12.112" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:11.619" endtime="20231212 10:56:12.112"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:12.115" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:12.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:12.582" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0302747690/
                           PRE ozone-test-0488920429/
             ...</msg>
<status status="PASS" starttime="20231212 10:56:12.114" endtime="20231212 10:56:12.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:12.583" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0302747690/
                           PRE ozone-test-0488920429/
                           PRE ozone-test-0605896892/
                           PRE ozone-test-1791792364/
                           PRE ozone-test-3346665989/
                           PRE ozone-test-3945403631/
                           PRE ozone-test-4064484102/
                           PRE ozone-test-5543063998/
                           PRE ozone-test-7281474341/
                           PRE ozone-test-7746531063/
                           PRE ozone-test-9939099488/
                           PRE specialchars/
2023-12-12 10:54:50       4068 README1.md
2023-12-12 10:54:49       4068 README10.md
2023-12-12 10:55:29   23068672 mpyawscli
2023-12-12 10:54:49   10485761 multiUpload.1.gz
2023-12-12 10:54:49   10485761 multiUpload.2.gz
2023-12-12 10:54:50   20971522 qhcuppjujb
2023-12-12 10:54:45         29 testfile</msg>
<status status="PASS" starttime="20231212 10:56:12.582" endtime="20231212 10:56:12.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:12.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:12.583" endtime="20231212 10:56:12.583"/>
</kw>
<status status="PASS" starttime="20231212 10:56:12.113" endtime="20231212 10:56:12.583"/>
</kw>
<msg timestamp="20231212 10:56:12.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:12.113" endtime="20231212 10:56:12.584"/>
</kw>
<msg timestamp="20231212 10:56:12.584" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0302747690/
                           PRE ozone-test-0488920429/
             ...</msg>
<status status="PASS" starttime="20231212 10:56:12.112" endtime="20231212 10:56:12.584"/>
</kw>
<msg timestamp="20231212 10:56:12.584" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0302747690/
                           PRE ozone-test-0488920429/
             ...</msg>
<status status="PASS" starttime="20231212 10:56:12.112" endtime="20231212 10:56:12.584"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:12.584" endtime="20231212 10:56:12.585"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:11.148" endtime="20231212 10:56:12.585"/>
</test>
<test id="s1-s6-s9-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:12.589" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:56:12.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:12.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:12.587" endtime="20231212 10:56:12.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:12.592" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:12.591" endtime="20231212 10:56:12.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:12.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:12.592" endtime="20231212 10:56:12.592"/>
</kw>
<status status="PASS" starttime="20231212 10:56:12.587" endtime="20231212 10:56:12.592"/>
</kw>
<msg timestamp="20231212 10:56:12.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:12.586" endtime="20231212 10:56:12.593"/>
</kw>
<status status="PASS" starttime="20231212 10:56:12.586" endtime="20231212 10:56:12.593"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:12.596" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/ozone-test-5543063998/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:13.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:13.097" level="INFO">${output} = Completed 29 Bytes/29 Bytes (728 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-5543063998/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231212 10:56:12.594" endtime="20231212 10:56:13.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:13.098" level="INFO">Completed 29 Bytes/29 Bytes (728 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-5543063998/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231212 10:56:13.098" endtime="20231212 10:56:13.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:13.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:13.098" endtime="20231212 10:56:13.099"/>
</kw>
<status status="PASS" starttime="20231212 10:56:12.594" endtime="20231212 10:56:13.099"/>
</kw>
<msg timestamp="20231212 10:56:13.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:12.594" endtime="20231212 10:56:13.100"/>
</kw>
<msg timestamp="20231212 10:56:13.100" level="INFO">${output} = Completed 29 Bytes/29 Bytes (728 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-5543063998/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231212 10:56:12.593" endtime="20231212 10:56:13.100"/>
</kw>
<msg timestamp="20231212 10:56:13.100" level="INFO">${result} = Completed 29 Bytes/29 Bytes (728 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-5543063998/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231212 10:56:12.593" endtime="20231212 10:56:13.100"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:13.104" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-5543063998/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:13.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:13.562" level="INFO">${output} = 2023-12-12 10:56:13          0 
2023-12-12 10:56:13         29 f1</msg>
<status status="PASS" starttime="20231212 10:56:13.102" endtime="20231212 10:56:13.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:13.563" level="INFO">2023-12-12 10:56:13          0 
2023-12-12 10:56:13         29 f1</msg>
<status status="PASS" starttime="20231212 10:56:13.563" endtime="20231212 10:56:13.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:13.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:13.564" endtime="20231212 10:56:13.564"/>
</kw>
<status status="PASS" starttime="20231212 10:56:13.101" endtime="20231212 10:56:13.564"/>
</kw>
<msg timestamp="20231212 10:56:13.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:13.101" endtime="20231212 10:56:13.564"/>
</kw>
<msg timestamp="20231212 10:56:13.564" level="INFO">${output} = 2023-12-12 10:56:13          0 
2023-12-12 10:56:13         29 f1</msg>
<status status="PASS" starttime="20231212 10:56:13.101" endtime="20231212 10:56:13.565"/>
</kw>
<msg timestamp="20231212 10:56:13.565" level="INFO">${result} = 2023-12-12 10:56:13          0 
2023-12-12 10:56:13         29 f1</msg>
<status status="PASS" starttime="20231212 10:56:13.100" endtime="20231212 10:56:13.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:13.565" endtime="20231212 10:56:13.565"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:13.569" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-5543063998/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:14.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:14.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:13.567" endtime="20231212 10:56:14.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:14.046" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:14.045" endtime="20231212 10:56:14.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:14.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:14.046" endtime="20231212 10:56:14.047"/>
</kw>
<status status="PASS" starttime="20231212 10:56:13.567" endtime="20231212 10:56:14.047"/>
</kw>
<msg timestamp="20231212 10:56:14.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:13.567" endtime="20231212 10:56:14.047"/>
</kw>
<msg timestamp="20231212 10:56:14.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:13.566" endtime="20231212 10:56:14.047"/>
</kw>
<msg timestamp="20231212 10:56:14.047" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:13.565" endtime="20231212 10:56:14.047"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:14.051" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-5543063998/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:14.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:14.532" level="INFO">${output} = 2023-12-12 10:56:13          0 
2023-12-12 10:56:13         29 f1</msg>
<status status="PASS" starttime="20231212 10:56:14.049" endtime="20231212 10:56:14.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:14.533" level="INFO">2023-12-12 10:56:13          0 
2023-12-12 10:56:13         29 f1</msg>
<status status="PASS" starttime="20231212 10:56:14.532" endtime="20231212 10:56:14.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:14.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:14.533" endtime="20231212 10:56:14.534"/>
</kw>
<status status="PASS" starttime="20231212 10:56:14.049" endtime="20231212 10:56:14.534"/>
</kw>
<msg timestamp="20231212 10:56:14.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:14.049" endtime="20231212 10:56:14.534"/>
</kw>
<msg timestamp="20231212 10:56:14.534" level="INFO">${output} = 2023-12-12 10:56:13          0 
2023-12-12 10:56:13         29 f1</msg>
<status status="PASS" starttime="20231212 10:56:14.048" endtime="20231212 10:56:14.534"/>
</kw>
<msg timestamp="20231212 10:56:14.534" level="INFO">${result} = 2023-12-12 10:56:13          0 
2023-12-12 10:56:13         29 f1</msg>
<status status="PASS" starttime="20231212 10:56:14.048" endtime="20231212 10:56:14.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:14.535" endtime="20231212 10:56:14.535"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:14.539" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-5543063998/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:15.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:15.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:14.537" endtime="20231212 10:56:15.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:15.035" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:15.035" endtime="20231212 10:56:15.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:15.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:15.036" endtime="20231212 10:56:15.036"/>
</kw>
<status status="PASS" starttime="20231212 10:56:14.537" endtime="20231212 10:56:15.036"/>
</kw>
<msg timestamp="20231212 10:56:15.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:14.536" endtime="20231212 10:56:15.036"/>
</kw>
<msg timestamp="20231212 10:56:15.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:14.536" endtime="20231212 10:56:15.037"/>
</kw>
<msg timestamp="20231212 10:56:15.037" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:14.535" endtime="20231212 10:56:15.037"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:12.585" endtime="20231212 10:56:15.037"/>
</test>
<test id="s1-s6-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:15.042" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:56:15.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:15.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:15.040" endtime="20231212 10:56:15.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:15.045" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:15.045" endtime="20231212 10:56:15.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:15.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:15.046" endtime="20231212 10:56:15.046"/>
</kw>
<status status="PASS" starttime="20231212 10:56:15.039" endtime="20231212 10:56:15.046"/>
</kw>
<msg timestamp="20231212 10:56:15.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:15.039" endtime="20231212 10:56:15.046"/>
</kw>
<status status="PASS" starttime="20231212 10:56:15.039" endtime="20231212 10:56:15.046"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:15.050" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/ozone-test-5543063998/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:15.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:15.578" level="INFO">${output} = Completed 29 Bytes/29 Bytes (574 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-5543063998/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231212 10:56:15.048" endtime="20231212 10:56:15.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:15.580" level="INFO">Completed 29 Bytes/29 Bytes (574 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-5543063998/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231212 10:56:15.579" endtime="20231212 10:56:15.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:15.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:15.580" endtime="20231212 10:56:15.580"/>
</kw>
<status status="PASS" starttime="20231212 10:56:15.048" endtime="20231212 10:56:15.580"/>
</kw>
<msg timestamp="20231212 10:56:15.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:15.048" endtime="20231212 10:56:15.580"/>
</kw>
<msg timestamp="20231212 10:56:15.581" level="INFO">${output} = Completed 29 Bytes/29 Bytes (574 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-5543063998/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231212 10:56:15.047" endtime="20231212 10:56:15.581"/>
</kw>
<msg timestamp="20231212 10:56:15.581" level="INFO">${result} = Completed 29 Bytes/29 Bytes (574 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-5543063998/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231212 10:56:15.047" endtime="20231212 10:56:15.581"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:15.585" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-5543063998/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:16.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:16.052" level="INFO">${output} = 2023-12-12 10:56:15          0 
2023-12-12 10:56:15         29 filefile</msg>
<status status="PASS" starttime="20231212 10:56:15.583" endtime="20231212 10:56:16.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:16.053" level="INFO">2023-12-12 10:56:15          0 
2023-12-12 10:56:15         29 filefile</msg>
<status status="PASS" starttime="20231212 10:56:16.052" endtime="20231212 10:56:16.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:16.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:16.053" endtime="20231212 10:56:16.053"/>
</kw>
<status status="PASS" starttime="20231212 10:56:15.582" endtime="20231212 10:56:16.053"/>
</kw>
<msg timestamp="20231212 10:56:16.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:15.582" endtime="20231212 10:56:16.054"/>
</kw>
<msg timestamp="20231212 10:56:16.054" level="INFO">${output} = 2023-12-12 10:56:15          0 
2023-12-12 10:56:15         29 filefile</msg>
<status status="PASS" starttime="20231212 10:56:15.582" endtime="20231212 10:56:16.054"/>
</kw>
<msg timestamp="20231212 10:56:16.054" level="INFO">${result} = 2023-12-12 10:56:15          0 
2023-12-12 10:56:15         29 filefile</msg>
<status status="PASS" starttime="20231212 10:56:15.581" endtime="20231212 10:56:16.054"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:16.054" endtime="20231212 10:56:16.055"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:16.059" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-5543063998/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:16.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:16.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:16.057" endtime="20231212 10:56:16.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:16.534" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:16.534" endtime="20231212 10:56:16.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:16.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:16.534" endtime="20231212 10:56:16.535"/>
</kw>
<status status="PASS" starttime="20231212 10:56:16.056" endtime="20231212 10:56:16.535"/>
</kw>
<msg timestamp="20231212 10:56:16.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:16.056" endtime="20231212 10:56:16.535"/>
</kw>
<msg timestamp="20231212 10:56:16.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:16.055" endtime="20231212 10:56:16.535"/>
</kw>
<msg timestamp="20231212 10:56:16.536" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:16.055" endtime="20231212 10:56:16.536"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:16.539" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-5543063998/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:17.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:17.007" level="INFO">${output} = 2023-12-12 10:56:15          0 
2023-12-12 10:56:15         29 filefile</msg>
<status status="PASS" starttime="20231212 10:56:16.538" endtime="20231212 10:56:17.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:17.008" level="INFO">2023-12-12 10:56:15          0 
2023-12-12 10:56:15         29 filefile</msg>
<status status="PASS" starttime="20231212 10:56:17.007" endtime="20231212 10:56:17.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:17.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:17.008" endtime="20231212 10:56:17.009"/>
</kw>
<status status="PASS" starttime="20231212 10:56:16.537" endtime="20231212 10:56:17.009"/>
</kw>
<msg timestamp="20231212 10:56:17.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:16.537" endtime="20231212 10:56:17.009"/>
</kw>
<msg timestamp="20231212 10:56:17.009" level="INFO">${output} = 2023-12-12 10:56:15          0 
2023-12-12 10:56:15         29 filefile</msg>
<status status="PASS" starttime="20231212 10:56:16.536" endtime="20231212 10:56:17.009"/>
</kw>
<msg timestamp="20231212 10:56:17.009" level="INFO">${result} = 2023-12-12 10:56:15          0 
2023-12-12 10:56:15         29 filefile</msg>
<status status="PASS" starttime="20231212 10:56:16.536" endtime="20231212 10:56:17.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:17.009" endtime="20231212 10:56:17.010"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:17.014" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-5543063998/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:17.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:17.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:17.012" endtime="20231212 10:56:17.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:17.490" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:17.489" endtime="20231212 10:56:17.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:17.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:17.490" endtime="20231212 10:56:17.491"/>
</kw>
<status status="PASS" starttime="20231212 10:56:17.011" endtime="20231212 10:56:17.491"/>
</kw>
<msg timestamp="20231212 10:56:17.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:17.011" endtime="20231212 10:56:17.491"/>
</kw>
<msg timestamp="20231212 10:56:17.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:17.011" endtime="20231212 10:56:17.491"/>
</kw>
<msg timestamp="20231212 10:56:17.491" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:17.010" endtime="20231212 10:56:17.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:15.038" endtime="20231212 10:56:17.492"/>
</test>
<test id="s1-s6-s9-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:17.496" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:17.976" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:17.977" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:17.494" endtime="20231212 10:56:17.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:17.978" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:17.977" endtime="20231212 10:56:17.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:17.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:17.978" endtime="20231212 10:56:17.978"/>
</kw>
<msg timestamp="20231212 10:56:17.978" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:17.493" endtime="20231212 10:56:17.978"/>
</kw>
<msg timestamp="20231212 10:56:17.979" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231212 10:56:17.493" endtime="20231212 10:56:17.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:17.979" endtime="20231212 10:56:17.979"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:17.492" endtime="20231212 10:56:17.979"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:56:09.129" endtime="20231212 10:56:17.980"/>
</suite>
<suite id="s1-s6-s10" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:56:17.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:17.992" endtime="20231212 10:56:17.992"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:17.992" endtime="20231212 10:56:17.992"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:17.992" endtime="20231212 10:56:17.992"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:17.992" endtime="20231212 10:56:17.993"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:17.993" endtime="20231212 10:56:17.993"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:17.993" endtime="20231212 10:56:17.993"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:17.993" endtime="20231212 10:56:17.993"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:17.993" endtime="20231212 10:56:17.993"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:56:17.993" endtime="20231212 10:56:17.993"/>
</kw>
<status status="PASS" starttime="20231212 10:56:17.991" endtime="20231212 10:56:17.993"/>
</kw>
<test id="s1-s6-s10-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:17.997" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:56:17.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:17.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:17.995" endtime="20231212 10:56:17.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:17.999" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:17.999" endtime="20231212 10:56:17.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:18.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:17.999" endtime="20231212 10:56:18.000"/>
</kw>
<status status="PASS" starttime="20231212 10:56:17.995" endtime="20231212 10:56:18.000"/>
</kw>
<msg timestamp="20231212 10:56:18.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:17.994" endtime="20231212 10:56:18.000"/>
</kw>
<status status="PASS" starttime="20231212 10:56:17.994" endtime="20231212 10:56:18.000"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:18.003" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:18.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:18.561" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:18.002" endtime="20231212 10:56:18.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:18.561" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:18.561" endtime="20231212 10:56:18.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:18.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:18.562" endtime="20231212 10:56:18.562"/>
</kw>
<msg timestamp="20231212 10:56:18.562" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:18.001" endtime="20231212 10:56:18.562"/>
</kw>
<msg timestamp="20231212 10:56:18.563" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:18.000" endtime="20231212 10:56:18.563"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:18.566" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:19.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:19.021" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:18.564" endtime="20231212 10:56:19.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:19.022" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:56:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:19.022" endtime="20231212 10:56:19.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:19.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:19.023" endtime="20231212 10:56:19.023"/>
</kw>
<msg timestamp="20231212 10:56:19.023" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:18.563" endtime="20231212 10:56:19.023"/>
</kw>
<msg timestamp="20231212 10:56:19.023" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:18.563" endtime="20231212 10:56:19.024"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:19.027" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-5543063998/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:19.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:19.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:19.025" endtime="20231212 10:56:19.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:19.515" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:19.514" endtime="20231212 10:56:19.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:19.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:19.515" endtime="20231212 10:56:19.515"/>
</kw>
<msg timestamp="20231212 10:56:19.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:19.024" endtime="20231212 10:56:19.515"/>
</kw>
<msg timestamp="20231212 10:56:19.516" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:19.024" endtime="20231212 10:56:19.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:17.994" endtime="20231212 10:56:19.516"/>
</test>
<test id="s1-s6-s10-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:19.521" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link-non-existent --key ozone-test-5543063998/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:20.001" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:20.001" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:19.519" endtime="20231212 10:56:20.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:20.002" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:20.002" endtime="20231212 10:56:20.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:20.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:20.003" endtime="20231212 10:56:20.003"/>
</kw>
<msg timestamp="20231212 10:56:20.003" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:19.518" endtime="20231212 10:56:20.003"/>
</kw>
<msg timestamp="20231212 10:56:20.003" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:19.517" endtime="20231212 10:56:20.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:20.004" endtime="20231212 10:56:20.004"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:20.004" endtime="20231212 10:56:20.004"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:19.517" endtime="20231212 10:56:20.004"/>
</test>
<test id="s1-s6-s10-t3" name="Head object where path is a directory" line="43">
<kw name="Create legacy bucket" library="commonawslib">
<var>${legacy-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:56:20.007" level="INFO">${randStr} = 7719290368</msg>
<status status="PASS" starttime="20231212 10:56:20.006" endtime="20231212 10:56:20.007"/>
</kw>
<msg timestamp="20231212 10:56:20.007" level="INFO">${postfix} = ozone-test-7719290368</msg>
<status status="PASS" starttime="20231212 10:56:20.006" endtime="20231212 10:56:20.007"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${legacy_bucket}</var>
<arg>legacy-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:56:20.007" level="INFO">${legacy_bucket} = legacy-bucket-ozone-test-7719290368</msg>
<status status="PASS" starttime="20231212 10:56:20.007" endtime="20231212 10:56:20.007"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l LEGACY s3v/${legacy_bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:20.010" level="INFO">Running command 'ozone sh bucket create -l LEGACY s3v/legacy-bucket-ozone-test-7719290368 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:24.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:24.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:20.008" endtime="20231212 10:56:24.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:24.023" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:24.022" endtime="20231212 10:56:24.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:24.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:24.023" endtime="20231212 10:56:24.023"/>
</kw>
<msg timestamp="20231212 10:56:24.024" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:20.008" endtime="20231212 10:56:24.024"/>
</kw>
<msg timestamp="20231212 10:56:24.024" level="INFO">${legacy-bucket} = legacy-bucket-ozone-test-7719290368</msg>
<status status="PASS" starttime="20231212 10:56:20.006" endtime="20231212 10:56:24.024"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:24.027" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket legacy-bucket-ozone-test-7719290368 --key ozone-test-5543063998/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:24.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:24.529" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:24.025" endtime="20231212 10:56:24.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:24.530" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:24.530" endtime="20231212 10:56:24.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:24.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:24.530" endtime="20231212 10:56:24.531"/>
</kw>
<msg timestamp="20231212 10:56:24.531" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:24.025" endtime="20231212 10:56:24.531"/>
</kw>
<msg timestamp="20231212 10:56:24.531" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:24.024" endtime="20231212 10:56:24.531"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:24.534" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket legacy-bucket-ozone-test-7719290368 --key ozone-test-5543063998/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:25.015" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:25.015" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:24.532" endtime="20231212 10:56:25.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:25.016" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:25.016" endtime="20231212 10:56:25.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:25.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:25.017" endtime="20231212 10:56:25.017"/>
</kw>
<msg timestamp="20231212 10:56:25.017" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:24.532" endtime="20231212 10:56:25.017"/>
</kw>
<msg timestamp="20231212 10:56:25.018" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:24.531" endtime="20231212 10:56:25.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:25.018" endtime="20231212 10:56:25.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:25.018" endtime="20231212 10:56:25.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:20.005" endtime="20231212 10:56:25.019"/>
</test>
<test id="s1-s6-s10-t4" name="Head directory objects" line="50">
<kw name="Create obs bucket" library="commonawslib">
<var>${obs-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 10:56:25.021" level="INFO">${randStr} = 4526481571</msg>
<status status="PASS" starttime="20231212 10:56:25.021" endtime="20231212 10:56:25.021"/>
</kw>
<msg timestamp="20231212 10:56:25.021" level="INFO">${postfix} = ozone-test-4526481571</msg>
<status status="PASS" starttime="20231212 10:56:25.020" endtime="20231212 10:56:25.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>obs-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231212 10:56:25.022" level="INFO">${bucket} = obs-bucket-ozone-test-4526481571</msg>
<status status="PASS" starttime="20231212 10:56:25.021" endtime="20231212 10:56:25.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l OBJECT_STORE s3v/${bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:25.024" level="INFO">Running command 'ozone sh bucket create -l OBJECT_STORE s3v/obs-bucket-ozone-test-4526481571 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:29.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:29.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:25.022" endtime="20231212 10:56:29.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:29.149" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:29.148" endtime="20231212 10:56:29.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:29.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:29.149" endtime="20231212 10:56:29.149"/>
</kw>
<msg timestamp="20231212 10:56:29.150" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:25.022" endtime="20231212 10:56:29.150"/>
</kw>
<msg timestamp="20231212 10:56:29.150" level="INFO">${obs-bucket} = obs-bucket-ozone-test-4526481571</msg>
<status status="PASS" starttime="20231212 10:56:25.020" endtime="20231212 10:56:29.150"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:29.153" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket obs-bucket-ozone-test-4526481571 --key ozone-test-5543063998/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:29.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:29.679" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:29.151" endtime="20231212 10:56:29.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:29.680" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:29.680" endtime="20231212 10:56:29.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:29.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:29.680" endtime="20231212 10:56:29.681"/>
</kw>
<msg timestamp="20231212 10:56:29.681" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:29.151" endtime="20231212 10:56:29.681"/>
</kw>
<msg timestamp="20231212 10:56:29.681" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:29.150" endtime="20231212 10:56:29.681"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:29.684" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-4526481571 --key ozone-test-5543063998/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:30.156" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:30.156" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:29.682" endtime="20231212 10:56:30.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:30.157" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:30.157" endtime="20231212 10:56:30.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:30.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:30.158" endtime="20231212 10:56:30.158"/>
</kw>
<msg timestamp="20231212 10:56:30.158" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:29.682" endtime="20231212 10:56:30.158"/>
</kw>
<msg timestamp="20231212 10:56:30.158" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:29.681" endtime="20231212 10:56:30.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:30.159" endtime="20231212 10:56:30.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:30.159" endtime="20231212 10:56:30.159"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:30.162" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-4526481571 --key ozone-test-5543063998/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:30.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:30.636" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:30.161" endtime="20231212 10:56:30.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:30.637" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:56:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:30 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:30.637" endtime="20231212 10:56:30.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:30.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:30.638" endtime="20231212 10:56:30.638"/>
</kw>
<msg timestamp="20231212 10:56:30.638" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:30.160" endtime="20231212 10:56:30.638"/>
</kw>
<msg timestamp="20231212 10:56:30.638" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:30.160" endtime="20231212 10:56:30.639"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:25.019" endtime="20231212 10:56:30.639"/>
</test>
<test id="s1-s6-s10-t5" name="Head non existing key" line="58">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:30.643" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:31.108" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:31.108" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:30.641" endtime="20231212 10:56:31.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:31.109" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:31.108" endtime="20231212 10:56:31.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:31.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:31.109" endtime="20231212 10:56:31.110"/>
</kw>
<msg timestamp="20231212 10:56:31.110" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:30.640" endtime="20231212 10:56:31.110"/>
</kw>
<msg timestamp="20231212 10:56:31.110" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231212 10:56:30.640" endtime="20231212 10:56:31.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:31.111" endtime="20231212 10:56:31.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:31.111" endtime="20231212 10:56:31.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:30.639" endtime="20231212 10:56:31.111"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:56:17.982" endtime="20231212 10:56:31.112"/>
</suite>
<suite id="s1-s6-s11" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:56:31.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:31.123" endtime="20231212 10:56:31.124"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:31.124" endtime="20231212 10:56:31.124"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:31.124" endtime="20231212 10:56:31.124"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:31.124" endtime="20231212 10:56:31.124"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:31.124" endtime="20231212 10:56:31.125"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:31.125" endtime="20231212 10:56:31.125"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:31.125" endtime="20231212 10:56:31.125"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:31.125" endtime="20231212 10:56:31.125"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:56:31.125" endtime="20231212 10:56:31.125"/>
</kw>
<status status="PASS" starttime="20231212 10:56:31.123" endtime="20231212 10:56:31.125"/>
</kw>
<test id="s1-s6-s11-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:31.129" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:56:31.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:31.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:31.127" endtime="20231212 10:56:31.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:31.132" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:31.132" endtime="20231212 10:56:31.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:31.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:31.132" endtime="20231212 10:56:31.133"/>
</kw>
<status status="PASS" starttime="20231212 10:56:31.127" endtime="20231212 10:56:31.133"/>
</kw>
<msg timestamp="20231212 10:56:31.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:31.126" endtime="20231212 10:56:31.133"/>
</kw>
<status status="PASS" starttime="20231212 10:56:31.126" endtime="20231212 10:56:31.133"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:31.137" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:31.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:31.646" level="INFO">${output} = {
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:31.135" endtime="20231212 10:56:31.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:31.647" level="INFO">{
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:31.646" endtime="20231212 10:56:31.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:31.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:31.647" endtime="20231212 10:56:31.648"/>
</kw>
<status status="PASS" starttime="20231212 10:56:31.135" endtime="20231212 10:56:31.648"/>
</kw>
<msg timestamp="20231212 10:56:31.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:31.134" endtime="20231212 10:56:31.648"/>
</kw>
<msg timestamp="20231212 10:56:31.648" level="INFO">${output} = {
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:31.134" endtime="20231212 10:56:31.648"/>
</kw>
<msg timestamp="20231212 10:56:31.648" level="INFO">${result} = {
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:31.133" endtime="20231212 10:56:31.648"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:31.652" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:32.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:32.172" level="INFO">${output} = {
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:31.650" endtime="20231212 10:56:32.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:32.173" level="INFO">{
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:32.172" endtime="20231212 10:56:32.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:32.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:32.173" endtime="20231212 10:56:32.173"/>
</kw>
<status status="PASS" starttime="20231212 10:56:31.650" endtime="20231212 10:56:32.174"/>
</kw>
<msg timestamp="20231212 10:56:32.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:31.650" endtime="20231212 10:56:32.174"/>
</kw>
<msg timestamp="20231212 10:56:32.174" level="INFO">${output} = {
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:31.649" endtime="20231212 10:56:32.174"/>
</kw>
<msg timestamp="20231212 10:56:32.174" level="INFO">${result} = {
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:31.649" endtime="20231212 10:56:32.174"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:32.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:32.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:32.685" level="INFO">${output} = {
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:32.176" endtime="20231212 10:56:32.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:32.686" level="INFO">{
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:32.685" endtime="20231212 10:56:32.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:32.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:32.687" endtime="20231212 10:56:32.687"/>
</kw>
<status status="PASS" starttime="20231212 10:56:32.176" endtime="20231212 10:56:32.687"/>
</kw>
<msg timestamp="20231212 10:56:32.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:32.175" endtime="20231212 10:56:32.688"/>
</kw>
<msg timestamp="20231212 10:56:32.688" level="INFO">${output} = {
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:32.175" endtime="20231212 10:56:32.688"/>
</kw>
<msg timestamp="20231212 10:56:32.688" level="INFO">${result} = {
    "ETag": "\"17f0faa24557f40d826fb6b74952f75c\""
}</msg>
<status status="PASS" starttime="20231212 10:56:32.174" endtime="20231212 10:56:32.688"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:32.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:33.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:33.189" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/",
            "LastModified": "2023-12-12T10:56:31.568Z",
            "ETag": "2023-12-12T10:56:31.568Z",...</msg>
<status status="PASS" starttime="20231212 10:56:32.691" endtime="20231212 10:56:33.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:33.190" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/",
            "LastModified": "2023-12-12T10:56:31.568Z",
            "ETag": "2023-12-12T10:56:31.568Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f1",
            "LastModified": "2023-12-12T10:56:31.588Z",
            "ETag": "2023-12-12T10:56:31.588Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f2",
            "LastModified": "2023-12-12T10:56:32.118Z",
            "ETag": "2023-12-12T10:56:32.118Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f3",
            "LastModified": "2023-12-12T10:56:32.635Z",
            "ETag": "2023-12-12T10:56:32.635Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:56:33.189" endtime="20231212 10:56:33.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:33.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:33.190" endtime="20231212 10:56:33.191"/>
</kw>
<status status="PASS" starttime="20231212 10:56:32.690" endtime="20231212 10:56:33.191"/>
</kw>
<msg timestamp="20231212 10:56:33.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:32.690" endtime="20231212 10:56:33.191"/>
</kw>
<msg timestamp="20231212 10:56:33.191" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/",
            "LastModified": "2023-12-12T10:56:31.568Z",
            "ETag": "2023-12-12T10:56:31.568Z",...</msg>
<status status="PASS" starttime="20231212 10:56:32.689" endtime="20231212 10:56:33.191"/>
</kw>
<msg timestamp="20231212 10:56:33.192" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/",
            "LastModified": "2023-12-12T10:56:31.568Z",
            "ETag": "2023-12-12T10:56:31.568Z",...</msg>
<status status="PASS" starttime="20231212 10:56:32.688" endtime="20231212 10:56:33.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:33.192" endtime="20231212 10:56:33.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:33.192" endtime="20231212 10:56:33.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:33.193" endtime="20231212 10:56:33.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:33.194" endtime="20231212 10:56:33.194"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:33.194" endtime="20231212 10:56:33.194"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:33.199" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket link --delete 'Objects=[{Key=ozone-test-5543063998/multidelete/key=value/f1},{Key=ozone-test-5543063998/multidelete/key=value/f2},{Key=ozone-test-5543063998/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:33.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:33.692" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231212 10:56:33.197" endtime="20231212 10:56:33.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:33.693" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:56:33.693" endtime="20231212 10:56:33.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:33.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:33.693" endtime="20231212 10:56:33.694"/>
</kw>
<status status="PASS" starttime="20231212 10:56:33.196" endtime="20231212 10:56:33.694"/>
</kw>
<msg timestamp="20231212 10:56:33.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:33.196" endtime="20231212 10:56:33.694"/>
</kw>
<msg timestamp="20231212 10:56:33.694" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231212 10:56:33.195" endtime="20231212 10:56:33.694"/>
</kw>
<msg timestamp="20231212 10:56:33.695" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231212 10:56:33.195" endtime="20231212 10:56:33.695"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:33.695" endtime="20231212 10:56:33.695"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:33.699" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:34.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:34.182" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/",
            "LastModified": "2023-12-12T10:56:31.568Z",
            "ETag": "2023-12-12T10:56:31.568Z",...</msg>
<status status="PASS" starttime="20231212 10:56:33.697" endtime="20231212 10:56:34.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:34.183" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/",
            "LastModified": "2023-12-12T10:56:31.568Z",
            "ETag": "2023-12-12T10:56:31.568Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/f3",
            "LastModified": "2023-12-12T10:56:32.635Z",
            "ETag": "2023-12-12T10:56:32.635Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:56:34.182" endtime="20231212 10:56:34.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:34.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:34.183" endtime="20231212 10:56:34.184"/>
</kw>
<status status="PASS" starttime="20231212 10:56:33.697" endtime="20231212 10:56:34.184"/>
</kw>
<msg timestamp="20231212 10:56:34.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:33.696" endtime="20231212 10:56:34.184"/>
</kw>
<msg timestamp="20231212 10:56:34.184" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/",
            "LastModified": "2023-12-12T10:56:31.568Z",
            "ETag": "2023-12-12T10:56:31.568Z",...</msg>
<status status="PASS" starttime="20231212 10:56:33.696" endtime="20231212 10:56:34.184"/>
</kw>
<msg timestamp="20231212 10:56:34.184" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/multidelete/key=value/",
            "LastModified": "2023-12-12T10:56:31.568Z",
            "ETag": "2023-12-12T10:56:31.568Z",...</msg>
<status status="PASS" starttime="20231212 10:56:33.695" endtime="20231212 10:56:34.184"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:34.185" endtime="20231212 10:56:34.185"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:34.185" endtime="20231212 10:56:34.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:34.186" endtime="20231212 10:56:34.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:34.186" endtime="20231212 10:56:34.186"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:34.187" endtime="20231212 10:56:34.187"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:31.125" endtime="20231212 10:56:34.187"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:56:31.114" endtime="20231212 10:56:34.188"/>
</suite>
<suite id="s1-s6-s12" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231212 10:56:34.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:34.198" endtime="20231212 10:56:34.198"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:34.198" endtime="20231212 10:56:34.198"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231212 10:56:34.198" endtime="20231212 10:56:34.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:34.199" endtime="20231212 10:56:34.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:34.199" endtime="20231212 10:56:34.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:34.199" endtime="20231212 10:56:34.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:34.199" endtime="20231212 10:56:34.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231212 10:56:34.199" endtime="20231212 10:56:34.199"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231212 10:56:34.199" endtime="20231212 10:56:34.200"/>
</kw>
<status status="PASS" starttime="20231212 10:56:34.198" endtime="20231212 10:56:34.200"/>
</kw>
<test id="s1-s6-s12-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:34.203" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231212 10:56:34.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:34.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:34.201" endtime="20231212 10:56:34.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:34.205" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:34.205" endtime="20231212 10:56:34.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:34.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:34.205" endtime="20231212 10:56:34.206"/>
</kw>
<status status="PASS" starttime="20231212 10:56:34.201" endtime="20231212 10:56:34.206"/>
</kw>
<msg timestamp="20231212 10:56:34.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:34.201" endtime="20231212 10:56:34.206"/>
</kw>
<status status="PASS" starttime="20231212 10:56:34.200" endtime="20231212 10:56:34.206"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:34.210" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:34.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:34.724" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:34.208" endtime="20231212 10:56:34.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:34.725" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:34.724" endtime="20231212 10:56:34.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:34.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:34.725" endtime="20231212 10:56:34.725"/>
</kw>
<status status="PASS" starttime="20231212 10:56:34.208" endtime="20231212 10:56:34.725"/>
</kw>
<msg timestamp="20231212 10:56:34.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:34.208" endtime="20231212 10:56:34.726"/>
</kw>
<msg timestamp="20231212 10:56:34.726" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:34.207" endtime="20231212 10:56:34.726"/>
</kw>
<msg timestamp="20231212 10:56:34.726" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:34.207" endtime="20231212 10:56:34.726"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:34.730" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:35.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:35.199" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/putobject/key=value/",
            "LastModified": "2023-12-12T10:56:34.654Z",
            "ETag": "2023-12-12T10:56:34.654Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:56:34.728" endtime="20231212 10:56:35.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:35.200" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5543063998/putobject/key=value/",
            "LastModified": "2023-12-12T10:56:34.654Z",
            "ETag": "2023-12-12T10:56:34.654Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-5543063998/putobject/key=value/f1",
            "LastModified": "2023-12-12T10:56:34.673Z",
            "ETag": "2023-12-12T10:56:34.673Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:56:35.199" endtime="20231212 10:56:35.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:35.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:35.200" endtime="20231212 10:56:35.201"/>
</kw>
<status status="PASS" starttime="20231212 10:56:34.727" endtime="20231212 10:56:35.201"/>
</kw>
<msg timestamp="20231212 10:56:35.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:34.727" endtime="20231212 10:56:35.201"/>
</kw>
<msg timestamp="20231212 10:56:35.201" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/putobject/key=value/",
            "LastModified": "2023-12-12T10:56:34.654Z",
            "ETag": "2023-12-12T10:56:34.654Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:56:34.727" endtime="20231212 10:56:35.201"/>
</kw>
<msg timestamp="20231212 10:56:35.201" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/putobject/key=value/",
            "LastModified": "2023-12-12T10:56:34.654Z",
            "ETag": "2023-12-12T10:56:34.654Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:56:34.726" endtime="20231212 10:56:35.201"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:35.201" endtime="20231212 10:56:35.202"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:35.205" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:35.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:35.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:35.203" endtime="20231212 10:56:35.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:35.207" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:35.207" endtime="20231212 10:56:35.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:35.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:35.208" endtime="20231212 10:56:35.208"/>
</kw>
<status status="PASS" starttime="20231212 10:56:35.203" endtime="20231212 10:56:35.208"/>
</kw>
<msg timestamp="20231212 10:56:35.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:35.202" endtime="20231212 10:56:35.208"/>
</kw>
<status status="PASS" starttime="20231212 10:56:35.202" endtime="20231212 10:56:35.208"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:35.212" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:35.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:35.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:35.211" endtime="20231212 10:56:35.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:35.698" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:35.698" endtime="20231212 10:56:35.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:35.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:35.699" endtime="20231212 10:56:35.699"/>
</kw>
<status status="PASS" starttime="20231212 10:56:35.210" endtime="20231212 10:56:35.699"/>
</kw>
<msg timestamp="20231212 10:56:35.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:35.210" endtime="20231212 10:56:35.699"/>
</kw>
<msg timestamp="20231212 10:56:35.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:35.209" endtime="20231212 10:56:35.700"/>
</kw>
<msg timestamp="20231212 10:56:35.700" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 10:56:35.209" endtime="20231212 10:56:35.700"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:35.704" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-5543063998/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:36.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:36.189" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/putobject/key=value/",
            "LastModified": "2023-12-12T10:56:34.654Z",
            "ETag": "2023-12-12T10:56:34.654Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:56:35.702" endtime="20231212 10:56:36.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:36.190" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5543063998/putobject/key=value/",
            "LastModified": "2023-12-12T10:56:34.654Z",
            "ETag": "2023-12-12T10:56:34.654Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-5543063998/putobject/key=value/f1",
            "LastModified": "2023-12-12T10:56:34.673Z",
            "ETag": "2023-12-12T10:56:34.673Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-5543063998/putobject/key=value/zerobyte/",
            "LastModified": "2023-12-12T10:56:35.643Z",
            "ETag": "2023-12-12T10:56:35.643Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231212 10:56:36.189" endtime="20231212 10:56:36.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:36.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:36.190" endtime="20231212 10:56:36.191"/>
</kw>
<status status="PASS" starttime="20231212 10:56:35.701" endtime="20231212 10:56:36.191"/>
</kw>
<msg timestamp="20231212 10:56:36.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:35.701" endtime="20231212 10:56:36.191"/>
</kw>
<msg timestamp="20231212 10:56:36.192" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/putobject/key=value/",
            "LastModified": "2023-12-12T10:56:34.654Z",
            "ETag": "2023-12-12T10:56:34.654Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:56:35.701" endtime="20231212 10:56:36.192"/>
</kw>
<msg timestamp="20231212 10:56:36.192" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5543063998/putobject/key=value/",
            "LastModified": "2023-12-12T10:56:34.654Z",
            "ETag": "2023-12-12T10:56:34.654Z",
 ...</msg>
<status status="PASS" starttime="20231212 10:56:35.700" endtime="20231212 10:56:36.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:36.192" endtime="20231212 10:56:36.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:34.200" endtime="20231212 10:56:36.193"/>
</test>
<test id="s1-s6-s12-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:36.197" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:36.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:36.685" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:36.196" endtime="20231212 10:56:36.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:36.686" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:36.685" endtime="20231212 10:56:36.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:36.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:36.686" endtime="20231212 10:56:36.686"/>
</kw>
<status status="PASS" starttime="20231212 10:56:36.195" endtime="20231212 10:56:36.687"/>
</kw>
<msg timestamp="20231212 10:56:36.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:36.195" endtime="20231212 10:56:36.687"/>
</kw>
<msg timestamp="20231212 10:56:36.687" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:36.194" endtime="20231212 10:56:36.687"/>
</kw>
<msg timestamp="20231212 10:56:36.687" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:36.194" endtime="20231212 10:56:36.687"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:36.691" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:36.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:36.694" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:56:36.689" endtime="20231212 10:56:36.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:36.694" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:56:36.694" endtime="20231212 10:56:36.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:36.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:36.695" endtime="20231212 10:56:36.695"/>
</kw>
<status status="PASS" starttime="20231212 10:56:36.689" endtime="20231212 10:56:36.695"/>
</kw>
<msg timestamp="20231212 10:56:36.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:36.688" endtime="20231212 10:56:36.695"/>
</kw>
<msg timestamp="20231212 10:56:36.696" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:56:36.688" endtime="20231212 10:56:36.696"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:36.698" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:36.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:36.700" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:56:36.697" endtime="20231212 10:56:36.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:36.701" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:56:36.701" endtime="20231212 10:56:36.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:36.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:36.701" endtime="20231212 10:56:36.702"/>
</kw>
<status status="PASS" starttime="20231212 10:56:36.697" endtime="20231212 10:56:36.702"/>
</kw>
<msg timestamp="20231212 10:56:36.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:36.696" endtime="20231212 10:56:36.702"/>
</kw>
<msg timestamp="20231212 10:56:36.702" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231212 10:56:36.696" endtime="20231212 10:56:36.702"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:36.702" endtime="20231212 10:56:36.703"/>
</kw>
<status status="PASS" starttime="20231212 10:56:36.687" endtime="20231212 10:56:36.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:36.193" endtime="20231212 10:56:36.703"/>
</test>
<test id="s1-s6-s12-t3" name="Get object with wrong signature" line="49">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:56:36.704" endtime="20231212 10:56:36.704"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:36.707" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/link/ozone-test-5543063998/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:36.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:36.718" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:56:36.705" endtime="20231212 10:56:36.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:36.719" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0  39082      0 --:--:-- --:--:-- --:--:-- 41166
HTTP/1.1 403 Forbidden
Date: Tue, 12 Dec 2023 10:56:36 GMT
Cache-Control: no-cache
Expires: Tue, 12 Dec 2023 10:56:36 GMT
Pragma: no-cache
Content-Type: text/plain;charset=utf-8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: LPX6Mr50GfktJkV
x-amz-request-id: d0c4ccfd-5b80-44cf-a813-29baaae6fa02
Content-Length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20231212 10:56:36.718" endtime="20231212 10:56:36.719"/>
</kw>
<msg timestamp="20231212 10:56:36.719" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231212 10:56:36.705" endtime="20231212 10:56:36.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:36.719" endtime="20231212 10:56:36.720"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:36.704" endtime="20231212 10:56:36.720"/>
</test>
<test id="s1-s6-s12-t4" name="Get Partial object from s3 with both start and endoffset" line="54">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:36.724" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:37.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:37.227" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:36.723" endtime="20231212 10:56:37.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:37.228" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:37.228" endtime="20231212 10:56:37.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:37.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:37.229" endtime="20231212 10:56:37.229"/>
</kw>
<status status="PASS" starttime="20231212 10:56:36.722" endtime="20231212 10:56:37.229"/>
</kw>
<msg timestamp="20231212 10:56:37.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:36.722" endtime="20231212 10:56:37.230"/>
</kw>
<msg timestamp="20231212 10:56:37.230" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:36.722" endtime="20231212 10:56:37.230"/>
</kw>
<msg timestamp="20231212 10:56:37.230" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:36.721" endtime="20231212 10:56:37.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:37.230" endtime="20231212 10:56:37.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:37.231" endtime="20231212 10:56:37.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:37.231" endtime="20231212 10:56:37.231"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:37.235" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:56:37.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:37.237" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20231212 10:56:37.233" endtime="20231212 10:56:37.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:37.238" level="INFO">Rando</msg>
<status status="PASS" starttime="20231212 10:56:37.237" endtime="20231212 10:56:37.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:37.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:37.238" endtime="20231212 10:56:37.239"/>
</kw>
<status status="PASS" starttime="20231212 10:56:37.232" endtime="20231212 10:56:37.239"/>
</kw>
<msg timestamp="20231212 10:56:37.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:37.232" endtime="20231212 10:56:37.239"/>
</kw>
<msg timestamp="20231212 10:56:37.239" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20231212 10:56:37.232" endtime="20231212 10:56:37.239"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:37.242" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:37.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:37.244" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20231212 10:56:37.240" endtime="20231212 10:56:37.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:37.245" level="INFO">Rando</msg>
<status status="PASS" starttime="20231212 10:56:37.245" endtime="20231212 10:56:37.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:37.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:37.245" endtime="20231212 10:56:37.246"/>
</kw>
<status status="PASS" starttime="20231212 10:56:37.240" endtime="20231212 10:56:37.246"/>
</kw>
<msg timestamp="20231212 10:56:37.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:37.240" endtime="20231212 10:56:37.246"/>
</kw>
<msg timestamp="20231212 10:56:37.246" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20231212 10:56:37.239" endtime="20231212 10:56:37.246"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:37.246" endtime="20231212 10:56:37.247"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:37.250" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:37.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:37.751" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:37.249" endtime="20231212 10:56:37.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:37.752" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:37.752" endtime="20231212 10:56:37.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:37.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:37.752" endtime="20231212 10:56:37.753"/>
</kw>
<status status="PASS" starttime="20231212 10:56:37.248" endtime="20231212 10:56:37.753"/>
</kw>
<msg timestamp="20231212 10:56:37.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:37.248" endtime="20231212 10:56:37.753"/>
</kw>
<msg timestamp="20231212 10:56:37.754" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:37.247" endtime="20231212 10:56:37.754"/>
</kw>
<msg timestamp="20231212 10:56:37.754" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:37.247" endtime="20231212 10:56:37.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:37.754" endtime="20231212 10:56:37.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:37.754" endtime="20231212 10:56:37.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:37.755" endtime="20231212 10:56:37.755"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:37.759" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:56:37.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:37.761" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20231212 10:56:37.757" endtime="20231212 10:56:37.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:37.762" level="INFO">ndo</msg>
<status status="PASS" starttime="20231212 10:56:37.761" endtime="20231212 10:56:37.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:37.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:37.762" endtime="20231212 10:56:37.762"/>
</kw>
<status status="PASS" starttime="20231212 10:56:37.756" endtime="20231212 10:56:37.762"/>
</kw>
<msg timestamp="20231212 10:56:37.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:37.756" endtime="20231212 10:56:37.763"/>
</kw>
<msg timestamp="20231212 10:56:37.763" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20231212 10:56:37.755" endtime="20231212 10:56:37.763"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:37.766" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:37.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:37.768" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20231212 10:56:37.764" endtime="20231212 10:56:37.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:37.768" level="INFO">ndo</msg>
<status status="PASS" starttime="20231212 10:56:37.768" endtime="20231212 10:56:37.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:37.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:37.768" endtime="20231212 10:56:37.769"/>
</kw>
<status status="PASS" starttime="20231212 10:56:37.764" endtime="20231212 10:56:37.769"/>
</kw>
<msg timestamp="20231212 10:56:37.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:37.763" endtime="20231212 10:56:37.769"/>
</kw>
<msg timestamp="20231212 10:56:37.769" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20231212 10:56:37.763" endtime="20231212 10:56:37.769"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:37.770" endtime="20231212 10:56:37.770"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:37.773" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:38.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:38.270" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:37.772" endtime="20231212 10:56:38.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:38.271" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:38.270" endtime="20231212 10:56:38.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:38.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:38.271" endtime="20231212 10:56:38.272"/>
</kw>
<status status="PASS" starttime="20231212 10:56:37.771" endtime="20231212 10:56:38.272"/>
</kw>
<msg timestamp="20231212 10:56:38.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:37.771" endtime="20231212 10:56:38.272"/>
</kw>
<msg timestamp="20231212 10:56:38.272" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:37.771" endtime="20231212 10:56:38.272"/>
</kw>
<msg timestamp="20231212 10:56:38.272" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:37.770" endtime="20231212 10:56:38.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:38.273" endtime="20231212 10:56:38.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:38.273" endtime="20231212 10:56:38.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:38.274" endtime="20231212 10:56:38.274"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:38.278" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:56:38.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:38.280" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20231212 10:56:38.275" endtime="20231212 10:56:38.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:38.281" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20231212 10:56:38.280" endtime="20231212 10:56:38.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:38.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:38.281" endtime="20231212 10:56:38.281"/>
</kw>
<status status="PASS" starttime="20231212 10:56:38.275" endtime="20231212 10:56:38.282"/>
</kw>
<msg timestamp="20231212 10:56:38.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:38.275" endtime="20231212 10:56:38.282"/>
</kw>
<msg timestamp="20231212 10:56:38.282" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20231212 10:56:38.274" endtime="20231212 10:56:38.282"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:38.285" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:38.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:38.287" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20231212 10:56:38.283" endtime="20231212 10:56:38.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:38.288" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20231212 10:56:38.288" endtime="20231212 10:56:38.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:38.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:38.288" endtime="20231212 10:56:38.289"/>
</kw>
<status status="PASS" starttime="20231212 10:56:38.283" endtime="20231212 10:56:38.289"/>
</kw>
<msg timestamp="20231212 10:56:38.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:38.283" endtime="20231212 10:56:38.289"/>
</kw>
<msg timestamp="20231212 10:56:38.289" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20231212 10:56:38.282" endtime="20231212 10:56:38.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:38.289" endtime="20231212 10:56:38.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:36.720" endtime="20231212 10:56:38.290"/>
</test>
<test id="s1-s6-s12-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="80">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:38.296" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:38.775" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:38.775" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231212 10:56:38.292" endtime="20231212 10:56:38.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:38.776" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231212 10:56:38.776" endtime="20231212 10:56:38.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:38.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:38.776" endtime="20231212 10:56:38.777"/>
</kw>
<msg timestamp="20231212 10:56:38.777" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231212 10:56:38.292" endtime="20231212 10:56:38.777"/>
</kw>
<msg timestamp="20231212 10:56:38.777" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231212 10:56:38.291" endtime="20231212 10:56:38.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:38.777" endtime="20231212 10:56:38.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:38.290" endtime="20231212 10:56:38.778"/>
</test>
<test id="s1-s6-s12-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="85">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:38.783" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:39.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:39.273" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:38.781" endtime="20231212 10:56:39.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:39.275" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:39.274" endtime="20231212 10:56:39.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:39.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:39.275" endtime="20231212 10:56:39.275"/>
</kw>
<status status="PASS" starttime="20231212 10:56:38.781" endtime="20231212 10:56:39.275"/>
</kw>
<msg timestamp="20231212 10:56:39.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:38.780" endtime="20231212 10:56:39.276"/>
</kw>
<msg timestamp="20231212 10:56:39.276" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:38.780" endtime="20231212 10:56:39.276"/>
</kw>
<msg timestamp="20231212 10:56:39.276" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:38.779" endtime="20231212 10:56:39.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:39.276" endtime="20231212 10:56:39.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:39.277" endtime="20231212 10:56:39.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:39.277" endtime="20231212 10:56:39.277"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:39.281" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:39.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:39.283" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.279" endtime="20231212 10:56:39.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:39.283" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.283" endtime="20231212 10:56:39.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:39.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:39.284" endtime="20231212 10:56:39.284"/>
</kw>
<status status="PASS" starttime="20231212 10:56:39.278" endtime="20231212 10:56:39.284"/>
</kw>
<msg timestamp="20231212 10:56:39.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:39.278" endtime="20231212 10:56:39.284"/>
</kw>
<msg timestamp="20231212 10:56:39.285" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.278" endtime="20231212 10:56:39.285"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:39.287" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:39.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:39.289" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.286" endtime="20231212 10:56:39.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:39.290" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.289" endtime="20231212 10:56:39.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:39.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:39.290" endtime="20231212 10:56:39.290"/>
</kw>
<status status="PASS" starttime="20231212 10:56:39.285" endtime="20231212 10:56:39.291"/>
</kw>
<msg timestamp="20231212 10:56:39.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:39.285" endtime="20231212 10:56:39.291"/>
</kw>
<msg timestamp="20231212 10:56:39.291" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.285" endtime="20231212 10:56:39.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:39.291" endtime="20231212 10:56:39.291"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:38.779" endtime="20231212 10:56:39.292"/>
</test>
<test id="s1-s6-s12-t7" name="Get Partial object from s3 with only start offset" line="94">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:39.296" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:39.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:39.792" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:39.295" endtime="20231212 10:56:39.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:39.793" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:39.792" endtime="20231212 10:56:39.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:39.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:39.793" endtime="20231212 10:56:39.793"/>
</kw>
<status status="PASS" starttime="20231212 10:56:39.294" endtime="20231212 10:56:39.793"/>
</kw>
<msg timestamp="20231212 10:56:39.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:39.294" endtime="20231212 10:56:39.794"/>
</kw>
<msg timestamp="20231212 10:56:39.794" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:39.293" endtime="20231212 10:56:39.794"/>
</kw>
<msg timestamp="20231212 10:56:39.794" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:39.293" endtime="20231212 10:56:39.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:39.794" endtime="20231212 10:56:39.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:39.795" endtime="20231212 10:56:39.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:39.795" endtime="20231212 10:56:39.795"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:39.798" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:39.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:39.800" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.797" endtime="20231212 10:56:39.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:39.801" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.801" endtime="20231212 10:56:39.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:39.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:39.801" endtime="20231212 10:56:39.802"/>
</kw>
<status status="PASS" starttime="20231212 10:56:39.796" endtime="20231212 10:56:39.802"/>
</kw>
<msg timestamp="20231212 10:56:39.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:39.796" endtime="20231212 10:56:39.802"/>
</kw>
<msg timestamp="20231212 10:56:39.802" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.795" endtime="20231212 10:56:39.802"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:39.805" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:39.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:39.806" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.803" endtime="20231212 10:56:39.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:39.807" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.807" endtime="20231212 10:56:39.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:39.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:39.807" endtime="20231212 10:56:39.808"/>
</kw>
<status status="PASS" starttime="20231212 10:56:39.803" endtime="20231212 10:56:39.808"/>
</kw>
<msg timestamp="20231212 10:56:39.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:39.803" endtime="20231212 10:56:39.808"/>
</kw>
<msg timestamp="20231212 10:56:39.808" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:39.802" endtime="20231212 10:56:39.808"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:39.808" endtime="20231212 10:56:39.809"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:39.292" endtime="20231212 10:56:39.809"/>
</test>
<test id="s1-s6-s12-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="103">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:39.813" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:40.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:40.290" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:39.812" endtime="20231212 10:56:40.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:40.291" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:40.290" endtime="20231212 10:56:40.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:40.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:40.291" endtime="20231212 10:56:40.292"/>
</kw>
<status status="PASS" starttime="20231212 10:56:39.811" endtime="20231212 10:56:40.292"/>
</kw>
<msg timestamp="20231212 10:56:40.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:39.811" endtime="20231212 10:56:40.292"/>
</kw>
<msg timestamp="20231212 10:56:40.292" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:39.811" endtime="20231212 10:56:40.292"/>
</kw>
<msg timestamp="20231212 10:56:40.292" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:39.810" endtime="20231212 10:56:40.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:40.293" endtime="20231212 10:56:40.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:40.293" endtime="20231212 10:56:40.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:40.293" endtime="20231212 10:56:40.294"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:40.297" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:56:40.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:40.299" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20231212 10:56:40.295" endtime="20231212 10:56:40.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:40.299" level="INFO">R</msg>
<status status="PASS" starttime="20231212 10:56:40.299" endtime="20231212 10:56:40.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:40.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:40.300" endtime="20231212 10:56:40.300"/>
</kw>
<status status="PASS" starttime="20231212 10:56:40.295" endtime="20231212 10:56:40.300"/>
</kw>
<msg timestamp="20231212 10:56:40.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:40.294" endtime="20231212 10:56:40.300"/>
</kw>
<msg timestamp="20231212 10:56:40.301" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20231212 10:56:40.294" endtime="20231212 10:56:40.301"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:40.303" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:40.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:40.305" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20231212 10:56:40.302" endtime="20231212 10:56:40.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:40.306" level="INFO">R</msg>
<status status="PASS" starttime="20231212 10:56:40.305" endtime="20231212 10:56:40.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:40.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:40.306" endtime="20231212 10:56:40.307"/>
</kw>
<status status="PASS" starttime="20231212 10:56:40.301" endtime="20231212 10:56:40.307"/>
</kw>
<msg timestamp="20231212 10:56:40.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:40.301" endtime="20231212 10:56:40.307"/>
</kw>
<msg timestamp="20231212 10:56:40.308" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20231212 10:56:40.301" endtime="20231212 10:56:40.308"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:40.308" endtime="20231212 10:56:40.308"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:40.311" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:40.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:40.792" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:40.310" endtime="20231212 10:56:40.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:40.793" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:40.792" endtime="20231212 10:56:40.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:40.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:40.793" endtime="20231212 10:56:40.794"/>
</kw>
<status status="PASS" starttime="20231212 10:56:40.310" endtime="20231212 10:56:40.794"/>
</kw>
<msg timestamp="20231212 10:56:40.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:40.309" endtime="20231212 10:56:40.794"/>
</kw>
<msg timestamp="20231212 10:56:40.794" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:40.309" endtime="20231212 10:56:40.794"/>
</kw>
<msg timestamp="20231212 10:56:40.794" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:40.308" endtime="20231212 10:56:40.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:40.795" endtime="20231212 10:56:40.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:40.795" endtime="20231212 10:56:40.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:40.795" endtime="20231212 10:56:40.796"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:40.800" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:56:40.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:40.802" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20231212 10:56:40.797" endtime="20231212 10:56:40.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:40.802" level="INFO">o</msg>
<status status="PASS" starttime="20231212 10:56:40.802" endtime="20231212 10:56:40.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:40.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:40.803" endtime="20231212 10:56:40.803"/>
</kw>
<status status="PASS" starttime="20231212 10:56:40.797" endtime="20231212 10:56:40.803"/>
</kw>
<msg timestamp="20231212 10:56:40.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:40.796" endtime="20231212 10:56:40.803"/>
</kw>
<msg timestamp="20231212 10:56:40.803" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20231212 10:56:40.796" endtime="20231212 10:56:40.804"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:40.806" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:40.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:40.808" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20231212 10:56:40.805" endtime="20231212 10:56:40.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:40.809" level="INFO">o</msg>
<status status="PASS" starttime="20231212 10:56:40.809" endtime="20231212 10:56:40.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:40.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:40.809" endtime="20231212 10:56:40.810"/>
</kw>
<status status="PASS" starttime="20231212 10:56:40.804" endtime="20231212 10:56:40.810"/>
</kw>
<msg timestamp="20231212 10:56:40.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:40.804" endtime="20231212 10:56:40.810"/>
</kw>
<msg timestamp="20231212 10:56:40.810" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20231212 10:56:40.804" endtime="20231212 10:56:40.810"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:40.810" endtime="20231212 10:56:40.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:39.809" endtime="20231212 10:56:40.811"/>
</test>
<test id="s1-s6-s12-t9" name="Get Partial object from s3 to get last n bytes" line="120">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:40.816" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:41.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:41.298" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:40.814" endtime="20231212 10:56:41.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:41.299" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:41 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:41.298" endtime="20231212 10:56:41.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:41.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:41.299" endtime="20231212 10:56:41.300"/>
</kw>
<status status="PASS" starttime="20231212 10:56:40.813" endtime="20231212 10:56:41.300"/>
</kw>
<msg timestamp="20231212 10:56:41.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:40.813" endtime="20231212 10:56:41.300"/>
</kw>
<msg timestamp="20231212 10:56:41.300" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:40.813" endtime="20231212 10:56:41.300"/>
</kw>
<msg timestamp="20231212 10:56:41.300" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231212 10:56:40.812" endtime="20231212 10:56:41.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:41.300" endtime="20231212 10:56:41.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:41.301" endtime="20231212 10:56:41.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:41.301" endtime="20231212 10:56:41.301"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:41.304" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20231212 10:56:41.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:41.306" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20231212 10:56:41.303" endtime="20231212 10:56:41.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:41.307" level="INFO">ext</msg>
<status status="PASS" starttime="20231212 10:56:41.307" endtime="20231212 10:56:41.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:41.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:41.307" endtime="20231212 10:56:41.308"/>
</kw>
<status status="PASS" starttime="20231212 10:56:41.302" endtime="20231212 10:56:41.308"/>
</kw>
<msg timestamp="20231212 10:56:41.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:41.302" endtime="20231212 10:56:41.308"/>
</kw>
<msg timestamp="20231212 10:56:41.308" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20231212 10:56:41.302" endtime="20231212 10:56:41.308"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:41.311" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:41.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:41.313" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20231212 10:56:41.310" endtime="20231212 10:56:41.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:41.314" level="INFO">ext</msg>
<status status="PASS" starttime="20231212 10:56:41.313" endtime="20231212 10:56:41.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:41.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:41.314" endtime="20231212 10:56:41.314"/>
</kw>
<status status="PASS" starttime="20231212 10:56:41.309" endtime="20231212 10:56:41.314"/>
</kw>
<msg timestamp="20231212 10:56:41.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:41.309" endtime="20231212 10:56:41.314"/>
</kw>
<msg timestamp="20231212 10:56:41.315" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20231212 10:56:41.308" endtime="20231212 10:56:41.315"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:41.315" endtime="20231212 10:56:41.315"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:41.318" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:41.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:41.792" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:41.317" endtime="20231212 10:56:41.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:41.793" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:41 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:41.792" endtime="20231212 10:56:41.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:41.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:41.793" endtime="20231212 10:56:41.794"/>
</kw>
<status status="PASS" starttime="20231212 10:56:41.317" endtime="20231212 10:56:41.794"/>
</kw>
<msg timestamp="20231212 10:56:41.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:41.316" endtime="20231212 10:56:41.794"/>
</kw>
<msg timestamp="20231212 10:56:41.794" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:41.316" endtime="20231212 10:56:41.794"/>
</kw>
<msg timestamp="20231212 10:56:41.794" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:41.315" endtime="20231212 10:56:41.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:41.795" endtime="20231212 10:56:41.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:41.795" endtime="20231212 10:56:41.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:41.795" endtime="20231212 10:56:41.796"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:41.799" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:41.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:41.800" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:41.797" endtime="20231212 10:56:41.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:41.801" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:41.801" endtime="20231212 10:56:41.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:41.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:41.801" endtime="20231212 10:56:41.802"/>
</kw>
<status status="PASS" starttime="20231212 10:56:41.797" endtime="20231212 10:56:41.802"/>
</kw>
<msg timestamp="20231212 10:56:41.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:41.796" endtime="20231212 10:56:41.802"/>
</kw>
<msg timestamp="20231212 10:56:41.802" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:41.796" endtime="20231212 10:56:41.802"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:41.805" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:41.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:41.807" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:41.804" endtime="20231212 10:56:41.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:41.807" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:41.807" endtime="20231212 10:56:41.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:41.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:41.808" endtime="20231212 10:56:41.808"/>
</kw>
<status status="PASS" starttime="20231212 10:56:41.803" endtime="20231212 10:56:41.808"/>
</kw>
<msg timestamp="20231212 10:56:41.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:41.803" endtime="20231212 10:56:41.808"/>
</kw>
<msg timestamp="20231212 10:56:41.808" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:41.803" endtime="20231212 10:56:41.809"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:41.809" endtime="20231212 10:56:41.809"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:40.811" endtime="20231212 10:56:41.809"/>
</test>
<test id="s1-s6-s12-t10" name="Incorrect values for end and start offset" line="138">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:41.814" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:42.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:42.294" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:41.812" endtime="20231212 10:56:42.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:42.295" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:42 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:42.295" endtime="20231212 10:56:42.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:42.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:42.295" endtime="20231212 10:56:42.296"/>
</kw>
<status status="PASS" starttime="20231212 10:56:41.812" endtime="20231212 10:56:42.296"/>
</kw>
<msg timestamp="20231212 10:56:42.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:41.811" endtime="20231212 10:56:42.296"/>
</kw>
<msg timestamp="20231212 10:56:42.296" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:41.811" endtime="20231212 10:56:42.296"/>
</kw>
<msg timestamp="20231212 10:56:42.297" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:41.810" endtime="20231212 10:56:42.297"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:42.297" endtime="20231212 10:56:42.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:42.297" endtime="20231212 10:56:42.298"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:42.301" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:42.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:42.303" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.299" endtime="20231212 10:56:42.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:42.303" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.303" endtime="20231212 10:56:42.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:42.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:42.304" endtime="20231212 10:56:42.304"/>
</kw>
<status status="PASS" starttime="20231212 10:56:42.298" endtime="20231212 10:56:42.304"/>
</kw>
<msg timestamp="20231212 10:56:42.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:42.298" endtime="20231212 10:56:42.304"/>
</kw>
<msg timestamp="20231212 10:56:42.305" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.298" endtime="20231212 10:56:42.305"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:42.307" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:42.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:42.309" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.306" endtime="20231212 10:56:42.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:42.310" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.309" endtime="20231212 10:56:42.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:42.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:42.310" endtime="20231212 10:56:42.310"/>
</kw>
<status status="PASS" starttime="20231212 10:56:42.305" endtime="20231212 10:56:42.310"/>
</kw>
<msg timestamp="20231212 10:56:42.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:42.305" endtime="20231212 10:56:42.311"/>
</kw>
<msg timestamp="20231212 10:56:42.311" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.305" endtime="20231212 10:56:42.311"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:42.311" endtime="20231212 10:56:42.311"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:42.314" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:42.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:42.792" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:42.313" endtime="20231212 10:56:42.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:42.793" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:42 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231212 10:56:42.792" endtime="20231212 10:56:42.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:42.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:42.793" endtime="20231212 10:56:42.793"/>
</kw>
<status status="PASS" starttime="20231212 10:56:42.313" endtime="20231212 10:56:42.793"/>
</kw>
<msg timestamp="20231212 10:56:42.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:42.312" endtime="20231212 10:56:42.793"/>
</kw>
<msg timestamp="20231212 10:56:42.794" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:42.312" endtime="20231212 10:56:42.794"/>
</kw>
<msg timestamp="20231212 10:56:42.794" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 12 Dec 2023 10:56:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231212 10:56:42.311" endtime="20231212 10:56:42.794"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:42.794" endtime="20231212 10:56:42.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:42.795" endtime="20231212 10:56:42.795"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:42.798" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:42.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:42.800" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.797" endtime="20231212 10:56:42.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:42.801" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.800" endtime="20231212 10:56:42.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:42.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:42.801" endtime="20231212 10:56:42.802"/>
</kw>
<status status="PASS" starttime="20231212 10:56:42.796" endtime="20231212 10:56:42.802"/>
</kw>
<msg timestamp="20231212 10:56:42.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:42.796" endtime="20231212 10:56:42.802"/>
</kw>
<msg timestamp="20231212 10:56:42.802" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.795" endtime="20231212 10:56:42.802"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:42.804" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:42.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:42.806" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.803" endtime="20231212 10:56:42.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:42.807" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.806" endtime="20231212 10:56:42.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:42.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:42.807" endtime="20231212 10:56:42.807"/>
</kw>
<status status="PASS" starttime="20231212 10:56:42.803" endtime="20231212 10:56:42.808"/>
</kw>
<msg timestamp="20231212 10:56:42.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:42.803" endtime="20231212 10:56:42.808"/>
</kw>
<msg timestamp="20231212 10:56:42.808" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231212 10:56:42.802" endtime="20231212 10:56:42.808"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231212 10:56:42.808" endtime="20231212 10:56:42.808"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:41.810" endtime="20231212 10:56:42.809"/>
</test>
<test id="s1-s6-s12-t11" name="Zero byte file" line="153">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:42.812" level="INFO">Running command 'ozone sh bucket info /s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:47.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:47.163" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-12-12T10:54:44.784Z",
  "modificationTime" : "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:56:42.811" endtime="20231212 10:56:47.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:47.164" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-12-12T10:54:44.784Z",
  "modificationTime" : "2023-12-12T10:54:44.784Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20231212 10:56:47.163" endtime="20231212 10:56:47.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:47.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:47.164" endtime="20231212 10:56:47.165"/>
</kw>
<status status="PASS" starttime="20231212 10:56:42.810" endtime="20231212 10:56:47.165"/>
</kw>
<msg timestamp="20231212 10:56:47.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:42.810" endtime="20231212 10:56:47.165"/>
</kw>
<msg timestamp="20231212 10:56:47.165" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-12-12T10:54:44.784Z",
  "modificationTime" : "2023-12-12T10...</msg>
<status status="PASS" starttime="20231212 10:56:42.810" endtime="20231212 10:56:47.165"/>
</kw>
<kw name="Execute" library="os">
<var>${linked}</var>
<arg>echo '${result}' | jq -j '.sourceVolume,"/",.sourceBucket'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:47.168" level="INFO">Running command 'echo '{
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-12-12T10:54:44.784Z",
  "modificationTime" : "2023-12-12T10:54:44.784Z",
  "owner" : "testuser",
  "link" : true
}' | jq -j '.sourceVolume,"/",.sourceBucket' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:47.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:47.195" level="INFO">${output} = legacy/source-bucket</msg>
<status status="PASS" starttime="20231212 10:56:47.166" endtime="20231212 10:56:47.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:47.196" level="INFO">legacy/source-bucket</msg>
<status status="PASS" starttime="20231212 10:56:47.196" endtime="20231212 10:56:47.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:47.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:47.196" endtime="20231212 10:56:47.197"/>
</kw>
<status status="PASS" starttime="20231212 10:56:47.166" endtime="20231212 10:56:47.197"/>
</kw>
<msg timestamp="20231212 10:56:47.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:47.166" endtime="20231212 10:56:47.197"/>
</kw>
<msg timestamp="20231212 10:56:47.197" level="INFO">${linked} = legacy/source-bucket</msg>
<status status="PASS" starttime="20231212 10:56:47.165" endtime="20231212 10:56:47.197"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${eval}</var>
<arg>"source" in """${linked}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:56:47.198" level="INFO">${eval} = True</msg>
<status status="PASS" starttime="20231212 10:56:47.197" endtime="20231212 10:56:47.198"/>
</kw>
<if>
<branch type="IF" condition="${eval} == ${True}">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${linked}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:47.201" level="INFO">Running command 'ozone sh bucket info legacy/source-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:51.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:51.345" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "legacy",
  "name" : "source-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 418406817,
  "usedNamespace" : 56,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20231212 10:56:47.200" endtime="20231212 10:56:51.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:51.346" level="INFO">{
  "metadata" : { },
  "volumeName" : "legacy",
  "name" : "source-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 418406817,
  "usedNamespace" : 56,
  "creationTime" : "2023-12-12T10:54:40.536Z",
  "modificationTime" : "2023-12-12T10:54:40.536Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20231212 10:56:51.346" endtime="20231212 10:56:51.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:51.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:51.346" endtime="20231212 10:56:51.347"/>
</kw>
<status status="PASS" starttime="20231212 10:56:47.199" endtime="20231212 10:56:51.347"/>
</kw>
<msg timestamp="20231212 10:56:51.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:47.199" endtime="20231212 10:56:51.347"/>
</kw>
<msg timestamp="20231212 10:56:51.347" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "legacy",
  "name" : "source-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 418406817,
  "usedNamespace" : 56,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20231212 10:56:47.198" endtime="20231212 10:56:51.347"/>
</kw>
<status status="PASS" starttime="20231212 10:56:47.198" endtime="20231212 10:56:51.347"/>
</branch>
<status status="PASS" starttime="20231212 10:56:47.198" endtime="20231212 10:56:51.347"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${fsolayout}</var>
<arg>"OPTIMIZED" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231212 10:56:51.348" level="INFO">${fsolayout} = True</msg>
<status status="PASS" starttime="20231212 10:56:51.348" endtime="20231212 10:56:51.348"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:51.351" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:51.840" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:51.840" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:51.349" endtime="20231212 10:56:51.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:51.841" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:51.840" endtime="20231212 10:56:51.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:51.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:51.841" endtime="20231212 10:56:51.841"/>
</kw>
<msg timestamp="20231212 10:56:51.841" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:51.349" endtime="20231212 10:56:51.841"/>
</kw>
<msg timestamp="20231212 10:56:51.842" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:51.348" endtime="20231212 10:56:51.842"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:51.842" endtime="20231212 10:56:51.843"/>
</kw>
<status status="PASS" starttime="20231212 10:56:51.842" endtime="20231212 10:56:51.843"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:56:51.843" endtime="20231212 10:56:51.843"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:56:51.843" endtime="20231212 10:56:51.843"/>
</branch>
<status status="PASS" starttime="20231212 10:56:51.842" endtime="20231212 10:56:51.843"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:51.846" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:52.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:52.340" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:51.844" endtime="20231212 10:56:52.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:52.341" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:52.340" endtime="20231212 10:56:52.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:52.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:52.341" endtime="20231212 10:56:52.342"/>
</kw>
<msg timestamp="20231212 10:56:52.342" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:51.844" endtime="20231212 10:56:52.342"/>
</kw>
<msg timestamp="20231212 10:56:52.342" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:51.843" endtime="20231212 10:56:52.342"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:52.343" endtime="20231212 10:56:52.343"/>
</kw>
<status status="PASS" starttime="20231212 10:56:52.342" endtime="20231212 10:56:52.343"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:56:52.343" endtime="20231212 10:56:52.343"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:56:52.343" endtime="20231212 10:56:52.343"/>
</branch>
<status status="PASS" starttime="20231212 10:56:52.342" endtime="20231212 10:56:52.343"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:52.346" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5543063998/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:52.862" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:52.862" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:52.345" endtime="20231212 10:56:52.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:52.863" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:52.863" endtime="20231212 10:56:52.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:52.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:52.863" endtime="20231212 10:56:52.864"/>
</kw>
<msg timestamp="20231212 10:56:52.864" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:52.344" endtime="20231212 10:56:52.864"/>
</kw>
<msg timestamp="20231212 10:56:52.864" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231212 10:56:52.343" endtime="20231212 10:56:52.864"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:52.865" endtime="20231212 10:56:52.865"/>
</kw>
<status status="PASS" starttime="20231212 10:56:52.864" endtime="20231212 10:56:52.865"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 10:56:52.865" endtime="20231212 10:56:52.865"/>
</kw>
<status status="NOT RUN" starttime="20231212 10:56:52.865" endtime="20231212 10:56:52.865"/>
</branch>
<status status="PASS" starttime="20231212 10:56:52.864" endtime="20231212 10:56:52.865"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:42.809" endtime="20231212 10:56:52.866"/>
</test>
<test id="s1-s6-s12-t12" name="Create file with user defined metadata" line="183">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:52.869" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231212 10:56:52.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:52.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:52.868" endtime="20231212 10:56:52.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:52.872" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:52.871" endtime="20231212 10:56:52.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:52.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:52.872" endtime="20231212 10:56:52.872"/>
</kw>
<status status="PASS" starttime="20231212 10:56:52.867" endtime="20231212 10:56:52.872"/>
</kw>
<msg timestamp="20231212 10:56:52.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:52.867" endtime="20231212 10:56:52.873"/>
</kw>
<status status="PASS" starttime="20231212 10:56:52.867" endtime="20231212 10:56:52.873"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:52.876" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:53.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:53.449" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:52.875" endtime="20231212 10:56:53.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:53.450" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:53.449" endtime="20231212 10:56:53.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:53.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:53.450" endtime="20231212 10:56:53.451"/>
</kw>
<status status="PASS" starttime="20231212 10:56:52.874" endtime="20231212 10:56:53.451"/>
</kw>
<msg timestamp="20231212 10:56:53.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:52.874" endtime="20231212 10:56:53.451"/>
</kw>
<msg timestamp="20231212 10:56:53.451" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:52.873" endtime="20231212 10:56:53.451"/>
</kw>
<status status="PASS" starttime="20231212 10:56:52.873" endtime="20231212 10:56:53.451"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:53.455" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:53.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:53.928" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:53 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:53.453" endtime="20231212 10:56:53.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:53.929" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:56:53 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:53 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:53.928" endtime="20231212 10:56:53.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:53.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:53.929" endtime="20231212 10:56:53.930"/>
</kw>
<status status="PASS" starttime="20231212 10:56:53.453" endtime="20231212 10:56:53.930"/>
</kw>
<msg timestamp="20231212 10:56:53.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:53.453" endtime="20231212 10:56:53.930"/>
</kw>
<msg timestamp="20231212 10:56:53.930" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:53 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:53.452" endtime="20231212 10:56:53.930"/>
</kw>
<msg timestamp="20231212 10:56:53.930" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:53 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:53.452" endtime="20231212 10:56:53.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:53.930" endtime="20231212 10:56:53.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:53.931" endtime="20231212 10:56:53.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:53.934" level="INFO">Running command 'ozone sh key info /s3v/link/ozone-test-5543063998/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:58.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:58.241" level="INFO">${output} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-5543063998/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-12-12T10:56:53.350Z",
  "m...</msg>
<status status="PASS" starttime="20231212 10:56:53.933" endtime="20231212 10:56:58.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:58.242" level="INFO">{
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-5543063998/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-12-12T10:56:53.350Z",
  "modificationTime" : "2023-12-12T10:56:53.398Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200258,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231212 10:56:58.242" endtime="20231212 10:56:58.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:58.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:58.242" endtime="20231212 10:56:58.243"/>
</kw>
<status status="PASS" starttime="20231212 10:56:53.932" endtime="20231212 10:56:58.243"/>
</kw>
<msg timestamp="20231212 10:56:58.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:53.932" endtime="20231212 10:56:58.243"/>
</kw>
<msg timestamp="20231212 10:56:58.243" level="INFO">${result} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-5543063998/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-12-12T10:56:53.350Z",
  "m...</msg>
<status status="PASS" starttime="20231212 10:56:53.931" endtime="20231212 10:56:58.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:58.244" endtime="20231212 10:56:58.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:58.244" endtime="20231212 10:56:58.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:52.866" endtime="20231212 10:56:58.245"/>
</test>
<test id="s1-s6-s12-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="195">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:58.249" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231212 10:56:58.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:58.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:58.247" endtime="20231212 10:56:58.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:58.251" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:58.250" endtime="20231212 10:56:58.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:58.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:58.251" endtime="20231212 10:56:58.251"/>
</kw>
<status status="PASS" starttime="20231212 10:56:58.247" endtime="20231212 10:56:58.251"/>
</kw>
<msg timestamp="20231212 10:56:58.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:58.246" endtime="20231212 10:56:58.252"/>
</kw>
<status status="PASS" starttime="20231212 10:56:58.246" endtime="20231212 10:56:58.252"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:58.255" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:58.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:58.768" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:58.254" endtime="20231212 10:56:58.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:58.769" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:58.768" endtime="20231212 10:56:58.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:58.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:58.769" endtime="20231212 10:56:58.770"/>
</kw>
<status status="PASS" starttime="20231212 10:56:58.253" endtime="20231212 10:56:58.770"/>
</kw>
<msg timestamp="20231212 10:56:58.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:58.253" endtime="20231212 10:56:58.770"/>
</kw>
<msg timestamp="20231212 10:56:58.770" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231212 10:56:58.252" endtime="20231212 10:56:58.770"/>
</kw>
<status status="PASS" starttime="20231212 10:56:58.252" endtime="20231212 10:56:58.770"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:58.774" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5543063998/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:59.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:59.241" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:58 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:58.772" endtime="20231212 10:56:59.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:59.243" level="INFO">{
    "LastModified": "Tue, 12 Dec 2023 10:56:58 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 12 Dec 2023 10:56:59 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20231212 10:56:59.242" endtime="20231212 10:56:59.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:59.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:59.243" endtime="20231212 10:56:59.243"/>
</kw>
<status status="PASS" starttime="20231212 10:56:58.772" endtime="20231212 10:56:59.243"/>
</kw>
<msg timestamp="20231212 10:56:59.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:58.771" endtime="20231212 10:56:59.244"/>
</kw>
<msg timestamp="20231212 10:56:59.244" level="INFO">${output} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:58 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:58.771" endtime="20231212 10:56:59.244"/>
</kw>
<msg timestamp="20231212 10:56:59.244" level="INFO">${result} = {
    "LastModified": "Tue, 12 Dec 2023 10:56:58 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231212 10:56:58.770" endtime="20231212 10:56:59.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:59.244" endtime="20231212 10:56:59.244"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:59.245" endtime="20231212 10:56:59.245"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:58.245" endtime="20231212 10:56:59.245"/>
</test>
<test id="s1-s6-s12-t14" name="Create file with user defined metadata size larger than 2 KB" line="203">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:59.249" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231212 10:56:59.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:59.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:59.247" endtime="20231212 10:56:59.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:59.251" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:59.251" endtime="20231212 10:56:59.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:59.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:59.251" endtime="20231212 10:56:59.252"/>
</kw>
<status status="PASS" starttime="20231212 10:56:59.247" endtime="20231212 10:56:59.252"/>
</kw>
<msg timestamp="20231212 10:56:59.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:59.247" endtime="20231212 10:56:59.252"/>
</kw>
<status status="PASS" starttime="20231212 10:56:59.246" endtime="20231212 10:56:59.252"/>
</kw>
<kw name="Execute" library="os">
<var>${custom_metadata_value}</var>
<arg>printf 'v%.0s' {1..3000}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:59.255" level="INFO">Running command 'printf 'v%.0s' {1..3000} 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:59.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:59.258" level="INFO">${output} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20231212 10:56:59.253" endtime="20231212 10:56:59.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:59.259" level="INFO">vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv</msg>
<status status="PASS" starttime="20231212 10:56:59.258" endtime="20231212 10:56:59.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:59.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:59.259" endtime="20231212 10:56:59.260"/>
</kw>
<status status="PASS" starttime="20231212 10:56:59.253" endtime="20231212 10:56:59.260"/>
</kw>
<msg timestamp="20231212 10:56:59.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:59.253" endtime="20231212 10:56:59.260"/>
</kw>
<msg timestamp="20231212 10:56:59.260" level="INFO">${custom_metadata_value} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20231212 10:56:59.252" endtime="20231212 10:56:59.260"/>
</kw>
<kw name="Execute AWSS3APICli and ignore error" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:59.263" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5543063998/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:59.741" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:56:59.741" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231212 10:56:59.262" endtime="20231212 10:56:59.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:59.742" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231212 10:56:59.742" endtime="20231212 10:56:59.742"/>
</kw>
<msg timestamp="20231212 10:56:59.743" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231212 10:56:59.261" endtime="20231212 10:56:59.743"/>
</kw>
<msg timestamp="20231212 10:56:59.743" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231212 10:56:59.260" endtime="20231212 10:56:59.743"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:56:59.743" endtime="20231212 10:56:59.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:59.246" endtime="20231212 10:56:59.744"/>
</test>
<test id="s1-s6-s12-t15" name="Create small file and expect ETag (MD5) in a reponse header" line="209">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:59.748" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20231212 10:56:59.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:59.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:56:59.746" endtime="20231212 10:56:59.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:59.754" level="INFO"/>
<status status="PASS" starttime="20231212 10:56:59.753" endtime="20231212 10:56:59.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:59.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:59.754" endtime="20231212 10:56:59.754"/>
</kw>
<status status="PASS" starttime="20231212 10:56:59.746" endtime="20231212 10:56:59.755"/>
</kw>
<msg timestamp="20231212 10:56:59.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:59.745" endtime="20231212 10:56:59.755"/>
</kw>
<status status="PASS" starttime="20231212 10:56:59.745" endtime="20231212 10:56:59.755"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:59.757" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:56:59.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:56:59.761" level="INFO">${output} = 6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<status status="PASS" starttime="20231212 10:56:59.756" endtime="20231212 10:56:59.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:56:59.762" level="INFO">6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<status status="PASS" starttime="20231212 10:56:59.762" endtime="20231212 10:56:59.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:56:59.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:56:59.762" endtime="20231212 10:56:59.763"/>
</kw>
<status status="PASS" starttime="20231212 10:56:59.756" endtime="20231212 10:56:59.763"/>
</kw>
<msg timestamp="20231212 10:56:59.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:59.755" endtime="20231212 10:56:59.763"/>
</kw>
<msg timestamp="20231212 10:56:59.763" level="INFO">${file_md5_checksum} = 6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<status status="PASS" starttime="20231212 10:56:59.755" endtime="20231212 10:56:59.763"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:56:59.766" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:00.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:00.283" level="INFO">${output} = 2023-12-12 10:57:00,137 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:00,137 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:56:59.765" endtime="20231212 10:57:00.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:00.284" level="INFO">2023-12-12 10:57:00,137 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:00,137 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://link']
2023-12-12 10:57:00,138 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f094082e9d8&gt;
2023-12-12 10:57:00,138 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f0941622730&gt;
2023-12-12 10:57:00,138 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f0941650ae8&gt;
2023-12-12 10:57:00,139 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:57:00,142 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f094095a400&gt;
2023-12-12 10:57:00,143 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f094083c048&gt;
2023-12-12 10:57:00,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,143 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f094083c048&gt;
2023-12-12 10:57:00,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,145 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09416235c0&gt;
2023-12-12 10:57:00,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,146 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09416235c0&gt;
2023-12-12 10:57:00,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,146 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09416235c0&gt;
2023-12-12 10:57:00,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,147 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,147 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,147 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,147 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,147 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,147 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,147 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,147 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,148 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,148 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,148 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,148 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,148 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,148 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,148 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,148 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09416235c0&gt;
2023-12-12 10:57:00,149 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,149 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,149 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,149 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09416235c0&gt;
2023-12-12 10:57:00,149 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,149 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09416235c0&gt;
2023-12-12 10:57:00,149 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,149 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f094853b9b0&gt;
2023-12-12 10:57:00,150 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:57:00,150 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2023-12-12 10:57:00,150 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2023-12-12 10:57:00,150 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2023-12-12 10:57:00,150 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2023-12-12 10:57:00,151 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2023-12-12 10:57:00,151 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:57:00,165 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:57:00,165 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f09422e7378&gt;
2023-12-12 10:57:00,166 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:57:00,176 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f09425be2f0&gt;
2023-12-12 10:57:00,176 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f09425be0d0&gt;
2023-12-12 10:57:00,176 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,179 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:00,179 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:57:00,180 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:00,181 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,181 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f09422e7378&gt;
2023-12-12 10:57:00,182 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f09425be2f0&gt;
2023-12-12 10:57:00,182 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f09425be0d0&gt;
2023-12-12 10:57:00,182 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,184 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:00,185 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:00,186 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,186 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f09422e7378&gt;
2023-12-12 10:57:00,187 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f09425be2f0&gt;
2023-12-12 10:57:00,187 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f09425be0d0&gt;
2023-12-12 10:57:00,188 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,190 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:00,191 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:00,191 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,192 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:57:00,193 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:00,193 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09400dcd68&gt;}) about to wait for the following futures []
2023-12-12 10:57:00,193 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09400dcd68&gt;}) done waiting for dependent futures
2023-12-12 10:57:00,194 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09400dcd68&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f094019aba8&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f094010dd68&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f094010ddd8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f094010df60&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09400dcd68&gt;}
2023-12-12 10:57:00,194 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f094010df60&gt; for transfer request: 0.
2023-12-12 10:57:00,194 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:00,195 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:57:00,195 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:00,195 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:57:00,195 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f094019aba8&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f09400ef1d0&gt;, 'bucket': 'link', 'key': 'small_file', 'extra_args': {}}
2023-12-12 10:57:00,196 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f09423016a8&gt;
2023-12-12 10:57:00,196 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f09422feae8&gt;
2023-12-12 10:57:00,196 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f0942301f28&gt;
2023-12-12 10:57:00,196 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f09422fea60&gt;
2023-12-12 10:57:00,196 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f0940163128&gt;&gt;
2023-12-12 10:57:00,196 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f09401634e0&gt;&gt;
2023-12-12 10:57:00,196 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f09422fe8c8&gt;
2023-12-12 10:57:00,197 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f0942ca40d0&gt;
2023-12-12 10:57:00,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f09422fed90&gt;
2023-12-12 10:57:00,199 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:57:00,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f0940163128&gt;&gt;
2023-12-12 10:57:00,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f09422fe598&gt;
2023-12-12 10:57:00,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f09422850d0&gt;
2023-12-12 10:57:00,199 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/link/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'bNQ8NMvl5IK/2PQAx1erPQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f09400ef1d0&gt;, 'url': 'http://s3g:9878/link/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f094019ada0&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:00,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f0944827158&gt;
2023-12-12 10:57:00,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f094019ad68&gt;&gt;
2023-12-12 10:57:00,200 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f0940163550&gt;&gt;
2023-12-12 10:57:00,200 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f09422fe7b8&gt;
2023-12-12 10:57:00,200 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f0940163550&gt;&gt;
2023-12-12 10:57:00,200 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:00,201 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:00,201 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/small_file

content-md5:bNQ8NMvl5IK/2PQAx1erPQ==
host:s3g:9878
x-amz-content-sha256:138558408ffb858951dfa1cb6fd2200f3c9e5f9a2636dbed29bb241159437410
x-amz-date:20231212T105700Z

content-md5;host;x-amz-content-sha256;x-amz-date
138558408ffb858951dfa1cb6fd2200f3c9e5f9a2636dbed29bb241159437410
2023-12-12 10:57:00,201 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105700Z
20231212/us-west-1/s3/aws4_request
524fc03575d1c925727dd3381009b8ce19326db6bf56120bbe99717e97f06bf1
2023-12-12 10:57:00,201 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
e7c72063a8532b3a1ea5b20508b262c78beff264b47318b4894b58b350d73f12
2023-12-12 10:57:00,201 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f09448271e0&gt;
2023-12-12 10:57:00,201 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f0942285730&gt;
2023-12-12 10:57:00,202 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'bNQ8NMvl5IK/2PQAx1erPQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105700Z', 'X-Amz-Content-SHA256': b'138558408ffb858951dfa1cb6fd2200f3c9e5f9a2636dbed29bb241159437410', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=e7c72063a8532b3a1ea5b20508b262c78beff264b47318b4894b58b350d73f12', 'amz-sdk-invocation-id': b'2af7754a-7a16-45cd-b4c9-cf6a342510dd', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2023-12-12 10:57:00,203 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:00,203 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:57:00,204 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (25.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (47.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (68.3 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:00,240 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/small_file HTTP/1.1" 200 0
2023-12-12 10:57:00,241 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:00 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:00 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"6cd43c34cbe5e482bfd8f400c757ab3d"', 'Server': 'Ozone', 'x-amz-id-2': 'e6SfjdshW', 'x-amz-request-id': '6ffdab19-2159-4e57-9f1f-24b81eef16b0', 'Content-Length': '0'}
2023-12-12 10:57:00,241 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:57:00,242 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f0940163160&gt;
2023-12-12 10:57:00,242 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:00,242 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f0940163128&gt;&gt;
2023-12-12 10:57:00,242 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f094082e598&gt;
Completed 976.6 KiB/976.6 KiB (20.1 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:00,242 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://link/small_file               
2023-12-12 10:57:00,243 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:57:00.283" endtime="20231212 10:57:00.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:00.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:00.284" endtime="20231212 10:57:00.285"/>
</kw>
<status status="PASS" starttime="20231212 10:56:59.764" endtime="20231212 10:57:00.285"/>
</kw>
<msg timestamp="20231212 10:57:00.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:56:59.764" endtime="20231212 10:57:00.285"/>
</kw>
<msg timestamp="20231212 10:57:00.286" level="INFO">${output} = 2023-12-12 10:57:00,137 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:00,137 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:56:59.764" endtime="20231212 10:57:00.286"/>
</kw>
<msg timestamp="20231212 10:57:00.286" level="INFO">${result} = 2023-12-12 10:57:00,137 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:00,137 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:56:59.763" endtime="20231212 10:57:00.286"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:57:00.286" endtime="20231212 10:57:00.287"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:56:59.744" endtime="20231212 10:57:00.287"/>
</test>
<test id="s1-s6-s12-t16" name="Download small file end expect ETag (MD5) in a response header" line="216">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:00.292" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:00.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:00.295" level="INFO">${output} = 6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<status status="PASS" starttime="20231212 10:57:00.290" endtime="20231212 10:57:00.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:00.296" level="INFO">6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<status status="PASS" starttime="20231212 10:57:00.296" endtime="20231212 10:57:00.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:00.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:00.296" endtime="20231212 10:57:00.297"/>
</kw>
<status status="PASS" starttime="20231212 10:57:00.289" endtime="20231212 10:57:00.297"/>
</kw>
<msg timestamp="20231212 10:57:00.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:00.289" endtime="20231212 10:57:00.297"/>
</kw>
<msg timestamp="20231212 10:57:00.297" level="INFO">${file_md5_checksum} = 6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<status status="PASS" starttime="20231212 10:57:00.288" endtime="20231212 10:57:00.297"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:00.300" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://link/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:00.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:00.798" level="INFO">${output} = 2023-12-12 10:57:00,659 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:00,660 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:00.299" endtime="20231212 10:57:00.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:00.799" level="INFO">2023-12-12 10:57:00,659 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:00,660 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://link/small_file', '/tmp/small_file_downloaded']
2023-12-12 10:57:00,660 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fa3c8c989d8&gt;
2023-12-12 10:57:00,660 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fa3c9a8c730&gt;
2023-12-12 10:57:00,660 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fa3c9abaae8&gt;
2023-12-12 10:57:00,661 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:57:00,665 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fa3c8dc4400&gt;
2023-12-12 10:57:00,665 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fa3c8ca6048&gt;
2023-12-12 10:57:00,666 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,666 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fa3c8ca6048&gt;
2023-12-12 10:57:00,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,668 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3c9a8d5c0&gt;
2023-12-12 10:57:00,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,668 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3c9a8d5c0&gt;
2023-12-12 10:57:00,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,669 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3c9a8d5c0&gt;
2023-12-12 10:57:00,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,671 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,671 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,671 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,671 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,671 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3c9a8d5c0&gt;
2023-12-12 10:57:00,671 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,671 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,671 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,671 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3c9a8d5c0&gt;
2023-12-12 10:57:00,672 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,672 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3c9a8d5c0&gt;
2023-12-12 10:57:00,672 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,672 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,672 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,672 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,672 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3d09a59b0&gt;
2023-12-12 10:57:00,673 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:57:00,673 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2023-12-12 10:57:00,673 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2023-12-12 10:57:00,673 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2023-12-12 10:57:00,673 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2023-12-12 10:57:00,673 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2023-12-12 10:57:00,674 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:57:00,688 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:57:00,688 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa3ca752378&gt;
2023-12-12 10:57:00,689 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:57:00,699 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa3caa282f0&gt;
2023-12-12 10:57:00,699 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa3caa280d0&gt;
2023-12-12 10:57:00,699 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,702 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:00,703 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:57:00,703 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:00,704 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,705 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa3ca752378&gt;
2023-12-12 10:57:00,705 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa3caa282f0&gt;
2023-12-12 10:57:00,706 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa3caa280d0&gt;
2023-12-12 10:57:00,706 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,708 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:00,709 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:00,710 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,710 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa3ca752378&gt;
2023-12-12 10:57:00,711 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa3caa282f0&gt;
2023-12-12 10:57:00,711 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa3caa280d0&gt;
2023-12-12 10:57:00,711 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,714 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:00,714 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:00,715 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:00,716 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:57:00,716 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fa3ca768ae8&gt;
2023-12-12 10:57:00,716 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fa3ca768a60&gt;
2023-12-12 10:57:00,716 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa3c85776a0&gt;&gt;
2023-12-12 10:57:00,716 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa3c8577a58&gt;&gt;
2023-12-12 10:57:00,717 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa3ca7688c8&gt;
2023-12-12 10:57:00,717 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fa3ca768d90&gt;
2023-12-12 10:57:00,717 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa3c85776a0&gt;&gt;
2023-12-12 10:57:00,717 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fa3ca768598&gt;
2023-12-12 10:57:00,717 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa3ca6ef0d0&gt;
2023-12-12 10:57:00,717 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/link/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa3c8577358&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:00,718 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa3c8577320&gt;&gt;
2023-12-12 10:57:00,718 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa3c8577ac8&gt;&gt;
2023-12-12 10:57:00,718 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fa3ca7687b8&gt;
2023-12-12 10:57:00,718 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa3c8577ac8&gt;&gt;
2023-12-12 10:57:00,718 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:00,718 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:00,718 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/link/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105700Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:57:00,718 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105700Z
20231212/us-west-1/s3/aws4_request
b65451a7635b134260aa60bb9099cd68351524409520326a5c38cd7a346c1b3c
2023-12-12 10:57:00,719 - MainThread - botocore.auth - DEBUG - Signature:
037c66ef5a8ba86a1d0efacc1b4503410a7d2575ca08c6e0aa42c9b01f06bc28
2023-12-12 10:57:00,719 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fa3ca6ef730&gt;
2023-12-12 10:57:00,719 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/link/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105700Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=037c66ef5a8ba86a1d0efacc1b4503410a7d2575ca08c6e0aa42c9b01f06bc28', 'amz-sdk-invocation-id': b'72d5e2c1-051b-484d-9ffa-06e467b552c6', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:57:00,720 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:00,725 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /link/small_file HTTP/1.1" 200 0
2023-12-12 10:57:00,725 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:00 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:00 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"6cd43c34cbe5e482bfd8f400c757ab3d"', 'Last-Modified': 'Tue, 12 Dec 2023 10:57:00 GMT', 'Server': 'Ozone', 'x-amz-id-2': '7P41J68homyZPp6', 'x-amz-request-id': '44e4e1ed-83bc-49f3-9e52-0cde542a6f4f', 'Content-Length': '1000000'}
2023-12-12 10:57:00,725 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:57:00,726 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa3c85776d8&gt;
2023-12-12 10:57:00,726 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:00,726 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa3c85776a0&gt;&gt;
2023-12-12 10:57:00,726 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fa3c8c98598&gt;
2023-12-12 10:57:00,727 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:00,728 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa3c85627f0&gt;}) about to wait for the following futures []
2023-12-12 10:57:00,728 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa3c85627f0&gt;}) done waiting for dependent futures
2023-12-12 10:57:00,728 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa3c85627f0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa3c8604ba8&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fa3c8577cf8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa3c8577d68&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa3c8577ef0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa3c85627f0&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa3c8546320&gt;}
2023-12-12 10:57:00,728 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa3c8577ef0&gt; for transfer request: 0.
2023-12-12 10:57:00,729 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:00,729 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:57:00,729 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:00,729 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:57:00,730 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa3c8604ba8&gt;, 'bucket': 'link', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa3c8562fd0&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fa3c8562f28&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa3c85627f0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fa3c8562e10&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa3c85627f0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fa3c8562e48&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa3c85627f0&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fa3c8562ba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa3c85627f0&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fa3c8546908&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-12-12 10:57:00,730 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fa3ca768ae8&gt;
2023-12-12 10:57:00,730 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fa3ca768a60&gt;
2023-12-12 10:57:00,730 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa3c85cd128&gt;&gt;
2023-12-12 10:57:00,730 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa3c85cd4e0&gt;&gt;
2023-12-12 10:57:00,730 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa3ca7688c8&gt;
2023-12-12 10:57:00,731 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fa3ca768d90&gt;
2023-12-12 10:57:00,731 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa3c85cd128&gt;&gt;
2023-12-12 10:57:00,731 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fa3ca768598&gt;
2023-12-12 10:57:00,731 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa3ca6ef0d0&gt;
2023-12-12 10:57:00,731 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/link/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa3c8604da0&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:00,731 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fa3ccc91158&gt;
2023-12-12 10:57:00,731 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa3c8604d68&gt;&gt;
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa3c85cd550&gt;&gt;
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fa3ca7687b8&gt;
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa3c85cd550&gt;&gt;
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/link/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105700Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105700Z
20231212/us-west-1/s3/aws4_request
9cf331c4bc6a6940b96246771c08df0d752a443890084c8610fb2aac2366f06d
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
01fd6a21d1b99f32d59e1ce684633f391535a7cb474f429d95d2b465f8536d9c
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fa3ccc911e0&gt;
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fa3ca6ef730&gt;
2023-12-12 10:57:00,732 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/link/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105700Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=01fd6a21d1b99f32d59e1ce684633f391535a7cb474f429d95d2b465f8536d9c', 'amz-sdk-invocation-id': b'7d639185-29e8-4086-9e8b-4a1571df9054', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:57:00,733 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:00,753 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /link/small_file HTTP/1.1" 200 1000000
2023-12-12 10:57:00,753 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:00 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:00 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"6cd43c34cbe5e482bfd8f400c757ab3d"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 12 Dec 2023 10:57:00 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'FOg5xVynf2w1UM', 'x-amz-request-id': '0c558d39-6a85-4022-86a5-e4ffeb47049c', 'Content-Length': '1000000'}
2023-12-12 10:57:00,753 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fa3c518b2e8&gt;
2023-12-12 10:57:00,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa3c85cd160&gt;
2023-12-12 10:57:00,754 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:00,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa3c85cd128&gt;&gt;
2023-12-12 10:57:00,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fa3c8c98598&gt;
2023-12-12 10:57:00,755 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (9.6 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:00,755 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-12-12 10:57:00,755 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa3c8562fd0&gt;, 'offset': 0}
2023-12-12 10:57:00,756 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-12-12 10:57:00,756 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-12-12 10:57:00,756 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa3c8562fd0&gt;, 'offset': 262144}
Completed 512.0 KiB/976.6 KiB (18.4 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:00,756 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-12-12 10:57:00,756 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-12-12 10:57:00,756 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa3c8562fd0&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (27.1 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:00,757 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-12-12 10:57:00,757 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-12-12 10:57:00,757 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa3c8562fd0&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (33.9 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:00,757 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2023-12-12 10:57:00,757 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2023-12-12 10:57:00,758 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa3c8562fd0&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa3c8577d68&gt;}
2023-12-12 10:57:00,758 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://link/small_file to ../../tmp/small_file_downloaded  
2023-12-12 10:57:00,758 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:57:00.798" endtime="20231212 10:57:00.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:00.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:00.799" endtime="20231212 10:57:00.800"/>
</kw>
<status status="PASS" starttime="20231212 10:57:00.299" endtime="20231212 10:57:00.800"/>
</kw>
<msg timestamp="20231212 10:57:00.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:00.298" endtime="20231212 10:57:00.800"/>
</kw>
<msg timestamp="20231212 10:57:00.801" level="INFO">${output} = 2023-12-12 10:57:00,659 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:00,660 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:00.298" endtime="20231212 10:57:00.801"/>
</kw>
<msg timestamp="20231212 10:57:00.801" level="INFO">${result} = 2023-12-12 10:57:00,659 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:00,660 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:00.297" endtime="20231212 10:57:00.801"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:57:00.801" endtime="20231212 10:57:00.802"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 10:57:00.803" endtime="20231212 10:57:00.803"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:00.807" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:01.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:01.276" level="INFO">${output} = delete: s3://link/small_file</msg>
<status status="PASS" starttime="20231212 10:57:00.805" endtime="20231212 10:57:01.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:01.277" level="INFO">delete: s3://link/small_file</msg>
<status status="PASS" starttime="20231212 10:57:01.277" endtime="20231212 10:57:01.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:01.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:01.278" endtime="20231212 10:57:01.278"/>
</kw>
<status status="PASS" starttime="20231212 10:57:00.805" endtime="20231212 10:57:01.278"/>
</kw>
<msg timestamp="20231212 10:57:01.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:00.805" endtime="20231212 10:57:01.278"/>
</kw>
<msg timestamp="20231212 10:57:01.279" level="INFO">${output} = delete: s3://link/small_file</msg>
<status status="PASS" starttime="20231212 10:57:00.804" endtime="20231212 10:57:01.279"/>
</kw>
<status status="PASS" starttime="20231212 10:57:00.804" endtime="20231212 10:57:01.279"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:01.283" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:01.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:01.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:01.280" endtime="20231212 10:57:01.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:01.285" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:01.285" endtime="20231212 10:57:01.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:01.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:01.286" endtime="20231212 10:57:01.286"/>
</kw>
<status status="PASS" starttime="20231212 10:57:01.280" endtime="20231212 10:57:01.286"/>
</kw>
<msg timestamp="20231212 10:57:01.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:01.279" endtime="20231212 10:57:01.286"/>
</kw>
<status status="PASS" starttime="20231212 10:57:01.279" endtime="20231212 10:57:01.287"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:57:00.288" endtime="20231212 10:57:01.287"/>
</test>
<test id="s1-s6-s12-t17" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="225">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:01.290" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:01.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:01.294" level="INFO">${output} = 6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<status status="PASS" starttime="20231212 10:57:01.289" endtime="20231212 10:57:01.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:01.295" level="INFO">6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<status status="PASS" starttime="20231212 10:57:01.295" endtime="20231212 10:57:01.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:01.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:01.295" endtime="20231212 10:57:01.296"/>
</kw>
<status status="PASS" starttime="20231212 10:57:01.289" endtime="20231212 10:57:01.296"/>
</kw>
<msg timestamp="20231212 10:57:01.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:01.288" endtime="20231212 10:57:01.296"/>
</kw>
<msg timestamp="20231212 10:57:01.296" level="INFO">${file_md5_checksum} = 6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<status status="PASS" starttime="20231212 10:57:01.288" endtime="20231212 10:57:01.296"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:01.299" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://link/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:01.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:01.806" level="INFO">${output} = 2023-12-12 10:57:01,650 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:01,650 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:01.298" endtime="20231212 10:57:01.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:01.807" level="INFO">2023-12-12 10:57:01,650 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:01,650 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://link/test_file']
2023-12-12 10:57:01,650 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fb9778b59d8&gt;
2023-12-12 10:57:01,650 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fb9786a9730&gt;
2023-12-12 10:57:01,651 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fb9786d7ae8&gt;
2023-12-12 10:57:01,651 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:57:01,655 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fb9779e1400&gt;
2023-12-12 10:57:01,655 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fb9778c3048&gt;
2023-12-12 10:57:01,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,656 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fb9778c3048&gt;
2023-12-12 10:57:01,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,658 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb9786aa550&gt;
2023-12-12 10:57:01,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,658 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb9786aa550&gt;
2023-12-12 10:57:01,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,658 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb9786aa550&gt;
2023-12-12 10:57:01,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,661 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,661 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,661 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb9786aa550&gt;
2023-12-12 10:57:01,661 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,661 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,661 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,661 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb9786aa550&gt;
2023-12-12 10:57:01,661 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,661 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb9786aa550&gt;
2023-12-12 10:57:01,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,662 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb9786aa550&gt;
2023-12-12 10:57:01,662 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2023-12-12 10:57:01,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb97f5c2940&gt;
2023-12-12 10:57:01,663 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:57:01,663 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2023-12-12 10:57:01,663 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2023-12-12 10:57:01,663 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2023-12-12 10:57:01,663 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2023-12-12 10:57:01,663 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2023-12-12 10:57:01,664 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:57:01,677 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:57:01,678 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb97936e378&gt;
2023-12-12 10:57:01,679 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:57:01,688 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb9796452f0&gt;
2023-12-12 10:57:01,688 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb9796450d0&gt;
2023-12-12 10:57:01,689 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:01,691 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:01,692 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:57:01,692 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:01,693 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:01,693 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb97936e378&gt;
2023-12-12 10:57:01,694 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb9796452f0&gt;
2023-12-12 10:57:01,694 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb9796450d0&gt;
2023-12-12 10:57:01,695 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:01,697 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:01,698 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:01,698 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:01,699 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb97936e378&gt;
2023-12-12 10:57:01,700 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb9796452f0&gt;
2023-12-12 10:57:01,700 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb9796450d0&gt;
2023-12-12 10:57:01,700 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:01,703 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:01,703 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:01,704 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:01,704 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:57:01,705 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:01,706 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb977166cf8&gt;}) about to wait for the following futures []
2023-12-12 10:57:01,706 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb977166cf8&gt;}) done waiting for dependent futures
2023-12-12 10:57:01,706 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb977166cf8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb977224ba8&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fb977197cf8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fb977197d68&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fb977197ef0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb977166cf8&gt;}
2023-12-12 10:57:01,707 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fb977197ef0&gt; for transfer request: 0.
2023-12-12 10:57:01,707 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:01,707 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2023-12-12 10:57:01,707 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2023-12-12 10:57:01,708 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb977224ba8&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb97717a198&gt;, 'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2023-12-12 10:57:01,708 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fb9793896a8&gt;
2023-12-12 10:57:01,708 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fb979385ae8&gt;
2023-12-12 10:57:01,708 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fb979389f28&gt;
2023-12-12 10:57:01,708 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fb979385a60&gt;
2023-12-12 10:57:01,708 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fb9771f7128&gt;&gt;
2023-12-12 10:57:01,708 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fb9771f74e0&gt;&gt;
2023-12-12 10:57:01,708 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fb9793858c8&gt;
2023-12-12 10:57:01,709 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7fb979d2c0d0&gt;
2023-12-12 10:57:01,709 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:01,711 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fb979385d90&gt;
2023-12-12 10:57:01,711 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:57:01,711 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fb9771f7128&gt;&gt;
2023-12-12 10:57:01,711 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fb979385598&gt;
2023-12-12 10:57:01,711 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb97930c0d0&gt;
2023-12-12 10:57:01,711 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/link/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'bNQ8NMvl5IK/2PQAx1erPQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb97717a198&gt;, 'url': 'http://s3g:9878/link/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb977224da0&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:01,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fb97b8ae158&gt;
2023-12-12 10:57:01,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb977224d68&gt;&gt;
2023-12-12 10:57:01,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fb9771f7550&gt;&gt;
2023-12-12 10:57:01,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fb9793857b8&gt;
2023-12-12 10:57:01,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fb9771f7550&gt;&gt;
2023-12-12 10:57:01,712 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:01,713 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:01,713 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/test_file

content-md5:bNQ8NMvl5IK/2PQAx1erPQ==
host:s3g:9878
x-amz-content-sha256:138558408ffb858951dfa1cb6fd2200f3c9e5f9a2636dbed29bb241159437410
x-amz-date:20231212T105701Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
138558408ffb858951dfa1cb6fd2200f3c9e5f9a2636dbed29bb241159437410
2023-12-12 10:57:01,713 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105701Z
20231212/us-west-1/s3/aws4_request
ecde12d6ea0c532931a3a6c694b338a11e3c77e7d2a9753548c9b1a2c646724b
2023-12-12 10:57:01,713 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
c8964504013ddd830cf3ca0e010abb8c7151694d175c732e276ae814393dd185
2023-12-12 10:57:01,713 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fb97b8ae1e0&gt;
2023-12-12 10:57:01,714 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fb97930c730&gt;
2023-12-12 10:57:01,714 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'bNQ8NMvl5IK/2PQAx1erPQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105701Z', 'X-Amz-Content-SHA256': b'138558408ffb858951dfa1cb6fd2200f3c9e5f9a2636dbed29bb241159437410', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=c8964504013ddd830cf3ca0e010abb8c7151694d175c732e276ae814393dd185', 'amz-sdk-invocation-id': b'a6d245f2-7c8e-4393-92ce-9fb360ab54f5', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2023-12-12 10:57:01,715 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:01,716 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:57:01,717 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (24.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (44.9 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (63.3 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:01,763 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/test_file HTTP/1.1" 200 0
2023-12-12 10:57:01,763 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:01 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:01 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"6cd43c34cbe5e482bfd8f400c757ab3d"', 'Server': 'Ozone', 'x-amz-id-2': '6tBwxHBaK', 'x-amz-request-id': '37ce674a-2907-45d1-8517-ecc701623175', 'Content-Length': '0'}
2023-12-12 10:57:01,763 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:57:01,764 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb9771f7160&gt;
2023-12-12 10:57:01,764 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:01,764 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fb9771f7128&gt;&gt;
2023-12-12 10:57:01,764 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fb9778b5598&gt;
Completed 976.6 KiB/976.6 KiB (16.6 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:01,765 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://link/test_file                
2023-12-12 10:57:01,765 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:57:01.806" endtime="20231212 10:57:01.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:01.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:01.807" endtime="20231212 10:57:01.808"/>
</kw>
<status status="PASS" starttime="20231212 10:57:01.298" endtime="20231212 10:57:01.808"/>
</kw>
<msg timestamp="20231212 10:57:01.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:01.297" endtime="20231212 10:57:01.808"/>
</kw>
<msg timestamp="20231212 10:57:01.809" level="INFO">${output} = 2023-12-12 10:57:01,650 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:01,650 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:01.297" endtime="20231212 10:57:01.809"/>
</kw>
<status status="PASS" starttime="20231212 10:57:01.296" endtime="20231212 10:57:01.809"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:01.812" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://link/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:02.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:02.325" level="INFO">${output} = 2023-12-12 10:57:02,174 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:02,175 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:01.811" endtime="20231212 10:57:02.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:02.331" level="INFO">2023-12-12 10:57:02,174 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:02,175 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://link/test_file', '/tmp/test_file_downloaded']
2023-12-12 10:57:02,175 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f4e9e3a99d8&gt;
2023-12-12 10:57:02,175 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f4e9f19d730&gt;
2023-12-12 10:57:02,175 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f4e9f1cbae8&gt;
2023-12-12 10:57:02,176 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:57:02,180 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f4e9e4d5400&gt;
2023-12-12 10:57:02,180 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f4e9e3b7048&gt;
2023-12-12 10:57:02,181 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,181 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f4e9e3b7048&gt;
2023-12-12 10:57:02,182 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,183 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,183 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4e9f19e5c0&gt;
2023-12-12 10:57:02,183 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,183 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4e9f19e5c0&gt;
2023-12-12 10:57:02,183 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,183 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,183 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,183 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4e9f19e5c0&gt;
2023-12-12 10:57:02,183 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,184 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,184 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,184 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,184 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,184 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,184 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,184 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,185 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,185 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,185 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,185 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,185 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,185 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,185 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,186 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,186 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,186 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,186 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4e9f19e5c0&gt;
2023-12-12 10:57:02,186 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,186 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,186 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,186 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4e9f19e5c0&gt;
2023-12-12 10:57:02,186 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,187 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4e9f19e5c0&gt;
2023-12-12 10:57:02,187 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,187 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,187 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,187 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,187 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4ea60b69b0&gt;
2023-12-12 10:57:02,187 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:57:02,187 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2023-12-12 10:57:02,188 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2023-12-12 10:57:02,188 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2023-12-12 10:57:02,188 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2023-12-12 10:57:02,188 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2023-12-12 10:57:02,188 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:57:02,202 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:57:02,202 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f4e9fe63378&gt;
2023-12-12 10:57:02,203 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:57:02,213 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f4ea01392f0&gt;
2023-12-12 10:57:02,213 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f4ea01390d0&gt;
2023-12-12 10:57:02,214 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:02,216 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:02,217 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:57:02,217 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:02,218 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:02,219 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f4e9fe63378&gt;
2023-12-12 10:57:02,219 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f4ea01392f0&gt;
2023-12-12 10:57:02,219 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f4ea01390d0&gt;
2023-12-12 10:57:02,220 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:02,222 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:02,223 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:02,223 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:02,224 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f4e9fe63378&gt;
2023-12-12 10:57:02,225 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f4ea01392f0&gt;
2023-12-12 10:57:02,225 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f4ea01390d0&gt;
2023-12-12 10:57:02,225 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:02,228 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:02,228 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:02,229 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:02,229 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:57:02,230 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f4e9fe79ae8&gt;
2023-12-12 10:57:02,230 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f4e9fe79a60&gt;
2023-12-12 10:57:02,230 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f4e9dc886a0&gt;&gt;
2023-12-12 10:57:02,230 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f4e9dc88a58&gt;&gt;
2023-12-12 10:57:02,230 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f4e9fe798c8&gt;
2023-12-12 10:57:02,231 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f4e9fe79d90&gt;
2023-12-12 10:57:02,231 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f4e9dc886a0&gt;&gt;
2023-12-12 10:57:02,231 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f4e9fe79598&gt;
2023-12-12 10:57:02,231 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f4e9fe000d0&gt;
2023-12-12 10:57:02,231 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/link/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f4e9dc88358&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:02,231 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f4e9dc88320&gt;&gt;
2023-12-12 10:57:02,231 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f4e9dc88ac8&gt;&gt;
2023-12-12 10:57:02,231 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f4e9fe797b8&gt;
2023-12-12 10:57:02,232 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f4e9dc88ac8&gt;&gt;
2023-12-12 10:57:02,232 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:02,232 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:02,232 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/link/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105702Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:57:02,232 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105702Z
20231212/us-west-1/s3/aws4_request
f7d44e57bd02c64dbcd4811250f67801a900631b599cf46f53daa488a1fcef34
2023-12-12 10:57:02,232 - MainThread - botocore.auth - DEBUG - Signature:
9fad5b2e03e5374cb97112c793539d9c175d272e4222512c5535f14600019ada
2023-12-12 10:57:02,232 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f4e9fe00730&gt;
2023-12-12 10:57:02,232 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/link/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105702Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=9fad5b2e03e5374cb97112c793539d9c175d272e4222512c5535f14600019ada', 'amz-sdk-invocation-id': b'b38a1ca9-e0ec-4e25-8274-6d412bedd6fc', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:57:02,233 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:02,239 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /link/test_file HTTP/1.1" 200 0
2023-12-12 10:57:02,239 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:02 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:02 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"6cd43c34cbe5e482bfd8f400c757ab3d"', 'Last-Modified': 'Tue, 12 Dec 2023 10:57:01 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': 'xSu4VBlbWap', 'x-amz-request-id': '676eeadf-1807-4c2c-994e-dbb35aec0d4b', 'Content-Length': '1000000'}
2023-12-12 10:57:02,240 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:57:02,240 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f4e9dc886d8&gt;
2023-12-12 10:57:02,240 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:02,241 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f4e9dc886a0&gt;&gt;
2023-12-12 10:57:02,241 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f4e9e3a9598&gt;
2023-12-12 10:57:02,242 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:02,242 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f4e9dc73828&gt;}) about to wait for the following futures []
2023-12-12 10:57:02,243 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f4e9dc73828&gt;}) done waiting for dependent futures
2023-12-12 10:57:02,243 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f4e9dc73828&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f4e9dd15ba8&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f4e9dc88cf8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f4e9dc88d68&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f4e9dc88ef0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f4e9dc73828&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f4e9dc57320&gt;}
2023-12-12 10:57:02,243 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f4e9dc88ef0&gt; for transfer request: 0.
2023-12-12 10:57:02,243 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:02,244 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:57:02,244 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:57:02,244 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f4e9dd15ba8&gt;, 'bucket': 'link', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f4e9dc73f60&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f4e9dc73fd0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f4e9dc73828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f4e9dc73dd8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f4e9dc73828&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f4e9dc73cf8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f4e9dc73828&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f4e9dc73f98&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f4e9dc73828&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f4e9dc57908&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-12-12 10:57:02,245 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f4e9fe79ae8&gt;
2023-12-12 10:57:02,245 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f4e9fe79a60&gt;
2023-12-12 10:57:02,245 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f4e9dce9128&gt;&gt;
2023-12-12 10:57:02,245 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f4e9dce94e0&gt;&gt;
2023-12-12 10:57:02,245 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f4e9fe798c8&gt;
2023-12-12 10:57:02,245 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:02,246 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f4e9fe79d90&gt;
2023-12-12 10:57:02,246 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f4e9dce9128&gt;&gt;
2023-12-12 10:57:02,246 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f4e9fe79598&gt;
2023-12-12 10:57:02,246 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f4e9fe000d0&gt;
2023-12-12 10:57:02,246 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/link/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f4e9dd15da0&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:02,246 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f4ea23a2158&gt;
2023-12-12 10:57:02,246 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f4e9dd15d68&gt;&gt;
2023-12-12 10:57:02,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f4e9dce9550&gt;&gt;
2023-12-12 10:57:02,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f4e9fe797b8&gt;
2023-12-12 10:57:02,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f4e9dce9550&gt;&gt;
2023-12-12 10:57:02,247 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:02,247 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:02,247 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/link/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105702Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:57:02,247 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105702Z
20231212/us-west-1/s3/aws4_request
e4453f4cf37290df5f18d716764995d0f01dffb8d45e96999521c2f2939d17dc
2023-12-12 10:57:02,247 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
60ce1c77dbd5a960b2fa8b841dc6ef103a647d94c42ff71b36f05d20b2d111fe
2023-12-12 10:57:02,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f4ea23a21e0&gt;
2023-12-12 10:57:02,248 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f4e9fe00730&gt;
2023-12-12 10:57:02,248 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/link/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105702Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=60ce1c77dbd5a960b2fa8b841dc6ef103a647d94c42ff71b36f05d20b2d111fe', 'amz-sdk-invocation-id': b'6eb5502d-7d61-40ba-9631-39082179166c', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:57:02,248 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:02,272 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /link/test_file HTTP/1.1" 200 1000000
2023-12-12 10:57:02,273 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:02 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:02 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"6cd43c34cbe5e482bfd8f400c757ab3d"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 12 Dec 2023 10:57:01 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'mGfWP1nuM', 'x-amz-request-id': 'f14dbb3d-afd6-4c40-990b-c010299a4b5d', 'Content-Length': '1000000'}
2023-12-12 10:57:02,273 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f4e9c89d278&gt;
2023-12-12 10:57:02,274 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f4e9dce9160&gt;
2023-12-12 10:57:02,274 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:02,274 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f4e9dce9128&gt;&gt;
2023-12-12 10:57:02,275 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f4e9e3a9598&gt;
2023-12-12 10:57:02,275 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (7.9 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:02,275 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-12-12 10:57:02,276 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f4e9dc73f60&gt;, 'offset': 0}
2023-12-12 10:57:02,276 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-12-12 10:57:02,277 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-12-12 10:57:02,277 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f4e9dc73f60&gt;, 'offset': 262144}
Completed 512.0 KiB/976.6 KiB (15.3 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:02,277 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-12-12 10:57:02,277 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-12-12 10:57:02,277 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f4e9dc73f60&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (22.5 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:02,278 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-12-12 10:57:02,278 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-12-12 10:57:02,278 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f4e9dc73f60&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (28.0 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:02,278 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2023-12-12 10:57:02,278 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2023-12-12 10:57:02,279 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f4e9dc73f60&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f4e9dc88d68&gt;}
download: s3://link/test_file to ../../tmp/test_file_downloaded    
2023-12-12 10:57:02,279 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:02,279 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:57:02.330" endtime="20231212 10:57:02.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:02.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:02.331" endtime="20231212 10:57:02.332"/>
</kw>
<status status="PASS" starttime="20231212 10:57:01.810" endtime="20231212 10:57:02.332"/>
</kw>
<msg timestamp="20231212 10:57:02.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:01.810" endtime="20231212 10:57:02.332"/>
</kw>
<msg timestamp="20231212 10:57:02.333" level="INFO">${output} = 2023-12-12 10:57:02,174 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:02,175 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:01.810" endtime="20231212 10:57:02.333"/>
</kw>
<msg timestamp="20231212 10:57:02.333" level="INFO">${result} = 2023-12-12 10:57:02,174 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:02,175 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:01.809" endtime="20231212 10:57:02.333"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:57:02.335" level="INFO">${match} = HEAD /link/test_file HTTP/1.1" 200 0
2023-12-12 10:57:02,239 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:02 GMT', 'Cache-Control': 'no-cache', 'Expires...</msg>
<msg timestamp="20231212 10:57:02.335" level="INFO">${ETag} = 6cd43c34cbe5e482bfd8f400c757ab3d</msg>
<msg timestamp="20231212 10:57:02.335" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20231212 10:57:02.333" endtime="20231212 10:57:02.335"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:57:02.335" endtime="20231212 10:57:02.336"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:57:02.337" endtime="20231212 10:57:02.338"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:57:02.338" endtime="20231212 10:57:02.338"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:02.342" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:02.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:02.812" level="INFO">${output} = delete: s3://link/test_file</msg>
<status status="PASS" starttime="20231212 10:57:02.341" endtime="20231212 10:57:02.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:02.813" level="INFO">delete: s3://link/test_file</msg>
<status status="PASS" starttime="20231212 10:57:02.812" endtime="20231212 10:57:02.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:02.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:02.813" endtime="20231212 10:57:02.814"/>
</kw>
<status status="PASS" starttime="20231212 10:57:02.340" endtime="20231212 10:57:02.814"/>
</kw>
<msg timestamp="20231212 10:57:02.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:02.340" endtime="20231212 10:57:02.814"/>
</kw>
<msg timestamp="20231212 10:57:02.814" level="INFO">${output} = delete: s3://link/test_file</msg>
<status status="PASS" starttime="20231212 10:57:02.339" endtime="20231212 10:57:02.814"/>
</kw>
<status status="PASS" starttime="20231212 10:57:02.339" endtime="20231212 10:57:02.814"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:02.817" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:02.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:02.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:02.816" endtime="20231212 10:57:02.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:02.820" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:02.820" endtime="20231212 10:57:02.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:02.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:02.820" endtime="20231212 10:57:02.821"/>
</kw>
<status status="PASS" starttime="20231212 10:57:02.815" endtime="20231212 10:57:02.821"/>
</kw>
<msg timestamp="20231212 10:57:02.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:02.815" endtime="20231212 10:57:02.821"/>
</kw>
<status status="PASS" starttime="20231212 10:57:02.814" endtime="20231212 10:57:02.821"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:02.824" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:02.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:02.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:02.823" endtime="20231212 10:57:02.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:02.827" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:02.826" endtime="20231212 10:57:02.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:02.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:02.827" endtime="20231212 10:57:02.828"/>
</kw>
<status status="PASS" starttime="20231212 10:57:02.822" endtime="20231212 10:57:02.828"/>
</kw>
<msg timestamp="20231212 10:57:02.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:02.822" endtime="20231212 10:57:02.828"/>
</kw>
<status status="PASS" starttime="20231212 10:57:02.821" endtime="20231212 10:57:02.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:57:01.287" endtime="20231212 10:57:02.828"/>
</test>
<test id="s1-s6-s12-t18" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="238">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:02.832" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20231212 10:57:02.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:02.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:02.831" endtime="20231212 10:57:02.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:02.868" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:02.868" endtime="20231212 10:57:02.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:02.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:02.869" endtime="20231212 10:57:02.869"/>
</kw>
<status status="PASS" starttime="20231212 10:57:02.830" endtime="20231212 10:57:02.869"/>
</kw>
<msg timestamp="20231212 10:57:02.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:02.830" endtime="20231212 10:57:02.869"/>
</kw>
<status status="PASS" starttime="20231212 10:57:02.830" endtime="20231212 10:57:02.869"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:02.873" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:03.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:03.630" level="INFO">${output} = 2023-12-12 10:57:03,233 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:03,233 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:02.872" endtime="20231212 10:57:03.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:03.631" level="INFO">2023-12-12 10:57:03,233 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:03,233 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://link/']
2023-12-12 10:57:03,233 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f4d208379d8&gt;
2023-12-12 10:57:03,233 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f4d2162b730&gt;
2023-12-12 10:57:03,234 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f4d21659ae8&gt;
2023-12-12 10:57:03,234 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:57:03,238 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f4d20963400&gt;
2023-12-12 10:57:03,239 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f4d20845048&gt;
2023-12-12 10:57:03,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,239 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f4d20845048&gt;
2023-12-12 10:57:03,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,241 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4d2162c5c0&gt;
2023-12-12 10:57:03,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,242 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4d2162c5c0&gt;
2023-12-12 10:57:03,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,242 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4d2162c5c0&gt;
2023-12-12 10:57:03,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,243 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,243 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,243 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,243 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,243 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,243 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,243 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,244 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,244 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,244 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,244 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,244 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,244 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,244 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,244 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,245 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4d2162c5c0&gt;
2023-12-12 10:57:03,245 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,245 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,245 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,245 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4d2162c5c0&gt;
2023-12-12 10:57:03,245 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,245 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4d2162c5c0&gt;
2023-12-12 10:57:03,245 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,245 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,246 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,246 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,246 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4d285449b0&gt;
2023-12-12 10:57:03,246 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:57:03,246 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2023-12-12 10:57:03,246 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2023-12-12 10:57:03,246 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2023-12-12 10:57:03,246 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2023-12-12 10:57:03,247 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2023-12-12 10:57:03,247 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:57:03,261 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:57:03,261 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f4d222f0378&gt;
2023-12-12 10:57:03,262 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:57:03,272 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f4d225c72f0&gt;
2023-12-12 10:57:03,272 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f4d225c70d0&gt;
2023-12-12 10:57:03,272 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:03,275 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:03,275 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:57:03,276 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:03,277 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:03,277 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f4d222f0378&gt;
2023-12-12 10:57:03,278 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f4d225c72f0&gt;
2023-12-12 10:57:03,278 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f4d225c70d0&gt;
2023-12-12 10:57:03,278 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:03,281 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:03,281 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:03,282 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:03,282 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f4d222f0378&gt;
2023-12-12 10:57:03,284 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f4d225c72f0&gt;
2023-12-12 10:57:03,284 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f4d225c70d0&gt;
2023-12-12 10:57:03,284 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:03,286 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:03,287 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:03,288 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:03,288 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:57:03,289 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:03,290 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f4d200e5d68&gt;}) about to wait for the following futures []
2023-12-12 10:57:03,290 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f4d200e5d68&gt;}) done waiting for dependent futures
2023-12-12 10:57:03,290 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f4d200e5d68&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f4d201a3ba8&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f4d20116d68&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f4d20116dd8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f4d20116f60&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f4d200e5d68&gt;}
2023-12-12 10:57:03,291 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f4d20116f60&gt; for transfer request: 0.
2023-12-12 10:57:03,291 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:03,291 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:57:03,291 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f4d20116f60&gt; for transfer request: 0.
2023-12-12 10:57:03,291 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:57:03,292 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:03,292 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f4d201a3ba8&gt;, 'bucket': 'link', 'key': 'big_file', 'extra_args': {}}
2023-12-12 10:57:03,292 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f4d2230a6a8&gt;
2023-12-12 10:57:03,293 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f4d22307ae8&gt;
2023-12-12 10:57:03,293 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f4d200f8438&gt;]
2023-12-12 10:57:03,293 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f4d22307a60&gt;
2023-12-12 10:57:03,293 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,293 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f4d20116f60&gt; for transfer request: 0.
2023-12-12 10:57:03,293 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f4d201764e0&gt;&gt;
2023-12-12 10:57:03,293 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f4d223078c8&gt;
2023-12-12 10:57:03,294 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f4d22307d90&gt;
2023-12-12 10:57:03,294 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,293 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f4d200f8438&gt;
2023-12-12 10:57:03,294 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f4d22307598&gt;
2023-12-12 10:57:03,294 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f4d2228e0d0&gt;
2023-12-12 10:57:03,294 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/link/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f4d201a3da0&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:03,293 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:03,295 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f4d24830158&gt;
2023-12-12 10:57:03,295 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f4d200f8438&gt;]
2023-12-12 10:57:03,295 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f4d201a3d68&gt;&gt;
2023-12-12 10:57:03,295 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f4d20176550&gt;&gt;
2023-12-12 10:57:03,295 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f4d223077b8&gt;
2023-12-12 10:57:03,296 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f4d20176550&gt;&gt;
2023-12-12 10:57:03,296 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:03,296 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:03,296 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/link/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105703Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:57:03,296 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105703Z
20231212/us-west-1/s3/aws4_request
7651d3305de225724eabd977f0bc6d190c65c13a29c34c13a800fa66ea211949
2023-12-12 10:57:03,296 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
c2b2566f616d78174cdf0cfb9fdeb19e5f43e678270cff5e80f1bec1c6a849de
2023-12-12 10:57:03,296 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f4d248301e0&gt;
2023-12-12 10:57:03,296 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f4d2228e730&gt;
2023-12-12 10:57:03,296 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/link/big_file?uploads, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105703Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=c2b2566f616d78174cdf0cfb9fdeb19e5f43e678270cff5e80f1bec1c6a849de', 'amz-sdk-invocation-id': b'acd6fc5b-919d-45ee-a623-56f834ddd850', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2023-12-12 10:57:03,298 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:03,295 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f4d20116f60&gt; for transfer request: 0.
2023-12-12 10:57:03,299 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:03,295 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f4d200f8438&gt;
2023-12-12 10:57:03,299 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f4d200f8438&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f4d200f8978&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f4d1cf7c7f0&gt;]
2023-12-12 10:57:03,299 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:03,299 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f4d200f8438&gt;
2023-12-12 10:57:03,310 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /link/big_file?uploads HTTP/1.1" 200 282
2023-12-12 10:57:03,310 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'lAApYlpoTuS', 'x-amz-request-id': 'c05eee45-40a9-4813-a20c-ee7b9f72f4da', 'Content-Length': '282'}
2023-12-12 10:57:03,310 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;link&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2023-12-12 10:57:03,311 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f4d20176160&gt;
2023-12-12 10:57:03,311 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:03,311 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,311 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f4d20837598&gt;
2023-12-12 10:57:03,311 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:03,312 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:57:03,312 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f4d201a3ba8&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f4d200f8588&gt;, 'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': 'd9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709'}
2023-12-12 10:57:03,312 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f4d22307ae8&gt;
2023-12-12 10:57:03,312 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:57:03,313 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f4d2230af28&gt;
2023-12-12 10:57:03,313 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f4d22307a60&gt;
2023-12-12 10:57:03,312 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f4d200f8978&gt;
2023-12-12 10:57:03,313 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,313 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f4d201764e0&gt;&gt;
2023-12-12 10:57:03,313 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f4d223078c8&gt;
2023-12-12 10:57:03,313 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f4d22cad0d0&gt;
2023-12-12 10:57:03,313 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f4d201a3ba8&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f4d200f8a90&gt;, 'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': 'd9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709'}
2023-12-12 10:57:03,314 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f4d22307ae8&gt;
2023-12-12 10:57:03,314 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f4d2230af28&gt;
2023-12-12 10:57:03,314 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f4d22307a60&gt;
2023-12-12 10:57:03,314 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,314 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f4d201764e0&gt;&gt;
2023-12-12 10:57:03,316 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f4d223078c8&gt;
2023-12-12 10:57:03,316 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f4d22cad0d0&gt;
2023-12-12 10:57:03,319 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f4d22307d90&gt;
2023-12-12 10:57:03,320 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:57:03,320 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,320 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f4d22307598&gt;
2023-12-12 10:57:03,320 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f4d2228e0d0&gt;
2023-12-12 10:57:03,320 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/link/big_file', 'query_string': {'uploadId': 'd9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'W27nD9+CWwuUu+6bs/x8qA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f4d200f8a90&gt;, 'url': 'http://s3g:9878/link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f4d201a3da0&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:03,320 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f4d24830158&gt;
2023-12-12 10:57:03,321 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f4d201a3d68&gt;&gt;
2023-12-12 10:57:03,321 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f4d20176550&gt;&gt;
2023-12-12 10:57:03,321 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f4d223077b8&gt;
2023-12-12 10:57:03,321 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f4d20176550&gt;&gt;
2023-12-12 10:57:03,323 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:03,323 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/big_file
partNumber=2&amp;uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709
content-md5:W27nD9+CWwuUu+6bs/x8qA==
host:s3g:9878
x-amz-content-sha256:baa01680161756524facf47750dfeb1644ff25ae868f40f7b56b09e8c32c6b71
x-amz-date:20231212T105703Z

content-md5;host;x-amz-content-sha256;x-amz-date
baa01680161756524facf47750dfeb1644ff25ae868f40f7b56b09e8c32c6b71
2023-12-12 10:57:03,323 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105703Z
20231212/us-west-1/s3/aws4_request
09e20edbfcb96e61ee2b99820642343de90e717b772f9bc851a9fe19811690a7
2023-12-12 10:57:03,323 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
c9d33aee7afbd212c78dbe2dea5c67e846818acc95ffe95978d182750df6ba9c
2023-12-12 10:57:03,323 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f4d248301e0&gt;
2023-12-12 10:57:03,324 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f4d2228e730&gt;
2023-12-12 10:57:03,324 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'W27nD9+CWwuUu+6bs/x8qA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105703Z', 'X-Amz-Content-SHA256': b'baa01680161756524facf47750dfeb1644ff25ae868f40f7b56b09e8c32c6b71', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=c9d33aee7afbd212c78dbe2dea5c67e846818acc95ffe95978d182750df6ba9c', 'amz-sdk-invocation-id': b'7cf70399-d497-4371-9e98-f08d9e486794', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2023-12-12 10:57:03,325 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:57:03,325 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (7.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (14.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (20.7 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (27.3 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (33.8 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (40.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:03,338 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f4d22307d90&gt;
2023-12-12 10:57:03,338 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:57:03,338 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,338 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f4d22307598&gt;
2023-12-12 10:57:03,338 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f4d2228e0d0&gt;
2023-12-12 10:57:03,339 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/link/big_file', 'query_string': {'uploadId': 'd9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'WuPGoJ5yoywk7DvqdQSImg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f4d200f8588&gt;, 'url': 'http://s3g:9878/link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f4d201a3da0&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:03,339 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f4d24830158&gt;
2023-12-12 10:57:03,339 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f4d201a3d68&gt;&gt;
2023-12-12 10:57:03,339 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f4d20176550&gt;&gt;
2023-12-12 10:57:03,339 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f4d223077b8&gt;
2023-12-12 10:57:03,339 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f4d20176550&gt;&gt;
2023-12-12 10:57:03,348 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:03,348 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/big_file
partNumber=1&amp;uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709
content-md5:WuPGoJ5yoywk7DvqdQSImg==
host:s3g:9878
x-amz-content-sha256:c9d5c477e9df1fe7af16fb157ac4ee13b89a29463cb629b6dd1e4f0081b3b1cf
x-amz-date:20231212T105703Z

content-md5;host;x-amz-content-sha256;x-amz-date
c9d5c477e9df1fe7af16fb157ac4ee13b89a29463cb629b6dd1e4f0081b3b1cf
2023-12-12 10:57:03,348 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105703Z
20231212/us-west-1/s3/aws4_request
2e7eaac3e2567a1fce99c9e09275bb8244914b7ee4c102a4825c9acbf8baea30
2023-12-12 10:57:03,348 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
c2f9e9c882e57c0bebbab1a0ef86581798f2c2bc71eb242ac72ecc01281c9bf3
2023-12-12 10:57:03,348 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f4d248301e0&gt;
2023-12-12 10:57:03,348 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f4d2228e730&gt;
2023-12-12 10:57:03,349 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'WuPGoJ5yoywk7DvqdQSImg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105703Z', 'X-Amz-Content-SHA256': b'c9d5c477e9df1fe7af16fb157ac4ee13b89a29463cb629b6dd1e4f0081b3b1cf', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=c2f9e9c882e57c0bebbab1a0ef86581798f2c2bc71eb242ac72ecc01281c9bf3', 'amz-sdk-invocation-id': b'f36347ca-1a19-4222-b068-b0881e5f8e11', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2023-12-12 10:57:03,349 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2023-12-12 10:57:03,350 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:57:03,351 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (28.8 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (32.5 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (36.3 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (40.1 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (43.7 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (47.1 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (43.2 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (46.1 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (49.1 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (52.0 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (43.5 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (45.7 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (47.9 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (50.1 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (51.9 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (54.1 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (56.0 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (58.1 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (60.3 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (62.1 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (64.2 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (66.1 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (66.5 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (68.1 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (69.0 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (69.8 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (71.4 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (72.4 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (72.9 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (73.7 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/9.5 MiB (75.3 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (76.8 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:03,492 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709&amp;partNumber=2 HTTP/1.1" 200 0
2023-12-12 10:57:03,493 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/legacy/source-bucket/big_file-d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709-2', 'Server': 'Ozone', 'x-amz-id-2': 'BzUjiAe8', 'x-amz-request-id': 'f04993db-7227-4daa-886c-3fe2245d4235', 'Content-Length': '0'}
2023-12-12 10:57:03,496 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:57:03,497 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f4d20176160&gt;
2023-12-12 10:57:03,497 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:03,497 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,497 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f4d20837598&gt;
2023-12-12 10:57:03,498 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.5 MiB/9.5 MiB (46.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:03,565 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709&amp;partNumber=1 HTTP/1.1" 200 0
2023-12-12 10:57:03,566 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/legacy/source-bucket/big_file-d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709-1', 'Server': 'Ozone', 'x-amz-id-2': 'TPbqUJCsH', 'x-amz-request-id': '46a698ea-2631-4b76-bd3b-589bab499c0b', 'Content-Length': '0'}
2023-12-12 10:57:03,566 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:57:03,566 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f4d20176160&gt;
2023-12-12 10:57:03,566 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:03,566 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,566 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f4d20837598&gt;
2023-12-12 10:57:03,567 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:03,567 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f4d1cf7c7f0&gt;
2023-12-12 10:57:03,567 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:57:03,567 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f4d201a3ba8&gt;, 'bucket': 'link', 'key': 'big_file', 'extra_args': {}, 'upload_id': 'd9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709', 'parts': [{'ETag': '/legacy/source-bucket/big_file-d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709-1', 'PartNumber': 1}, {'ETag': '/legacy/source-bucket/big_file-d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709-2', 'PartNumber': 2}]}
2023-12-12 10:57:03,568 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f4d22307a60&gt;
2023-12-12 10:57:03,568 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,568 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f4d201764e0&gt;&gt;
2023-12-12 10:57:03,568 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f4d223078c8&gt;
2023-12-12 10:57:03,568 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f4d22307d90&gt;
2023-12-12 10:57:03,568 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,568 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f4d22307598&gt;
2023-12-12 10:57:03,568 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f4d2228e0d0&gt;
2023-12-12 10:57:03,568 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/link/big_file', 'query_string': {'uploadId': 'd9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;/legacy/source-bucket/big_file-d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709-1&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;/legacy/source-bucket/big_file-d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709-2&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'url': 'http://s3g:9878/link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f4d201a3da0&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:03,569 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f4d24830158&gt;
2023-12-12 10:57:03,569 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f4d201a3d68&gt;&gt;
2023-12-12 10:57:03,569 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f4d20176550&gt;&gt;
2023-12-12 10:57:03,569 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f4d223077b8&gt;
2023-12-12 10:57:03,569 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f4d20176550&gt;&gt;
2023-12-12 10:57:03,569 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:03,569 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/link/big_file
uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709
host:s3g:9878
x-amz-content-sha256:d110270d5ef2ebf9892c6103a93b81abf1e5f3ceeec0ecc3f1258cdbda46dffa
x-amz-date:20231212T105703Z

host;x-amz-content-sha256;x-amz-date
d110270d5ef2ebf9892c6103a93b81abf1e5f3ceeec0ecc3f1258cdbda46dffa
2023-12-12 10:57:03,569 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105703Z
20231212/us-west-1/s3/aws4_request
301a4cc3564d8bfa40a3110ab715559c883b58f4fe91e796bafeed7792a1683c
2023-12-12 10:57:03,569 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
8d0a628d934dbf64c366235b0bef4f624047a7737bd6a41291260201a739df57
2023-12-12 10:57:03,570 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f4d248301e0&gt;
2023-12-12 10:57:03,570 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f4d2228e730&gt;
2023-12-12 10:57:03,570 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105703Z', 'X-Amz-Content-SHA256': b'd110270d5ef2ebf9892c6103a93b81abf1e5f3ceeec0ecc3f1258cdbda46dffa', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=8d0a628d934dbf64c366235b0bef4f624047a7737bd6a41291260201a739df57', 'amz-sdk-invocation-id': b'28627bec-3bd1-4bc8-8970-e36877def96e', 'amz-sdk-request': b'attempt=1', 'Content-Length': '379'}&gt;
2023-12-12 10:57:03,586 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709 HTTP/1.1" 200 280
2023-12-12 10:57:03,586 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'Glx2uFm8E5oq', 'x-amz-request-id': '2b67d91c-da03-4a9b-85ef-8f4c617c6af8', 'Content-Length': '280'}
2023-12-12 10:57:03,586 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;link&lt;/Location&gt;&lt;Bucket&gt;link&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"4884752c15d04cc12c445c906b125041-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2023-12-12 10:57:03,587 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function check_for_200_error at 0x7f4d223076a8&gt;
2023-12-12 10:57:03,587 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f4d20176160&gt;
2023-12-12 10:57:03,587 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:03,587 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f4d20176128&gt;&gt;
2023-12-12 10:57:03,587 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f4d20837598&gt;
2023-12-12 10:57:03,587 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://link/big_file                 
2023-12-12 10:57:03,588 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:57:03.631" endtime="20231212 10:57:03.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:03.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:03.632" endtime="20231212 10:57:03.632"/>
</kw>
<status status="PASS" starttime="20231212 10:57:02.871" endtime="20231212 10:57:03.633"/>
</kw>
<msg timestamp="20231212 10:57:03.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:02.871" endtime="20231212 10:57:03.633"/>
</kw>
<msg timestamp="20231212 10:57:03.634" level="INFO">${output} = 2023-12-12 10:57:03,233 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:03,233 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:02.870" endtime="20231212 10:57:03.634"/>
</kw>
<msg timestamp="20231212 10:57:03.634" level="INFO">${result} = 2023-12-12 10:57:03,233 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:03,233 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:02.870" endtime="20231212 10:57:03.634"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:57:03.636" level="INFO">${match} = POST /link/big_file?uploadId=d9329de3-f581-413e-b86f-56fe0b557b13-111567085456785709 HTTP/1.1" 200 280
2023-12-12 10:57:03,586 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {...</msg>
<msg timestamp="20231212 10:57:03.636" level="INFO">${etag1} = 4884752c15d04cc12c445c906b125041-2</msg>
<status status="PASS" starttime="20231212 10:57:03.635" endtime="20231212 10:57:03.636"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:03.640" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://link/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:04.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:04.214" level="INFO">${output} = 2023-12-12 10:57:04,001 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:04,001 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:03.638" endtime="20231212 10:57:04.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:04.215" level="INFO">2023-12-12 10:57:04,001 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:04,001 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://link/big_file', '/tmp/big_file_downloaded']
2023-12-12 10:57:04,002 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7ff9cef7b9d8&gt;
2023-12-12 10:57:04,002 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7ff9cfd6f730&gt;
2023-12-12 10:57:04,002 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7ff9cfd9dae8&gt;
2023-12-12 10:57:04,003 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:57:04,006 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7ff9cf0a7400&gt;
2023-12-12 10:57:04,007 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7ff9cef89048&gt;
2023-12-12 10:57:04,007 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,007 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7ff9cef89048&gt;
2023-12-12 10:57:04,009 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,009 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,009 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff9cfd70550&gt;
2023-12-12 10:57:04,010 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,010 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff9cfd70550&gt;
2023-12-12 10:57:04,010 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,010 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,010 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,010 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff9cfd70550&gt;
2023-12-12 10:57:04,010 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,010 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,011 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,011 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,011 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,011 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,011 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,011 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,011 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,011 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,012 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,012 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,012 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,012 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,012 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,012 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,012 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,013 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,013 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff9cfd70550&gt;
2023-12-12 10:57:04,013 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,013 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,013 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,013 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff9cfd70550&gt;
2023-12-12 10:57:04,013 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,013 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff9cfd70550&gt;
2023-12-12 10:57:04,013 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,014 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,014 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,014 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,014 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff9d6c88940&gt;
2023-12-12 10:57:04,014 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:57:04,014 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2023-12-12 10:57:04,014 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2023-12-12 10:57:04,014 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2023-12-12 10:57:04,015 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2023-12-12 10:57:04,015 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2023-12-12 10:57:04,015 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:57:04,030 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:57:04,030 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7ff9d0a35378&gt;
2023-12-12 10:57:04,031 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:57:04,041 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7ff9d0d0b2f0&gt;
2023-12-12 10:57:04,041 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7ff9d0d0b0d0&gt;
2023-12-12 10:57:04,041 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:04,044 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:04,044 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:57:04,045 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:04,046 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:04,046 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7ff9d0a35378&gt;
2023-12-12 10:57:04,047 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7ff9d0d0b2f0&gt;
2023-12-12 10:57:04,047 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7ff9d0d0b0d0&gt;
2023-12-12 10:57:04,047 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:04,050 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:04,050 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:04,051 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:04,051 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7ff9d0a35378&gt;
2023-12-12 10:57:04,053 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7ff9d0d0b2f0&gt;
2023-12-12 10:57:04,053 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7ff9d0d0b0d0&gt;
2023-12-12 10:57:04,053 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:04,055 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:04,056 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:04,057 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:04,057 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:57:04,058 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7ff9d0a4bae8&gt;
2023-12-12 10:57:04,058 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7ff9d0a4ba60&gt;
2023-12-12 10:57:04,058 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7ff9ce85a630&gt;&gt;
2023-12-12 10:57:04,058 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7ff9ce85a9e8&gt;&gt;
2023-12-12 10:57:04,058 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7ff9d0a4b8c8&gt;
2023-12-12 10:57:04,059 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7ff9d0a4bd90&gt;
2023-12-12 10:57:04,059 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7ff9ce85a630&gt;&gt;
2023-12-12 10:57:04,059 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7ff9d0a4b598&gt;
2023-12-12 10:57:04,059 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7ff9d09d20d0&gt;
2023-12-12 10:57:04,059 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/link/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7ff9ce85a2e8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:04,059 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7ff9ce85a2b0&gt;&gt;
2023-12-12 10:57:04,059 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7ff9ce85aa58&gt;&gt;
2023-12-12 10:57:04,059 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7ff9d0a4b7b8&gt;
2023-12-12 10:57:04,060 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7ff9ce85aa58&gt;&gt;
2023-12-12 10:57:04,060 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:04,060 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:04,060 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/link/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105704Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:57:04,060 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105704Z
20231212/us-west-1/s3/aws4_request
4fdc2e2d6acaa68dd1a489f22c81cb8e876ee5678518d63b178e31d47f7b7d54
2023-12-12 10:57:04,060 - MainThread - botocore.auth - DEBUG - Signature:
d6ad8d0206aab0919f2528e1523b6caa9277d35f04dec743b06bf357819a8f99
2023-12-12 10:57:04,060 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7ff9d09d2730&gt;
2023-12-12 10:57:04,060 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/link/big_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105704Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=d6ad8d0206aab0919f2528e1523b6caa9277d35f04dec743b06bf357819a8f99', 'amz-sdk-invocation-id': b'31169b67-4f9e-4a24-a4da-e3001e585554', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:57:04,062 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:04,067 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /link/big_file HTTP/1.1" 200 0
2023-12-12 10:57:04,067 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:04 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:04 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"4884752c15d04cc12c445c906b125041-2"', 'Last-Modified': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'a2fBMFSo', 'x-amz-request-id': 'e1e3c051-ae10-4669-b1ec-67e64e90524f', 'Content-Length': '10000000'}
2023-12-12 10:57:04,068 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:57:04,068 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7ff9ce85a668&gt;
2023-12-12 10:57:04,068 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:04,068 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7ff9ce85a630&gt;&gt;
2023-12-12 10:57:04,069 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7ff9cef7b598&gt;
2023-12-12 10:57:04,070 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,070 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;}) about to wait for the following futures []
2023-12-12 10:57:04,070 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;}) done waiting for dependent futures
2023-12-12 10:57:04,071 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7ff9ce8e7b38&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7ff9ce85ac88&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7ff9ce85acf8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce85ae80&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt;}
2023-12-12 10:57:04,071 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce85ae80&gt; for transfer request: 0.
2023-12-12 10:57:04,071 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,071 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2023-12-12 10:57:04,072 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2023-12-12 10:57:04,072 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce85ae80&gt; for transfer request: 0.
2023-12-12 10:57:04,072 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7ff9ce8e7b38&gt;, 'bucket': 'link', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7ff9ce845f60&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7ff9ce845e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7ff9ce845d68&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7ff9ce845828&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7ff9ce829898&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-12-12 10:57:04,072 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7ff9d0a4bae8&gt;
2023-12-12 10:57:04,072 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7ff9d0a4ba60&gt;
2023-12-12 10:57:04,073 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7ff9ce8bb0b8&gt;&gt;
2023-12-12 10:57:04,072 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,073 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7ff9ce8bb470&gt;&gt;
2023-12-12 10:57:04,073 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2023-12-12 10:57:04,073 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7ff9d0a4b8c8&gt;
2023-12-12 10:57:04,074 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7ff9d0a4bd90&gt;
2023-12-12 10:57:04,074 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7ff9ce8bb0b8&gt;&gt;
2023-12-12 10:57:04,074 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7ff9d0a4b598&gt;
2023-12-12 10:57:04,074 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7ff9d09d20d0&gt;
2023-12-12 10:57:04,074 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/link/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7ff9ce8e7d30&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:04,074 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7ff9d2f74158&gt;
2023-12-12 10:57:04,074 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7ff9ce8e7cf8&gt;&gt;
2023-12-12 10:57:04,075 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7ff9ce8bb4e0&gt;&gt;
2023-12-12 10:57:04,073 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,075 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7ff9d0a4b7b8&gt;
2023-12-12 10:57:04,073 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2023-12-12 10:57:04,075 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7ff9ce8bb4e0&gt;&gt;
2023-12-12 10:57:04,075 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7ff9ce8e7b38&gt;, 'bucket': 'link', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7ff9ce845f60&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7ff9ce845e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7ff9ce845d68&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7ff9ce845828&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff9ce8457f0&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7ff9ce829898&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-12-12 10:57:04,075 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:04,075 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7ff9d0a4bae8&gt;
2023-12-12 10:57:04,076 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:04,076 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7ff9d0a4ba60&gt;
2023-12-12 10:57:04,076 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/link/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105704Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:57:04,076 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7ff9ce8bb0b8&gt;&gt;
2023-12-12 10:57:04,076 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105704Z
20231212/us-west-1/s3/aws4_request
253e8d73052098b7263563c0a7f8367a5969f4e525b1d36969d8a9e260be9554
2023-12-12 10:57:04,076 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7ff9ce8bb470&gt;&gt;
2023-12-12 10:57:04,076 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
ecec58477a62b398ed1afd25720bf9225314c0b5cef91252321e7623f8e438b2
2023-12-12 10:57:04,076 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7ff9d0a4b8c8&gt;
2023-12-12 10:57:04,076 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7ff9d2f741e0&gt;
2023-12-12 10:57:04,077 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7ff9d0a4bd90&gt;
2023-12-12 10:57:04,077 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7ff9d09d2730&gt;
2023-12-12 10:57:04,077 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7ff9ce8bb0b8&gt;&gt;
2023-12-12 10:57:04,077 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/link/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105704Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=ecec58477a62b398ed1afd25720bf9225314c0b5cef91252321e7623f8e438b2', 'amz-sdk-invocation-id': b'd3db3dbf-ac30-4aee-9d9d-d106333baf41', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:57:04,078 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:04,077 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7ff9d0a4b598&gt;
2023-12-12 10:57:04,078 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7ff9d09d20d0&gt;
2023-12-12 10:57:04,078 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/link/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7ff9ce8e7d30&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:04,078 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7ff9d2f74158&gt;
2023-12-12 10:57:04,078 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7ff9ce8e7cf8&gt;&gt;
2023-12-12 10:57:04,078 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7ff9ce8bb4e0&gt;&gt;
2023-12-12 10:57:04,079 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7ff9d0a4b7b8&gt;
2023-12-12 10:57:04,079 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7ff9ce8bb4e0&gt;&gt;
2023-12-12 10:57:04,079 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:04,079 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/link/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231212T105704Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-12-12 10:57:04,079 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105704Z
20231212/us-west-1/s3/aws4_request
25b3d33b64ecf5d6343722b47dbd9a5e9afe2f44d660f02c3f415709e337f867
2023-12-12 10:57:04,079 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
abe28d840bda21d889e674c06098704115cbe42651d35ec6b2b0aefc209e394c
2023-12-12 10:57:04,079 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7ff9d2f741e0&gt;
2023-12-12 10:57:04,079 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7ff9d09d2730&gt;
2023-12-12 10:57:04,079 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/link/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'X-Amz-Date': b'20231212T105704Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=abe28d840bda21d889e674c06098704115cbe42651d35ec6b2b0aefc209e394c', 'amz-sdk-invocation-id': b'9ae78041-87bb-472b-901a-d89b8af4c538', 'amz-sdk-request': b'attempt=1'}&gt;
2023-12-12 10:57:04,080 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2023-12-12 10:57:04,105 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /link/big_file HTTP/1.1" 206 8388608
2023-12-12 10:57:04,106 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:04 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:04 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'ETag': '"4884752c15d04cc12c445c906b125041-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'V03XiwqQypW', 'x-amz-request-id': '7486a996-da8f-4121-bdeb-c0a008994b59', 'Content-Length': '8388608'}
2023-12-12 10:57:04,107 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7ff9cc474cc0&gt;
2023-12-12 10:57:04,108 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7ff9ce8bb0f0&gt;
2023-12-12 10:57:04,108 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:04,108 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7ff9ce8bb0b8&gt;&gt;
2023-12-12 10:57:04,108 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7ff9cef7b598&gt;
Completed 256.0 KiB/9.5 MiB (6.6 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:04,109 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,109 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,117 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /link/big_file HTTP/1.1" 206 1611392
2023-12-12 10:57:04,117 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:04 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:04 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'ETag': '"4884752c15d04cc12c445c906b125041-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 12 Dec 2023 10:57:03 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'Nf9i05n0wki', 'x-amz-request-id': 'ed48e57b-aae2-499a-ac89-124be6ea9066', 'Content-Length': '1611392'}
2023-12-12 10:57:04,118 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7ff9cc474f28&gt;
2023-12-12 10:57:04,118 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7ff9ce8bb0f0&gt;
2023-12-12 10:57:04,118 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:04,118 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7ff9ce8bb0b8&gt;&gt;
2023-12-12 10:57:04,118 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7ff9cef7b598&gt;
Completed 512.0 KiB/9.5 MiB (10.2 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:04,120 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,121 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,123 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2023-12-12 10:57:04,123 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-12-12 10:57:04,124 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 0}
2023-12-12 10:57:04,125 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 768.0 KiB/9.5 MiB (13.6 MiB/s) with 1 file(s) remaining
2023-12-12 10:57:04,126 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2023-12-12 10:57:04,126 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,127 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.0 MiB/9.5 MiB (17.8 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,127 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,127 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,127 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
Completed 1.2 MiB/9.5 MiB (22.1 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (26.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,128 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,128 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,128 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 8388608}
Completed 1.8 MiB/9.5 MiB (30.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,128 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,129 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,130 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
Completed 2.0 MiB/9.5 MiB (34.1 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,130 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.2 MiB/9.5 MiB (37.9 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,130 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,130 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2023-12-12 10:57:04,131 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2023-12-12 10:57:04,131 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 8650752}
2023-12-12 10:57:04,131 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,131 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2023-12-12 10:57:04,131 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2023-12-12 10:57:04,131 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 8912896}
2023-12-12 10:57:04,132 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,132 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2023-12-12 10:57:04,132 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2023-12-12 10:57:04,132 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 9175040}
2023-12-12 10:57:04,132 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,132 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-12-12 10:57:04,133 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-12-12 10:57:04,133 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 262144}
2023-12-12 10:57:04,129 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,133 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (40.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,133 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,134 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (40.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,134 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,134 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-12-12 10:57:04,134 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-12-12 10:57:04,134 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 524288}
2023-12-12 10:57:04,135 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2023-12-12 10:57:04,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2023-12-12 10:57:04,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 9437184}
2023-12-12 10:57:04,134 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,135 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,135 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,130 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,135 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.8 MiB/9.5 MiB (42.9 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,136 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,136 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.0 MiB/9.5 MiB (46.4 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,136 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,137 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.3 MiB/9.5 MiB (49.8 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,137 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,137 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,138 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2023-12-12 10:57:04,138 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2023-12-12 10:57:04,138 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 9699328}
2023-12-12 10:57:04,138 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,138 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2023-12-12 10:57:04,138 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2023-12-12 10:57:04,138 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 9961472}
2023-12-12 10:57:04,138 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,139 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-12-12 10:57:04,139 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-12-12 10:57:04,139 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 786432}
2023-12-12 10:57:04,139 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,139 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2023-12-12 10:57:04,139 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2023-12-12 10:57:04,139 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 1048576}
2023-12-12 10:57:04,140 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,140 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2023-12-12 10:57:04,140 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2023-12-12 10:57:04,140 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 1310720}
2023-12-12 10:57:04,140 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,137 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.5 MiB/9.5 MiB (50.9 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,140 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,141 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.8 MiB/9.5 MiB (54.1 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,141 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,141 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.0 MiB/9.5 MiB (57.3 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,141 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,142 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.3 MiB/9.5 MiB (60.3 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,142 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,142 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.5 MiB/9.5 MiB (63.3 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,143 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,143 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.8 MiB/9.5 MiB (66.3 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,143 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,143 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.0 MiB/9.5 MiB (69.1 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,143 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2023-12-12 10:57:04,144 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2023-12-12 10:57:04,144 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 1572864}
2023-12-12 10:57:04,144 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,144 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2023-12-12 10:57:04,145 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2023-12-12 10:57:04,145 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 1835008}
2023-12-12 10:57:04,145 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,145 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2023-12-12 10:57:04,145 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2023-12-12 10:57:04,145 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 2097152}
2023-12-12 10:57:04,145 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,145 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2023-12-12 10:57:04,144 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,146 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2023-12-12 10:57:04,146 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,146 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 2359296}
Completed 5.3 MiB/9.5 MiB (70.4 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,146 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,146 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.5 MiB/9.5 MiB (73.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,147 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,147 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.8 MiB/9.5 MiB (76.0 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,147 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,147 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.0 MiB/9.5 MiB (78.4 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,147 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,148 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2023-12-12 10:57:04,148 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2023-12-12 10:57:04,148 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 2621440}
2023-12-12 10:57:04,149 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,149 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2023-12-12 10:57:04,149 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2023-12-12 10:57:04,149 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 2883584}
2023-12-12 10:57:04,148 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,149 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.3 MiB/9.5 MiB (80.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,149 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,149 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.5 MiB/9.5 MiB (82.9 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,150 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,150 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,150 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,150 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2023-12-12 10:57:04,151 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
Completed 6.8 MiB/9.5 MiB (85.0 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,151 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 3145728}
2023-12-12 10:57:04,151 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,151 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.0 MiB/9.5 MiB (87.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,152 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,152 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.3 MiB/9.5 MiB (89.7 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,152 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,152 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2023-12-12 10:57:04,152 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2023-12-12 10:57:04,153 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 3407872}
2023-12-12 10:57:04,153 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,153 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2023-12-12 10:57:04,153 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2023-12-12 10:57:04,153 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 3670016}
2023-12-12 10:57:04,152 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,153 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.5 MiB/9.5 MiB (91.1 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,154 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,154 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,154 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,154 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2023-12-12 10:57:04,154 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2023-12-12 10:57:04,154 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 3932160}
2023-12-12 10:57:04,155 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,155 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2023-12-12 10:57:04,155 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2023-12-12 10:57:04,155 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 4194304}
2023-12-12 10:57:04,155 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,155 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2023-12-12 10:57:04,155 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2023-12-12 10:57:04,155 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 4456448}
2023-12-12 10:57:04,156 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,156 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2023-12-12 10:57:04,156 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2023-12-12 10:57:04,156 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 4718592}
2023-12-12 10:57:04,156 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,156 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2023-12-12 10:57:04,156 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2023-12-12 10:57:04,157 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 4980736}
2023-12-12 10:57:04,157 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,157 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
2023-12-12 10:57:04,157 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2023-12-12 10:57:04,157 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 5242880}
2023-12-12 10:57:04,157 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,157 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2023-12-12 10:57:04,158 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2023-12-12 10:57:04,158 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 5505024}
2023-12-12 10:57:04,158 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,158 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2023-12-12 10:57:04,158 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2023-12-12 10:57:04,158 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 5767168}
2023-12-12 10:57:04,158 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,159 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
Completed 7.8 MiB/9.5 MiB (88.4 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,159 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2023-12-12 10:57:04,159 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,159 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.0 MiB/9.5 MiB (90.7 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,159 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,160 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.3 MiB/9.5 MiB (93.1 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,160 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,160 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.5 MiB/9.5 MiB (95.4 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,160 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,161 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,159 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 6029312}
2023-12-12 10:57:04,162 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,162 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2023-12-12 10:57:04,162 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2023-12-12 10:57:04,162 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 6291456}
2023-12-12 10:57:04,162 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,163 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2023-12-12 10:57:04,163 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2023-12-12 10:57:04,163 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 6553600}
2023-12-12 10:57:04,163 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,163 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2023-12-12 10:57:04,163 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2023-12-12 10:57:04,163 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 6815744}
2023-12-12 10:57:04,164 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,164 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2023-12-12 10:57:04,164 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2023-12-12 10:57:04,164 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 7077888}
2023-12-12 10:57:04,164 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.8 MiB/9.5 MiB (93.1 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,165 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,165 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.0 MiB/9.5 MiB (95.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,166 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,166 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.3 MiB/9.5 MiB (97.5 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,166 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,166 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.5 MiB/9.5 MiB (99.6 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:04,167 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,167 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,167 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff9ce8292b0&gt; for transfer request: 0.
2023-12-12 10:57:04,167 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:04,167 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,167 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2023-12-12 10:57:04,167 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2023-12-12 10:57:04,167 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 7340032}
2023-12-12 10:57:04,167 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,167 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2023-12-12 10:57:04,167 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2023-12-12 10:57:04,167 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 7602176}
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 7864320}
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'offset': 8126464}
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2023-12-12 10:57:04,168 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2023-12-12 10:57:04,169 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff9ce845cc0&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7ff9ce85acf8&gt;}
download: s3://link/big_file to ../../tmp/big_file_downloaded    
2023-12-12 10:57:04,170 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:04,171 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:57:04.214" endtime="20231212 10:57:04.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:04.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:04.216" endtime="20231212 10:57:04.216"/>
</kw>
<status status="PASS" starttime="20231212 10:57:03.637" endtime="20231212 10:57:04.216"/>
</kw>
<msg timestamp="20231212 10:57:04.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:03.637" endtime="20231212 10:57:04.217"/>
</kw>
<msg timestamp="20231212 10:57:04.218" level="INFO">${output} = 2023-12-12 10:57:04,001 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:04,001 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:03.637" endtime="20231212 10:57:04.218"/>
</kw>
<msg timestamp="20231212 10:57:04.219" level="INFO">${file_download_result} = 2023-12-12 10:57:04,001 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:04,001 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:03.636" endtime="20231212 10:57:04.219"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:57:04.220" level="INFO">${match} = GET /link/big_file HTTP/1.1" 206 8388608
2023-12-12 10:57:04,106 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:04 GMT', 'Cache-Control': 'no-...</msg>
<msg timestamp="20231212 10:57:04.220" level="INFO">${etag2} = 4884752c15d04cc12c445c906b125041-2</msg>
<status status="PASS" starttime="20231212 10:57:04.219" endtime="20231212 10:57:04.220"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:57:04.220" endtime="20231212 10:57:04.221"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:04.224" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:04.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:04.691" level="INFO">${output} = delete: s3://link/big_file</msg>
<status status="PASS" starttime="20231212 10:57:04.223" endtime="20231212 10:57:04.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:04.692" level="INFO">delete: s3://link/big_file</msg>
<status status="PASS" starttime="20231212 10:57:04.692" endtime="20231212 10:57:04.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:04.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:04.692" endtime="20231212 10:57:04.693"/>
</kw>
<status status="PASS" starttime="20231212 10:57:04.222" endtime="20231212 10:57:04.693"/>
</kw>
<msg timestamp="20231212 10:57:04.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:04.222" endtime="20231212 10:57:04.693"/>
</kw>
<msg timestamp="20231212 10:57:04.693" level="INFO">${output} = delete: s3://link/big_file</msg>
<status status="PASS" starttime="20231212 10:57:04.221" endtime="20231212 10:57:04.693"/>
</kw>
<status status="PASS" starttime="20231212 10:57:04.221" endtime="20231212 10:57:04.693"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:04.697" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:04.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:04.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:04.695" endtime="20231212 10:57:04.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:04.700" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:04.700" endtime="20231212 10:57:04.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:04.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:04.701" endtime="20231212 10:57:04.701"/>
</kw>
<status status="PASS" starttime="20231212 10:57:04.694" endtime="20231212 10:57:04.701"/>
</kw>
<msg timestamp="20231212 10:57:04.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:04.694" endtime="20231212 10:57:04.701"/>
</kw>
<status status="PASS" starttime="20231212 10:57:04.694" endtime="20231212 10:57:04.701"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:57:02.829" endtime="20231212 10:57:04.702"/>
</test>
<test id="s1-s6-s12-t19" name="Create key twice with different content and expect different ETags" line="249">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:04.705" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20231212 10:57:04.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:04.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:04.704" endtime="20231212 10:57:04.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:04.711" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:04.711" endtime="20231212 10:57:04.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:04.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:04.712" endtime="20231212 10:57:04.712"/>
</kw>
<status status="PASS" starttime="20231212 10:57:04.703" endtime="20231212 10:57:04.712"/>
</kw>
<msg timestamp="20231212 10:57:04.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:04.703" endtime="20231212 10:57:04.712"/>
</kw>
<status status="PASS" starttime="20231212 10:57:04.703" endtime="20231212 10:57:04.713"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:04.715" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20231212 10:57:04.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:04.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:04.714" endtime="20231212 10:57:04.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:04.721" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:04.721" endtime="20231212 10:57:04.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:04.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:04.721" endtime="20231212 10:57:04.722"/>
</kw>
<status status="PASS" starttime="20231212 10:57:04.713" endtime="20231212 10:57:04.722"/>
</kw>
<msg timestamp="20231212 10:57:04.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:04.713" endtime="20231212 10:57:04.722"/>
</kw>
<status status="PASS" starttime="20231212 10:57:04.713" endtime="20231212 10:57:04.722"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:04.725" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://link/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:07.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:07.744" level="INFO">${output} = 2023-12-12 10:57:05,086 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:05,086 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:04.724" endtime="20231212 10:57:07.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:07.745" level="INFO">2023-12-12 10:57:05,086 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:05,086 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://link/test_key_to_check_etag_differences']
2023-12-12 10:57:05,087 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f99473a79d8&gt;
2023-12-12 10:57:05,087 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f994819b730&gt;
2023-12-12 10:57:05,087 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f99481c9ae8&gt;
2023-12-12 10:57:05,087 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:57:05,091 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f99474d3400&gt;
2023-12-12 10:57:05,092 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f99473b5048&gt;
2023-12-12 10:57:05,092 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,092 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f99473b5048&gt;
2023-12-12 10:57:05,094 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,094 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,094 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f994819c550&gt;
2023-12-12 10:57:05,095 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,095 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f994819c550&gt;
2023-12-12 10:57:05,095 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,095 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,095 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,095 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f994819c550&gt;
2023-12-12 10:57:05,095 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,095 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,095 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,096 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,096 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,096 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,096 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,096 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,096 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,096 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,097 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,097 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,097 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,097 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,097 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,097 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,097 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,097 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,097 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f994819c550&gt;
2023-12-12 10:57:05,098 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,098 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,098 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,098 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f994819c550&gt;
2023-12-12 10:57:05,098 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,098 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f994819c550&gt;
2023-12-12 10:57:05,098 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,099 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,099 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,099 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,099 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f994f0b4940&gt;
2023-12-12 10:57:05,099 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:57:05,099 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2023-12-12 10:57:05,099 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2023-12-12 10:57:05,099 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2023-12-12 10:57:05,099 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2023-12-12 10:57:05,100 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2023-12-12 10:57:05,100 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:57:05,114 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:57:05,114 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f9948e61378&gt;
2023-12-12 10:57:05,115 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:57:05,125 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f99491372f0&gt;
2023-12-12 10:57:05,125 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f99491370d0&gt;
2023-12-12 10:57:05,125 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:05,128 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:05,129 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:57:05,129 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:05,130 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:05,130 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f9948e61378&gt;
2023-12-12 10:57:05,131 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f99491372f0&gt;
2023-12-12 10:57:05,131 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f99491370d0&gt;
2023-12-12 10:57:05,131 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:05,134 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:05,135 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:05,135 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:05,135 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f9948e61378&gt;
2023-12-12 10:57:05,137 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f99491372f0&gt;
2023-12-12 10:57:05,137 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f99491370d0&gt;
2023-12-12 10:57:05,137 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:05,140 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:05,140 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:05,141 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:05,141 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:57:05,142 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:05,143 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9946c55cf8&gt;}) about to wait for the following futures []
2023-12-12 10:57:05,143 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9946c55cf8&gt;}) done waiting for dependent futures
2023-12-12 10:57:05,143 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9946c55cf8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f9946d14b38&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f9946c86cc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f9946c86d30&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f9946c86eb8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9946c55cf8&gt;}
2023-12-12 10:57:05,144 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f9946c86eb8&gt; for transfer request: 0.
2023-12-12 10:57:05,144 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:05,145 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:57:05,145 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:05,145 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:57:05,145 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f9946d14b38&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f9946c682b0&gt;, 'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2023-12-12 10:57:05,146 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f9948e7b6a8&gt;
2023-12-12 10:57:05,146 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f9948e77ae8&gt;
2023-12-12 10:57:05,146 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f9948e7bf28&gt;
2023-12-12 10:57:05,146 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f9948e77a60&gt;
2023-12-12 10:57:05,146 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f9946ce60b8&gt;&gt;
2023-12-12 10:57:05,146 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f9946ce6470&gt;&gt;
2023-12-12 10:57:05,146 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f9948e778c8&gt;
2023-12-12 10:57:05,147 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f994981d0d0&gt;
2023-12-12 10:57:05,149 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f9948e77d90&gt;
2023-12-12 10:57:05,149 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:57:05,149 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f9946ce60b8&gt;&gt;
2023-12-12 10:57:05,149 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f9948e77598&gt;
2023-12-12 10:57:05,149 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f9948dfe0d0&gt;
2023-12-12 10:57:05,149 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/link/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'lEtjPmwWr0Kp4V9QY9qOkA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f9946c682b0&gt;, 'url': 'http://s3g:9878/link/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f9946d14d30&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:05,149 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f994b3a0158&gt;
2023-12-12 10:57:05,149 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f9946d14cf8&gt;&gt;
2023-12-12 10:57:05,150 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f9946ce64e0&gt;&gt;
2023-12-12 10:57:05,150 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f9948e777b8&gt;
2023-12-12 10:57:05,150 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f9946ce64e0&gt;&gt;
2023-12-12 10:57:05,150 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:05,151 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:05,151 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/test_key_to_check_etag_differences

content-md5:lEtjPmwWr0Kp4V9QY9qOkA==
host:s3g:9878
x-amz-content-sha256:cce280cd122f7ae432f565f1fac901dcaac9eb76f26dd78a45880a7b89e97379
x-amz-date:20231212T105705Z

content-md5;host;x-amz-content-sha256;x-amz-date
cce280cd122f7ae432f565f1fac901dcaac9eb76f26dd78a45880a7b89e97379
2023-12-12 10:57:05,151 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105705Z
20231212/us-west-1/s3/aws4_request
113ba4670af9ac3fabd8ff94862705cf1a5cede4ca38ba6d39147774ace66c86
2023-12-12 10:57:05,151 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
81a8f877271d2b719f03970b84ea99a832e6a94f2a261301106e5b6205fae4ae
2023-12-12 10:57:05,151 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f994b3a01e0&gt;
2023-12-12 10:57:05,151 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f9948dfe730&gt;
2023-12-12 10:57:05,152 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'lEtjPmwWr0Kp4V9QY9qOkA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105705Z', 'X-Amz-Content-SHA256': b'cce280cd122f7ae432f565f1fac901dcaac9eb76f26dd78a45880a7b89e97379', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=81a8f877271d2b719f03970b84ea99a832e6a94f2a261301106e5b6205fae4ae', 'amz-sdk-invocation-id': b'ff9c3d94-8496-4bec-9174-bab635384028', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2023-12-12 10:57:05,152 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:05,153 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:57:05,154 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (24.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (46.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (61.5 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (64.4 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:07,699 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-12-12 10:57:07,699 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:05 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:05 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"944b633e6c16af42a9e15f5063da8e90"', 'Server': 'Ozone', 'x-amz-id-2': 'ZAnmsNbzfn', 'x-amz-request-id': 'cb5728e7-85db-4f79-9752-67ca15ba5224', 'Content-Length': '0'}
2023-12-12 10:57:07,699 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:57:07,700 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f9946ce60f0&gt;
2023-12-12 10:57:07,700 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:07,700 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f9946ce60b8&gt;&gt;
2023-12-12 10:57:07,701 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f99473a7598&gt;
2023-12-12 10:57:07,701 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://link/test_key_to_check_etag_differences
2023-12-12 10:57:07,701 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:57:07.744" endtime="20231212 10:57:07.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:07.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:07.745" endtime="20231212 10:57:07.745"/>
</kw>
<status status="PASS" starttime="20231212 10:57:04.724" endtime="20231212 10:57:07.746"/>
</kw>
<msg timestamp="20231212 10:57:07.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:04.723" endtime="20231212 10:57:07.746"/>
</kw>
<msg timestamp="20231212 10:57:07.746" level="INFO">${output} = 2023-12-12 10:57:05,086 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:05,086 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:04.723" endtime="20231212 10:57:07.746"/>
</kw>
<msg timestamp="20231212 10:57:07.747" level="INFO">${file1UploadResult} = 2023-12-12 10:57:05,086 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:05,086 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:04.722" endtime="20231212 10:57:07.747"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:57:07.748" level="INFO">${match} = PUT /link/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-12-12 10:57:07,699 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:05 GMT', '...</msg>
<msg timestamp="20231212 10:57:07.748" level="INFO">${etag1} = 944b633e6c16af42a9e15f5063da8e90</msg>
<status status="PASS" starttime="20231212 10:57:07.747" endtime="20231212 10:57:07.748"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:07.751" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://link/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:08.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:08.287" level="INFO">${output} = 2023-12-12 10:57:08,107 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:08,107 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:07.750" endtime="20231212 10:57:08.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:08.287" level="INFO">2023-12-12 10:57:08,107 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:08,107 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://link/test_key_to_check_etag_differences']
2023-12-12 10:57:08,107 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f51643cc9d8&gt;
2023-12-12 10:57:08,108 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f51651c0730&gt;
2023-12-12 10:57:08,108 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f51651eeae8&gt;
2023-12-12 10:57:08,108 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-12-12 10:57:08,112 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f51644f8400&gt;
2023-12-12 10:57:08,113 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f51643da048&gt;
2023-12-12 10:57:08,113 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,113 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f51643da048&gt;
2023-12-12 10:57:08,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,115 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51651c15c0&gt;
2023-12-12 10:57:08,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,116 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51651c15c0&gt;
2023-12-12 10:57:08,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,116 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51651c15c0&gt;
2023-12-12 10:57:08,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,117 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,117 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,117 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,117 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,117 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,117 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,117 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,118 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,118 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,118 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,118 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,118 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,118 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,118 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,118 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51651c15c0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51651c15c0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51651c15c0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,119 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,120 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,120 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,120 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f516c0d99b0&gt;
2023-12-12 10:57:08,120 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-12-12 10:57:08,120 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2023-12-12 10:57:08,120 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2023-12-12 10:57:08,120 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2023-12-12 10:57:08,120 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2023-12-12 10:57:08,121 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2023-12-12 10:57:08,121 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-12-12 10:57:08,135 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-12-12 10:57:08,136 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5165e86378&gt;
2023-12-12 10:57:08,137 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-12-12 10:57:08,146 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f516615c2f0&gt;
2023-12-12 10:57:08,146 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f516615c0d0&gt;
2023-12-12 10:57:08,147 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:08,149 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:08,150 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-12-12 10:57:08,151 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:08,152 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:08,152 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5165e86378&gt;
2023-12-12 10:57:08,153 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f516615c2f0&gt;
2023-12-12 10:57:08,153 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f516615c0d0&gt;
2023-12-12 10:57:08,153 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:08,155 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:08,156 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:08,157 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:08,157 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5165e86378&gt;
2023-12-12 10:57:08,158 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f516615c2f0&gt;
2023-12-12 10:57:08,158 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f516615c0d0&gt;
2023-12-12 10:57:08,158 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:08,161 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-12-12 10:57:08,161 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-12-12 10:57:08,162 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-12-12 10:57:08,163 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-12-12 10:57:08,163 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:08,164 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5163c7ad68&gt;}) about to wait for the following futures []
2023-12-12 10:57:08,164 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5163c7ad68&gt;}) done waiting for dependent futures
2023-12-12 10:57:08,164 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5163c7ad68&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5163d39ba8&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f5163cabd30&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f5163cabda0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f5163cabf28&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5163c7ad68&gt;}
2023-12-12 10:57:08,165 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f5163cabf28&gt; for transfer request: 0.
2023-12-12 10:57:08,165 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-12-12 10:57:08,165 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2023-12-12 10:57:08,166 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-12-12 10:57:08,166 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2023-12-12 10:57:08,166 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5163d39ba8&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5163c8c278&gt;, 'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2023-12-12 10:57:08,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f5165e9f6a8&gt;
2023-12-12 10:57:08,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f5165e9cae8&gt;
2023-12-12 10:57:08,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f5165e9ff28&gt;
2023-12-12 10:57:08,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f5165e9ca60&gt;
2023-12-12 10:57:08,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f5163d0b128&gt;&gt;
2023-12-12 10:57:08,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f5163d0b4e0&gt;&gt;
2023-12-12 10:57:08,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f5165e9c8c8&gt;
2023-12-12 10:57:08,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f51668420d0&gt;
2023-12-12 10:57:08,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f5165e9cd90&gt;
2023-12-12 10:57:08,170 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-12-12 10:57:08,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f5163d0b128&gt;&gt;
2023-12-12 10:57:08,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f5165e9c598&gt;
2023-12-12 10:57:08,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f5165e230d0&gt;
2023-12-12 10:57:08,170 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/link/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': 'MLY9qBnOG3gvq8MUlE9K1A==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5163c8c278&gt;, 'url': 'http://s3g:9878/link/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f5163d39da0&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2023-12-12 10:57:08,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f51683c5158&gt;
2023-12-12 10:57:08,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f5163d39d68&gt;&gt;
2023-12-12 10:57:08,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f5163d0b550&gt;&gt;
2023-12-12 10:57:08,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f5165e9c7b8&gt;
2023-12-12 10:57:08,171 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f5163d0b550&gt;&gt;
2023-12-12 10:57:08,171 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-12-12 10:57:08,172 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-12-12 10:57:08,172 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/test_key_to_check_etag_differences

content-md5:MLY9qBnOG3gvq8MUlE9K1A==
host:s3g:9878
x-amz-content-sha256:8b277a38c42fbf39f58b25bc9751dc2f8c7fa67b0bd99a7f3c033f3d9e607f0a
x-amz-date:20231212T105708Z

content-md5;host;x-amz-content-sha256;x-amz-date
8b277a38c42fbf39f58b25bc9751dc2f8c7fa67b0bd99a7f3c033f3d9e607f0a
2023-12-12 10:57:08,172 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231212T105708Z
20231212/us-west-1/s3/aws4_request
64fa478f5557199017b50d49a3364b583038bde764b8ebe1fa1b0ce2193f0ee6
2023-12-12 10:57:08,172 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
2faa70ce3f3d38d39b43b045e8ac307474a881a8015ac7ba733dd58230b8ed12
2023-12-12 10:57:08,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f51683c51e0&gt;
2023-12-12 10:57:08,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f5165e23730&gt;
2023-12-12 10:57:08,172 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10', 'Content-MD5': b'MLY9qBnOG3gvq8MUlE9K1A==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231212T105708Z', 'X-Amz-Content-SHA256': b'8b277a38c42fbf39f58b25bc9751dc2f8c7fa67b0bd99a7f3c033f3d9e607f0a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20231212/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=2faa70ce3f3d38d39b43b045e8ac307474a881a8015ac7ba733dd58230b8ed12', 'amz-sdk-invocation-id': b'7fa91bab-c807-4014-8642-4c5f5430766a', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2023-12-12 10:57:08,173 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-12-12 10:57:08,174 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-12-12 10:57:08,175 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (24.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (46.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (65.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (83.2 MiB/s) with 1 file(s) remaining  
2023-12-12 10:57:08,225 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-12-12 10:57:08,225 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:08 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 12 Dec 2023 10:57:08 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"30b63da819ce1b782fabc314944f4ad4"', 'Server': 'Ozone', 'x-amz-id-2': 'zS9BDT0y6w3dy', 'x-amz-request-id': 'ecd14694-2dcd-4cd1-b801-03f181efc966', 'Content-Length': '0'}
2023-12-12 10:57:08,225 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-12-12 10:57:08,226 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f5163d0b160&gt;
2023-12-12 10:57:08,226 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-12-12 10:57:08,227 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f5163d0b128&gt;&gt;
2023-12-12 10:57:08,227 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f51643cc598&gt;
2023-12-12 10:57:08,227 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://link/test_key_to_check_etag_differences
2023-12-12 10:57:08,229 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231212 10:57:08.287" endtime="20231212 10:57:08.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:08.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:08.288" endtime="20231212 10:57:08.288"/>
</kw>
<status status="PASS" starttime="20231212 10:57:07.749" endtime="20231212 10:57:08.288"/>
</kw>
<msg timestamp="20231212 10:57:08.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:07.749" endtime="20231212 10:57:08.289"/>
</kw>
<msg timestamp="20231212 10:57:08.289" level="INFO">${output} = 2023-12-12 10:57:08,107 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:08,107 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:07.749" endtime="20231212 10:57:08.289"/>
</kw>
<msg timestamp="20231212 10:57:08.289" level="INFO">${file2UploadResult} = 2023-12-12 10:57:08,107 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1052-azure botocore/1.26.10
2023-12-12 10:57:08,107 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231212 10:57:07.748" endtime="20231212 10:57:08.289"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231212 10:57:08.290" level="INFO">${match} = PUT /link/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-12-12 10:57:08,225 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 12 Dec 2023 10:57:08 GMT', '...</msg>
<msg timestamp="20231212 10:57:08.290" level="INFO">${etag2} = 30b63da819ce1b782fabc314944f4ad4</msg>
<status status="PASS" starttime="20231212 10:57:08.290" endtime="20231212 10:57:08.290"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231212 10:57:08.290" endtime="20231212 10:57:08.291"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:08.294" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:08.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:08.743" level="INFO">${output} = delete: s3://link/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231212 10:57:08.293" endtime="20231212 10:57:08.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:08.744" level="INFO">delete: s3://link/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231212 10:57:08.744" endtime="20231212 10:57:08.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:08.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:08.744" endtime="20231212 10:57:08.745"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.292" endtime="20231212 10:57:08.745"/>
</kw>
<msg timestamp="20231212 10:57:08.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:08.292" endtime="20231212 10:57:08.745"/>
</kw>
<msg timestamp="20231212 10:57:08.745" level="INFO">${output} = delete: s3://link/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231212 10:57:08.291" endtime="20231212 10:57:08.745"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.291" endtime="20231212 10:57:08.745"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:08.749" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:08.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:08.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:08.747" endtime="20231212 10:57:08.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:08.752" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:08.751" endtime="20231212 10:57:08.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:08.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:08.752" endtime="20231212 10:57:08.752"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.746" endtime="20231212 10:57:08.752"/>
</kw>
<msg timestamp="20231212 10:57:08.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:08.746" endtime="20231212 10:57:08.753"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.746" endtime="20231212 10:57:08.753"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:08.755" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:08.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:08.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:08.754" endtime="20231212 10:57:08.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:08.758" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:08.757" endtime="20231212 10:57:08.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:08.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:08.758" endtime="20231212 10:57:08.759"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.753" endtime="20231212 10:57:08.759"/>
</kw>
<msg timestamp="20231212 10:57:08.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:08.753" endtime="20231212 10:57:08.759"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.753" endtime="20231212 10:57:08.759"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:57:04.702" endtime="20231212 10:57:08.759"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231212 10:56:34.189" endtime="20231212 10:57:08.760"/>
</suite>
<suite id="s1-s6-s13" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:08.771" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:08.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:08.773" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231212 10:57:08.769" endtime="20231212 10:57:08.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:08.773" level="INFO">s3g</msg>
<status status="PASS" starttime="20231212 10:57:08.773" endtime="20231212 10:57:08.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:08.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:08.773" endtime="20231212 10:57:08.774"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.769" endtime="20231212 10:57:08.774"/>
</kw>
<msg timestamp="20231212 10:57:08.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:08.769" endtime="20231212 10:57:08.774"/>
</kw>
<msg timestamp="20231212 10:57:08.774" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231212 10:57:08.768" endtime="20231212 10:57:08.774"/>
</kw>
<msg timestamp="20231212 10:57:08.775" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:57:08.768" endtime="20231212 10:57:08.775"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:57:08.775" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:57:08.775" endtime="20231212 10:57:08.775"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:08.778" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:08.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:08.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:57:08.777" endtime="20231212 10:57:08.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:08.819" level="INFO"/>
<status status="PASS" starttime="20231212 10:57:08.818" endtime="20231212 10:57:08.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:08.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:08.819" endtime="20231212 10:57:08.819"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.776" endtime="20231212 10:57:08.819"/>
</kw>
<msg timestamp="20231212 10:57:08.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:08.776" endtime="20231212 10:57:08.820"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.776" endtime="20231212 10:57:08.820"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.775" endtime="20231212 10:57:08.820"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.768" endtime="20231212 10:57:08.820"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.767" endtime="20231212 10:57:08.820"/>
</kw>
<test id="s1-s6-s13-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:57:08.821" endtime="20231212 10:57:08.821"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:08.824" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:12.101" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:57:12.101" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231212 10:57:08.822" endtime="20231212 10:57:12.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:12.102" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231212 10:57:12.101" endtime="20231212 10:57:12.102"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.822" endtime="20231212 10:57:12.102"/>
</kw>
<status status="PASS" starttime="20231212 10:57:08.821" endtime="20231212 10:57:12.102"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:12.106" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:15.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:15.610" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=f98aedc85c3430c39a749e3f7076f5bc62804bc7c570d8fea66d43e8a28f0bc3
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:57:12.104" endtime="20231212 10:57:15.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:15.611" level="INFO">awsAccessKey=testuser2
awsSecret=f98aedc85c3430c39a749e3f7076f5bc62804bc7c570d8fea66d43e8a28f0bc3
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:57:15.610" endtime="20231212 10:57:15.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:15.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:15.611" endtime="20231212 10:57:15.611"/>
</kw>
<status status="PASS" starttime="20231212 10:57:12.103" endtime="20231212 10:57:15.611"/>
</kw>
<msg timestamp="20231212 10:57:15.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:12.103" endtime="20231212 10:57:15.611"/>
</kw>
<msg timestamp="20231212 10:57:15.612" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=f98aedc85c3430c39a749e3f7076f5bc62804bc7c570d8fea66d43e8a28f0bc3
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:57:12.103" endtime="20231212 10:57:15.612"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:57:15.612" endtime="20231212 10:57:15.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:57:15.613" endtime="20231212 10:57:15.613"/>
</kw>
<status status="PASS" starttime="20231212 10:57:15.612" endtime="20231212 10:57:15.613"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:15.615" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:18.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:18.880" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:57:15.614" endtime="20231212 10:57:18.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:18.881" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:57:18.881" endtime="20231212 10:57:18.881"/>
</kw>
<status status="PASS" starttime="20231212 10:57:15.613" endtime="20231212 10:57:18.882"/>
</kw>
<status status="PASS" starttime="20231212 10:57:15.613" endtime="20231212 10:57:18.882"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231212 10:57:08.820" endtime="20231212 10:57:18.882"/>
</test>
<test id="s1-s6-s13-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:57:18.883" endtime="20231212 10:57:18.884"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 10:57:18.884" endtime="20231212 10:57:18.884"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:18.887" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:22.354" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 10:57:22.354" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231212 10:57:18.885" endtime="20231212 10:57:22.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:22.355" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231212 10:57:22.354" endtime="20231212 10:57:22.355"/>
</kw>
<status status="PASS" starttime="20231212 10:57:18.885" endtime="20231212 10:57:22.355"/>
</kw>
<status status="PASS" starttime="20231212 10:57:18.885" endtime="20231212 10:57:22.355"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:22.358" level="INFO">Running command 'ozone s3 getsecret -u testuser2 --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:25.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:25.891" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=5bd22accfe2d8191552dcc681c1e1ac76a49754157b19e7255cc229d35c3abac
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:57:22.357" endtime="20231212 10:57:25.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:25.892" level="INFO">awsAccessKey=testuser2
awsSecret=5bd22accfe2d8191552dcc681c1e1ac76a49754157b19e7255cc229d35c3abac
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:57:25.892" endtime="20231212 10:57:25.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:57:25.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:57:25.893" endtime="20231212 10:57:25.893"/>
</kw>
<status status="PASS" starttime="20231212 10:57:22.356" endtime="20231212 10:57:25.893"/>
</kw>
<msg timestamp="20231212 10:57:25.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:57:22.356" endtime="20231212 10:57:25.893"/>
</kw>
<msg timestamp="20231212 10:57:25.894" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=5bd22accfe2d8191552dcc681c1e1ac76a49754157b19e7255cc229d35c3abac
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231212 10:57:22.355" endtime="20231212 10:57:25.894"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:57:25.894" endtime="20231212 10:57:25.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:57:25.895" endtime="20231212 10:57:25.895"/>
</kw>
<status status="PASS" starttime="20231212 10:57:25.894" endtime="20231212 10:57:25.895"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:57:25.897" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:57:29.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:57:29.387" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:57:25.896" endtime="20231212 10:57:29.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:57:29.388" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231212 10:57:29.387" endtime="20231212 10:57:29.388"/>
</kw>
<status status="PASS" starttime="20231212 10:57:25.895" endtime="20231212 10:57:29.388"/>
</kw>
<status status="PASS" starttime="20231212 10:57:25.895" endtime="20231212 10:57:29.388"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231212 10:57:18.883" endtime="20231212 10:57:29.389"/>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20231212 10:57:08.763" endtime="20231212 10:57:29.389"/>
</suite>
<status status="FAIL" starttime="20231212 10:54:15.754" endtime="20231212 10:57:29.393"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1131294"/>
</suite>
<statistics>
<total>
<stat pass="194" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="13" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="194" fail="1" skip="0" id="s1" name="ozonesecure-ha">ozonesecure-ha</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha.Kinit</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Freon">ozonesecure-ha.Freon</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2-s1" name="echoRPCLoad">ozonesecure-ha.Freon.echoRPCLoad</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate-Chunk">ozonesecure-ha.Freon.Generate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s3" name="Generate">ozonesecure-ha.Freon.Generate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s4" name="Read-Write-Key">ozonesecure-ha.Freon.Read-Write-Key</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Remove">ozonesecure-ha.Freon.Remove</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Validate-Chunk">ozonesecure-ha.Freon.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Validate">ozonesecure-ha.Freon.Validate</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="ozonefs-o3fs-link">ozonesecure-ha.ozonefs-o3fs-link</stat>
<stat pass="17" fail="0" skip="0" id="s1-s4" name="Links">ozonesecure-ha.Links</stat>
<stat pass="72" fail="0" skip="0" id="s1-s5" name="s3-encrypted">ozonesecure-ha.s3-encrypted</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s1" name="Awss3">ozonesecure-ha.s3-encrypted.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s2" name="Boto3">ozonesecure-ha.s3-encrypted.Boto3</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5-s3" name="Bucketcreate">ozonesecure-ha.s3-encrypted.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s4" name="Bucketdelete">ozonesecure-ha.s3-encrypted.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s5" name="Buckethead">ozonesecure-ha.s3-encrypted.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s6" name="Bucketlist">ozonesecure-ha.s3-encrypted.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s7" name="Freon">ozonesecure-ha.s3-encrypted.Freon</stat>
<stat pass="14" fail="0" skip="0" id="s1-s5-s8" name="MultipartUpload">ozonesecure-ha.s3-encrypted.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5-s9" name="Objectcopy">ozonesecure-ha.s3-encrypted.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s10" name="Objectcopys3A">ozonesecure-ha.s3-encrypted.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5-s11" name="Objectdelete">ozonesecure-ha.s3-encrypted.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5-s12" name="Objecthead">ozonesecure-ha.s3-encrypted.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s13" name="Objectmultidelete">ozonesecure-ha.s3-encrypted.Objectmultidelete</stat>
<stat pass="19" fail="0" skip="0" id="s1-s5-s14" name="Objectputget">ozonesecure-ha.s3-encrypted.Objectputget</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s15" name="S3 Getsecret">ozonesecure-ha.s3-encrypted.S3 Getsecret</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s16" name="Secretgenerate">ozonesecure-ha.s3-encrypted.Secretgenerate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s17" name="Secretrevoke">ozonesecure-ha.s3-encrypted.Secretrevoke</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s18" name="Webui">ozonesecure-ha.s3-encrypted.Webui</stat>
<stat pass="58" fail="1" skip="0" id="s1-s6" name="s3-link">ozonesecure-ha.s3-link</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6-s1" name="Awss3">ozonesecure-ha.s3-link.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s2" name="Boto3">ozonesecure-ha.s3-link.Boto3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s3" name="Bucketdelete">ozonesecure-ha.s3-link.Bucketdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s4" name="Buckethead">ozonesecure-ha.s3-link.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6-s5" name="Bucketlist">ozonesecure-ha.s3-link.Bucketlist</stat>
<stat pass="13" fail="1" skip="0" id="s1-s6-s6" name="MultipartUpload">ozonesecure-ha.s3-link.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6-s7" name="Objectcopy">ozonesecure-ha.s3-link.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s8" name="Objectcopys3A">ozonesecure-ha.s3-link.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s6-s9" name="Objectdelete">ozonesecure-ha.s3-link.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s6-s10" name="Objecthead">ozonesecure-ha.s3-link.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s11" name="Objectmultidelete">ozonesecure-ha.s3-link.Objectmultidelete</stat>
<stat pass="19" fail="0" skip="0" id="s1-s6-s12" name="Objectputget">ozonesecure-ha.s3-link.Objectputget</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6-s13" name="S3 Getsecret">ozonesecure-ha.s3-link.S3 Getsecret</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
