<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231207 18:03:40.766" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:40.734" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:40.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:40.736" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:48:40.731" endtime="20231207 17:48:40.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:40.737" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:48:40.736" endtime="20231207 17:48:40.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:40.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:40.737" endtime="20231207 17:48:40.737"/>
</kw>
<status status="PASS" starttime="20231207 17:48:40.730" endtime="20231207 17:48:40.738"/>
</kw>
<msg timestamp="20231207 17:48:40.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:40.730" endtime="20231207 17:48:40.739"/>
</kw>
<msg timestamp="20231207 17:48:40.739" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:48:40.729" endtime="20231207 17:48:40.739"/>
</kw>
<msg timestamp="20231207 17:48:40.739" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:48:40.729" endtime="20231207 17:48:40.739"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:48:40.740" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:48:40.739" endtime="20231207 17:48:40.740"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:40.742" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:40.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:40.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:48:40.741" endtime="20231207 17:48:40.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:40.786" level="INFO"/>
<status status="PASS" starttime="20231207 17:48:40.785" endtime="20231207 17:48:40.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:40.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:40.786" endtime="20231207 17:48:40.787"/>
</kw>
<status status="PASS" starttime="20231207 17:48:40.741" endtime="20231207 17:48:40.787"/>
</kw>
<msg timestamp="20231207 17:48:40.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:40.740" endtime="20231207 17:48:40.787"/>
</kw>
<status status="PASS" starttime="20231207 17:48:40.740" endtime="20231207 17:48:40.787"/>
</kw>
<status status="PASS" starttime="20231207 17:48:40.740" endtime="20231207 17:48:40.787"/>
</kw>
<status status="PASS" starttime="20231207 17:48:40.728" endtime="20231207 17:48:40.787"/>
</kw>
<status status="PASS" starttime="20231207 17:48:40.728" endtime="20231207 17:48:40.787"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:40.790" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:40.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:40.792" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 17:48:40.789" endtime="20231207 17:48:40.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:40.792" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 17:48:40.792" endtime="20231207 17:48:40.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:40.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:40.792" endtime="20231207 17:48:40.793"/>
</kw>
<status status="PASS" starttime="20231207 17:48:40.788" endtime="20231207 17:48:40.793"/>
</kw>
<msg timestamp="20231207 17:48:40.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:40.788" endtime="20231207 17:48:40.793"/>
</kw>
<msg timestamp="20231207 17:48:40.794" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 17:48:40.788" endtime="20231207 17:48:40.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:40.794" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 17:48:40.794" endtime="20231207 17:48:40.794"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 17:48:40.794" endtime="20231207 17:48:40.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:40.797" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:42.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:42.950" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 17:48:40.796" endtime="20231207 17:48:42.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:42.951" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 17:48:42.950" endtime="20231207 17:48:42.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:42.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:42.951" endtime="20231207 17:48:42.951"/>
</kw>
<status status="PASS" starttime="20231207 17:48:40.795" endtime="20231207 17:48:42.951"/>
</kw>
<msg timestamp="20231207 17:48:42.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:40.795" endtime="20231207 17:48:42.952"/>
</kw>
<msg timestamp="20231207 17:48:42.952" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 17:48:40.795" endtime="20231207 17:48:42.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:42.952" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 17:48:42.952" endtime="20231207 17:48:42.952"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 17:48:42.953" endtime="20231207 17:48:42.953"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 17:48:40.727" endtime="20231207 17:48:42.953"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:42.957" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:42.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:42.959" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:48:42.956" endtime="20231207 17:48:42.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:42.960" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:48:42.960" endtime="20231207 17:48:42.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:42.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:42.960" endtime="20231207 17:48:42.961"/>
</kw>
<status status="PASS" starttime="20231207 17:48:42.956" endtime="20231207 17:48:42.961"/>
</kw>
<msg timestamp="20231207 17:48:42.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:42.955" endtime="20231207 17:48:42.961"/>
</kw>
<msg timestamp="20231207 17:48:42.961" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:48:42.955" endtime="20231207 17:48:42.961"/>
</kw>
<msg timestamp="20231207 17:48:42.962" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:48:42.955" endtime="20231207 17:48:42.962"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:48:42.962" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:48:42.962" endtime="20231207 17:48:42.962"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:42.965" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:43.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:43.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:48:42.963" endtime="20231207 17:48:43.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:43.024" level="INFO"/>
<status status="PASS" starttime="20231207 17:48:43.023" endtime="20231207 17:48:43.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:43.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:43.024" endtime="20231207 17:48:43.024"/>
</kw>
<status status="PASS" starttime="20231207 17:48:42.963" endtime="20231207 17:48:43.024"/>
</kw>
<msg timestamp="20231207 17:48:43.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:42.963" endtime="20231207 17:48:43.025"/>
</kw>
<status status="PASS" starttime="20231207 17:48:42.963" endtime="20231207 17:48:43.025"/>
</kw>
<status status="PASS" starttime="20231207 17:48:42.962" endtime="20231207 17:48:43.025"/>
</kw>
<status status="PASS" starttime="20231207 17:48:42.955" endtime="20231207 17:48:43.025"/>
</kw>
<status status="PASS" starttime="20231207 17:48:42.954" endtime="20231207 17:48:43.025"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 17:48:43.025" endtime="20231207 17:48:43.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:43.028" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:45.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:45.093" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 17:48:43.027" endtime="20231207 17:48:45.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:45.094" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 17:48:45.093" endtime="20231207 17:48:45.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:45.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:45.094" endtime="20231207 17:48:45.094"/>
</kw>
<status status="PASS" starttime="20231207 17:48:43.026" endtime="20231207 17:48:45.094"/>
</kw>
<msg timestamp="20231207 17:48:45.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:43.026" endtime="20231207 17:48:45.095"/>
</kw>
<msg timestamp="20231207 17:48:45.095" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 17:48:43.026" endtime="20231207 17:48:45.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:45.095" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 17:48:45.095" endtime="20231207 17:48:45.095"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 17:48:45.095" endtime="20231207 17:48:45.096"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 17:48:42.954" endtime="20231207 17:48:45.096"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 17:48:40.685" endtime="20231207 17:48:45.097"/>
</suite>
<suite id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:48.100" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:48.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:48.103" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:48:48.097" endtime="20231207 17:48:48.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:48.103" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:48:48.103" endtime="20231207 17:48:48.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:48.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:48.103" endtime="20231207 17:48:48.104"/>
</kw>
<status status="PASS" starttime="20231207 17:48:48.096" endtime="20231207 17:48:48.104"/>
</kw>
<msg timestamp="20231207 17:48:48.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:48.096" endtime="20231207 17:48:48.105"/>
</kw>
<msg timestamp="20231207 17:48:48.105" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:48:48.096" endtime="20231207 17:48:48.105"/>
</kw>
<msg timestamp="20231207 17:48:48.106" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:48:48.095" endtime="20231207 17:48:48.106"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:48:48.106" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:48:48.106" endtime="20231207 17:48:48.106"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:48.109" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:48.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:48.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:48:48.108" endtime="20231207 17:48:48.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:48.133" level="INFO"/>
<status status="PASS" starttime="20231207 17:48:48.133" endtime="20231207 17:48:48.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:48.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:48.133" endtime="20231207 17:48:48.134"/>
</kw>
<status status="PASS" starttime="20231207 17:48:48.107" endtime="20231207 17:48:48.134"/>
</kw>
<msg timestamp="20231207 17:48:48.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:48.107" endtime="20231207 17:48:48.134"/>
</kw>
<status status="PASS" starttime="20231207 17:48:48.107" endtime="20231207 17:48:48.134"/>
</kw>
<status status="PASS" starttime="20231207 17:48:48.106" endtime="20231207 17:48:48.135"/>
</kw>
<status status="PASS" starttime="20231207 17:48:48.095" endtime="20231207 17:48:48.135"/>
</kw>
<status status="PASS" starttime="20231207 17:48:48.094" endtime="20231207 17:48:48.135"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:48.138" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:50.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:50.368" level="INFO">${output} = 2023-12-07 17:48:50,285 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 17:48:48.137" endtime="20231207 17:48:50.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:50.369" level="INFO">2023-12-07 17:48:50,285 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 17:48:50.368" endtime="20231207 17:48:50.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:50.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:50.369" endtime="20231207 17:48:50.370"/>
</kw>
<status status="PASS" starttime="20231207 17:48:48.137" endtime="20231207 17:48:50.370"/>
</kw>
<msg timestamp="20231207 17:48:50.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:48.136" endtime="20231207 17:48:50.372"/>
</kw>
<msg timestamp="20231207 17:48:50.373" level="INFO">${output} = 2023-12-07 17:48:50,285 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 17:48:48.136" endtime="20231207 17:48:50.373"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:48:50.373" endtime="20231207 17:48:50.373"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:50.378" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:52.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:52.686" level="INFO">${output} = 2023-12-07 17:48:52,644 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 17:48:50.375" endtime="20231207 17:48:52.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:52.687" level="INFO">2023-12-07 17:48:52,644 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 17:48:52.687" endtime="20231207 17:48:52.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:52.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:52.687" endtime="20231207 17:48:52.688"/>
</kw>
<status status="PASS" starttime="20231207 17:48:50.375" endtime="20231207 17:48:52.688"/>
</kw>
<msg timestamp="20231207 17:48:52.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:50.374" endtime="20231207 17:48:52.688"/>
</kw>
<msg timestamp="20231207 17:48:52.688" level="INFO">${output} = 2023-12-07 17:48:52,644 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 17:48:50.373" endtime="20231207 17:48:52.688"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:48:52.689" endtime="20231207 17:48:52.689"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:48:48.135" endtime="20231207 17:48:52.689"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:52.693" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:48:52.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:52.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:48:52.691" endtime="20231207 17:48:52.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:52.696" level="INFO"/>
<status status="PASS" starttime="20231207 17:48:52.695" endtime="20231207 17:48:52.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:52.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:52.696" endtime="20231207 17:48:52.696"/>
</kw>
<status status="PASS" starttime="20231207 17:48:52.691" endtime="20231207 17:48:52.697"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:52.700" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:57.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:57.172" level="INFO">${output} = 2023-12-07 17:48:55,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:48:55,549 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:48:52.698" endtime="20231207 17:48:57.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:57.173" level="INFO">2023-12-07 17:48:55,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:48:55,549 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:48:55,550 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 17:48:55,767 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 17:48:57.173" endtime="20231207 17:48:57.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:57.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:57.174" endtime="20231207 17:48:57.174"/>
</kw>
<status status="PASS" starttime="20231207 17:48:52.698" endtime="20231207 17:48:57.174"/>
</kw>
<msg timestamp="20231207 17:48:57.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:52.698" endtime="20231207 17:48:57.175"/>
</kw>
<msg timestamp="20231207 17:48:57.175" level="INFO">${output} = 2023-12-07 17:48:55,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:48:55,549 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:48:52.697" endtime="20231207 17:48:57.175"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:48:57.175" endtime="20231207 17:48:57.175"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:57.177" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:57.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:57.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:48:57.176" endtime="20231207 17:48:57.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:57.179" level="INFO"/>
<status status="PASS" starttime="20231207 17:48:57.179" endtime="20231207 17:48:57.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:57.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:57.179" endtime="20231207 17:48:57.180"/>
</kw>
<status status="PASS" starttime="20231207 17:48:57.175" endtime="20231207 17:48:57.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:48:52.690" endtime="20231207 17:48:57.180"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:57.183" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:48:59.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:59.510" level="INFO">${output} = 2023-12-07 17:48:59,480 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 17:48:57.182" endtime="20231207 17:48:59.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:59.511" level="INFO">2023-12-07 17:48:59,480 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 17:48:59.511" endtime="20231207 17:48:59.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:59.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:59.511" endtime="20231207 17:48:59.512"/>
</kw>
<status status="PASS" starttime="20231207 17:48:57.182" endtime="20231207 17:48:59.512"/>
</kw>
<msg timestamp="20231207 17:48:59.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:57.182" endtime="20231207 17:48:59.512"/>
</kw>
<msg timestamp="20231207 17:48:59.513" level="INFO">${output} = 2023-12-07 17:48:59,480 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 17:48:57.181" endtime="20231207 17:48:59.513"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:48:59.513" endtime="20231207 17:48:59.513"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:48:57.181" endtime="20231207 17:48:59.513"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:59.516" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:48:59.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:48:59.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:48:59.515" endtime="20231207 17:48:59.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:48:59.518" level="INFO"/>
<status status="PASS" starttime="20231207 17:48:59.517" endtime="20231207 17:48:59.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:48:59.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:48:59.518" endtime="20231207 17:48:59.518"/>
</kw>
<status status="PASS" starttime="20231207 17:48:59.514" endtime="20231207 17:48:59.518"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:48:59.521" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:03.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:03.343" level="INFO">${output} = 2023-12-07 17:49:02,044 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:49:02,112 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:48:59.520" endtime="20231207 17:49:03.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:03.343" level="INFO">2023-12-07 17:49:02,044 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:49:02,112 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:49:02,112 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 17:49:02,340 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 17:49:03.343" endtime="20231207 17:49:03.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:03.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:03.344" endtime="20231207 17:49:03.344"/>
</kw>
<status status="PASS" starttime="20231207 17:48:59.519" endtime="20231207 17:49:03.344"/>
</kw>
<msg timestamp="20231207 17:49:03.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:48:59.519" endtime="20231207 17:49:03.345"/>
</kw>
<msg timestamp="20231207 17:49:03.345" level="INFO">${output} = 2023-12-07 17:49:02,044 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:49:02,112 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:48:59.519" endtime="20231207 17:49:03.345"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:03.345" endtime="20231207 17:49:03.345"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:03.347" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:03.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:03.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:03.346" endtime="20231207 17:49:03.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:03.349" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:03.349" endtime="20231207 17:49:03.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:03.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:03.350" endtime="20231207 17:49:03.350"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.345" endtime="20231207 17:49:03.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:48:59.514" endtime="20231207 17:49:03.350"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:03.355" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:03.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:03.356" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:49:03.353" endtime="20231207 17:49:03.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:03.357" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:49:03.357" endtime="20231207 17:49:03.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:03.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:03.357" endtime="20231207 17:49:03.358"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.353" endtime="20231207 17:49:03.358"/>
</kw>
<msg timestamp="20231207 17:49:03.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:03.353" endtime="20231207 17:49:03.358"/>
</kw>
<msg timestamp="20231207 17:49:03.359" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:49:03.353" endtime="20231207 17:49:03.359"/>
</kw>
<msg timestamp="20231207 17:49:03.359" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:03.352" endtime="20231207 17:49:03.359"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:49:03.359" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:03.359" endtime="20231207 17:49:03.359"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:03.362" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:03.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:03.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:03.361" endtime="20231207 17:49:03.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:03.394" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:03.394" endtime="20231207 17:49:03.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:03.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:03.394" endtime="20231207 17:49:03.395"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.360" endtime="20231207 17:49:03.395"/>
</kw>
<msg timestamp="20231207 17:49:03.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:03.360" endtime="20231207 17:49:03.395"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.360" endtime="20231207 17:49:03.396"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.359" endtime="20231207 17:49:03.396"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.352" endtime="20231207 17:49:03.396"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.352" endtime="20231207 17:49:03.396"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:03.398" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:05.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:05.059" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:03.397" endtime="20231207 17:49:05.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:05.060" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:05.059" endtime="20231207 17:49:05.060"/>
</kw>
<msg timestamp="20231207 17:49:05.060" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:03.397" endtime="20231207 17:49:05.060"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:49:05.061" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:49:05.060" endtime="20231207 17:49:05.061"/>
</kw>
<msg timestamp="20231207 17:49:05.061" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:49:05.060" endtime="20231207 17:49:05.061"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:49:05.062" endtime="20231207 17:49:05.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:49:05.062" endtime="20231207 17:49:05.062"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:49:05.061" endtime="20231207 17:49:05.062"/>
</branch>
<status status="PASS" starttime="20231207 17:49:05.061" endtime="20231207 17:49:05.062"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:49:05.062" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:49:05.062" endtime="20231207 17:49:05.062"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:49:05.063" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:49:05.063" endtime="20231207 17:49:05.063"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:49:05.063" level="INFO">${secret} = ['0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a']</msg>
<status status="PASS" starttime="20231207 17:49:05.063" endtime="20231207 17:49:05.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:49:05.064" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:05.063" endtime="20231207 17:49:05.064"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:49:05.065" level="INFO">${secret} = 0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:05.064" endtime="20231207 17:49:05.065"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:05.068" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:05.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:05.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:05.066" endtime="20231207 17:49:05.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:05.443" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:05.442" endtime="20231207 17:49:05.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:05.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:05.443" endtime="20231207 17:49:05.444"/>
</kw>
<status status="PASS" starttime="20231207 17:49:05.066" endtime="20231207 17:49:05.444"/>
</kw>
<msg timestamp="20231207 17:49:05.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:05.066" endtime="20231207 17:49:05.444"/>
</kw>
<status status="PASS" starttime="20231207 17:49:05.065" endtime="20231207 17:49:05.444"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:05.447" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:05.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:05.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:05.446" endtime="20231207 17:49:05.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:05.800" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:05.800" endtime="20231207 17:49:05.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:05.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:05.800" endtime="20231207 17:49:05.801"/>
</kw>
<status status="PASS" starttime="20231207 17:49:05.445" endtime="20231207 17:49:05.801"/>
</kw>
<msg timestamp="20231207 17:49:05.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:05.445" endtime="20231207 17:49:05.802"/>
</kw>
<status status="PASS" starttime="20231207 17:49:05.444" endtime="20231207 17:49:05.802"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:05.804" level="INFO">Running command 'aws configure set aws_secret_access_key 0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:06.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:06.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:05.803" endtime="20231207 17:49:06.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:06.160" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:06.160" endtime="20231207 17:49:06.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:06.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:06.161" endtime="20231207 17:49:06.161"/>
</kw>
<status status="PASS" starttime="20231207 17:49:05.802" endtime="20231207 17:49:06.161"/>
</kw>
<msg timestamp="20231207 17:49:06.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:05.802" endtime="20231207 17:49:06.162"/>
</kw>
<status status="PASS" starttime="20231207 17:49:05.802" endtime="20231207 17:49:06.162"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:06.164" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:06.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:06.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:06.163" endtime="20231207 17:49:06.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:06.518" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:06.517" endtime="20231207 17:49:06.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:06.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:06.518" endtime="20231207 17:49:06.518"/>
</kw>
<status status="PASS" starttime="20231207 17:49:06.163" endtime="20231207 17:49:06.519"/>
</kw>
<msg timestamp="20231207 17:49:06.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:06.162" endtime="20231207 17:49:06.519"/>
</kw>
<status status="PASS" starttime="20231207 17:49:06.162" endtime="20231207 17:49:06.519"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:06.522" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:06.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:06.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:06.521" endtime="20231207 17:49:06.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:06.876" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:06.875" endtime="20231207 17:49:06.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:06.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:06.876" endtime="20231207 17:49:06.876"/>
</kw>
<status status="PASS" starttime="20231207 17:49:06.520" endtime="20231207 17:49:06.877"/>
</kw>
<msg timestamp="20231207 17:49:06.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:06.520" endtime="20231207 17:49:06.877"/>
</kw>
<status status="PASS" starttime="20231207 17:49:06.519" endtime="20231207 17:49:06.877"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.396" endtime="20231207 17:49:06.877"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.396" endtime="20231207 17:49:06.878"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:49:06.878" endtime="20231207 17:49:06.878"/>
</kw>
<status status="PASS" starttime="20231207 17:49:03.351" endtime="20231207 17:49:06.878"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:49:06.879" level="INFO">${randStr} = 4847458881</msg>
<status status="PASS" starttime="20231207 17:49:06.879" endtime="20231207 17:49:06.879"/>
</kw>
<msg timestamp="20231207 17:49:06.879" level="INFO">${random} = ozone-test-4847458881</msg>
<status status="PASS" starttime="20231207 17:49:06.878" endtime="20231207 17:49:06.879"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:06.882" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-4847458881 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:08.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:08.280" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4847458881"
}</msg>
<status status="PASS" starttime="20231207 17:49:06.881" endtime="20231207 17:49:08.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:08.281" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4847458881"
}</msg>
<status status="PASS" starttime="20231207 17:49:08.281" endtime="20231207 17:49:08.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:08.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:08.281" endtime="20231207 17:49:08.282"/>
</kw>
<status status="PASS" starttime="20231207 17:49:06.881" endtime="20231207 17:49:08.282"/>
</kw>
<msg timestamp="20231207 17:49:08.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:06.880" endtime="20231207 17:49:08.283"/>
</kw>
<msg timestamp="20231207 17:49:08.283" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4847458881"
}</msg>
<status status="PASS" starttime="20231207 17:49:06.880" endtime="20231207 17:49:08.283"/>
</kw>
<msg timestamp="20231207 17:49:08.283" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4847458881"
}</msg>
<status status="PASS" starttime="20231207 17:49:06.880" endtime="20231207 17:49:08.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:08.283" endtime="20231207 17:49:08.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:08.284" endtime="20231207 17:49:08.284"/>
</kw>
<msg timestamp="20231207 17:49:08.284" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 17:49:06.879" endtime="20231207 17:49:08.284"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 17:49:08.284" endtime="20231207 17:49:08.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:49:03.351" endtime="20231207 17:49:08.285"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:08.288" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:49:08.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:08.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:08.287" endtime="20231207 17:49:08.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:08.290" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:08.289" endtime="20231207 17:49:08.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:08.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:08.290" endtime="20231207 17:49:08.290"/>
</kw>
<status status="PASS" starttime="20231207 17:49:08.286" endtime="20231207 17:49:08.290"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:08.293" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:09.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:09.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:08.291" endtime="20231207 17:49:09.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:09.759" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:09.758" endtime="20231207 17:49:09.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:09.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:09.759" endtime="20231207 17:49:09.759"/>
</kw>
<msg timestamp="20231207 17:49:09.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:08.291" endtime="20231207 17:49:09.760"/>
</kw>
<msg timestamp="20231207 17:49:09.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:08.291" endtime="20231207 17:49:09.760"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:09.760" endtime="20231207 17:49:09.761"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:09.763" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:09.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:09.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:09.761" endtime="20231207 17:49:09.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:09.765" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:09.765" endtime="20231207 17:49:09.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:09.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:09.765" endtime="20231207 17:49:09.766"/>
</kw>
<status status="PASS" starttime="20231207 17:49:09.761" endtime="20231207 17:49:09.766"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:49:08.285" endtime="20231207 17:49:09.766"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 17:48:48.032" endtime="20231207 17:49:09.768"/>
</suite>
<suite id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:12.794" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:12.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:12.796" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:49:12.792" endtime="20231207 17:49:12.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:12.797" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:49:12.796" endtime="20231207 17:49:12.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:12.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:12.797" endtime="20231207 17:49:12.797"/>
</kw>
<status status="PASS" starttime="20231207 17:49:12.791" endtime="20231207 17:49:12.797"/>
</kw>
<msg timestamp="20231207 17:49:12.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:12.791" endtime="20231207 17:49:12.798"/>
</kw>
<msg timestamp="20231207 17:49:12.799" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:49:12.791" endtime="20231207 17:49:12.799"/>
</kw>
<msg timestamp="20231207 17:49:12.799" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:12.790" endtime="20231207 17:49:12.799"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:49:12.799" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:12.799" endtime="20231207 17:49:12.799"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:12.802" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:12.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:12.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:12.801" endtime="20231207 17:49:12.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:12.836" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:12.836" endtime="20231207 17:49:12.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:12.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:12.836" endtime="20231207 17:49:12.837"/>
</kw>
<status status="PASS" starttime="20231207 17:49:12.800" endtime="20231207 17:49:12.837"/>
</kw>
<msg timestamp="20231207 17:49:12.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:12.800" endtime="20231207 17:49:12.837"/>
</kw>
<status status="PASS" starttime="20231207 17:49:12.800" endtime="20231207 17:49:12.838"/>
</kw>
<status status="PASS" starttime="20231207 17:49:12.799" endtime="20231207 17:49:12.838"/>
</kw>
<status status="PASS" starttime="20231207 17:49:12.790" endtime="20231207 17:49:12.838"/>
</kw>
<status status="PASS" starttime="20231207 17:49:12.790" endtime="20231207 17:49:12.838"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:49:12.839" level="INFO">${random} = 28346</msg>
<status status="PASS" starttime="20231207 17:49:12.839" endtime="20231207 17:49:12.839"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:12.842" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-28346 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:16.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:16.424" level="INFO">${output} = 2023-12-07 17:49:15,327 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:49:15,395 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:49:12.841" endtime="20231207 17:49:16.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:16.425" level="INFO">2023-12-07 17:49:15,327 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:49:15,395 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:49:15,395 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 17:49:16.424" endtime="20231207 17:49:16.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:16.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:16.425" endtime="20231207 17:49:16.426"/>
</kw>
<status status="PASS" starttime="20231207 17:49:12.840" endtime="20231207 17:49:16.426"/>
</kw>
<msg timestamp="20231207 17:49:16.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:12.840" endtime="20231207 17:49:16.426"/>
</kw>
<msg timestamp="20231207 17:49:16.426" level="INFO">${output} = 2023-12-07 17:49:15,327 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:49:15,395 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:49:12.839" endtime="20231207 17:49:16.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:16.427" endtime="20231207 17:49:16.427"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:16.429" level="INFO">Running command 'cat /tmp/key-28346 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:16.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:16.430" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:49:16.427" endtime="20231207 17:49:16.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:16.431" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:49:16.430" endtime="20231207 17:49:16.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:16.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:16.431" endtime="20231207 17:49:16.431"/>
</kw>
<msg timestamp="20231207 17:49:16.431" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:49:16.427" endtime="20231207 17:49:16.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:16.432" endtime="20231207 17:49:16.432"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:16.433" level="INFO">Running command 'rm /tmp/key-28346 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:16.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:16.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:16.432" endtime="20231207 17:49:16.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:16.435" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:16.435" endtime="20231207 17:49:16.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:16.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:16.436" endtime="20231207 17:49:16.436"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.432" endtime="20231207 17:49:16.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:49:12.838" endtime="20231207 17:49:16.436"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:16.441" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:16.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:16.443" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:49:16.440" endtime="20231207 17:49:16.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:16.443" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:49:16.443" endtime="20231207 17:49:16.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:16.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:16.444" endtime="20231207 17:49:16.444"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.440" endtime="20231207 17:49:16.444"/>
</kw>
<msg timestamp="20231207 17:49:16.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:16.439" endtime="20231207 17:49:16.445"/>
</kw>
<msg timestamp="20231207 17:49:16.445" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:49:16.439" endtime="20231207 17:49:16.445"/>
</kw>
<msg timestamp="20231207 17:49:16.445" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:16.439" endtime="20231207 17:49:16.445"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:49:16.445" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:16.445" endtime="20231207 17:49:16.445"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:16.448" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:16.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:16.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:16.447" endtime="20231207 17:49:16.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:16.470" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:16.470" endtime="20231207 17:49:16.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:16.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:16.470" endtime="20231207 17:49:16.471"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.447" endtime="20231207 17:49:16.471"/>
</kw>
<msg timestamp="20231207 17:49:16.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:16.446" endtime="20231207 17:49:16.471"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.446" endtime="20231207 17:49:16.471"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.446" endtime="20231207 17:49:16.471"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.438" endtime="20231207 17:49:16.472"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.438" endtime="20231207 17:49:16.472"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:16.474" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:18.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:18.308" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:16.473" endtime="20231207 17:49:18.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:18.309" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:18.309" endtime="20231207 17:49:18.309"/>
</kw>
<msg timestamp="20231207 17:49:18.310" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:16.472" endtime="20231207 17:49:18.310"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:49:18.311" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:49:18.310" endtime="20231207 17:49:18.311"/>
</kw>
<msg timestamp="20231207 17:49:18.311" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:49:18.310" endtime="20231207 17:49:18.311"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:49:18.311" endtime="20231207 17:49:18.311"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:49:18.311" endtime="20231207 17:49:18.311"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:49:18.311" endtime="20231207 17:49:18.311"/>
</branch>
<status status="PASS" starttime="20231207 17:49:18.311" endtime="20231207 17:49:18.311"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:49:18.312" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:49:18.311" endtime="20231207 17:49:18.312"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:49:18.313" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:49:18.312" endtime="20231207 17:49:18.313"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:49:18.313" level="INFO">${secret} = ['0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a']</msg>
<status status="PASS" starttime="20231207 17:49:18.313" endtime="20231207 17:49:18.313"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:49:18.314" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:18.313" endtime="20231207 17:49:18.314"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:49:18.315" level="INFO">${secret} = 0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:18.314" endtime="20231207 17:49:18.315"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:18.317" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:18.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:18.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:18.316" endtime="20231207 17:49:18.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:18.673" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:18.672" endtime="20231207 17:49:18.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:18.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:18.673" endtime="20231207 17:49:18.674"/>
</kw>
<status status="PASS" starttime="20231207 17:49:18.316" endtime="20231207 17:49:18.674"/>
</kw>
<msg timestamp="20231207 17:49:18.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:18.316" endtime="20231207 17:49:18.674"/>
</kw>
<status status="PASS" starttime="20231207 17:49:18.315" endtime="20231207 17:49:18.674"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:18.677" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:19.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:19.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:18.675" endtime="20231207 17:49:19.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:19.038" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:19.037" endtime="20231207 17:49:19.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:19.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:19.038" endtime="20231207 17:49:19.038"/>
</kw>
<status status="PASS" starttime="20231207 17:49:18.675" endtime="20231207 17:49:19.038"/>
</kw>
<msg timestamp="20231207 17:49:19.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:18.675" endtime="20231207 17:49:19.039"/>
</kw>
<status status="PASS" starttime="20231207 17:49:18.674" endtime="20231207 17:49:19.039"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:19.042" level="INFO">Running command 'aws configure set aws_secret_access_key 0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:19.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:19.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:19.040" endtime="20231207 17:49:19.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:19.391" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:19.391" endtime="20231207 17:49:19.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:19.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:19.391" endtime="20231207 17:49:19.392"/>
</kw>
<status status="PASS" starttime="20231207 17:49:19.040" endtime="20231207 17:49:19.392"/>
</kw>
<msg timestamp="20231207 17:49:19.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:19.040" endtime="20231207 17:49:19.393"/>
</kw>
<status status="PASS" starttime="20231207 17:49:19.039" endtime="20231207 17:49:19.393"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:19.395" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:19.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:19.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:19.394" endtime="20231207 17:49:19.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:19.755" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:19.754" endtime="20231207 17:49:19.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:19.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:19.755" endtime="20231207 17:49:19.756"/>
</kw>
<status status="PASS" starttime="20231207 17:49:19.394" endtime="20231207 17:49:19.756"/>
</kw>
<msg timestamp="20231207 17:49:19.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:19.393" endtime="20231207 17:49:19.756"/>
</kw>
<status status="PASS" starttime="20231207 17:49:19.393" endtime="20231207 17:49:19.756"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:19.759" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:20.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:20.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:19.758" endtime="20231207 17:49:20.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:20.113" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:20.112" endtime="20231207 17:49:20.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:20.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:20.113" endtime="20231207 17:49:20.113"/>
</kw>
<status status="PASS" starttime="20231207 17:49:19.757" endtime="20231207 17:49:20.113"/>
</kw>
<msg timestamp="20231207 17:49:20.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:19.757" endtime="20231207 17:49:20.114"/>
</kw>
<status status="PASS" starttime="20231207 17:49:19.757" endtime="20231207 17:49:20.114"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.472" endtime="20231207 17:49:20.114"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.472" endtime="20231207 17:49:20.114"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:49:20.114" endtime="20231207 17:49:20.115"/>
</kw>
<status status="PASS" starttime="20231207 17:49:16.438" endtime="20231207 17:49:20.115"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:20.117" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:20.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:20.669" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:02 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:49:20.116" endtime="20231207 17:49:20.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:20.670" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:02 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:49:20 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:49:20.669" endtime="20231207 17:49:20.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:20.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:20.670" endtime="20231207 17:49:20.670"/>
</kw>
<msg timestamp="20231207 17:49:20.671" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:02 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:49:20.115" endtime="20231207 17:49:20.671"/>
</kw>
<msg timestamp="20231207 17:49:20.671" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:02 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:49:20.115" endtime="20231207 17:49:20.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:20.671" endtime="20231207 17:49:20.671"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:20.673" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:20.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:20.675" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:49:20.672" endtime="20231207 17:49:20.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:20.676" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:49:20.675" endtime="20231207 17:49:20.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:20.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:20.676" endtime="20231207 17:49:20.676"/>
</kw>
<msg timestamp="20231207 17:49:20.676" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:49:20.672" endtime="20231207 17:49:20.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:20.677" endtime="20231207 17:49:20.677"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:20.678" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:20.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:20.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:20.677" endtime="20231207 17:49:20.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:20.680" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:20.680" endtime="20231207 17:49:20.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:20.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:20.681" endtime="20231207 17:49:20.681"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.677" endtime="20231207 17:49:20.681"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:49:16.437" endtime="20231207 17:49:20.682"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:20.687" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:20.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:20.689" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:49:20.685" endtime="20231207 17:49:20.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:20.689" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:49:20.689" endtime="20231207 17:49:20.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:20.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:20.689" endtime="20231207 17:49:20.690"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.685" endtime="20231207 17:49:20.690"/>
</kw>
<msg timestamp="20231207 17:49:20.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:20.685" endtime="20231207 17:49:20.690"/>
</kw>
<msg timestamp="20231207 17:49:20.691" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:49:20.684" endtime="20231207 17:49:20.691"/>
</kw>
<msg timestamp="20231207 17:49:20.691" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:20.684" endtime="20231207 17:49:20.691"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:49:20.691" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:20.691" endtime="20231207 17:49:20.691"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:20.694" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:20.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:20.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:20.693" endtime="20231207 17:49:20.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:20.709" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:20.709" endtime="20231207 17:49:20.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:20.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:20.710" endtime="20231207 17:49:20.710"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.692" endtime="20231207 17:49:20.710"/>
</kw>
<msg timestamp="20231207 17:49:20.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:20.692" endtime="20231207 17:49:20.711"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.692" endtime="20231207 17:49:20.711"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.691" endtime="20231207 17:49:20.711"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.684" endtime="20231207 17:49:20.711"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.683" endtime="20231207 17:49:20.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:20.713" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:22.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:22.476" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:20.712" endtime="20231207 17:49:22.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:22.477" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:22.476" endtime="20231207 17:49:22.477"/>
</kw>
<msg timestamp="20231207 17:49:22.477" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:20.712" endtime="20231207 17:49:22.477"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:49:22.478" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:49:22.478" endtime="20231207 17:49:22.479"/>
</kw>
<msg timestamp="20231207 17:49:22.479" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:49:22.477" endtime="20231207 17:49:22.479"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:49:22.479" endtime="20231207 17:49:22.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:49:22.479" endtime="20231207 17:49:22.479"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:49:22.479" endtime="20231207 17:49:22.479"/>
</branch>
<status status="PASS" starttime="20231207 17:49:22.479" endtime="20231207 17:49:22.479"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:49:22.480" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:49:22.479" endtime="20231207 17:49:22.480"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:49:22.480" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:49:22.480" endtime="20231207 17:49:22.480"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:49:22.480" level="INFO">${secret} = ['0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a']</msg>
<status status="PASS" starttime="20231207 17:49:22.480" endtime="20231207 17:49:22.481"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:49:22.482" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:22.481" endtime="20231207 17:49:22.482"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:49:22.482" level="INFO">${secret} = 0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a</msg>
<status status="PASS" starttime="20231207 17:49:22.482" endtime="20231207 17:49:22.482"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:22.485" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:22.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:22.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:22.484" endtime="20231207 17:49:22.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:22.843" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:22.843" endtime="20231207 17:49:22.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:22.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:22.844" endtime="20231207 17:49:22.844"/>
</kw>
<status status="PASS" starttime="20231207 17:49:22.483" endtime="20231207 17:49:22.844"/>
</kw>
<msg timestamp="20231207 17:49:22.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:22.483" endtime="20231207 17:49:22.845"/>
</kw>
<status status="PASS" starttime="20231207 17:49:22.483" endtime="20231207 17:49:22.845"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:22.847" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:23.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:23.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:22.846" endtime="20231207 17:49:23.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:23.200" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:23.200" endtime="20231207 17:49:23.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:23.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:23.201" endtime="20231207 17:49:23.201"/>
</kw>
<status status="PASS" starttime="20231207 17:49:22.846" endtime="20231207 17:49:23.201"/>
</kw>
<msg timestamp="20231207 17:49:23.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:22.845" endtime="20231207 17:49:23.202"/>
</kw>
<status status="PASS" starttime="20231207 17:49:22.845" endtime="20231207 17:49:23.202"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:23.204" level="INFO">Running command 'aws configure set aws_secret_access_key 0fb2a3f4bd8ac6e728491af3c23853ab173a23d65e64ca8983b0e109e7fd709a 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:23.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:23.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:23.203" endtime="20231207 17:49:23.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:23.555" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:23.555" endtime="20231207 17:49:23.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:23.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:23.556" endtime="20231207 17:49:23.556"/>
</kw>
<status status="PASS" starttime="20231207 17:49:23.202" endtime="20231207 17:49:23.556"/>
</kw>
<msg timestamp="20231207 17:49:23.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:23.202" endtime="20231207 17:49:23.557"/>
</kw>
<status status="PASS" starttime="20231207 17:49:23.202" endtime="20231207 17:49:23.557"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:23.560" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:23.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:23.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:23.558" endtime="20231207 17:49:23.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:23.923" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:23.923" endtime="20231207 17:49:23.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:23.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:23.924" endtime="20231207 17:49:23.924"/>
</kw>
<status status="PASS" starttime="20231207 17:49:23.558" endtime="20231207 17:49:23.924"/>
</kw>
<msg timestamp="20231207 17:49:23.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:23.558" endtime="20231207 17:49:23.925"/>
</kw>
<status status="PASS" starttime="20231207 17:49:23.557" endtime="20231207 17:49:23.925"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:23.927" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:24.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:24.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:23.926" endtime="20231207 17:49:24.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:24.272" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:24.272" endtime="20231207 17:49:24.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:24.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:24.273" endtime="20231207 17:49:24.273"/>
</kw>
<status status="PASS" starttime="20231207 17:49:23.926" endtime="20231207 17:49:24.273"/>
</kw>
<msg timestamp="20231207 17:49:24.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:23.925" endtime="20231207 17:49:24.274"/>
</kw>
<status status="PASS" starttime="20231207 17:49:23.925" endtime="20231207 17:49:24.274"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.711" endtime="20231207 17:49:24.274"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.711" endtime="20231207 17:49:24.274"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:49:24.274" endtime="20231207 17:49:24.274"/>
</kw>
<status status="PASS" starttime="20231207 17:49:20.683" endtime="20231207 17:49:24.274"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:24.277" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:24.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:24.724" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:49:24.276" endtime="20231207 17:49:24.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:24.724" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:49:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:49:24.724" endtime="20231207 17:49:24.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:24.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:24.725" endtime="20231207 17:49:24.725"/>
</kw>
<msg timestamp="20231207 17:49:24.725" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:49:24.275" endtime="20231207 17:49:24.725"/>
</kw>
<msg timestamp="20231207 17:49:24.726" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:49:24.275" endtime="20231207 17:49:24.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:24.726" endtime="20231207 17:49:24.726"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:24.728" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:24.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:24.730" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:49:24.727" endtime="20231207 17:49:24.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:24.730" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:49:24.730" endtime="20231207 17:49:24.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:24.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:24.730" endtime="20231207 17:49:24.731"/>
</kw>
<msg timestamp="20231207 17:49:24.731" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:49:24.726" endtime="20231207 17:49:24.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:24.731" endtime="20231207 17:49:24.731"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:24.733" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:24.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:24.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:24.732" endtime="20231207 17:49:24.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:24.735" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:24.735" endtime="20231207 17:49:24.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:24.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:24.735" endtime="20231207 17:49:24.736"/>
</kw>
<status status="PASS" starttime="20231207 17:49:24.732" endtime="20231207 17:49:24.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:49:20.682" endtime="20231207 17:49:24.736"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 17:49:12.728" endtime="20231207 17:49:24.737"/>
</suite>
<suite id="s1-s4" name="1.3.0-1.4.0-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:27.746" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:27.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:27.748" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:49:27.744" endtime="20231207 17:49:27.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:27.749" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:49:27.748" endtime="20231207 17:49:27.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:27.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:27.749" endtime="20231207 17:49:27.749"/>
</kw>
<status status="PASS" starttime="20231207 17:49:27.743" endtime="20231207 17:49:27.749"/>
</kw>
<msg timestamp="20231207 17:49:27.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:27.743" endtime="20231207 17:49:27.750"/>
</kw>
<msg timestamp="20231207 17:49:27.750" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:49:27.743" endtime="20231207 17:49:27.750"/>
</kw>
<msg timestamp="20231207 17:49:27.751" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:27.742" endtime="20231207 17:49:27.751"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:49:27.751" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:49:27.751" endtime="20231207 17:49:27.751"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:27.754" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:27.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:27.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:49:27.753" endtime="20231207 17:49:27.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:27.779" level="INFO"/>
<status status="PASS" starttime="20231207 17:49:27.778" endtime="20231207 17:49:27.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:27.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:27.779" endtime="20231207 17:49:27.779"/>
</kw>
<status status="PASS" starttime="20231207 17:49:27.752" endtime="20231207 17:49:27.779"/>
</kw>
<msg timestamp="20231207 17:49:27.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:27.752" endtime="20231207 17:49:27.780"/>
</kw>
<status status="PASS" starttime="20231207 17:49:27.752" endtime="20231207 17:49:27.780"/>
</kw>
<status status="PASS" starttime="20231207 17:49:27.751" endtime="20231207 17:49:27.780"/>
</kw>
<status status="PASS" starttime="20231207 17:49:27.742" endtime="20231207 17:49:27.780"/>
</kw>
<status status="PASS" starttime="20231207 17:49:27.742" endtime="20231207 17:49:27.780"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 17:49:27.780" endtime="20231207 17:49:27.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:49:27.783" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:49:35.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:49:35.009" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20231207 17:49:27.782" endtime="20231207 17:49:35.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:49:35.009" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231207 17:49:35.009" endtime="20231207 17:49:35.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:49:35.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:49:35.010" endtime="20231207 17:49:35.010"/>
</kw>
<status status="PASS" starttime="20231207 17:49:27.781" endtime="20231207 17:49:35.010"/>
</kw>
<msg timestamp="20231207 17:49:35.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:49:27.781" endtime="20231207 17:49:35.011"/>
</kw>
<msg timestamp="20231207 17:49:35.011" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20231207 17:49:27.781" endtime="20231207 17:49:35.011"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:49:35.011" endtime="20231207 17:49:35.012"/>
</kw>
<status status="PASS" starttime="20231207 17:49:35.011" endtime="20231207 17:49:35.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:49:27.741" endtime="20231207 17:49:35.012"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20231207 17:49:27.704" endtime="20231207 17:49:35.013"/>
</suite>
<suite id="s1-s5" name="1.3.0-1.4.0-2-pre-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:19.375" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:19.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:19.377" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:51:19.373" endtime="20231207 17:51:19.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:19.378" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:51:19.377" endtime="20231207 17:51:19.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:19.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:19.378" endtime="20231207 17:51:19.378"/>
</kw>
<status status="PASS" starttime="20231207 17:51:19.372" endtime="20231207 17:51:19.379"/>
</kw>
<msg timestamp="20231207 17:51:19.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:19.372" endtime="20231207 17:51:19.379"/>
</kw>
<msg timestamp="20231207 17:51:19.379" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:51:19.372" endtime="20231207 17:51:19.379"/>
</kw>
<msg timestamp="20231207 17:51:19.379" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:19.372" endtime="20231207 17:51:19.379"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:51:19.380" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:19.379" endtime="20231207 17:51:19.380"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:19.383" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:19.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:19.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:19.381" endtime="20231207 17:51:19.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:19.407" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:19.407" endtime="20231207 17:51:19.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:19.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:19.407" endtime="20231207 17:51:19.408"/>
</kw>
<status status="PASS" starttime="20231207 17:51:19.381" endtime="20231207 17:51:19.408"/>
</kw>
<msg timestamp="20231207 17:51:19.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:19.381" endtime="20231207 17:51:19.408"/>
</kw>
<status status="PASS" starttime="20231207 17:51:19.380" endtime="20231207 17:51:19.408"/>
</kw>
<status status="PASS" starttime="20231207 17:51:19.380" endtime="20231207 17:51:19.408"/>
</kw>
<status status="PASS" starttime="20231207 17:51:19.371" endtime="20231207 17:51:19.408"/>
</kw>
<status status="PASS" starttime="20231207 17:51:19.371" endtime="20231207 17:51:19.408"/>
</kw>
<test id="s1-s5-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:51:19.410" level="INFO">${random} = 26560</msg>
<status status="PASS" starttime="20231207 17:51:19.409" endtime="20231207 17:51:19.410"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:19.424" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-26560 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:28.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:28.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:19.422" endtime="20231207 17:51:28.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:28.818" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:28.818" endtime="20231207 17:51:28.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:28.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:28.818" endtime="20231207 17:51:28.819"/>
</kw>
<status status="PASS" starttime="20231207 17:51:19.422" endtime="20231207 17:51:28.819"/>
</kw>
<msg timestamp="20231207 17:51:28.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:19.421" endtime="20231207 17:51:28.819"/>
</kw>
<msg timestamp="20231207 17:51:28.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:19.410" endtime="20231207 17:51:28.819"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:51:28.820" endtime="20231207 17:51:28.820"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:28.822" level="INFO">Running command 'cat /tmp/key-26560 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:28.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:28.824" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:51:28.821" endtime="20231207 17:51:28.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:28.825" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:51:28.825" endtime="20231207 17:51:28.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:28.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:28.825" endtime="20231207 17:51:28.826"/>
</kw>
<msg timestamp="20231207 17:51:28.826" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:51:28.820" endtime="20231207 17:51:28.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:51:28.826" endtime="20231207 17:51:28.827"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:28.828" level="INFO">Running command 'rm /tmp/key-26560 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:28.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:28.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:28.827" endtime="20231207 17:51:28.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:28.831" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:28.831" endtime="20231207 17:51:28.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:28.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:28.831" endtime="20231207 17:51:28.832"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.827" endtime="20231207 17:51:28.832"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:51:19.409" endtime="20231207 17:51:28.832"/>
</test>
<test id="s1-s5-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:28.838" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:28.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:28.841" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:51:28.836" endtime="20231207 17:51:28.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:28.842" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:51:28.841" endtime="20231207 17:51:28.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:28.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:28.842" endtime="20231207 17:51:28.843"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.835" endtime="20231207 17:51:28.843"/>
</kw>
<msg timestamp="20231207 17:51:28.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:28.835" endtime="20231207 17:51:28.843"/>
</kw>
<msg timestamp="20231207 17:51:28.843" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:51:28.835" endtime="20231207 17:51:28.843"/>
</kw>
<msg timestamp="20231207 17:51:28.843" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:28.834" endtime="20231207 17:51:28.843"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:51:28.844" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:28.844" endtime="20231207 17:51:28.844"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:28.848" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:28.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:28.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:28.846" endtime="20231207 17:51:28.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:28.864" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:28.863" endtime="20231207 17:51:28.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:28.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:28.864" endtime="20231207 17:51:28.864"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.846" endtime="20231207 17:51:28.864"/>
</kw>
<msg timestamp="20231207 17:51:28.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:28.845" endtime="20231207 17:51:28.864"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.845" endtime="20231207 17:51:28.865"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.844" endtime="20231207 17:51:28.865"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.834" endtime="20231207 17:51:28.865"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.833" endtime="20231207 17:51:28.865"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:28.867" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:31.746" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:51:31.746" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:51:28.866" endtime="20231207 17:51:31.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:31.747" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:51:31.747" endtime="20231207 17:51:31.748"/>
</kw>
<msg timestamp="20231207 17:51:31.748" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:51:28.866" endtime="20231207 17:51:31.748"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:51:31.749" endtime="20231207 17:51:31.752"/>
</kw>
<msg timestamp="20231207 17:51:31.752" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 17:51:31.748" endtime="20231207 17:51:31.752"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:31.761" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:34.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:34.397" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:51:31.758" endtime="20231207 17:51:34.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:34.398" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:51:34.398" endtime="20231207 17:51:34.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:34.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:34.399" endtime="20231207 17:51:34.399"/>
</kw>
<status status="PASS" starttime="20231207 17:51:31.757" endtime="20231207 17:51:34.399"/>
</kw>
<msg timestamp="20231207 17:51:34.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:31.755" endtime="20231207 17:51:34.400"/>
</kw>
<status status="PASS" starttime="20231207 17:51:31.755" endtime="20231207 17:51:34.400"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:34.403" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:37.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:37.201" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=40af48717d8469a99147624acb1dea0f6f7d3f12bfeb73b739ec5ed3748279e8
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:51:34.401" endtime="20231207 17:51:37.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:37.202" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=40af48717d8469a99147624acb1dea0f6f7d3f12bfeb73b739ec5ed3748279e8
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:51:37.201" endtime="20231207 17:51:37.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:37.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:37.202" endtime="20231207 17:51:37.202"/>
</kw>
<status status="PASS" starttime="20231207 17:51:34.401" endtime="20231207 17:51:37.203"/>
</kw>
<msg timestamp="20231207 17:51:37.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:34.401" endtime="20231207 17:51:37.203"/>
</kw>
<msg timestamp="20231207 17:51:37.203" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=40af48717d8469a99147624acb1dea0f6f7d3f12bfeb73b739ec5ed3748279e8
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:51:34.400" endtime="20231207 17:51:37.203"/>
</kw>
<status status="PASS" starttime="20231207 17:51:31.752" endtime="20231207 17:51:37.203"/>
</branch>
<status status="PASS" starttime="20231207 17:51:31.752" endtime="20231207 17:51:37.203"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:51:37.204" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:51:37.203" endtime="20231207 17:51:37.204"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:51:37.204" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:51:37.204" endtime="20231207 17:51:37.205"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:51:37.205" level="INFO">${secret} = ['40af48717d8469a99147624acb1dea0f6f7d3f12bfeb73b739ec5ed3748279e8']</msg>
<status status="PASS" starttime="20231207 17:51:37.205" endtime="20231207 17:51:37.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:51:37.206" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:37.205" endtime="20231207 17:51:37.206"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:51:37.207" level="INFO">${secret} = 40af48717d8469a99147624acb1dea0f6f7d3f12bfeb73b739ec5ed3748279e8</msg>
<status status="PASS" starttime="20231207 17:51:37.206" endtime="20231207 17:51:37.207"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:37.210" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:37.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:37.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:37.209" endtime="20231207 17:51:37.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:37.638" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:37.637" endtime="20231207 17:51:37.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:37.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:37.638" endtime="20231207 17:51:37.639"/>
</kw>
<status status="PASS" starttime="20231207 17:51:37.208" endtime="20231207 17:51:37.639"/>
</kw>
<msg timestamp="20231207 17:51:37.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:37.208" endtime="20231207 17:51:37.639"/>
</kw>
<status status="PASS" starttime="20231207 17:51:37.207" endtime="20231207 17:51:37.639"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:37.643" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:38.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:38.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:37.641" endtime="20231207 17:51:38.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:38.050" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:38.049" endtime="20231207 17:51:38.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:38.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:38.050" endtime="20231207 17:51:38.051"/>
</kw>
<status status="PASS" starttime="20231207 17:51:37.640" endtime="20231207 17:51:38.051"/>
</kw>
<msg timestamp="20231207 17:51:38.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:37.640" endtime="20231207 17:51:38.051"/>
</kw>
<status status="PASS" starttime="20231207 17:51:37.640" endtime="20231207 17:51:38.051"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:38.058" level="INFO">Running command 'aws configure set aws_secret_access_key 40af48717d8469a99147624acb1dea0f6f7d3f12bfeb73b739ec5ed3748279e8 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:38.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:38.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:38.056" endtime="20231207 17:51:38.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:38.564" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:38.564" endtime="20231207 17:51:38.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:38.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:38.565" endtime="20231207 17:51:38.565"/>
</kw>
<status status="PASS" starttime="20231207 17:51:38.055" endtime="20231207 17:51:38.565"/>
</kw>
<msg timestamp="20231207 17:51:38.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:38.054" endtime="20231207 17:51:38.565"/>
</kw>
<status status="PASS" starttime="20231207 17:51:38.051" endtime="20231207 17:51:38.566"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:38.568" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:38.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:38.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:38.567" endtime="20231207 17:51:38.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:39.000" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:38.999" endtime="20231207 17:51:39.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:39.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:39.000" endtime="20231207 17:51:39.001"/>
</kw>
<status status="PASS" starttime="20231207 17:51:38.566" endtime="20231207 17:51:39.001"/>
</kw>
<msg timestamp="20231207 17:51:39.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:38.566" endtime="20231207 17:51:39.001"/>
</kw>
<status status="PASS" starttime="20231207 17:51:38.566" endtime="20231207 17:51:39.001"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:39.004" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:39.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:39.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:39.003" endtime="20231207 17:51:39.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:39.431" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:39.430" endtime="20231207 17:51:39.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:39.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:39.431" endtime="20231207 17:51:39.432"/>
</kw>
<status status="PASS" starttime="20231207 17:51:39.002" endtime="20231207 17:51:39.432"/>
</kw>
<msg timestamp="20231207 17:51:39.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:39.002" endtime="20231207 17:51:39.432"/>
</kw>
<status status="PASS" starttime="20231207 17:51:39.001" endtime="20231207 17:51:39.432"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.865" endtime="20231207 17:51:39.432"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.865" endtime="20231207 17:51:39.432"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:51:39.432" endtime="20231207 17:51:39.433"/>
</kw>
<status status="PASS" starttime="20231207 17:51:28.833" endtime="20231207 17:51:39.433"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:39.436" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:41.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:41.981" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:02 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 17:51:39.434" endtime="20231207 17:51:41.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:41.982" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:02 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:51:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:51:41.982" endtime="20231207 17:51:41.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:41.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:41.983" endtime="20231207 17:51:41.983"/>
</kw>
<msg timestamp="20231207 17:51:41.983" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:02 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 17:51:39.433" endtime="20231207 17:51:41.983"/>
</kw>
<msg timestamp="20231207 17:51:41.983" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:02 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 17:51:39.433" endtime="20231207 17:51:41.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:51:41.984" endtime="20231207 17:51:41.984"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:41.986" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:41.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:41.988" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:51:41.985" endtime="20231207 17:51:41.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:41.989" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:51:41.988" endtime="20231207 17:51:41.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:41.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:41.989" endtime="20231207 17:51:41.990"/>
</kw>
<msg timestamp="20231207 17:51:41.990" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:51:41.984" endtime="20231207 17:51:41.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:51:41.990" endtime="20231207 17:51:41.990"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:41.992" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:41.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:41.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:41.991" endtime="20231207 17:51:41.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:41.995" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:41.994" endtime="20231207 17:51:41.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:41.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:41.995" endtime="20231207 17:51:41.995"/>
</kw>
<status status="PASS" starttime="20231207 17:51:41.990" endtime="20231207 17:51:41.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:51:28.832" endtime="20231207 17:51:41.996"/>
</test>
<test id="s1-s5-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:42.001" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:42.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:42.003" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:51:41.999" endtime="20231207 17:51:42.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:42.004" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:51:42.003" endtime="20231207 17:51:42.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:42.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:42.004" endtime="20231207 17:51:42.005"/>
</kw>
<status status="PASS" starttime="20231207 17:51:41.999" endtime="20231207 17:51:42.005"/>
</kw>
<msg timestamp="20231207 17:51:42.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:41.999" endtime="20231207 17:51:42.005"/>
</kw>
<msg timestamp="20231207 17:51:42.005" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:51:41.998" endtime="20231207 17:51:42.005"/>
</kw>
<msg timestamp="20231207 17:51:42.005" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:41.998" endtime="20231207 17:51:42.005"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:51:42.006" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:42.005" endtime="20231207 17:51:42.006"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:42.009" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:42.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:42.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:42.008" endtime="20231207 17:51:42.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:42.033" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:42.032" endtime="20231207 17:51:42.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:42.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:42.033" endtime="20231207 17:51:42.034"/>
</kw>
<status status="PASS" starttime="20231207 17:51:42.007" endtime="20231207 17:51:42.034"/>
</kw>
<msg timestamp="20231207 17:51:42.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:42.007" endtime="20231207 17:51:42.034"/>
</kw>
<status status="PASS" starttime="20231207 17:51:42.006" endtime="20231207 17:51:42.034"/>
</kw>
<status status="PASS" starttime="20231207 17:51:42.006" endtime="20231207 17:51:42.034"/>
</kw>
<status status="PASS" starttime="20231207 17:51:41.998" endtime="20231207 17:51:42.034"/>
</kw>
<status status="PASS" starttime="20231207 17:51:41.997" endtime="20231207 17:51:42.034"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:42.037" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:44.817" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:51:44.817" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:51:42.036" endtime="20231207 17:51:44.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:44.818" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:51:44.818" endtime="20231207 17:51:44.819"/>
</kw>
<msg timestamp="20231207 17:51:44.819" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:51:42.035" endtime="20231207 17:51:44.819"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:51:44.819" endtime="20231207 17:51:44.820"/>
</kw>
<msg timestamp="20231207 17:51:44.820" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 17:51:44.819" endtime="20231207 17:51:44.820"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:44.823" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:47.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:47.513" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:51:44.821" endtime="20231207 17:51:47.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:47.514" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:51:47.513" endtime="20231207 17:51:47.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:47.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:47.514" endtime="20231207 17:51:47.515"/>
</kw>
<status status="PASS" starttime="20231207 17:51:44.821" endtime="20231207 17:51:47.515"/>
</kw>
<msg timestamp="20231207 17:51:47.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:44.821" endtime="20231207 17:51:47.515"/>
</kw>
<status status="PASS" starttime="20231207 17:51:44.820" endtime="20231207 17:51:47.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:47.518" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:50.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:50.135" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6c36c6edf6005aad722f0a90a0a68edd9b14946739b2ae86d397b6ea626affb6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:51:47.516" endtime="20231207 17:51:50.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:50.136" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6c36c6edf6005aad722f0a90a0a68edd9b14946739b2ae86d397b6ea626affb6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:51:50.135" endtime="20231207 17:51:50.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:50.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:50.136" endtime="20231207 17:51:50.136"/>
</kw>
<status status="PASS" starttime="20231207 17:51:47.516" endtime="20231207 17:51:50.137"/>
</kw>
<msg timestamp="20231207 17:51:50.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:47.516" endtime="20231207 17:51:50.137"/>
</kw>
<msg timestamp="20231207 17:51:50.137" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6c36c6edf6005aad722f0a90a0a68edd9b14946739b2ae86d397b6ea626affb6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:51:47.515" endtime="20231207 17:51:50.137"/>
</kw>
<status status="PASS" starttime="20231207 17:51:44.820" endtime="20231207 17:51:50.137"/>
</branch>
<status status="PASS" starttime="20231207 17:51:44.820" endtime="20231207 17:51:50.137"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:51:50.138" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:51:50.137" endtime="20231207 17:51:50.138"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:51:50.138" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:51:50.138" endtime="20231207 17:51:50.138"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:51:50.139" level="INFO">${secret} = ['6c36c6edf6005aad722f0a90a0a68edd9b14946739b2ae86d397b6ea626affb6']</msg>
<status status="PASS" starttime="20231207 17:51:50.139" endtime="20231207 17:51:50.139"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:51:50.140" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:50.139" endtime="20231207 17:51:50.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:51:50.141" level="INFO">${secret} = 6c36c6edf6005aad722f0a90a0a68edd9b14946739b2ae86d397b6ea626affb6</msg>
<status status="PASS" starttime="20231207 17:51:50.140" endtime="20231207 17:51:50.141"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:50.144" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:50.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:50.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:50.142" endtime="20231207 17:51:50.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:50.579" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:50.578" endtime="20231207 17:51:50.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:50.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:50.579" endtime="20231207 17:51:50.579"/>
</kw>
<status status="PASS" starttime="20231207 17:51:50.142" endtime="20231207 17:51:50.580"/>
</kw>
<msg timestamp="20231207 17:51:50.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:50.142" endtime="20231207 17:51:50.580"/>
</kw>
<status status="PASS" starttime="20231207 17:51:50.141" endtime="20231207 17:51:50.580"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:50.583" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:51.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:51.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:50.581" endtime="20231207 17:51:51.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:51.005" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:51.005" endtime="20231207 17:51:51.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:51.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:51.006" endtime="20231207 17:51:51.006"/>
</kw>
<status status="PASS" starttime="20231207 17:51:50.581" endtime="20231207 17:51:51.006"/>
</kw>
<msg timestamp="20231207 17:51:51.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:50.580" endtime="20231207 17:51:51.006"/>
</kw>
<status status="PASS" starttime="20231207 17:51:50.580" endtime="20231207 17:51:51.006"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:51.009" level="INFO">Running command 'aws configure set aws_secret_access_key 6c36c6edf6005aad722f0a90a0a68edd9b14946739b2ae86d397b6ea626affb6 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:51.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:51.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:51.008" endtime="20231207 17:51:51.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:51.435" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:51.434" endtime="20231207 17:51:51.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:51.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:51.435" endtime="20231207 17:51:51.436"/>
</kw>
<status status="PASS" starttime="20231207 17:51:51.007" endtime="20231207 17:51:51.436"/>
</kw>
<msg timestamp="20231207 17:51:51.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:51.007" endtime="20231207 17:51:51.436"/>
</kw>
<status status="PASS" starttime="20231207 17:51:51.007" endtime="20231207 17:51:51.436"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:51.439" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:51.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:51.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:51.437" endtime="20231207 17:51:51.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:51.862" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:51.861" endtime="20231207 17:51:51.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:51.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:51.862" endtime="20231207 17:51:51.862"/>
</kw>
<status status="PASS" starttime="20231207 17:51:51.437" endtime="20231207 17:51:51.863"/>
</kw>
<msg timestamp="20231207 17:51:51.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:51.437" endtime="20231207 17:51:51.863"/>
</kw>
<status status="PASS" starttime="20231207 17:51:51.436" endtime="20231207 17:51:51.863"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:51.866" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:52.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:52.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:51.865" endtime="20231207 17:51:52.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:52.280" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:52.279" endtime="20231207 17:51:52.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:52.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:52.280" endtime="20231207 17:51:52.281"/>
</kw>
<status status="PASS" starttime="20231207 17:51:51.864" endtime="20231207 17:51:52.281"/>
</kw>
<msg timestamp="20231207 17:51:52.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:51.864" endtime="20231207 17:51:52.281"/>
</kw>
<status status="PASS" starttime="20231207 17:51:51.863" endtime="20231207 17:51:52.281"/>
</kw>
<status status="PASS" starttime="20231207 17:51:42.035" endtime="20231207 17:51:52.281"/>
</kw>
<status status="PASS" starttime="20231207 17:51:42.035" endtime="20231207 17:51:52.281"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:51:52.281" endtime="20231207 17:51:52.282"/>
</kw>
<status status="PASS" starttime="20231207 17:51:41.997" endtime="20231207 17:51:52.282"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:52.284" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:52.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:52.994" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:09 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 17:51:52.283" endtime="20231207 17:51:52.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:52.995" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:09 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:51:52 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:51:52.995" endtime="20231207 17:51:52.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:52.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:52.996" endtime="20231207 17:51:52.996"/>
</kw>
<msg timestamp="20231207 17:51:52.996" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:09 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 17:51:52.282" endtime="20231207 17:51:52.996"/>
</kw>
<msg timestamp="20231207 17:51:52.996" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:49:09 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 17:51:52.282" endtime="20231207 17:51:52.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:51:52.997" endtime="20231207 17:51:52.997"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:52.999" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:53.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:53.001" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:51:52.998" endtime="20231207 17:51:53.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:53.002" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:51:53.001" endtime="20231207 17:51:53.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:53.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:53.002" endtime="20231207 17:51:53.002"/>
</kw>
<msg timestamp="20231207 17:51:53.002" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:51:52.997" endtime="20231207 17:51:53.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:51:53.003" endtime="20231207 17:51:53.003"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:53.005" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:53.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:53.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:53.003" endtime="20231207 17:51:53.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:53.007" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:53.007" endtime="20231207 17:51:53.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:53.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:53.008" endtime="20231207 17:51:53.008"/>
</kw>
<status status="PASS" starttime="20231207 17:51:53.003" endtime="20231207 17:51:53.008"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:51:41.996" endtime="20231207 17:51:53.008"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 17:51:19.290" endtime="20231207 17:51:53.009"/>
</suite>
<suite id="s1-s6" name="1.3.0-1.4.0-2-pre-finalized-generate-old1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:56.672" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:56.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:56.675" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:51:56.671" endtime="20231207 17:51:56.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:56.675" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:51:56.675" endtime="20231207 17:51:56.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:56.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:56.676" endtime="20231207 17:51:56.676"/>
</kw>
<status status="PASS" starttime="20231207 17:51:56.670" endtime="20231207 17:51:56.676"/>
</kw>
<msg timestamp="20231207 17:51:56.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:56.670" endtime="20231207 17:51:56.677"/>
</kw>
<msg timestamp="20231207 17:51:56.677" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:51:56.670" endtime="20231207 17:51:56.677"/>
</kw>
<msg timestamp="20231207 17:51:56.677" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:56.669" endtime="20231207 17:51:56.677"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:51:56.677" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:51:56.677" endtime="20231207 17:51:56.678"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:56.681" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:51:56.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:56.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:56.679" endtime="20231207 17:51:56.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:56.707" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:56.707" endtime="20231207 17:51:56.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:56.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:56.707" endtime="20231207 17:51:56.708"/>
</kw>
<status status="PASS" starttime="20231207 17:51:56.679" endtime="20231207 17:51:56.708"/>
</kw>
<msg timestamp="20231207 17:51:56.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:56.679" endtime="20231207 17:51:56.708"/>
</kw>
<status status="PASS" starttime="20231207 17:51:56.678" endtime="20231207 17:51:56.708"/>
</kw>
<status status="PASS" starttime="20231207 17:51:56.678" endtime="20231207 17:51:56.708"/>
</kw>
<status status="PASS" starttime="20231207 17:51:56.669" endtime="20231207 17:51:56.708"/>
</kw>
<status status="PASS" starttime="20231207 17:51:56.668" endtime="20231207 17:51:56.708"/>
</kw>
<test id="s1-s6-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:56.711" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:51:56.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:51:56.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:56.709" endtime="20231207 17:51:56.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:51:56.713" level="INFO"/>
<status status="PASS" starttime="20231207 17:51:56.713" endtime="20231207 17:51:56.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:51:56.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:51:56.713" endtime="20231207 17:51:56.714"/>
</kw>
<status status="PASS" starttime="20231207 17:51:56.709" endtime="20231207 17:51:56.714"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:51:56.717" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:02.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:02.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:56.715" endtime="20231207 17:52:02.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:02.983" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:02.982" endtime="20231207 17:52:02.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:02.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:02.983" endtime="20231207 17:52:02.983"/>
</kw>
<status status="PASS" starttime="20231207 17:51:56.715" endtime="20231207 17:52:02.984"/>
</kw>
<msg timestamp="20231207 17:52:02.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:51:56.715" endtime="20231207 17:52:02.984"/>
</kw>
<msg timestamp="20231207 17:52:02.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:51:56.714" endtime="20231207 17:52:02.984"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:02.985" endtime="20231207 17:52:02.985"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:02.989" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:02.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:02.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:02.986" endtime="20231207 17:52:02.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:02.993" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:02.992" endtime="20231207 17:52:02.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:02.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:02.993" endtime="20231207 17:52:02.993"/>
</kw>
<status status="PASS" starttime="20231207 17:52:02.986" endtime="20231207 17:52:02.994"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:51:56.708" endtime="20231207 17:52:02.994"/>
</test>
<test id="s1-s6-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:02.997" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:52:02.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:02.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:02.996" endtime="20231207 17:52:02.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:02.999" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:02.999" endtime="20231207 17:52:02.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:03.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:03.000" endtime="20231207 17:52:03.000"/>
</kw>
<status status="PASS" starttime="20231207 17:52:02.995" endtime="20231207 17:52:03.000"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:03.003" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:08.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:08.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:03.001" endtime="20231207 17:52:08.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:08.435" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:08.435" endtime="20231207 17:52:08.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:08.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:08.436" endtime="20231207 17:52:08.436"/>
</kw>
<status status="PASS" starttime="20231207 17:52:03.001" endtime="20231207 17:52:08.436"/>
</kw>
<msg timestamp="20231207 17:52:08.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:03.001" endtime="20231207 17:52:08.436"/>
</kw>
<msg timestamp="20231207 17:52:08.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:03.000" endtime="20231207 17:52:08.436"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:08.437" endtime="20231207 17:52:08.437"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:08.439" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:08.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:08.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:08.437" endtime="20231207 17:52:08.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:08.442" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:08.441" endtime="20231207 17:52:08.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:08.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:08.442" endtime="20231207 17:52:08.442"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.437" endtime="20231207 17:52:08.443"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:02.994" endtime="20231207 17:52:08.443"/>
</test>
<test id="s1-s6-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:08.448" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:08.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:08.451" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:52:08.447" endtime="20231207 17:52:08.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:08.452" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:52:08.451" endtime="20231207 17:52:08.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:08.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:08.452" endtime="20231207 17:52:08.453"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.447" endtime="20231207 17:52:08.453"/>
</kw>
<msg timestamp="20231207 17:52:08.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:08.446" endtime="20231207 17:52:08.453"/>
</kw>
<msg timestamp="20231207 17:52:08.453" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:52:08.446" endtime="20231207 17:52:08.453"/>
</kw>
<msg timestamp="20231207 17:52:08.453" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:08.445" endtime="20231207 17:52:08.453"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:52:08.454" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:08.454" endtime="20231207 17:52:08.454"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:08.457" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:08.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:08.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:08.456" endtime="20231207 17:52:08.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:08.482" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:08.482" endtime="20231207 17:52:08.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:08.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:08.483" endtime="20231207 17:52:08.483"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.455" endtime="20231207 17:52:08.483"/>
</kw>
<msg timestamp="20231207 17:52:08.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:08.455" endtime="20231207 17:52:08.483"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.455" endtime="20231207 17:52:08.484"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.454" endtime="20231207 17:52:08.484"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.445" endtime="20231207 17:52:08.484"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.444" endtime="20231207 17:52:08.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:08.487" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:10.929" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:52:10.929" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:52:08.485" endtime="20231207 17:52:10.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:10.930" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:52:10.930" endtime="20231207 17:52:10.930"/>
</kw>
<msg timestamp="20231207 17:52:10.931" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:52:08.485" endtime="20231207 17:52:10.931"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:10.931" endtime="20231207 17:52:10.932"/>
</kw>
<msg timestamp="20231207 17:52:10.932" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 17:52:10.931" endtime="20231207 17:52:10.932"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:10.935" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:13.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:13.484" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:52:10.933" endtime="20231207 17:52:13.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:13.485" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:52:13.485" endtime="20231207 17:52:13.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:13.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:13.485" endtime="20231207 17:52:13.486"/>
</kw>
<status status="PASS" starttime="20231207 17:52:10.933" endtime="20231207 17:52:13.486"/>
</kw>
<msg timestamp="20231207 17:52:13.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:10.933" endtime="20231207 17:52:13.486"/>
</kw>
<status status="PASS" starttime="20231207 17:52:10.932" endtime="20231207 17:52:13.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:13.489" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:16.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:16.007" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=243ce09baf875cbde3ab01759273b1c9cde04ebb4f8ee057ea2e7008f5608594
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:52:13.488" endtime="20231207 17:52:16.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:16.008" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=243ce09baf875cbde3ab01759273b1c9cde04ebb4f8ee057ea2e7008f5608594
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:52:16.007" endtime="20231207 17:52:16.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:16.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:16.008" endtime="20231207 17:52:16.008"/>
</kw>
<status status="PASS" starttime="20231207 17:52:13.487" endtime="20231207 17:52:16.009"/>
</kw>
<msg timestamp="20231207 17:52:16.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:13.487" endtime="20231207 17:52:16.009"/>
</kw>
<msg timestamp="20231207 17:52:16.009" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=243ce09baf875cbde3ab01759273b1c9cde04ebb4f8ee057ea2e7008f5608594
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:52:13.486" endtime="20231207 17:52:16.009"/>
</kw>
<status status="PASS" starttime="20231207 17:52:10.932" endtime="20231207 17:52:16.009"/>
</branch>
<status status="PASS" starttime="20231207 17:52:10.932" endtime="20231207 17:52:16.009"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:52:16.010" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:52:16.009" endtime="20231207 17:52:16.010"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:52:16.011" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:52:16.010" endtime="20231207 17:52:16.011"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:52:16.011" level="INFO">${secret} = ['243ce09baf875cbde3ab01759273b1c9cde04ebb4f8ee057ea2e7008f5608594']</msg>
<status status="PASS" starttime="20231207 17:52:16.011" endtime="20231207 17:52:16.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:52:16.012" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:16.011" endtime="20231207 17:52:16.012"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:52:16.013" level="INFO">${secret} = 243ce09baf875cbde3ab01759273b1c9cde04ebb4f8ee057ea2e7008f5608594</msg>
<status status="PASS" starttime="20231207 17:52:16.012" endtime="20231207 17:52:16.013"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:16.016" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:16.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:16.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:16.014" endtime="20231207 17:52:16.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:16.462" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:16.462" endtime="20231207 17:52:16.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:16.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:16.463" endtime="20231207 17:52:16.463"/>
</kw>
<status status="PASS" starttime="20231207 17:52:16.014" endtime="20231207 17:52:16.463"/>
</kw>
<msg timestamp="20231207 17:52:16.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:16.014" endtime="20231207 17:52:16.464"/>
</kw>
<status status="PASS" starttime="20231207 17:52:16.013" endtime="20231207 17:52:16.464"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:16.467" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:16.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:16.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:16.465" endtime="20231207 17:52:16.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:16.884" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:16.884" endtime="20231207 17:52:16.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:16.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:16.884" endtime="20231207 17:52:16.885"/>
</kw>
<status status="PASS" starttime="20231207 17:52:16.465" endtime="20231207 17:52:16.885"/>
</kw>
<msg timestamp="20231207 17:52:16.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:16.464" endtime="20231207 17:52:16.885"/>
</kw>
<status status="PASS" starttime="20231207 17:52:16.464" endtime="20231207 17:52:16.885"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:16.888" level="INFO">Running command 'aws configure set aws_secret_access_key 243ce09baf875cbde3ab01759273b1c9cde04ebb4f8ee057ea2e7008f5608594 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:17.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:17.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:16.887" endtime="20231207 17:52:17.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:17.307" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:17.306" endtime="20231207 17:52:17.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:17.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:17.307" endtime="20231207 17:52:17.307"/>
</kw>
<status status="PASS" starttime="20231207 17:52:16.886" endtime="20231207 17:52:17.307"/>
</kw>
<msg timestamp="20231207 17:52:17.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:16.886" endtime="20231207 17:52:17.308"/>
</kw>
<status status="PASS" starttime="20231207 17:52:16.885" endtime="20231207 17:52:17.308"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:17.310" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:17.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:17.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:17.309" endtime="20231207 17:52:17.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:17.724" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:17.723" endtime="20231207 17:52:17.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:17.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:17.724" endtime="20231207 17:52:17.724"/>
</kw>
<status status="PASS" starttime="20231207 17:52:17.308" endtime="20231207 17:52:17.725"/>
</kw>
<msg timestamp="20231207 17:52:17.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:17.308" endtime="20231207 17:52:17.725"/>
</kw>
<status status="PASS" starttime="20231207 17:52:17.308" endtime="20231207 17:52:17.725"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:17.728" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:18.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:18.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:17.726" endtime="20231207 17:52:18.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:18.150" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:18.150" endtime="20231207 17:52:18.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:18.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:18.151" endtime="20231207 17:52:18.151"/>
</kw>
<status status="PASS" starttime="20231207 17:52:17.726" endtime="20231207 17:52:18.151"/>
</kw>
<msg timestamp="20231207 17:52:18.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:17.726" endtime="20231207 17:52:18.151"/>
</kw>
<status status="PASS" starttime="20231207 17:52:17.725" endtime="20231207 17:52:18.152"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.484" endtime="20231207 17:52:18.152"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.484" endtime="20231207 17:52:18.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:52:18.152" endtime="20231207 17:52:18.152"/>
</kw>
<status status="PASS" starttime="20231207 17:52:08.444" endtime="20231207 17:52:18.152"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:52:18.153" level="INFO">${randStr} = 4066293018</msg>
<status status="PASS" starttime="20231207 17:52:18.153" endtime="20231207 17:52:18.153"/>
</kw>
<msg timestamp="20231207 17:52:18.154" level="INFO">${random} = ozone-test-4066293018</msg>
<status status="PASS" starttime="20231207 17:52:18.152" endtime="20231207 17:52:18.154"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:18.158" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-4066293018 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:18.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:18.793" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4066293018"
}</msg>
<status status="PASS" starttime="20231207 17:52:18.156" endtime="20231207 17:52:18.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:18.794" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4066293018"
}</msg>
<status status="PASS" starttime="20231207 17:52:18.794" endtime="20231207 17:52:18.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:18.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:18.794" endtime="20231207 17:52:18.795"/>
</kw>
<status status="PASS" starttime="20231207 17:52:18.155" endtime="20231207 17:52:18.795"/>
</kw>
<msg timestamp="20231207 17:52:18.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:18.155" endtime="20231207 17:52:18.795"/>
</kw>
<msg timestamp="20231207 17:52:18.795" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4066293018"
}</msg>
<status status="PASS" starttime="20231207 17:52:18.155" endtime="20231207 17:52:18.795"/>
</kw>
<msg timestamp="20231207 17:52:18.795" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4066293018"
}</msg>
<status status="PASS" starttime="20231207 17:52:18.154" endtime="20231207 17:52:18.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:18.796" endtime="20231207 17:52:18.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:18.796" endtime="20231207 17:52:18.796"/>
</kw>
<msg timestamp="20231207 17:52:18.796" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 17:52:18.154" endtime="20231207 17:52:18.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 17:52:18.797" endtime="20231207 17:52:18.797"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:08.444" endtime="20231207 17:52:18.797"/>
</test>
<test id="s1-s6-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:18.801" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:52:18.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:18.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:18.799" endtime="20231207 17:52:18.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:18.803" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:18.802" endtime="20231207 17:52:18.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:18.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:18.803" endtime="20231207 17:52:18.803"/>
</kw>
<status status="PASS" starttime="20231207 17:52:18.798" endtime="20231207 17:52:18.804"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:18.806" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:19.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:19.895" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 17:52:18.805" endtime="20231207 17:52:19.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:19.896" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 17:52:19.895" endtime="20231207 17:52:19.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:19.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:19.896" endtime="20231207 17:52:19.897"/>
</kw>
<msg timestamp="20231207 17:52:19.897" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 17:52:18.804" endtime="20231207 17:52:19.897"/>
</kw>
<msg timestamp="20231207 17:52:19.897" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 17:52:18.804" endtime="20231207 17:52:19.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:19.897" endtime="20231207 17:52:19.898"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:19.900" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:19.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:19.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:19.898" endtime="20231207 17:52:19.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:19.902" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:19.902" endtime="20231207 17:52:19.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:19.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:19.902" endtime="20231207 17:52:19.903"/>
</kw>
<status status="PASS" starttime="20231207 17:52:19.898" endtime="20231207 17:52:19.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:18.798" endtime="20231207 17:52:19.903"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 17:51:56.591" endtime="20231207 17:52:19.904"/>
</suite>
<suite id="s1-s7" name="1.3.0-1.4.0-2-pre-finalized-generate-new1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:23.356" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:23.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:23.359" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:52:23.354" endtime="20231207 17:52:23.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:23.360" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:52:23.360" endtime="20231207 17:52:23.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:23.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:23.361" endtime="20231207 17:52:23.361"/>
</kw>
<status status="PASS" starttime="20231207 17:52:23.353" endtime="20231207 17:52:23.362"/>
</kw>
<msg timestamp="20231207 17:52:23.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:23.353" endtime="20231207 17:52:23.362"/>
</kw>
<msg timestamp="20231207 17:52:23.362" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:52:23.353" endtime="20231207 17:52:23.362"/>
</kw>
<msg timestamp="20231207 17:52:23.363" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:23.353" endtime="20231207 17:52:23.363"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:52:23.364" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:23.363" endtime="20231207 17:52:23.364"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:23.369" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:23.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:23.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:23.367" endtime="20231207 17:52:23.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:23.397" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:23.396" endtime="20231207 17:52:23.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:23.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:23.397" endtime="20231207 17:52:23.397"/>
</kw>
<status status="PASS" starttime="20231207 17:52:23.366" endtime="20231207 17:52:23.398"/>
</kw>
<msg timestamp="20231207 17:52:23.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:23.366" endtime="20231207 17:52:23.398"/>
</kw>
<status status="PASS" starttime="20231207 17:52:23.365" endtime="20231207 17:52:23.398"/>
</kw>
<status status="PASS" starttime="20231207 17:52:23.364" endtime="20231207 17:52:23.398"/>
</kw>
<status status="PASS" starttime="20231207 17:52:23.352" endtime="20231207 17:52:23.398"/>
</kw>
<status status="PASS" starttime="20231207 17:52:23.352" endtime="20231207 17:52:23.398"/>
</kw>
<test id="s1-s7-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:23.402" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:26.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:26.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:23.400" endtime="20231207 17:52:26.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:26.776" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:26.776" endtime="20231207 17:52:26.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:26.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:26.777" endtime="20231207 17:52:26.777"/>
</kw>
<status status="PASS" starttime="20231207 17:52:23.400" endtime="20231207 17:52:26.777"/>
</kw>
<msg timestamp="20231207 17:52:26.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:23.399" endtime="20231207 17:52:26.777"/>
</kw>
<msg timestamp="20231207 17:52:26.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:23.399" endtime="20231207 17:52:26.778"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:26.778" endtime="20231207 17:52:26.778"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:26.782" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:30.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:30.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:26.780" endtime="20231207 17:52:30.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:30.114" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:30.113" endtime="20231207 17:52:30.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:30.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:30.114" endtime="20231207 17:52:30.115"/>
</kw>
<status status="PASS" starttime="20231207 17:52:26.779" endtime="20231207 17:52:30.115"/>
</kw>
<msg timestamp="20231207 17:52:30.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:26.779" endtime="20231207 17:52:30.115"/>
</kw>
<msg timestamp="20231207 17:52:30.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:26.778" endtime="20231207 17:52:30.115"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:30.115" endtime="20231207 17:52:30.116"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:23.398" endtime="20231207 17:52:30.116"/>
</test>
<test id="s1-s7-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:30.119" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:52:30.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:30.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:30.117" endtime="20231207 17:52:30.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:30.121" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:30.121" endtime="20231207 17:52:30.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:30.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:30.121" endtime="20231207 17:52:30.122"/>
</kw>
<status status="PASS" starttime="20231207 17:52:30.117" endtime="20231207 17:52:30.122"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:30.125" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:35.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:35.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:30.123" endtime="20231207 17:52:35.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:35.346" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:35.345" endtime="20231207 17:52:35.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:35.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:35.346" endtime="20231207 17:52:35.347"/>
</kw>
<status status="PASS" starttime="20231207 17:52:30.123" endtime="20231207 17:52:35.347"/>
</kw>
<msg timestamp="20231207 17:52:35.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:30.123" endtime="20231207 17:52:35.347"/>
</kw>
<msg timestamp="20231207 17:52:35.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:30.122" endtime="20231207 17:52:35.347"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:35.347" endtime="20231207 17:52:35.348"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:35.350" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:35.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:35.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:35.348" endtime="20231207 17:52:35.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:35.353" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:35.353" endtime="20231207 17:52:35.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:35.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:35.353" endtime="20231207 17:52:35.354"/>
</kw>
<status status="PASS" starttime="20231207 17:52:35.348" endtime="20231207 17:52:35.354"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:30.116" endtime="20231207 17:52:35.354"/>
</test>
<test id="s1-s7-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:35.358" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:38.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:38.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:35.357" endtime="20231207 17:52:38.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:38.838" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:38.837" endtime="20231207 17:52:38.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:38.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:38.838" endtime="20231207 17:52:38.838"/>
</kw>
<status status="PASS" starttime="20231207 17:52:35.356" endtime="20231207 17:52:38.839"/>
</kw>
<msg timestamp="20231207 17:52:38.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:35.356" endtime="20231207 17:52:38.839"/>
</kw>
<msg timestamp="20231207 17:52:38.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:35.355" endtime="20231207 17:52:38.839"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:38.839" endtime="20231207 17:52:38.840"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:35.355" endtime="20231207 17:52:38.840"/>
</test>
<test id="s1-s7-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:38.844" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:52:38.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:38.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:38.842" endtime="20231207 17:52:38.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:38.846" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:38.846" endtime="20231207 17:52:38.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:38.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:38.847" endtime="20231207 17:52:38.847"/>
</kw>
<status status="PASS" starttime="20231207 17:52:38.841" endtime="20231207 17:52:38.847"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:38.850" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:43.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:43.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:38.849" endtime="20231207 17:52:43.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:43.692" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:43.691" endtime="20231207 17:52:43.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:43.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:43.692" endtime="20231207 17:52:43.692"/>
</kw>
<status status="PASS" starttime="20231207 17:52:38.848" endtime="20231207 17:52:43.693"/>
</kw>
<msg timestamp="20231207 17:52:43.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:38.848" endtime="20231207 17:52:43.693"/>
</kw>
<msg timestamp="20231207 17:52:43.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:38.847" endtime="20231207 17:52:43.693"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:43.693" endtime="20231207 17:52:43.693"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:43.696" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:43.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:43.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:43.694" endtime="20231207 17:52:43.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:43.699" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:43.698" endtime="20231207 17:52:43.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:43.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:43.699" endtime="20231207 17:52:43.699"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.694" endtime="20231207 17:52:43.700"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:38.840" endtime="20231207 17:52:43.700"/>
</test>
<test id="s1-s7-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:43.705" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:43.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:43.708" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:52:43.703" endtime="20231207 17:52:43.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:43.708" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:52:43.708" endtime="20231207 17:52:43.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:43.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:43.709" endtime="20231207 17:52:43.709"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.703" endtime="20231207 17:52:43.709"/>
</kw>
<msg timestamp="20231207 17:52:43.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:43.703" endtime="20231207 17:52:43.709"/>
</kw>
<msg timestamp="20231207 17:52:43.709" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:52:43.702" endtime="20231207 17:52:43.709"/>
</kw>
<msg timestamp="20231207 17:52:43.710" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:43.702" endtime="20231207 17:52:43.710"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:52:43.710" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:43.710" endtime="20231207 17:52:43.710"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:43.713" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:43.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:43.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:43.712" endtime="20231207 17:52:43.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:43.729" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:43.728" endtime="20231207 17:52:43.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:43.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:43.729" endtime="20231207 17:52:43.730"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.711" endtime="20231207 17:52:43.730"/>
</kw>
<msg timestamp="20231207 17:52:43.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:43.711" endtime="20231207 17:52:43.730"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.711" endtime="20231207 17:52:43.730"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.710" endtime="20231207 17:52:43.730"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.702" endtime="20231207 17:52:43.730"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.701" endtime="20231207 17:52:43.730"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:43.734" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:46.270" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:52:46.270" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:52:43.732" endtime="20231207 17:52:46.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:46.271" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:52:46.270" endtime="20231207 17:52:46.271"/>
</kw>
<msg timestamp="20231207 17:52:46.271" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:52:43.731" endtime="20231207 17:52:46.271"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:46.272" endtime="20231207 17:52:46.272"/>
</kw>
<msg timestamp="20231207 17:52:46.272" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 17:52:46.271" endtime="20231207 17:52:46.272"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:46.275" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:48.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:48.923" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:52:46.273" endtime="20231207 17:52:48.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:48.924" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:52:48.924" endtime="20231207 17:52:48.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:48.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:48.924" endtime="20231207 17:52:48.925"/>
</kw>
<status status="PASS" starttime="20231207 17:52:46.273" endtime="20231207 17:52:48.925"/>
</kw>
<msg timestamp="20231207 17:52:48.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:46.273" endtime="20231207 17:52:48.925"/>
</kw>
<status status="PASS" starttime="20231207 17:52:46.272" endtime="20231207 17:52:48.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:48.929" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:51.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:51.743" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8518814c81cedefab59fe9bf37fe49069a007a6c617c9057887538029425ffd6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:52:48.927" endtime="20231207 17:52:51.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:51.744" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8518814c81cedefab59fe9bf37fe49069a007a6c617c9057887538029425ffd6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:52:51.744" endtime="20231207 17:52:51.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:51.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:51.744" endtime="20231207 17:52:51.745"/>
</kw>
<status status="PASS" starttime="20231207 17:52:48.926" endtime="20231207 17:52:51.745"/>
</kw>
<msg timestamp="20231207 17:52:51.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:48.926" endtime="20231207 17:52:51.745"/>
</kw>
<msg timestamp="20231207 17:52:51.745" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8518814c81cedefab59fe9bf37fe49069a007a6c617c9057887538029425ffd6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:52:48.926" endtime="20231207 17:52:51.745"/>
</kw>
<status status="PASS" starttime="20231207 17:52:46.272" endtime="20231207 17:52:51.745"/>
</branch>
<status status="PASS" starttime="20231207 17:52:46.272" endtime="20231207 17:52:51.746"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:52:51.746" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:52:51.746" endtime="20231207 17:52:51.746"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:52:51.747" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:52:51.746" endtime="20231207 17:52:51.747"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:52:51.747" level="INFO">${secret} = ['8518814c81cedefab59fe9bf37fe49069a007a6c617c9057887538029425ffd6']</msg>
<status status="PASS" starttime="20231207 17:52:51.747" endtime="20231207 17:52:51.747"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:52:51.749" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:51.748" endtime="20231207 17:52:51.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:52:51.750" level="INFO">${secret} = 8518814c81cedefab59fe9bf37fe49069a007a6c617c9057887538029425ffd6</msg>
<status status="PASS" starttime="20231207 17:52:51.749" endtime="20231207 17:52:51.750"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:51.753" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:52.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:52.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:51.751" endtime="20231207 17:52:52.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:52.182" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:52.181" endtime="20231207 17:52:52.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:52.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:52.182" endtime="20231207 17:52:52.183"/>
</kw>
<status status="PASS" starttime="20231207 17:52:51.751" endtime="20231207 17:52:52.183"/>
</kw>
<msg timestamp="20231207 17:52:52.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:51.750" endtime="20231207 17:52:52.183"/>
</kw>
<status status="PASS" starttime="20231207 17:52:51.750" endtime="20231207 17:52:52.183"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:52.187" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:52.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:52.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:52.185" endtime="20231207 17:52:52.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:52.611" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:52.611" endtime="20231207 17:52:52.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:52.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:52.612" endtime="20231207 17:52:52.612"/>
</kw>
<status status="PASS" starttime="20231207 17:52:52.184" endtime="20231207 17:52:52.612"/>
</kw>
<msg timestamp="20231207 17:52:52.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:52.184" endtime="20231207 17:52:52.612"/>
</kw>
<status status="PASS" starttime="20231207 17:52:52.183" endtime="20231207 17:52:52.612"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:52.615" level="INFO">Running command 'aws configure set aws_secret_access_key 8518814c81cedefab59fe9bf37fe49069a007a6c617c9057887538029425ffd6 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:53.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:53.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:52.614" endtime="20231207 17:52:53.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:53.021" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:53.020" endtime="20231207 17:52:53.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:53.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:53.021" endtime="20231207 17:52:53.022"/>
</kw>
<status status="PASS" starttime="20231207 17:52:52.613" endtime="20231207 17:52:53.022"/>
</kw>
<msg timestamp="20231207 17:52:53.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:52.613" endtime="20231207 17:52:53.022"/>
</kw>
<status status="PASS" starttime="20231207 17:52:52.613" endtime="20231207 17:52:53.022"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:53.026" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:53.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:53.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:53.024" endtime="20231207 17:52:53.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:53.446" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:53.445" endtime="20231207 17:52:53.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:53.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:53.446" endtime="20231207 17:52:53.446"/>
</kw>
<status status="PASS" starttime="20231207 17:52:53.023" endtime="20231207 17:52:53.446"/>
</kw>
<msg timestamp="20231207 17:52:53.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:53.023" endtime="20231207 17:52:53.446"/>
</kw>
<status status="PASS" starttime="20231207 17:52:53.022" endtime="20231207 17:52:53.447"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:53.450" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:53.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:53.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:53.448" endtime="20231207 17:52:53.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:53.852" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:53.852" endtime="20231207 17:52:53.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:53.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:53.853" endtime="20231207 17:52:53.853"/>
</kw>
<status status="PASS" starttime="20231207 17:52:53.448" endtime="20231207 17:52:53.853"/>
</kw>
<msg timestamp="20231207 17:52:53.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:53.447" endtime="20231207 17:52:53.853"/>
</kw>
<status status="PASS" starttime="20231207 17:52:53.447" endtime="20231207 17:52:53.854"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.731" endtime="20231207 17:52:53.854"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.730" endtime="20231207 17:52:53.854"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:52:53.854" endtime="20231207 17:52:53.854"/>
</kw>
<status status="PASS" starttime="20231207 17:52:43.701" endtime="20231207 17:52:53.854"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:52:53.855" level="INFO">${randStr} = 4091378474</msg>
<status status="PASS" starttime="20231207 17:52:53.855" endtime="20231207 17:52:53.855"/>
</kw>
<msg timestamp="20231207 17:52:53.855" level="INFO">${random} = ozone-test-4091378474</msg>
<status status="PASS" starttime="20231207 17:52:53.854" endtime="20231207 17:52:53.855"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:53.859" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket-ozone-test-4091378474 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:54.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:54.427" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-4091378474"
}</msg>
<status status="PASS" starttime="20231207 17:52:53.857" endtime="20231207 17:52:54.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:54.428" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket-ozone-test-4091378474"
}</msg>
<status status="PASS" starttime="20231207 17:52:54.428" endtime="20231207 17:52:54.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:54.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:54.428" endtime="20231207 17:52:54.429"/>
</kw>
<status status="PASS" starttime="20231207 17:52:53.857" endtime="20231207 17:52:54.429"/>
</kw>
<msg timestamp="20231207 17:52:54.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:53.857" endtime="20231207 17:52:54.429"/>
</kw>
<msg timestamp="20231207 17:52:54.429" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-4091378474"
}</msg>
<status status="PASS" starttime="20231207 17:52:53.856" endtime="20231207 17:52:54.429"/>
</kw>
<msg timestamp="20231207 17:52:54.430" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-4091378474"
}</msg>
<status status="PASS" starttime="20231207 17:52:53.856" endtime="20231207 17:52:54.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:54.430" endtime="20231207 17:52:54.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:54.430" endtime="20231207 17:52:54.430"/>
</kw>
<msg timestamp="20231207 17:52:54.431" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 17:52:53.856" endtime="20231207 17:52:54.431"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 17:52:54.431" endtime="20231207 17:52:54.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:43.700" endtime="20231207 17:52:54.431"/>
</test>
<test id="s1-s7-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:54.434" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:52:54.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:54.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:54.433" endtime="20231207 17:52:54.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:54.436" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:54.436" endtime="20231207 17:52:54.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:54.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:54.437" endtime="20231207 17:52:54.437"/>
</kw>
<status status="PASS" starttime="20231207 17:52:54.432" endtime="20231207 17:52:54.437"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:54.440" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:55.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:55.131" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 17:52:54.438" endtime="20231207 17:52:55.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:55.133" level="INFO">{
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 17:52:55.132" endtime="20231207 17:52:55.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:55.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:55.133" endtime="20231207 17:52:55.134"/>
</kw>
<msg timestamp="20231207 17:52:55.134" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 17:52:54.438" endtime="20231207 17:52:55.134"/>
</kw>
<msg timestamp="20231207 17:52:55.134" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 17:52:54.437" endtime="20231207 17:52:55.134"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:52:55.134" endtime="20231207 17:52:55.134"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:55.137" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:55.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:55.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:55.135" endtime="20231207 17:52:55.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:55.139" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:55.139" endtime="20231207 17:52:55.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:55.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:55.140" endtime="20231207 17:52:55.140"/>
</kw>
<status status="PASS" starttime="20231207 17:52:55.135" endtime="20231207 17:52:55.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:54.432" endtime="20231207 17:52:55.140"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 17:52:23.275" endtime="20231207 17:52:55.141"/>
</suite>
<suite id="s1-s8" name="1.3.0-1.4.0-2-pre-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:58.620" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:58.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:58.626" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:52:58.618" endtime="20231207 17:52:58.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:58.627" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:52:58.626" endtime="20231207 17:52:58.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:58.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:58.627" endtime="20231207 17:52:58.628"/>
</kw>
<status status="PASS" starttime="20231207 17:52:58.618" endtime="20231207 17:52:58.628"/>
</kw>
<msg timestamp="20231207 17:52:58.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:58.617" endtime="20231207 17:52:58.628"/>
</kw>
<msg timestamp="20231207 17:52:58.628" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:52:58.617" endtime="20231207 17:52:58.628"/>
</kw>
<msg timestamp="20231207 17:52:58.628" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:58.617" endtime="20231207 17:52:58.629"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:52:58.629" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:52:58.629" endtime="20231207 17:52:58.629"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:58.633" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:52:58.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:52:58.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:58.631" endtime="20231207 17:52:58.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:52:58.660" level="INFO"/>
<status status="PASS" starttime="20231207 17:52:58.660" endtime="20231207 17:52:58.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:52:58.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:52:58.660" endtime="20231207 17:52:58.661"/>
</kw>
<status status="PASS" starttime="20231207 17:52:58.631" endtime="20231207 17:52:58.661"/>
</kw>
<msg timestamp="20231207 17:52:58.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:58.630" endtime="20231207 17:52:58.661"/>
</kw>
<status status="PASS" starttime="20231207 17:52:58.630" endtime="20231207 17:52:58.661"/>
</kw>
<status status="PASS" starttime="20231207 17:52:58.629" endtime="20231207 17:52:58.661"/>
</kw>
<status status="PASS" starttime="20231207 17:52:58.617" endtime="20231207 17:52:58.661"/>
</kw>
<status status="PASS" starttime="20231207 17:52:58.616" endtime="20231207 17:52:58.661"/>
</kw>
<test id="s1-s8-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:52:58.663" level="INFO">${random} = 47012</msg>
<status status="PASS" starttime="20231207 17:52:58.662" endtime="20231207 17:52:58.663"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:52:58.666" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-47012 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:03.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:03.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:58.664" endtime="20231207 17:53:03.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:03.390" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:03.389" endtime="20231207 17:53:03.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:03.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:03.390" endtime="20231207 17:53:03.391"/>
</kw>
<status status="PASS" starttime="20231207 17:52:58.664" endtime="20231207 17:53:03.391"/>
</kw>
<msg timestamp="20231207 17:53:03.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:52:58.663" endtime="20231207 17:53:03.391"/>
</kw>
<msg timestamp="20231207 17:53:03.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:52:58.663" endtime="20231207 17:53:03.391"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:03.392" endtime="20231207 17:53:03.392"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:03.395" level="INFO">Running command 'cat /tmp/key-47012 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:03.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:03.397" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:53:03.393" endtime="20231207 17:53:03.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:03.397" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:53:03.397" endtime="20231207 17:53:03.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:03.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:03.398" endtime="20231207 17:53:03.398"/>
</kw>
<msg timestamp="20231207 17:53:03.398" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:53:03.392" endtime="20231207 17:53:03.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:03.398" endtime="20231207 17:53:03.399"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:03.401" level="INFO">Running command 'rm /tmp/key-47012 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:03.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:03.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:03.399" endtime="20231207 17:53:03.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:03.404" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:03.403" endtime="20231207 17:53:03.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:03.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:03.404" endtime="20231207 17:53:03.404"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.399" endtime="20231207 17:53:03.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:52:58.662" endtime="20231207 17:53:03.405"/>
</test>
<test id="s1-s8-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:03.410" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:03.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:03.412" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:53:03.409" endtime="20231207 17:53:03.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:03.413" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:53:03.413" endtime="20231207 17:53:03.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:03.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:03.413" endtime="20231207 17:53:03.414"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.408" endtime="20231207 17:53:03.414"/>
</kw>
<msg timestamp="20231207 17:53:03.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:03.408" endtime="20231207 17:53:03.414"/>
</kw>
<msg timestamp="20231207 17:53:03.414" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:53:03.408" endtime="20231207 17:53:03.414"/>
</kw>
<msg timestamp="20231207 17:53:03.414" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:03.407" endtime="20231207 17:53:03.414"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:53:03.415" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:03.415" endtime="20231207 17:53:03.415"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:03.418" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:03.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:03.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:03.417" endtime="20231207 17:53:03.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:03.454" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:03.453" endtime="20231207 17:53:03.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:03.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:03.454" endtime="20231207 17:53:03.454"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.416" endtime="20231207 17:53:03.455"/>
</kw>
<msg timestamp="20231207 17:53:03.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:03.416" endtime="20231207 17:53:03.455"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.416" endtime="20231207 17:53:03.455"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.415" endtime="20231207 17:53:03.455"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.407" endtime="20231207 17:53:03.455"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.406" endtime="20231207 17:53:03.455"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:03.458" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:06.226" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:53:06.226" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:53:03.456" endtime="20231207 17:53:06.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:06.227" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:53:06.227" endtime="20231207 17:53:06.228"/>
</kw>
<msg timestamp="20231207 17:53:06.228" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:53:03.456" endtime="20231207 17:53:06.228"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:06.228" endtime="20231207 17:53:06.229"/>
</kw>
<msg timestamp="20231207 17:53:06.229" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 17:53:06.228" endtime="20231207 17:53:06.229"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:06.232" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:08.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:08.899" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:53:06.230" endtime="20231207 17:53:08.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:08.900" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:53:08.900" endtime="20231207 17:53:08.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:08.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:08.901" endtime="20231207 17:53:08.901"/>
</kw>
<status status="PASS" starttime="20231207 17:53:06.230" endtime="20231207 17:53:08.901"/>
</kw>
<msg timestamp="20231207 17:53:08.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:06.230" endtime="20231207 17:53:08.902"/>
</kw>
<status status="PASS" starttime="20231207 17:53:06.229" endtime="20231207 17:53:08.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:08.905" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:11.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:11.423" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e27e510f309d712f9064129ef9c258a84fbcd35953e5e4a7e73b2f7e3f5122b6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:53:08.903" endtime="20231207 17:53:11.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:11.424" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e27e510f309d712f9064129ef9c258a84fbcd35953e5e4a7e73b2f7e3f5122b6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:53:11.423" endtime="20231207 17:53:11.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:11.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:11.424" endtime="20231207 17:53:11.424"/>
</kw>
<status status="PASS" starttime="20231207 17:53:08.903" endtime="20231207 17:53:11.425"/>
</kw>
<msg timestamp="20231207 17:53:11.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:08.902" endtime="20231207 17:53:11.425"/>
</kw>
<msg timestamp="20231207 17:53:11.425" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e27e510f309d712f9064129ef9c258a84fbcd35953e5e4a7e73b2f7e3f5122b6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:53:08.902" endtime="20231207 17:53:11.425"/>
</kw>
<status status="PASS" starttime="20231207 17:53:06.229" endtime="20231207 17:53:11.425"/>
</branch>
<status status="PASS" starttime="20231207 17:53:06.229" endtime="20231207 17:53:11.425"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:53:11.426" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:53:11.426" endtime="20231207 17:53:11.426"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:53:11.427" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:53:11.426" endtime="20231207 17:53:11.427"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:53:11.427" level="INFO">${secret} = ['e27e510f309d712f9064129ef9c258a84fbcd35953e5e4a7e73b2f7e3f5122b6']</msg>
<status status="PASS" starttime="20231207 17:53:11.427" endtime="20231207 17:53:11.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:53:11.428" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:11.427" endtime="20231207 17:53:11.428"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:53:11.429" level="INFO">${secret} = e27e510f309d712f9064129ef9c258a84fbcd35953e5e4a7e73b2f7e3f5122b6</msg>
<status status="PASS" starttime="20231207 17:53:11.429" endtime="20231207 17:53:11.429"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:11.433" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:11.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:11.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:11.431" endtime="20231207 17:53:11.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:11.872" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:11.871" endtime="20231207 17:53:11.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:11.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:11.872" endtime="20231207 17:53:11.873"/>
</kw>
<status status="PASS" starttime="20231207 17:53:11.430" endtime="20231207 17:53:11.873"/>
</kw>
<msg timestamp="20231207 17:53:11.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:11.430" endtime="20231207 17:53:11.873"/>
</kw>
<status status="PASS" starttime="20231207 17:53:11.430" endtime="20231207 17:53:11.873"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:11.876" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:12.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:12.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:11.875" endtime="20231207 17:53:12.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:12.293" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:12.292" endtime="20231207 17:53:12.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:12.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:12.293" endtime="20231207 17:53:12.293"/>
</kw>
<status status="PASS" starttime="20231207 17:53:11.874" endtime="20231207 17:53:12.294"/>
</kw>
<msg timestamp="20231207 17:53:12.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:11.874" endtime="20231207 17:53:12.294"/>
</kw>
<status status="PASS" starttime="20231207 17:53:11.873" endtime="20231207 17:53:12.294"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:12.297" level="INFO">Running command 'aws configure set aws_secret_access_key e27e510f309d712f9064129ef9c258a84fbcd35953e5e4a7e73b2f7e3f5122b6 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:12.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:12.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:12.295" endtime="20231207 17:53:12.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:12.718" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:12.718" endtime="20231207 17:53:12.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:12.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:12.718" endtime="20231207 17:53:12.719"/>
</kw>
<status status="PASS" starttime="20231207 17:53:12.295" endtime="20231207 17:53:12.719"/>
</kw>
<msg timestamp="20231207 17:53:12.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:12.295" endtime="20231207 17:53:12.719"/>
</kw>
<status status="PASS" starttime="20231207 17:53:12.294" endtime="20231207 17:53:12.719"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:12.722" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:13.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:13.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:12.721" endtime="20231207 17:53:13.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:13.128" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:13.127" endtime="20231207 17:53:13.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:13.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:13.128" endtime="20231207 17:53:13.128"/>
</kw>
<status status="PASS" starttime="20231207 17:53:12.720" endtime="20231207 17:53:13.128"/>
</kw>
<msg timestamp="20231207 17:53:13.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:12.720" endtime="20231207 17:53:13.129"/>
</kw>
<status status="PASS" starttime="20231207 17:53:12.719" endtime="20231207 17:53:13.129"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:13.132" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:13.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:13.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:13.130" endtime="20231207 17:53:13.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:13.541" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:13.541" endtime="20231207 17:53:13.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:13.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:13.542" endtime="20231207 17:53:13.542"/>
</kw>
<status status="PASS" starttime="20231207 17:53:13.130" endtime="20231207 17:53:13.543"/>
</kw>
<msg timestamp="20231207 17:53:13.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:13.129" endtime="20231207 17:53:13.543"/>
</kw>
<status status="PASS" starttime="20231207 17:53:13.129" endtime="20231207 17:53:13.543"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.456" endtime="20231207 17:53:13.543"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.455" endtime="20231207 17:53:13.543"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:53:13.543" endtime="20231207 17:53:13.543"/>
</kw>
<status status="PASS" starttime="20231207 17:53:03.406" endtime="20231207 17:53:13.544"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:13.546" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:14.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:14.191" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:43 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 17:53:13.545" endtime="20231207 17:53:14.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:14.192" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:43 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:53:14 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:53:14.191" endtime="20231207 17:53:14.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:14.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:14.192" endtime="20231207 17:53:14.193"/>
</kw>
<msg timestamp="20231207 17:53:14.193" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:43 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 17:53:13.544" endtime="20231207 17:53:14.193"/>
</kw>
<msg timestamp="20231207 17:53:14.193" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:43 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 17:53:13.544" endtime="20231207 17:53:14.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:14.193" endtime="20231207 17:53:14.194"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:14.196" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:14.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:14.199" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:53:14.194" endtime="20231207 17:53:14.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:14.199" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:53:14.199" endtime="20231207 17:53:14.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:14.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:14.200" endtime="20231207 17:53:14.200"/>
</kw>
<msg timestamp="20231207 17:53:14.200" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:53:14.194" endtime="20231207 17:53:14.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:14.200" endtime="20231207 17:53:14.201"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:14.203" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:14.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:14.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:14.201" endtime="20231207 17:53:14.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:14.205" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:14.205" endtime="20231207 17:53:14.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:14.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:14.206" endtime="20231207 17:53:14.206"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.201" endtime="20231207 17:53:14.206"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:53:03.405" endtime="20231207 17:53:14.207"/>
</test>
<test id="s1-s8-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:14.212" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:14.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:14.214" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:53:14.210" endtime="20231207 17:53:14.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:14.215" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:53:14.214" endtime="20231207 17:53:14.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:14.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:14.215" endtime="20231207 17:53:14.216"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.210" endtime="20231207 17:53:14.216"/>
</kw>
<msg timestamp="20231207 17:53:14.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:14.210" endtime="20231207 17:53:14.216"/>
</kw>
<msg timestamp="20231207 17:53:14.216" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:53:14.209" endtime="20231207 17:53:14.216"/>
</kw>
<msg timestamp="20231207 17:53:14.216" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:14.209" endtime="20231207 17:53:14.216"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:53:14.217" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:14.217" endtime="20231207 17:53:14.217"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:14.220" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:14.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:14.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:14.219" endtime="20231207 17:53:14.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:14.245" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:14.244" endtime="20231207 17:53:14.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:14.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:14.245" endtime="20231207 17:53:14.246"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.219" endtime="20231207 17:53:14.246"/>
</kw>
<msg timestamp="20231207 17:53:14.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:14.218" endtime="20231207 17:53:14.246"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.218" endtime="20231207 17:53:14.246"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.217" endtime="20231207 17:53:14.246"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.208" endtime="20231207 17:53:14.246"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.208" endtime="20231207 17:53:14.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:14.249" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:16.805" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:53:16.805" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:53:14.248" endtime="20231207 17:53:16.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:16.806" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:53:16.805" endtime="20231207 17:53:16.806"/>
</kw>
<msg timestamp="20231207 17:53:16.806" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 17:53:14.247" endtime="20231207 17:53:16.806"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:16.807" endtime="20231207 17:53:16.807"/>
</kw>
<msg timestamp="20231207 17:53:16.807" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 17:53:16.806" endtime="20231207 17:53:16.807"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:16.810" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:19.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:19.414" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:53:16.809" endtime="20231207 17:53:19.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:19.415" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 17:53:19.415" endtime="20231207 17:53:19.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:19.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:19.416" endtime="20231207 17:53:19.416"/>
</kw>
<status status="PASS" starttime="20231207 17:53:16.808" endtime="20231207 17:53:19.416"/>
</kw>
<msg timestamp="20231207 17:53:19.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:16.808" endtime="20231207 17:53:19.416"/>
</kw>
<status status="PASS" starttime="20231207 17:53:16.807" endtime="20231207 17:53:19.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:19.420" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:22.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:22.007" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:53:19.418" endtime="20231207 17:53:22.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:22.008" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:53:22.007" endtime="20231207 17:53:22.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:22.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:22.008" endtime="20231207 17:53:22.009"/>
</kw>
<status status="PASS" starttime="20231207 17:53:19.418" endtime="20231207 17:53:22.009"/>
</kw>
<msg timestamp="20231207 17:53:22.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:19.417" endtime="20231207 17:53:22.009"/>
</kw>
<msg timestamp="20231207 17:53:22.009" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 17:53:19.417" endtime="20231207 17:53:22.009"/>
</kw>
<status status="PASS" starttime="20231207 17:53:16.807" endtime="20231207 17:53:22.009"/>
</branch>
<status status="PASS" starttime="20231207 17:53:16.807" endtime="20231207 17:53:22.010"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:53:22.010" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:53:22.010" endtime="20231207 17:53:22.010"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:53:22.011" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:53:22.010" endtime="20231207 17:53:22.011"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:53:22.011" level="INFO">${secret} = ['c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405']</msg>
<status status="PASS" starttime="20231207 17:53:22.011" endtime="20231207 17:53:22.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:53:22.012" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:22.011" endtime="20231207 17:53:22.013"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:53:22.014" level="INFO">${secret} = c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:53:22.013" endtime="20231207 17:53:22.014"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:22.017" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:22.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:22.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:22.015" endtime="20231207 17:53:22.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:22.423" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:22.423" endtime="20231207 17:53:22.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:22.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:22.423" endtime="20231207 17:53:22.424"/>
</kw>
<status status="PASS" starttime="20231207 17:53:22.015" endtime="20231207 17:53:22.424"/>
</kw>
<msg timestamp="20231207 17:53:22.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:22.014" endtime="20231207 17:53:22.424"/>
</kw>
<status status="PASS" starttime="20231207 17:53:22.014" endtime="20231207 17:53:22.424"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:22.427" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:22.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:22.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:22.426" endtime="20231207 17:53:22.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:22.841" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:22.840" endtime="20231207 17:53:22.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:22.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:22.841" endtime="20231207 17:53:22.842"/>
</kw>
<status status="PASS" starttime="20231207 17:53:22.425" endtime="20231207 17:53:22.842"/>
</kw>
<msg timestamp="20231207 17:53:22.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:22.425" endtime="20231207 17:53:22.842"/>
</kw>
<status status="PASS" starttime="20231207 17:53:22.424" endtime="20231207 17:53:22.842"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:22.845" level="INFO">Running command 'aws configure set aws_secret_access_key c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:23.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:23.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:22.843" endtime="20231207 17:53:23.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:23.256" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:23.256" endtime="20231207 17:53:23.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:23.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:23.256" endtime="20231207 17:53:23.257"/>
</kw>
<status status="PASS" starttime="20231207 17:53:22.843" endtime="20231207 17:53:23.257"/>
</kw>
<msg timestamp="20231207 17:53:23.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:22.843" endtime="20231207 17:53:23.257"/>
</kw>
<status status="PASS" starttime="20231207 17:53:22.842" endtime="20231207 17:53:23.257"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:23.260" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:23.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:23.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:23.258" endtime="20231207 17:53:23.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:23.684" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:23.683" endtime="20231207 17:53:23.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:23.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:23.684" endtime="20231207 17:53:23.685"/>
</kw>
<status status="PASS" starttime="20231207 17:53:23.258" endtime="20231207 17:53:23.685"/>
</kw>
<msg timestamp="20231207 17:53:23.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:23.258" endtime="20231207 17:53:23.685"/>
</kw>
<status status="PASS" starttime="20231207 17:53:23.257" endtime="20231207 17:53:23.685"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:23.689" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:24.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:24.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:23.687" endtime="20231207 17:53:24.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:24.113" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:24.113" endtime="20231207 17:53:24.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:24.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:24.113" endtime="20231207 17:53:24.114"/>
</kw>
<status status="PASS" starttime="20231207 17:53:23.686" endtime="20231207 17:53:24.114"/>
</kw>
<msg timestamp="20231207 17:53:24.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:23.686" endtime="20231207 17:53:24.114"/>
</kw>
<status status="PASS" starttime="20231207 17:53:23.685" endtime="20231207 17:53:24.114"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.247" endtime="20231207 17:53:24.114"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.246" endtime="20231207 17:53:24.114"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:53:24.115" endtime="20231207 17:53:24.115"/>
</kw>
<status status="PASS" starttime="20231207 17:53:14.208" endtime="20231207 17:53:24.115"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:24.118" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:24.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:24.701" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:55 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 17:53:24.116" endtime="20231207 17:53:24.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:24.702" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:55 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:53:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:53:24.701" endtime="20231207 17:53:24.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:24.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:24.702" endtime="20231207 17:53:24.702"/>
</kw>
<msg timestamp="20231207 17:53:24.703" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:55 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 17:53:24.116" endtime="20231207 17:53:24.703"/>
</kw>
<msg timestamp="20231207 17:53:24.703" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:55 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 17:53:24.115" endtime="20231207 17:53:24.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:24.703" endtime="20231207 17:53:24.703"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:24.706" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:24.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:24.708" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:53:24.704" endtime="20231207 17:53:24.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:24.708" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:53:24.708" endtime="20231207 17:53:24.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:24.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:24.709" endtime="20231207 17:53:24.709"/>
</kw>
<msg timestamp="20231207 17:53:24.709" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:53:24.703" endtime="20231207 17:53:24.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:24.709" endtime="20231207 17:53:24.710"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:24.712" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:24.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:24.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:24.710" endtime="20231207 17:53:24.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:24.714" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:24.714" endtime="20231207 17:53:24.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:24.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:24.715" endtime="20231207 17:53:24.715"/>
</kw>
<status status="PASS" starttime="20231207 17:53:24.710" endtime="20231207 17:53:24.715"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:53:14.207" endtime="20231207 17:53:24.715"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 17:52:58.539" endtime="20231207 17:53:24.716"/>
</suite>
<suite id="s1-s9" name="1.3.0-1.4.0-2-pre-finalized-check-finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s9-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:28.199" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:28.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:28.202" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:53:28.198" endtime="20231207 17:53:28.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:28.203" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:53:28.202" endtime="20231207 17:53:28.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:28.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:28.203" endtime="20231207 17:53:28.204"/>
</kw>
<status status="PASS" starttime="20231207 17:53:28.197" endtime="20231207 17:53:28.204"/>
</kw>
<msg timestamp="20231207 17:53:28.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:28.197" endtime="20231207 17:53:28.204"/>
</kw>
<msg timestamp="20231207 17:53:28.204" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:53:28.197" endtime="20231207 17:53:28.204"/>
</kw>
<msg timestamp="20231207 17:53:28.204" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:28.196" endtime="20231207 17:53:28.204"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:53:28.205" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:28.204" endtime="20231207 17:53:28.205"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:28.208" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:28.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:28.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:28.206" endtime="20231207 17:53:28.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:28.231" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:28.230" endtime="20231207 17:53:28.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:28.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:28.231" endtime="20231207 17:53:28.232"/>
</kw>
<status status="PASS" starttime="20231207 17:53:28.206" endtime="20231207 17:53:28.232"/>
</kw>
<msg timestamp="20231207 17:53:28.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:28.206" endtime="20231207 17:53:28.232"/>
</kw>
<status status="PASS" starttime="20231207 17:53:28.205" endtime="20231207 17:53:28.232"/>
</kw>
<status status="PASS" starttime="20231207 17:53:28.205" endtime="20231207 17:53:28.232"/>
</kw>
<status status="PASS" starttime="20231207 17:53:28.196" endtime="20231207 17:53:28.232"/>
</kw>
<status status="PASS" starttime="20231207 17:53:28.195" endtime="20231207 17:53:28.232"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:28.235" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:31.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:31.209" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 17:53:28.234" endtime="20231207 17:53:31.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:31.210" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 17:53:31.209" endtime="20231207 17:53:31.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:31.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:31.210" endtime="20231207 17:53:31.211"/>
</kw>
<status status="PASS" starttime="20231207 17:53:28.233" endtime="20231207 17:53:31.211"/>
</kw>
<msg timestamp="20231207 17:53:31.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:28.233" endtime="20231207 17:53:31.211"/>
</kw>
<msg timestamp="20231207 17:53:31.211" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 17:53:28.232" endtime="20231207 17:53:31.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:31.212" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 17:53:31.211" endtime="20231207 17:53:31.212"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 17:53:31.212" endtime="20231207 17:53:31.212"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 17:53:28.195" endtime="20231207 17:53:31.212"/>
</test>
<test id="s1-s9-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:31.217" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:31.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:31.220" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:53:31.216" endtime="20231207 17:53:31.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:31.220" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:53:31.220" endtime="20231207 17:53:31.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:31.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:31.221" endtime="20231207 17:53:31.221"/>
</kw>
<status status="PASS" starttime="20231207 17:53:31.215" endtime="20231207 17:53:31.221"/>
</kw>
<msg timestamp="20231207 17:53:31.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:31.215" endtime="20231207 17:53:31.221"/>
</kw>
<msg timestamp="20231207 17:53:31.221" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:53:31.215" endtime="20231207 17:53:31.221"/>
</kw>
<msg timestamp="20231207 17:53:31.222" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:31.214" endtime="20231207 17:53:31.222"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:53:31.222" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:31.222" endtime="20231207 17:53:31.222"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:31.225" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:31.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:31.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:31.224" endtime="20231207 17:53:31.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:31.241" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:31.241" endtime="20231207 17:53:31.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:31.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:31.241" endtime="20231207 17:53:31.242"/>
</kw>
<status status="PASS" starttime="20231207 17:53:31.223" endtime="20231207 17:53:31.242"/>
</kw>
<msg timestamp="20231207 17:53:31.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:31.223" endtime="20231207 17:53:31.242"/>
</kw>
<status status="PASS" starttime="20231207 17:53:31.223" endtime="20231207 17:53:31.242"/>
</kw>
<status status="PASS" starttime="20231207 17:53:31.222" endtime="20231207 17:53:31.242"/>
</kw>
<status status="PASS" starttime="20231207 17:53:31.214" endtime="20231207 17:53:31.242"/>
</kw>
<status status="PASS" starttime="20231207 17:53:31.213" endtime="20231207 17:53:31.242"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:31.245" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:36.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:36.057" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 17:53:31.244" endtime="20231207 17:53:36.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:36.058" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 17:53:36.057" endtime="20231207 17:53:36.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:36.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:36.058" endtime="20231207 17:53:36.058"/>
</kw>
<status status="PASS" starttime="20231207 17:53:31.243" endtime="20231207 17:53:36.059"/>
</kw>
<msg timestamp="20231207 17:53:36.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:31.243" endtime="20231207 17:53:36.059"/>
</kw>
<msg timestamp="20231207 17:53:36.059" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 17:53:31.243" endtime="20231207 17:53:36.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:36.059" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 17:53:36.059" endtime="20231207 17:53:36.060"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 17:53:36.060" endtime="20231207 17:53:36.060"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 17:53:31.213" endtime="20231207 17:53:36.060"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 17:53:28.150" endtime="20231207 17:53:36.061"/>
</suite>
<suite id="s1-s10" name="1.3.0-1.4.0-2-pre-finalized-snapshot" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:39.577" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:39.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:39.579" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:53:39.574" endtime="20231207 17:53:39.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:39.580" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:53:39.580" endtime="20231207 17:53:39.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:39.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:39.580" endtime="20231207 17:53:39.580"/>
</kw>
<status status="PASS" starttime="20231207 17:53:39.574" endtime="20231207 17:53:39.581"/>
</kw>
<msg timestamp="20231207 17:53:39.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:39.574" endtime="20231207 17:53:39.581"/>
</kw>
<msg timestamp="20231207 17:53:39.581" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:53:39.573" endtime="20231207 17:53:39.581"/>
</kw>
<msg timestamp="20231207 17:53:39.581" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:39.573" endtime="20231207 17:53:39.581"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:53:39.582" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:53:39.581" endtime="20231207 17:53:39.582"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:39.585" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:39.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:39.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:39.583" endtime="20231207 17:53:39.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:39.617" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:39.617" endtime="20231207 17:53:39.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:39.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:39.618" endtime="20231207 17:53:39.618"/>
</kw>
<status status="PASS" starttime="20231207 17:53:39.583" endtime="20231207 17:53:39.618"/>
</kw>
<msg timestamp="20231207 17:53:39.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:53:39.583" endtime="20231207 17:53:39.618"/>
</kw>
<status status="PASS" starttime="20231207 17:53:39.582" endtime="20231207 17:53:39.618"/>
</kw>
<status status="PASS" starttime="20231207 17:53:39.582" endtime="20231207 17:53:39.619"/>
</kw>
<status status="PASS" starttime="20231207 17:53:39.573" endtime="20231207 17:53:39.619"/>
</kw>
<status status="PASS" starttime="20231207 17:53:39.571" endtime="20231207 17:53:39.619"/>
</kw>
<test id="s1-s10-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="29">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:39.622" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:42.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:42.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:39.620" endtime="20231207 17:53:42.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:42.915" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:42.914" endtime="20231207 17:53:42.915"/>
</kw>
<msg timestamp="20231207 17:53:42.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:39.620" endtime="20231207 17:53:42.915"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:42.915" endtime="20231207 17:53:42.916"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:42.918" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:46.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:53:46.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:42.916" endtime="20231207 17:53:46.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:46.079" level="INFO"/>
<status status="PASS" starttime="20231207 17:53:46.078" endtime="20231207 17:53:46.079"/>
</kw>
<msg timestamp="20231207 17:53:46.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:53:42.916" endtime="20231207 17:53:46.079"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:46.079" endtime="20231207 17:53:46.079"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:46.082" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:49.320" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:53:49.320" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 17:53:46.080" endtime="20231207 17:53:49.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:49.321" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 17:53:49.321" endtime="20231207 17:53:49.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:49.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:49.321" endtime="20231207 17:53:49.322"/>
</kw>
<msg timestamp="20231207 17:53:49.322" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 17:53:46.079" endtime="20231207 17:53:49.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:49.322" endtime="20231207 17:53:49.323"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:53:39.619" endtime="20231207 17:53:49.323"/>
</test>
<test id="s1-s10-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="37">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:49.326" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:52.807" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:53:52.807" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 17:53:49.325" endtime="20231207 17:53:52.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:52.808" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 17:53:52.807" endtime="20231207 17:53:52.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:52.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:52.808" endtime="20231207 17:53:52.808"/>
</kw>
<msg timestamp="20231207 17:53:52.809" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 17:53:49.324" endtime="20231207 17:53:52.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:52.809" endtime="20231207 17:53:52.809"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:53:49.323" endtime="20231207 17:53:52.809"/>
</test>
<test id="s1-s10-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="41">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:52.812" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:56.046" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:53:56.046" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 17:53:52.811" endtime="20231207 17:53:56.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:56.048" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 17:53:56.047" endtime="20231207 17:53:56.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:56.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:56.048" endtime="20231207 17:53:56.049"/>
</kw>
<msg timestamp="20231207 17:53:56.049" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 17:53:52.810" endtime="20231207 17:53:56.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:56.050" endtime="20231207 17:53:56.050"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:53:52.810" endtime="20231207 17:53:56.050"/>
</test>
<test id="s1-s10-t4" name="Attempt to delete when snapshot feature is disabled" line="45">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:53:56.054" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:53:59.326" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 17:53:59.326" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 17:53:56.052" endtime="20231207 17:53:59.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:53:59.327" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 17:53:59.326" endtime="20231207 17:53:59.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:53:59.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:53:59.327" endtime="20231207 17:53:59.328"/>
</kw>
<msg timestamp="20231207 17:53:59.328" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 17:53:56.051" endtime="20231207 17:53:59.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:53:59.328" endtime="20231207 17:53:59.328"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:53:56.051" endtime="20231207 17:53:59.329"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20231207 17:53:39.525" endtime="20231207 17:53:59.330"/>
</suite>
<suite id="s1-s11" name="1.3.0-1.4.0-2-pre-finalized-prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s11-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:54:02.799" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:54:02.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:54:02.802" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:54:02.798" endtime="20231207 17:54:02.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:54:02.803" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:54:02.802" endtime="20231207 17:54:02.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:54:02.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:54:02.803" endtime="20231207 17:54:02.803"/>
</kw>
<status status="PASS" starttime="20231207 17:54:02.797" endtime="20231207 17:54:02.804"/>
</kw>
<msg timestamp="20231207 17:54:02.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:54:02.797" endtime="20231207 17:54:02.804"/>
</kw>
<msg timestamp="20231207 17:54:02.804" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:54:02.797" endtime="20231207 17:54:02.804"/>
</kw>
<msg timestamp="20231207 17:54:02.804" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:54:02.796" endtime="20231207 17:54:02.804"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:54:02.805" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:54:02.804" endtime="20231207 17:54:02.805"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:54:02.808" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:54:02.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:54:02.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:54:02.806" endtime="20231207 17:54:02.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:54:02.861" level="INFO"/>
<status status="PASS" starttime="20231207 17:54:02.860" endtime="20231207 17:54:02.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:54:02.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:54:02.861" endtime="20231207 17:54:02.861"/>
</kw>
<status status="PASS" starttime="20231207 17:54:02.806" endtime="20231207 17:54:02.862"/>
</kw>
<msg timestamp="20231207 17:54:02.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:54:02.806" endtime="20231207 17:54:02.862"/>
</kw>
<status status="PASS" starttime="20231207 17:54:02.805" endtime="20231207 17:54:02.862"/>
</kw>
<status status="PASS" starttime="20231207 17:54:02.805" endtime="20231207 17:54:02.862"/>
</kw>
<status status="PASS" starttime="20231207 17:54:02.796" endtime="20231207 17:54:02.862"/>
</kw>
<status status="PASS" starttime="20231207 17:54:02.795" endtime="20231207 17:54:02.862"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 17:54:02.862" endtime="20231207 17:54:02.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:54:02.865" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:54:10.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:54:10.996" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231207 17:54:02.864" endtime="20231207 17:54:10.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:54:10.997" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231207 17:54:10.996" endtime="20231207 17:54:10.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:54:10.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:54:10.997" endtime="20231207 17:54:10.998"/>
</kw>
<status status="PASS" starttime="20231207 17:54:02.863" endtime="20231207 17:54:10.998"/>
</kw>
<msg timestamp="20231207 17:54:10.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:54:02.863" endtime="20231207 17:54:10.998"/>
</kw>
<msg timestamp="20231207 17:54:10.998" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231207 17:54:02.863" endtime="20231207 17:54:10.998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:54:10.999" endtime="20231207 17:54:10.999"/>
</kw>
<status status="PASS" starttime="20231207 17:54:10.998" endtime="20231207 17:54:10.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:54:02.795" endtime="20231207 17:54:10.999"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20231207 17:54:02.750" endtime="20231207 17:54:11.000"/>
</suite>
<suite id="s1-s12" name="1.3.0-1.4.0-3-downgraded-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s12-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:42.357" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:42.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:42.359" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:55:42.355" endtime="20231207 17:55:42.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:42.360" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:55:42.360" endtime="20231207 17:55:42.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:42.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:42.360" endtime="20231207 17:55:42.361"/>
</kw>
<status status="PASS" starttime="20231207 17:55:42.354" endtime="20231207 17:55:42.361"/>
</kw>
<msg timestamp="20231207 17:55:42.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:42.354" endtime="20231207 17:55:42.362"/>
</kw>
<msg timestamp="20231207 17:55:42.362" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:55:42.354" endtime="20231207 17:55:42.362"/>
</kw>
<msg timestamp="20231207 17:55:42.362" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:55:42.353" endtime="20231207 17:55:42.362"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:55:42.363" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:55:42.362" endtime="20231207 17:55:42.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:42.365" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:42.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:42.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:42.364" endtime="20231207 17:55:42.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:42.446" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:42.445" endtime="20231207 17:55:42.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:42.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:42.446" endtime="20231207 17:55:42.446"/>
</kw>
<status status="PASS" starttime="20231207 17:55:42.364" endtime="20231207 17:55:42.447"/>
</kw>
<msg timestamp="20231207 17:55:42.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:42.364" endtime="20231207 17:55:42.447"/>
</kw>
<status status="PASS" starttime="20231207 17:55:42.363" endtime="20231207 17:55:42.447"/>
</kw>
<status status="PASS" starttime="20231207 17:55:42.363" endtime="20231207 17:55:42.447"/>
</kw>
<status status="PASS" starttime="20231207 17:55:42.353" endtime="20231207 17:55:42.447"/>
</kw>
<status status="PASS" starttime="20231207 17:55:42.353" endtime="20231207 17:55:42.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:42.450" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:42.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:42.452" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 17:55:42.449" endtime="20231207 17:55:42.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:42.453" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 17:55:42.452" endtime="20231207 17:55:42.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:42.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:42.453" endtime="20231207 17:55:42.453"/>
</kw>
<status status="PASS" starttime="20231207 17:55:42.448" endtime="20231207 17:55:42.454"/>
</kw>
<msg timestamp="20231207 17:55:42.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:42.448" endtime="20231207 17:55:42.454"/>
</kw>
<msg timestamp="20231207 17:55:42.454" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 17:55:42.448" endtime="20231207 17:55:42.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:42.455" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 17:55:42.454" endtime="20231207 17:55:42.455"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 17:55:42.455" endtime="20231207 17:55:42.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:42.457" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:44.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:44.746" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 17:55:42.456" endtime="20231207 17:55:44.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:44.747" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 17:55:44.747" endtime="20231207 17:55:44.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:44.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:44.748" endtime="20231207 17:55:44.748"/>
</kw>
<status status="PASS" starttime="20231207 17:55:42.456" endtime="20231207 17:55:44.748"/>
</kw>
<msg timestamp="20231207 17:55:44.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:42.456" endtime="20231207 17:55:44.749"/>
</kw>
<msg timestamp="20231207 17:55:44.749" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 17:55:42.455" endtime="20231207 17:55:44.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:44.749" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 17:55:44.749" endtime="20231207 17:55:44.749"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 17:55:44.750" endtime="20231207 17:55:44.750"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 17:55:42.352" endtime="20231207 17:55:44.750"/>
</test>
<test id="s1-s12-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:44.755" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:44.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:44.757" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:55:44.753" endtime="20231207 17:55:44.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:44.757" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:55:44.757" endtime="20231207 17:55:44.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:44.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:44.757" endtime="20231207 17:55:44.758"/>
</kw>
<status status="PASS" starttime="20231207 17:55:44.753" endtime="20231207 17:55:44.758"/>
</kw>
<msg timestamp="20231207 17:55:44.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:44.753" endtime="20231207 17:55:44.759"/>
</kw>
<msg timestamp="20231207 17:55:44.759" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:55:44.752" endtime="20231207 17:55:44.759"/>
</kw>
<msg timestamp="20231207 17:55:44.759" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:55:44.752" endtime="20231207 17:55:44.759"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:55:44.759" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:55:44.759" endtime="20231207 17:55:44.759"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:44.762" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:44.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:44.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:44.761" endtime="20231207 17:55:44.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:44.795" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:44.795" endtime="20231207 17:55:44.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:44.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:44.796" endtime="20231207 17:55:44.796"/>
</kw>
<status status="PASS" starttime="20231207 17:55:44.760" endtime="20231207 17:55:44.796"/>
</kw>
<msg timestamp="20231207 17:55:44.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:44.760" endtime="20231207 17:55:44.797"/>
</kw>
<status status="PASS" starttime="20231207 17:55:44.760" endtime="20231207 17:55:44.797"/>
</kw>
<status status="PASS" starttime="20231207 17:55:44.760" endtime="20231207 17:55:44.797"/>
</kw>
<status status="PASS" starttime="20231207 17:55:44.752" endtime="20231207 17:55:44.797"/>
</kw>
<status status="PASS" starttime="20231207 17:55:44.751" endtime="20231207 17:55:44.797"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 17:55:44.797" endtime="20231207 17:55:44.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:44.800" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:46.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:46.876" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 17:55:44.799" endtime="20231207 17:55:46.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:46.877" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 17:55:46.877" endtime="20231207 17:55:46.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:46.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:46.877" endtime="20231207 17:55:46.878"/>
</kw>
<status status="PASS" starttime="20231207 17:55:44.798" endtime="20231207 17:55:46.878"/>
</kw>
<msg timestamp="20231207 17:55:46.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:44.798" endtime="20231207 17:55:46.878"/>
</kw>
<msg timestamp="20231207 17:55:46.879" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 17:55:44.798" endtime="20231207 17:55:46.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:46.879" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 17:55:46.879" endtime="20231207 17:55:46.879"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 17:55:46.879" endtime="20231207 17:55:46.879"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 17:55:44.751" endtime="20231207 17:55:46.880"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 17:55:42.314" endtime="20231207 17:55:46.880"/>
</suite>
<suite id="s1-s13" name="1.3.0-1.4.0-3-downgraded-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:49.946" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:49.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:49.948" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:55:49.943" endtime="20231207 17:55:49.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:49.948" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:55:49.948" endtime="20231207 17:55:49.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:49.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:49.948" endtime="20231207 17:55:49.949"/>
</kw>
<status status="PASS" starttime="20231207 17:55:49.942" endtime="20231207 17:55:49.949"/>
</kw>
<msg timestamp="20231207 17:55:49.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:49.942" endtime="20231207 17:55:49.950"/>
</kw>
<msg timestamp="20231207 17:55:49.950" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:55:49.941" endtime="20231207 17:55:49.950"/>
</kw>
<msg timestamp="20231207 17:55:49.951" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:55:49.941" endtime="20231207 17:55:49.951"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:55:49.951" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:55:49.951" endtime="20231207 17:55:49.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:49.953" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:49.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:49.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:49.952" endtime="20231207 17:55:49.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:49.967" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:49.966" endtime="20231207 17:55:49.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:49.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:49.967" endtime="20231207 17:55:49.967"/>
</kw>
<status status="PASS" starttime="20231207 17:55:49.952" endtime="20231207 17:55:49.967"/>
</kw>
<msg timestamp="20231207 17:55:49.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:49.952" endtime="20231207 17:55:49.968"/>
</kw>
<status status="PASS" starttime="20231207 17:55:49.951" endtime="20231207 17:55:49.968"/>
</kw>
<status status="PASS" starttime="20231207 17:55:49.951" endtime="20231207 17:55:49.968"/>
</kw>
<status status="PASS" starttime="20231207 17:55:49.941" endtime="20231207 17:55:49.968"/>
</kw>
<status status="PASS" starttime="20231207 17:55:49.940" endtime="20231207 17:55:49.968"/>
</kw>
<test id="s1-s13-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:55:49.970" level="INFO">${random} = 68480</msg>
<status status="PASS" starttime="20231207 17:55:49.969" endtime="20231207 17:55:49.970"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:49.972" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-68480 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:53.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:53.860" level="INFO">${output} = 2023-12-07 17:55:52,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:55:52,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:55:49.971" endtime="20231207 17:55:53.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:53.861" level="INFO">2023-12-07 17:55:52,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:55:52,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:55:52,702 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 17:55:53.860" endtime="20231207 17:55:53.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:53.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:53.861" endtime="20231207 17:55:53.862"/>
</kw>
<status status="PASS" starttime="20231207 17:55:49.970" endtime="20231207 17:55:53.862"/>
</kw>
<msg timestamp="20231207 17:55:53.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:49.970" endtime="20231207 17:55:53.862"/>
</kw>
<msg timestamp="20231207 17:55:53.862" level="INFO">${output} = 2023-12-07 17:55:52,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:55:52,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:55:49.970" endtime="20231207 17:55:53.862"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:55:53.863" endtime="20231207 17:55:53.863"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:53.865" level="INFO">Running command 'cat /tmp/key-68480 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:53.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:53.866" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:55:53.863" endtime="20231207 17:55:53.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:53.867" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:55:53.867" endtime="20231207 17:55:53.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:53.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:53.867" endtime="20231207 17:55:53.868"/>
</kw>
<msg timestamp="20231207 17:55:53.868" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:55:53.863" endtime="20231207 17:55:53.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:55:53.868" endtime="20231207 17:55:53.868"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:53.870" level="INFO">Running command 'rm /tmp/key-68480 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:53.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:53.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:53.869" endtime="20231207 17:55:53.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:53.872" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:53.872" endtime="20231207 17:55:53.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:53.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:53.872" endtime="20231207 17:55:53.873"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.868" endtime="20231207 17:55:53.873"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:55:49.968" endtime="20231207 17:55:53.873"/>
</test>
<test id="s1-s13-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:53.878" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:53.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:53.879" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:55:53.877" endtime="20231207 17:55:53.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:53.880" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:55:53.880" endtime="20231207 17:55:53.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:53.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:53.880" endtime="20231207 17:55:53.881"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.876" endtime="20231207 17:55:53.881"/>
</kw>
<msg timestamp="20231207 17:55:53.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:53.876" endtime="20231207 17:55:53.881"/>
</kw>
<msg timestamp="20231207 17:55:53.881" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:55:53.876" endtime="20231207 17:55:53.881"/>
</kw>
<msg timestamp="20231207 17:55:53.882" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:55:53.875" endtime="20231207 17:55:53.882"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:55:53.882" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:55:53.882" endtime="20231207 17:55:53.882"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:53.885" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:53.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:53.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:53.884" endtime="20231207 17:55:53.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:53.907" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:53.907" endtime="20231207 17:55:53.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:53.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:53.907" endtime="20231207 17:55:53.908"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.883" endtime="20231207 17:55:53.908"/>
</kw>
<msg timestamp="20231207 17:55:53.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:53.883" endtime="20231207 17:55:53.908"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.883" endtime="20231207 17:55:53.908"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.882" endtime="20231207 17:55:53.909"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.875" endtime="20231207 17:55:53.909"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.874" endtime="20231207 17:55:53.909"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:53.911" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:55.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:55.960" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:55:53.910" endtime="20231207 17:55:55.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:55.963" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:55:55.962" endtime="20231207 17:55:55.963"/>
</kw>
<msg timestamp="20231207 17:55:55.964" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:55:53.909" endtime="20231207 17:55:55.964"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:55:55.966" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:55:55.964" endtime="20231207 17:55:55.966"/>
</kw>
<msg timestamp="20231207 17:55:55.966" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:55:55.964" endtime="20231207 17:55:55.966"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:55:55.967" endtime="20231207 17:55:55.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:55:55.967" endtime="20231207 17:55:55.967"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:55:55.966" endtime="20231207 17:55:55.967"/>
</branch>
<status status="PASS" starttime="20231207 17:55:55.966" endtime="20231207 17:55:55.967"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:55:55.968" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:55:55.967" endtime="20231207 17:55:55.968"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:55:55.969" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:55:55.968" endtime="20231207 17:55:55.969"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:55:55.970" level="INFO">${secret} = ['c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405']</msg>
<status status="PASS" starttime="20231207 17:55:55.969" endtime="20231207 17:55:55.970"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:55:55.971" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:55:55.970" endtime="20231207 17:55:55.971"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:55:55.973" level="INFO">${secret} = c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:55:55.972" endtime="20231207 17:55:55.973"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:55.978" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:56.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:56.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:55.975" endtime="20231207 17:55:56.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:56.368" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:56.367" endtime="20231207 17:55:56.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:56.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:56.368" endtime="20231207 17:55:56.368"/>
</kw>
<status status="PASS" starttime="20231207 17:55:55.974" endtime="20231207 17:55:56.368"/>
</kw>
<msg timestamp="20231207 17:55:56.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:55.974" endtime="20231207 17:55:56.369"/>
</kw>
<status status="PASS" starttime="20231207 17:55:55.973" endtime="20231207 17:55:56.369"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:56.372" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:56.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:56.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:56.370" endtime="20231207 17:55:56.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:56.732" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:56.731" endtime="20231207 17:55:56.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:56.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:56.732" endtime="20231207 17:55:56.732"/>
</kw>
<status status="PASS" starttime="20231207 17:55:56.370" endtime="20231207 17:55:56.733"/>
</kw>
<msg timestamp="20231207 17:55:56.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:56.370" endtime="20231207 17:55:56.733"/>
</kw>
<status status="PASS" starttime="20231207 17:55:56.369" endtime="20231207 17:55:56.733"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:56.736" level="INFO">Running command 'aws configure set aws_secret_access_key c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:57.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:57.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:56.735" endtime="20231207 17:55:57.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:57.103" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:57.102" endtime="20231207 17:55:57.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:57.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:57.103" endtime="20231207 17:55:57.103"/>
</kw>
<status status="PASS" starttime="20231207 17:55:56.734" endtime="20231207 17:55:57.104"/>
</kw>
<msg timestamp="20231207 17:55:57.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:56.734" endtime="20231207 17:55:57.104"/>
</kw>
<status status="PASS" starttime="20231207 17:55:56.734" endtime="20231207 17:55:57.104"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:57.107" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:57.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:57.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:57.105" endtime="20231207 17:55:57.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:57.475" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:57.474" endtime="20231207 17:55:57.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:57.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:57.475" endtime="20231207 17:55:57.475"/>
</kw>
<status status="PASS" starttime="20231207 17:55:57.105" endtime="20231207 17:55:57.476"/>
</kw>
<msg timestamp="20231207 17:55:57.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:57.105" endtime="20231207 17:55:57.476"/>
</kw>
<status status="PASS" starttime="20231207 17:55:57.104" endtime="20231207 17:55:57.476"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:57.479" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:55:57.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:55:57.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:55:57.477" endtime="20231207 17:55:57.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:55:57.843" level="INFO"/>
<status status="PASS" starttime="20231207 17:55:57.843" endtime="20231207 17:55:57.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:55:57.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:55:57.843" endtime="20231207 17:55:57.844"/>
</kw>
<status status="PASS" starttime="20231207 17:55:57.477" endtime="20231207 17:55:57.844"/>
</kw>
<msg timestamp="20231207 17:55:57.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:55:57.477" endtime="20231207 17:55:57.845"/>
</kw>
<status status="PASS" starttime="20231207 17:55:57.476" endtime="20231207 17:55:57.845"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.909" endtime="20231207 17:55:57.845"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.909" endtime="20231207 17:55:57.845"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:55:57.845" endtime="20231207 17:55:57.845"/>
</kw>
<status status="PASS" starttime="20231207 17:55:53.874" endtime="20231207 17:55:57.845"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:55:57.848" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:00.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:00.062" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:55:57.847" endtime="20231207 17:56:00.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:00.063" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:55:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:56:00.062" endtime="20231207 17:56:00.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:00.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:00.063" endtime="20231207 17:56:00.064"/>
</kw>
<msg timestamp="20231207 17:56:00.064" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:55:57.846" endtime="20231207 17:56:00.064"/>
</kw>
<msg timestamp="20231207 17:56:00.064" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:55:57.846" endtime="20231207 17:56:00.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:00.064" endtime="20231207 17:56:00.064"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:00.066" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:00.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:00.068" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:00.065" endtime="20231207 17:56:00.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:00.069" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:00.068" endtime="20231207 17:56:00.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:00.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:00.069" endtime="20231207 17:56:00.069"/>
</kw>
<msg timestamp="20231207 17:56:00.069" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:00.065" endtime="20231207 17:56:00.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:00.070" endtime="20231207 17:56:00.070"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:00.071" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:00.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:00.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:00.070" endtime="20231207 17:56:00.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:00.074" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:00.073" endtime="20231207 17:56:00.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:00.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:00.074" endtime="20231207 17:56:00.074"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.070" endtime="20231207 17:56:00.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:55:53.874" endtime="20231207 17:56:00.074"/>
</test>
<test id="s1-s13-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:00.079" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:00.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:00.081" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:56:00.078" endtime="20231207 17:56:00.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:00.082" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:56:00.081" endtime="20231207 17:56:00.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:00.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:00.082" endtime="20231207 17:56:00.082"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.077" endtime="20231207 17:56:00.082"/>
</kw>
<msg timestamp="20231207 17:56:00.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:00.077" endtime="20231207 17:56:00.083"/>
</kw>
<msg timestamp="20231207 17:56:00.083" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:56:00.077" endtime="20231207 17:56:00.083"/>
</kw>
<msg timestamp="20231207 17:56:00.083" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:00.077" endtime="20231207 17:56:00.083"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:56:00.084" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:00.083" endtime="20231207 17:56:00.084"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:00.086" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:00.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:00.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:00.085" endtime="20231207 17:56:00.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:00.100" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:00.099" endtime="20231207 17:56:00.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:00.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:00.100" endtime="20231207 17:56:00.100"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.085" endtime="20231207 17:56:00.101"/>
</kw>
<msg timestamp="20231207 17:56:00.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:00.084" endtime="20231207 17:56:00.101"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.084" endtime="20231207 17:56:00.101"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.084" endtime="20231207 17:56:00.101"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.076" endtime="20231207 17:56:00.102"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.076" endtime="20231207 17:56:00.102"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:00.104" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:01.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:01.914" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:00.103" endtime="20231207 17:56:01.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:01.915" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:01.914" endtime="20231207 17:56:01.915"/>
</kw>
<msg timestamp="20231207 17:56:01.915" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:00.102" endtime="20231207 17:56:01.915"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:56:01.916" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:56:01.915" endtime="20231207 17:56:01.916"/>
</kw>
<msg timestamp="20231207 17:56:01.916" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:56:01.915" endtime="20231207 17:56:01.916"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:01.917" endtime="20231207 17:56:01.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:01.917" endtime="20231207 17:56:01.917"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:56:01.916" endtime="20231207 17:56:01.917"/>
</branch>
<status status="PASS" starttime="20231207 17:56:01.916" endtime="20231207 17:56:01.917"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:01.917" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:01.917" endtime="20231207 17:56:01.917"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:56:01.918" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:01.917" endtime="20231207 17:56:01.918"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:01.918" level="INFO">${secret} = ['c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405']</msg>
<status status="PASS" starttime="20231207 17:56:01.918" endtime="20231207 17:56:01.918"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:01.919" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:01.918" endtime="20231207 17:56:01.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:01.920" level="INFO">${secret} = c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:01.919" endtime="20231207 17:56:01.920"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:01.923" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:02.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:02.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:01.921" endtime="20231207 17:56:02.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:02.287" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:02.286" endtime="20231207 17:56:02.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:02.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:02.287" endtime="20231207 17:56:02.287"/>
</kw>
<status status="PASS" starttime="20231207 17:56:01.921" endtime="20231207 17:56:02.288"/>
</kw>
<msg timestamp="20231207 17:56:02.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:01.920" endtime="20231207 17:56:02.288"/>
</kw>
<status status="PASS" starttime="20231207 17:56:01.920" endtime="20231207 17:56:02.288"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:02.291" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:02.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:02.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:02.289" endtime="20231207 17:56:02.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:02.674" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:02.673" endtime="20231207 17:56:02.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:02.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:02.674" endtime="20231207 17:56:02.674"/>
</kw>
<status status="PASS" starttime="20231207 17:56:02.289" endtime="20231207 17:56:02.675"/>
</kw>
<msg timestamp="20231207 17:56:02.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:02.289" endtime="20231207 17:56:02.675"/>
</kw>
<status status="PASS" starttime="20231207 17:56:02.288" endtime="20231207 17:56:02.675"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:02.678" level="INFO">Running command 'aws configure set aws_secret_access_key c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:03.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:03.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:02.676" endtime="20231207 17:56:03.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:03.093" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:03.093" endtime="20231207 17:56:03.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:03.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:03.093" endtime="20231207 17:56:03.094"/>
</kw>
<status status="PASS" starttime="20231207 17:56:02.676" endtime="20231207 17:56:03.094"/>
</kw>
<msg timestamp="20231207 17:56:03.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:02.676" endtime="20231207 17:56:03.095"/>
</kw>
<status status="PASS" starttime="20231207 17:56:02.675" endtime="20231207 17:56:03.095"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:03.097" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:03.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:03.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:03.096" endtime="20231207 17:56:03.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:03.464" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:03.463" endtime="20231207 17:56:03.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:03.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:03.464" endtime="20231207 17:56:03.464"/>
</kw>
<status status="PASS" starttime="20231207 17:56:03.095" endtime="20231207 17:56:03.464"/>
</kw>
<msg timestamp="20231207 17:56:03.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:03.095" endtime="20231207 17:56:03.465"/>
</kw>
<status status="PASS" starttime="20231207 17:56:03.095" endtime="20231207 17:56:03.465"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:03.468" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:03.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:03.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:03.466" endtime="20231207 17:56:03.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:03.829" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:03.828" endtime="20231207 17:56:03.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:03.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:03.829" endtime="20231207 17:56:03.829"/>
</kw>
<status status="PASS" starttime="20231207 17:56:03.466" endtime="20231207 17:56:03.830"/>
</kw>
<msg timestamp="20231207 17:56:03.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:03.466" endtime="20231207 17:56:03.830"/>
</kw>
<status status="PASS" starttime="20231207 17:56:03.465" endtime="20231207 17:56:03.830"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.102" endtime="20231207 17:56:03.831"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.102" endtime="20231207 17:56:03.831"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:56:03.831" endtime="20231207 17:56:03.831"/>
</kw>
<status status="PASS" starttime="20231207 17:56:00.076" endtime="20231207 17:56:03.831"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:03.834" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:04.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:04.414" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:19 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:03.833" endtime="20231207 17:56:04.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:04.414" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:19 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:56:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:56:04.414" endtime="20231207 17:56:04.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:04.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:04.415" endtime="20231207 17:56:04.415"/>
</kw>
<msg timestamp="20231207 17:56:04.415" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:19 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:03.832" endtime="20231207 17:56:04.415"/>
</kw>
<msg timestamp="20231207 17:56:04.415" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:19 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:03.831" endtime="20231207 17:56:04.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:04.416" endtime="20231207 17:56:04.416"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:04.418" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:04.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:04.420" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:56:04.417" endtime="20231207 17:56:04.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:04.420" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:56:04.420" endtime="20231207 17:56:04.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:04.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:04.420" endtime="20231207 17:56:04.421"/>
</kw>
<msg timestamp="20231207 17:56:04.421" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:56:04.416" endtime="20231207 17:56:04.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:04.421" endtime="20231207 17:56:04.422"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:04.423" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:04.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:04.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:04.422" endtime="20231207 17:56:04.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:04.426" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:04.425" endtime="20231207 17:56:04.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:04.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:04.427" endtime="20231207 17:56:04.427"/>
</kw>
<status status="PASS" starttime="20231207 17:56:04.422" endtime="20231207 17:56:04.428"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:00.075" endtime="20231207 17:56:04.428"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 17:55:49.880" endtime="20231207 17:56:04.429"/>
</suite>
<suite id="s1-s14" name="1.3.0-1.4.0-3-downgraded-validate-new1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:07.493" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:07.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:07.495" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:56:07.490" endtime="20231207 17:56:07.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:07.495" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:56:07.495" endtime="20231207 17:56:07.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:07.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:07.496" endtime="20231207 17:56:07.496"/>
</kw>
<status status="PASS" starttime="20231207 17:56:07.490" endtime="20231207 17:56:07.496"/>
</kw>
<msg timestamp="20231207 17:56:07.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:07.489" endtime="20231207 17:56:07.497"/>
</kw>
<msg timestamp="20231207 17:56:07.497" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:56:07.489" endtime="20231207 17:56:07.497"/>
</kw>
<msg timestamp="20231207 17:56:07.498" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:07.489" endtime="20231207 17:56:07.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:56:07.498" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:07.498" endtime="20231207 17:56:07.498"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:07.500" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:07.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:07.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:07.499" endtime="20231207 17:56:07.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:07.550" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:07.550" endtime="20231207 17:56:07.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:07.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:07.550" endtime="20231207 17:56:07.551"/>
</kw>
<status status="PASS" starttime="20231207 17:56:07.499" endtime="20231207 17:56:07.551"/>
</kw>
<msg timestamp="20231207 17:56:07.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:07.499" endtime="20231207 17:56:07.551"/>
</kw>
<status status="PASS" starttime="20231207 17:56:07.498" endtime="20231207 17:56:07.551"/>
</kw>
<status status="PASS" starttime="20231207 17:56:07.498" endtime="20231207 17:56:07.551"/>
</kw>
<status status="PASS" starttime="20231207 17:56:07.489" endtime="20231207 17:56:07.551"/>
</kw>
<status status="PASS" starttime="20231207 17:56:07.488" endtime="20231207 17:56:07.551"/>
</kw>
<test id="s1-s14-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:56:07.553" level="INFO">${random} = 15834</msg>
<status status="PASS" starttime="20231207 17:56:07.553" endtime="20231207 17:56:07.553"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:07.556" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-15834 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:11.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:11.215" level="INFO">${output} = 2023-12-07 17:56:10,092 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:10,180 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:56:07.554" endtime="20231207 17:56:11.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:11.216" level="INFO">2023-12-07 17:56:10,092 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:10,180 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:56:10,180 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 17:56:11.215" endtime="20231207 17:56:11.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:11.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:11.216" endtime="20231207 17:56:11.216"/>
</kw>
<status status="PASS" starttime="20231207 17:56:07.554" endtime="20231207 17:56:11.216"/>
</kw>
<msg timestamp="20231207 17:56:11.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:07.554" endtime="20231207 17:56:11.217"/>
</kw>
<msg timestamp="20231207 17:56:11.217" level="INFO">${output} = 2023-12-07 17:56:10,092 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:10,180 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:56:07.553" endtime="20231207 17:56:11.217"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:11.217" endtime="20231207 17:56:11.217"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:11.219" level="INFO">Running command 'cat /tmp/key-15834 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:11.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:11.221" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:11.218" endtime="20231207 17:56:11.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:11.222" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:11.221" endtime="20231207 17:56:11.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:11.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:11.222" endtime="20231207 17:56:11.222"/>
</kw>
<msg timestamp="20231207 17:56:11.223" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:11.218" endtime="20231207 17:56:11.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:11.223" endtime="20231207 17:56:11.223"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:11.225" level="INFO">Running command 'rm /tmp/key-15834 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:11.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:11.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:11.224" endtime="20231207 17:56:11.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:11.227" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:11.226" endtime="20231207 17:56:11.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:11.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:11.227" endtime="20231207 17:56:11.227"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.223" endtime="20231207 17:56:11.227"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:07.552" endtime="20231207 17:56:11.228"/>
</test>
<test id="s1-s14-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:11.232" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:11.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:11.234" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:56:11.231" endtime="20231207 17:56:11.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:11.235" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:56:11.234" endtime="20231207 17:56:11.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:11.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:11.235" endtime="20231207 17:56:11.235"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.231" endtime="20231207 17:56:11.235"/>
</kw>
<msg timestamp="20231207 17:56:11.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:11.231" endtime="20231207 17:56:11.236"/>
</kw>
<msg timestamp="20231207 17:56:11.236" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:56:11.230" endtime="20231207 17:56:11.236"/>
</kw>
<msg timestamp="20231207 17:56:11.236" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:11.230" endtime="20231207 17:56:11.236"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:56:11.237" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:11.236" endtime="20231207 17:56:11.237"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:11.239" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:11.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:11.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:11.238" endtime="20231207 17:56:11.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:11.254" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:11.254" endtime="20231207 17:56:11.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:11.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:11.254" endtime="20231207 17:56:11.255"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.238" endtime="20231207 17:56:11.255"/>
</kw>
<msg timestamp="20231207 17:56:11.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:11.238" endtime="20231207 17:56:11.255"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.237" endtime="20231207 17:56:11.256"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.237" endtime="20231207 17:56:11.256"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.229" endtime="20231207 17:56:11.256"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.229" endtime="20231207 17:56:11.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:11.258" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:13.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:13.106" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:11.257" endtime="20231207 17:56:13.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:13.107" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:13.106" endtime="20231207 17:56:13.107"/>
</kw>
<msg timestamp="20231207 17:56:13.107" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:11.256" endtime="20231207 17:56:13.107"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:56:13.108" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:56:13.107" endtime="20231207 17:56:13.108"/>
</kw>
<msg timestamp="20231207 17:56:13.108" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:56:13.107" endtime="20231207 17:56:13.108"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:13.109" endtime="20231207 17:56:13.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:13.109" endtime="20231207 17:56:13.109"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:56:13.108" endtime="20231207 17:56:13.109"/>
</branch>
<status status="PASS" starttime="20231207 17:56:13.108" endtime="20231207 17:56:13.109"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:13.110" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:13.109" endtime="20231207 17:56:13.110"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:56:13.110" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:13.110" endtime="20231207 17:56:13.110"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:13.111" level="INFO">${secret} = ['c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405']</msg>
<status status="PASS" starttime="20231207 17:56:13.110" endtime="20231207 17:56:13.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:13.112" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:13.111" endtime="20231207 17:56:13.112"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:13.113" level="INFO">${secret} = c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:13.112" endtime="20231207 17:56:13.113"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:13.115" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:13.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:13.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:13.114" endtime="20231207 17:56:13.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:13.514" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:13.514" endtime="20231207 17:56:13.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:13.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:13.514" endtime="20231207 17:56:13.515"/>
</kw>
<status status="PASS" starttime="20231207 17:56:13.113" endtime="20231207 17:56:13.515"/>
</kw>
<msg timestamp="20231207 17:56:13.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:13.113" endtime="20231207 17:56:13.515"/>
</kw>
<status status="PASS" starttime="20231207 17:56:13.113" endtime="20231207 17:56:13.516"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:13.518" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:13.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:13.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:13.517" endtime="20231207 17:56:13.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:13.867" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:13.866" endtime="20231207 17:56:13.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:13.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:13.867" endtime="20231207 17:56:13.867"/>
</kw>
<status status="PASS" starttime="20231207 17:56:13.516" endtime="20231207 17:56:13.868"/>
</kw>
<msg timestamp="20231207 17:56:13.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:13.516" endtime="20231207 17:56:13.868"/>
</kw>
<status status="PASS" starttime="20231207 17:56:13.516" endtime="20231207 17:56:13.868"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:13.871" level="INFO">Running command 'aws configure set aws_secret_access_key c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:14.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:14.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:13.869" endtime="20231207 17:56:14.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:14.238" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:14.237" endtime="20231207 17:56:14.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:14.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:14.238" endtime="20231207 17:56:14.239"/>
</kw>
<status status="PASS" starttime="20231207 17:56:13.869" endtime="20231207 17:56:14.239"/>
</kw>
<msg timestamp="20231207 17:56:14.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:13.869" endtime="20231207 17:56:14.239"/>
</kw>
<status status="PASS" starttime="20231207 17:56:13.868" endtime="20231207 17:56:14.239"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:14.242" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:14.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:14.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:14.241" endtime="20231207 17:56:14.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:14.604" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:14.603" endtime="20231207 17:56:14.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:14.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:14.604" endtime="20231207 17:56:14.605"/>
</kw>
<status status="PASS" starttime="20231207 17:56:14.240" endtime="20231207 17:56:14.605"/>
</kw>
<msg timestamp="20231207 17:56:14.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:14.240" endtime="20231207 17:56:14.606"/>
</kw>
<status status="PASS" starttime="20231207 17:56:14.240" endtime="20231207 17:56:14.606"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:14.608" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:14.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:14.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:14.607" endtime="20231207 17:56:14.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:14.969" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:14.969" endtime="20231207 17:56:14.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:14.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:14.969" endtime="20231207 17:56:14.970"/>
</kw>
<status status="PASS" starttime="20231207 17:56:14.606" endtime="20231207 17:56:14.970"/>
</kw>
<msg timestamp="20231207 17:56:14.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:14.606" endtime="20231207 17:56:14.970"/>
</kw>
<status status="PASS" starttime="20231207 17:56:14.606" endtime="20231207 17:56:14.971"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.256" endtime="20231207 17:56:14.971"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.256" endtime="20231207 17:56:14.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:56:14.971" endtime="20231207 17:56:14.971"/>
</kw>
<status status="PASS" starttime="20231207 17:56:11.229" endtime="20231207 17:56:14.971"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:14.974" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:15.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:15.496" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:14.972" endtime="20231207 17:56:15.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:15.497" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:56:15 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:56:15.497" endtime="20231207 17:56:15.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:15.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:15.497" endtime="20231207 17:56:15.498"/>
</kw>
<msg timestamp="20231207 17:56:15.498" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:14.972" endtime="20231207 17:56:15.498"/>
</kw>
<msg timestamp="20231207 17:56:15.498" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:14.971" endtime="20231207 17:56:15.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:15.498" endtime="20231207 17:56:15.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:15.501" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:15.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:15.502" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:15.499" endtime="20231207 17:56:15.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:15.503" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:15.502" endtime="20231207 17:56:15.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:15.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:15.503" endtime="20231207 17:56:15.503"/>
</kw>
<msg timestamp="20231207 17:56:15.504" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:15.499" endtime="20231207 17:56:15.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:15.504" endtime="20231207 17:56:15.504"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:15.506" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:15.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:15.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:15.505" endtime="20231207 17:56:15.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:15.508" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:15.508" endtime="20231207 17:56:15.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:15.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:15.508" endtime="20231207 17:56:15.509"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.504" endtime="20231207 17:56:15.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:11.228" endtime="20231207 17:56:15.509"/>
</test>
<test id="s1-s14-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:15.514" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:15.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:15.516" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:56:15.512" endtime="20231207 17:56:15.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:15.516" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:56:15.516" endtime="20231207 17:56:15.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:15.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:15.516" endtime="20231207 17:56:15.517"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.512" endtime="20231207 17:56:15.517"/>
</kw>
<msg timestamp="20231207 17:56:15.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:15.512" endtime="20231207 17:56:15.517"/>
</kw>
<msg timestamp="20231207 17:56:15.518" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:56:15.511" endtime="20231207 17:56:15.518"/>
</kw>
<msg timestamp="20231207 17:56:15.518" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:15.511" endtime="20231207 17:56:15.518"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:56:15.518" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:15.518" endtime="20231207 17:56:15.518"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:15.521" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:15.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:15.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:15.520" endtime="20231207 17:56:15.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:15.536" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:15.536" endtime="20231207 17:56:15.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:15.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:15.536" endtime="20231207 17:56:15.537"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.519" endtime="20231207 17:56:15.537"/>
</kw>
<msg timestamp="20231207 17:56:15.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:15.519" endtime="20231207 17:56:15.538"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.519" endtime="20231207 17:56:15.538"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.518" endtime="20231207 17:56:15.538"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.511" endtime="20231207 17:56:15.538"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.510" endtime="20231207 17:56:15.538"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:15.541" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:17.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:17.322" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:15.539" endtime="20231207 17:56:17.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:17.322" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:17.322" endtime="20231207 17:56:17.322"/>
</kw>
<msg timestamp="20231207 17:56:17.323" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:15.539" endtime="20231207 17:56:17.323"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:56:17.324" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:56:17.323" endtime="20231207 17:56:17.324"/>
</kw>
<msg timestamp="20231207 17:56:17.324" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:56:17.323" endtime="20231207 17:56:17.324"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:17.324" endtime="20231207 17:56:17.325"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:17.325" endtime="20231207 17:56:17.325"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:56:17.324" endtime="20231207 17:56:17.325"/>
</branch>
<status status="PASS" starttime="20231207 17:56:17.324" endtime="20231207 17:56:17.325"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:17.325" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:17.325" endtime="20231207 17:56:17.325"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:56:17.326" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:17.325" endtime="20231207 17:56:17.326"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:17.326" level="INFO">${secret} = ['c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405']</msg>
<status status="PASS" starttime="20231207 17:56:17.326" endtime="20231207 17:56:17.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:17.327" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:17.326" endtime="20231207 17:56:17.327"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:17.328" level="INFO">${secret} = c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:17.327" endtime="20231207 17:56:17.328"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:17.330" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:17.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:17.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:17.329" endtime="20231207 17:56:17.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:17.689" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:17.689" endtime="20231207 17:56:17.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:17.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:17.690" endtime="20231207 17:56:17.690"/>
</kw>
<status status="PASS" starttime="20231207 17:56:17.329" endtime="20231207 17:56:17.690"/>
</kw>
<msg timestamp="20231207 17:56:17.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:17.328" endtime="20231207 17:56:17.691"/>
</kw>
<status status="PASS" starttime="20231207 17:56:17.328" endtime="20231207 17:56:17.691"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:17.693" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:18.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:18.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:17.692" endtime="20231207 17:56:18.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:18.055" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:18.055" endtime="20231207 17:56:18.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:18.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:18.055" endtime="20231207 17:56:18.056"/>
</kw>
<status status="PASS" starttime="20231207 17:56:17.692" endtime="20231207 17:56:18.056"/>
</kw>
<msg timestamp="20231207 17:56:18.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:17.691" endtime="20231207 17:56:18.056"/>
</kw>
<status status="PASS" starttime="20231207 17:56:17.691" endtime="20231207 17:56:18.057"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:18.059" level="INFO">Running command 'aws configure set aws_secret_access_key c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:18.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:18.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:18.058" endtime="20231207 17:56:18.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:18.433" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:18.432" endtime="20231207 17:56:18.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:18.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:18.433" endtime="20231207 17:56:18.434"/>
</kw>
<status status="PASS" starttime="20231207 17:56:18.057" endtime="20231207 17:56:18.434"/>
</kw>
<msg timestamp="20231207 17:56:18.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:18.057" endtime="20231207 17:56:18.434"/>
</kw>
<status status="PASS" starttime="20231207 17:56:18.057" endtime="20231207 17:56:18.434"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:18.437" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:18.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:18.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:18.435" endtime="20231207 17:56:18.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:18.804" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:18.803" endtime="20231207 17:56:18.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:18.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:18.804" endtime="20231207 17:56:18.804"/>
</kw>
<status status="PASS" starttime="20231207 17:56:18.435" endtime="20231207 17:56:18.805"/>
</kw>
<msg timestamp="20231207 17:56:18.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:18.435" endtime="20231207 17:56:18.805"/>
</kw>
<status status="PASS" starttime="20231207 17:56:18.435" endtime="20231207 17:56:18.805"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:18.808" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:19.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:19.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:18.806" endtime="20231207 17:56:19.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:19.190" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:19.189" endtime="20231207 17:56:19.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:19.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:19.190" endtime="20231207 17:56:19.190"/>
</kw>
<status status="PASS" starttime="20231207 17:56:18.806" endtime="20231207 17:56:19.191"/>
</kw>
<msg timestamp="20231207 17:56:19.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:18.806" endtime="20231207 17:56:19.191"/>
</kw>
<status status="PASS" starttime="20231207 17:56:18.805" endtime="20231207 17:56:19.191"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.538" endtime="20231207 17:56:19.191"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.538" endtime="20231207 17:56:19.191"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:56:19.191" endtime="20231207 17:56:19.192"/>
</kw>
<status status="PASS" starttime="20231207 17:56:15.510" endtime="20231207 17:56:19.192"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:19.195" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:19.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:19.762" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:55 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:19.193" endtime="20231207 17:56:19.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:19.763" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:55 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:56:19 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:56:19.762" endtime="20231207 17:56:19.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:19.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:19.763" endtime="20231207 17:56:19.763"/>
</kw>
<msg timestamp="20231207 17:56:19.764" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:55 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:19.192" endtime="20231207 17:56:19.764"/>
</kw>
<msg timestamp="20231207 17:56:19.764" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:52:55 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:19.192" endtime="20231207 17:56:19.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:19.764" endtime="20231207 17:56:19.764"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:19.766" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:19.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:19.768" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:56:19.765" endtime="20231207 17:56:19.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:19.768" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:56:19.768" endtime="20231207 17:56:19.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:19.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:19.769" endtime="20231207 17:56:19.769"/>
</kw>
<msg timestamp="20231207 17:56:19.769" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:56:19.764" endtime="20231207 17:56:19.769"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:19.769" endtime="20231207 17:56:19.770"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:19.771" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:19.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:19.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:19.770" endtime="20231207 17:56:19.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:19.773" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:19.773" endtime="20231207 17:56:19.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:19.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:19.773" endtime="20231207 17:56:19.774"/>
</kw>
<status status="PASS" starttime="20231207 17:56:19.770" endtime="20231207 17:56:19.774"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:15.510" endtime="20231207 17:56:19.774"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 17:56:07.422" endtime="20231207 17:56:19.775"/>
</suite>
<suite id="s1-s15" name="1.3.0-1.4.0-3-downgraded-generate-old2" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:22.849" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:22.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:22.851" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:56:22.846" endtime="20231207 17:56:22.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:22.851" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:56:22.851" endtime="20231207 17:56:22.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:22.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:22.851" endtime="20231207 17:56:22.852"/>
</kw>
<status status="PASS" starttime="20231207 17:56:22.845" endtime="20231207 17:56:22.852"/>
</kw>
<msg timestamp="20231207 17:56:22.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:22.845" endtime="20231207 17:56:22.853"/>
</kw>
<msg timestamp="20231207 17:56:22.853" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:56:22.845" endtime="20231207 17:56:22.853"/>
</kw>
<msg timestamp="20231207 17:56:22.853" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:22.845" endtime="20231207 17:56:22.853"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:56:22.854" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:22.853" endtime="20231207 17:56:22.854"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:22.857" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:22.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:22.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:22.855" endtime="20231207 17:56:22.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:22.916" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:22.915" endtime="20231207 17:56:22.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:22.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:22.916" endtime="20231207 17:56:22.916"/>
</kw>
<status status="PASS" starttime="20231207 17:56:22.855" endtime="20231207 17:56:22.917"/>
</kw>
<msg timestamp="20231207 17:56:22.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:22.855" endtime="20231207 17:56:22.917"/>
</kw>
<status status="PASS" starttime="20231207 17:56:22.854" endtime="20231207 17:56:22.917"/>
</kw>
<status status="PASS" starttime="20231207 17:56:22.854" endtime="20231207 17:56:22.917"/>
</kw>
<status status="PASS" starttime="20231207 17:56:22.844" endtime="20231207 17:56:22.917"/>
</kw>
<status status="PASS" starttime="20231207 17:56:22.844" endtime="20231207 17:56:22.917"/>
</kw>
<test id="s1-s15-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:22.921" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:25.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:25.266" level="INFO">${output} = 2023-12-07 17:56:25,224 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 17:56:22.920" endtime="20231207 17:56:25.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:25.267" level="INFO">2023-12-07 17:56:25,224 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 17:56:25.266" endtime="20231207 17:56:25.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:25.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:25.267" endtime="20231207 17:56:25.268"/>
</kw>
<status status="PASS" starttime="20231207 17:56:22.919" endtime="20231207 17:56:25.268"/>
</kw>
<msg timestamp="20231207 17:56:25.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:22.919" endtime="20231207 17:56:25.269"/>
</kw>
<msg timestamp="20231207 17:56:25.269" level="INFO">${output} = 2023-12-07 17:56:25,224 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 17:56:22.919" endtime="20231207 17:56:25.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:25.270" endtime="20231207 17:56:25.270"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:25.273" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:27.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:27.494" level="INFO">${output} = 2023-12-07 17:56:27,449 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 17:56:25.272" endtime="20231207 17:56:27.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:27.495" level="INFO">2023-12-07 17:56:27,449 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 17:56:27.495" endtime="20231207 17:56:27.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:27.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:27.495" endtime="20231207 17:56:27.496"/>
</kw>
<status status="PASS" starttime="20231207 17:56:25.271" endtime="20231207 17:56:27.496"/>
</kw>
<msg timestamp="20231207 17:56:27.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:25.271" endtime="20231207 17:56:27.496"/>
</kw>
<msg timestamp="20231207 17:56:27.497" level="INFO">${output} = 2023-12-07 17:56:27,449 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 17:56:25.270" endtime="20231207 17:56:27.497"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:27.497" endtime="20231207 17:56:27.497"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:22.918" endtime="20231207 17:56:27.497"/>
</test>
<test id="s1-s15-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:27.500" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:56:27.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:27.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:27.499" endtime="20231207 17:56:27.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:27.502" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:27.501" endtime="20231207 17:56:27.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:27.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:27.502" endtime="20231207 17:56:27.502"/>
</kw>
<status status="PASS" starttime="20231207 17:56:27.498" endtime="20231207 17:56:27.502"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:27.505" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:31.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:31.735" level="INFO">${output} = 2023-12-07 17:56:30,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:30,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:56:27.504" endtime="20231207 17:56:31.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:31.736" level="INFO">2023-12-07 17:56:30,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:30,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:56:30,256 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 17:56:30,454 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 17:56:31.736" endtime="20231207 17:56:31.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:31.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:31.736" endtime="20231207 17:56:31.737"/>
</kw>
<status status="PASS" starttime="20231207 17:56:27.503" endtime="20231207 17:56:31.737"/>
</kw>
<msg timestamp="20231207 17:56:31.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:27.503" endtime="20231207 17:56:31.737"/>
</kw>
<msg timestamp="20231207 17:56:31.738" level="INFO">${output} = 2023-12-07 17:56:30,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:30,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:56:27.502" endtime="20231207 17:56:31.738"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:31.738" endtime="20231207 17:56:31.738"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:31.740" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:31.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:31.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:31.739" endtime="20231207 17:56:31.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:31.742" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:31.742" endtime="20231207 17:56:31.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:31.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:31.742" endtime="20231207 17:56:31.743"/>
</kw>
<status status="PASS" starttime="20231207 17:56:31.738" endtime="20231207 17:56:31.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:27.498" endtime="20231207 17:56:31.743"/>
</test>
<test id="s1-s15-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:31.746" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:34.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:34.214" level="INFO">${output} = 2023-12-07 17:56:34,151 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 17:56:31.745" endtime="20231207 17:56:34.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:34.215" level="INFO">2023-12-07 17:56:34,151 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 17:56:34.214" endtime="20231207 17:56:34.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:34.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:34.215" endtime="20231207 17:56:34.216"/>
</kw>
<status status="PASS" starttime="20231207 17:56:31.745" endtime="20231207 17:56:34.216"/>
</kw>
<msg timestamp="20231207 17:56:34.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:31.745" endtime="20231207 17:56:34.216"/>
</kw>
<msg timestamp="20231207 17:56:34.217" level="INFO">${output} = 2023-12-07 17:56:34,151 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 17:56:31.744" endtime="20231207 17:56:34.217"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:34.217" endtime="20231207 17:56:34.218"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:31.744" endtime="20231207 17:56:34.218"/>
</test>
<test id="s1-s15-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:34.221" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:56:34.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:34.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:34.220" endtime="20231207 17:56:34.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:34.223" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:34.222" endtime="20231207 17:56:34.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:34.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:34.223" endtime="20231207 17:56:34.223"/>
</kw>
<status status="PASS" starttime="20231207 17:56:34.219" endtime="20231207 17:56:34.224"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:34.226" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:38.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:38.104" level="INFO">${output} = 2023-12-07 17:56:36,810 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:36,882 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:56:34.225" endtime="20231207 17:56:38.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:38.105" level="INFO">2023-12-07 17:56:36,810 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:36,882 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:56:36,882 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 17:56:37,105 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 17:56:38.104" endtime="20231207 17:56:38.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:38.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:38.105" endtime="20231207 17:56:38.105"/>
</kw>
<status status="PASS" starttime="20231207 17:56:34.224" endtime="20231207 17:56:38.106"/>
</kw>
<msg timestamp="20231207 17:56:38.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:34.224" endtime="20231207 17:56:38.106"/>
</kw>
<msg timestamp="20231207 17:56:38.106" level="INFO">${output} = 2023-12-07 17:56:36,810 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:36,882 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:56:34.224" endtime="20231207 17:56:38.106"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:38.106" endtime="20231207 17:56:38.107"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:38.109" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:38.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:38.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:38.107" endtime="20231207 17:56:38.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:38.111" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:38.111" endtime="20231207 17:56:38.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:38.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:38.111" endtime="20231207 17:56:38.111"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.107" endtime="20231207 17:56:38.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:34.219" endtime="20231207 17:56:38.112"/>
</test>
<test id="s1-s15-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:38.116" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:38.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:38.118" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:56:38.115" endtime="20231207 17:56:38.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:38.119" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:56:38.118" endtime="20231207 17:56:38.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:38.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:38.119" endtime="20231207 17:56:38.119"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.115" endtime="20231207 17:56:38.119"/>
</kw>
<msg timestamp="20231207 17:56:38.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:38.115" endtime="20231207 17:56:38.120"/>
</kw>
<msg timestamp="20231207 17:56:38.120" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:56:38.114" endtime="20231207 17:56:38.120"/>
</kw>
<msg timestamp="20231207 17:56:38.120" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:38.114" endtime="20231207 17:56:38.120"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:56:38.121" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:38.121" endtime="20231207 17:56:38.121"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:38.123" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:38.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:38.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:38.122" endtime="20231207 17:56:38.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:38.140" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:38.139" endtime="20231207 17:56:38.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:38.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:38.140" endtime="20231207 17:56:38.140"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.122" endtime="20231207 17:56:38.140"/>
</kw>
<msg timestamp="20231207 17:56:38.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:38.122" endtime="20231207 17:56:38.141"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.121" endtime="20231207 17:56:38.141"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.121" endtime="20231207 17:56:38.141"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.114" endtime="20231207 17:56:38.141"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.113" endtime="20231207 17:56:38.141"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:38.144" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:39.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:39.944" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:38.143" endtime="20231207 17:56:39.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:39.945" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:39.944" endtime="20231207 17:56:39.945"/>
</kw>
<msg timestamp="20231207 17:56:39.945" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:38.142" endtime="20231207 17:56:39.945"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:56:39.946" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:56:39.946" endtime="20231207 17:56:39.946"/>
</kw>
<msg timestamp="20231207 17:56:39.946" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:56:39.945" endtime="20231207 17:56:39.946"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:39.947" endtime="20231207 17:56:39.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:39.947" endtime="20231207 17:56:39.947"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:56:39.947" endtime="20231207 17:56:39.947"/>
</branch>
<status status="PASS" starttime="20231207 17:56:39.947" endtime="20231207 17:56:39.947"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:39.948" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:39.947" endtime="20231207 17:56:39.948"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:56:39.948" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:39.948" endtime="20231207 17:56:39.948"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:39.948" level="INFO">${secret} = ['c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405']</msg>
<status status="PASS" starttime="20231207 17:56:39.948" endtime="20231207 17:56:39.948"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:39.949" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:39.949" endtime="20231207 17:56:39.949"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:39.950" level="INFO">${secret} = c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:39.950" endtime="20231207 17:56:39.950"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:39.953" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:40.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:40.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:39.951" endtime="20231207 17:56:40.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:40.311" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:40.311" endtime="20231207 17:56:40.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:40.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:40.311" endtime="20231207 17:56:40.312"/>
</kw>
<status status="PASS" starttime="20231207 17:56:39.951" endtime="20231207 17:56:40.312"/>
</kw>
<msg timestamp="20231207 17:56:40.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:39.951" endtime="20231207 17:56:40.313"/>
</kw>
<status status="PASS" starttime="20231207 17:56:39.950" endtime="20231207 17:56:40.313"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:40.315" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:40.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:40.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:40.314" endtime="20231207 17:56:40.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:40.669" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:40.668" endtime="20231207 17:56:40.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:40.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:40.669" endtime="20231207 17:56:40.669"/>
</kw>
<status status="PASS" starttime="20231207 17:56:40.313" endtime="20231207 17:56:40.670"/>
</kw>
<msg timestamp="20231207 17:56:40.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:40.313" endtime="20231207 17:56:40.670"/>
</kw>
<status status="PASS" starttime="20231207 17:56:40.313" endtime="20231207 17:56:40.670"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:40.673" level="INFO">Running command 'aws configure set aws_secret_access_key c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:41.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:41.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:40.671" endtime="20231207 17:56:41.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:41.033" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:41.032" endtime="20231207 17:56:41.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:41.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:41.033" endtime="20231207 17:56:41.033"/>
</kw>
<status status="PASS" starttime="20231207 17:56:40.671" endtime="20231207 17:56:41.033"/>
</kw>
<msg timestamp="20231207 17:56:41.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:40.671" endtime="20231207 17:56:41.034"/>
</kw>
<status status="PASS" starttime="20231207 17:56:40.670" endtime="20231207 17:56:41.034"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:41.037" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:41.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:41.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:41.035" endtime="20231207 17:56:41.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:41.403" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:41.403" endtime="20231207 17:56:41.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:41.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:41.403" endtime="20231207 17:56:41.404"/>
</kw>
<status status="PASS" starttime="20231207 17:56:41.035" endtime="20231207 17:56:41.404"/>
</kw>
<msg timestamp="20231207 17:56:41.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:41.035" endtime="20231207 17:56:41.405"/>
</kw>
<status status="PASS" starttime="20231207 17:56:41.034" endtime="20231207 17:56:41.405"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:41.408" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:41.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:41.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:41.406" endtime="20231207 17:56:41.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:41.772" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:41.772" endtime="20231207 17:56:41.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:41.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:41.772" endtime="20231207 17:56:41.773"/>
</kw>
<status status="PASS" starttime="20231207 17:56:41.406" endtime="20231207 17:56:41.773"/>
</kw>
<msg timestamp="20231207 17:56:41.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:41.405" endtime="20231207 17:56:41.773"/>
</kw>
<status status="PASS" starttime="20231207 17:56:41.405" endtime="20231207 17:56:41.774"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.142" endtime="20231207 17:56:41.774"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.142" endtime="20231207 17:56:41.774"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:56:41.774" endtime="20231207 17:56:41.774"/>
</kw>
<status status="PASS" starttime="20231207 17:56:38.113" endtime="20231207 17:56:41.774"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:56:41.775" level="INFO">${randStr} = 3210825989</msg>
<status status="PASS" starttime="20231207 17:56:41.775" endtime="20231207 17:56:41.775"/>
</kw>
<msg timestamp="20231207 17:56:41.775" level="INFO">${random} = ozone-test-3210825989</msg>
<status status="PASS" starttime="20231207 17:56:41.774" endtime="20231207 17:56:41.775"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:41.779" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket-ozone-test-3210825989 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:42.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:42.266" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-3210825989"
}</msg>
<status status="PASS" starttime="20231207 17:56:41.777" endtime="20231207 17:56:42.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:42.267" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket-ozone-test-3210825989"
}</msg>
<status status="PASS" starttime="20231207 17:56:42.266" endtime="20231207 17:56:42.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:42.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:42.267" endtime="20231207 17:56:42.267"/>
</kw>
<status status="PASS" starttime="20231207 17:56:41.777" endtime="20231207 17:56:42.268"/>
</kw>
<msg timestamp="20231207 17:56:42.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:41.777" endtime="20231207 17:56:42.268"/>
</kw>
<msg timestamp="20231207 17:56:42.268" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-3210825989"
}</msg>
<status status="PASS" starttime="20231207 17:56:41.776" endtime="20231207 17:56:42.268"/>
</kw>
<msg timestamp="20231207 17:56:42.268" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-3210825989"
}</msg>
<status status="PASS" starttime="20231207 17:56:41.776" endtime="20231207 17:56:42.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:42.269" endtime="20231207 17:56:42.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:42.269" endtime="20231207 17:56:42.269"/>
</kw>
<msg timestamp="20231207 17:56:42.269" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 17:56:41.776" endtime="20231207 17:56:42.269"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 17:56:42.270" endtime="20231207 17:56:42.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:38.112" endtime="20231207 17:56:42.270"/>
</test>
<test id="s1-s15-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:42.273" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:56:42.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:42.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:42.272" endtime="20231207 17:56:42.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:42.275" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:42.275" endtime="20231207 17:56:42.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:42.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:42.275" endtime="20231207 17:56:42.276"/>
</kw>
<status status="PASS" starttime="20231207 17:56:42.271" endtime="20231207 17:56:42.276"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:42.279" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:43.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:43.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:42.277" endtime="20231207 17:56:43.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:43.007" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:43.007" endtime="20231207 17:56:43.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:43.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:43.008" endtime="20231207 17:56:43.008"/>
</kw>
<msg timestamp="20231207 17:56:43.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:42.277" endtime="20231207 17:56:43.008"/>
</kw>
<msg timestamp="20231207 17:56:43.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:42.276" endtime="20231207 17:56:43.009"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:43.009" endtime="20231207 17:56:43.009"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:43.011" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:43.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:43.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:43.010" endtime="20231207 17:56:43.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:43.013" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:43.013" endtime="20231207 17:56:43.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:43.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:43.013" endtime="20231207 17:56:43.014"/>
</kw>
<status status="PASS" starttime="20231207 17:56:43.009" endtime="20231207 17:56:43.014"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:42.271" endtime="20231207 17:56:43.014"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 17:56:22.783" endtime="20231207 17:56:43.015"/>
</suite>
<suite id="s1-s16" name="1.3.0-1.4.0-3-downgraded-validate-old2" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:46.011" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:46.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:46.013" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:56:46.009" endtime="20231207 17:56:46.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:46.014" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:56:46.013" endtime="20231207 17:56:46.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:46.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:46.014" endtime="20231207 17:56:46.014"/>
</kw>
<status status="PASS" starttime="20231207 17:56:46.008" endtime="20231207 17:56:46.014"/>
</kw>
<msg timestamp="20231207 17:56:46.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:46.008" endtime="20231207 17:56:46.015"/>
</kw>
<msg timestamp="20231207 17:56:46.016" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:56:46.007" endtime="20231207 17:56:46.016"/>
</kw>
<msg timestamp="20231207 17:56:46.016" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:46.007" endtime="20231207 17:56:46.016"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:56:46.016" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:46.016" endtime="20231207 17:56:46.016"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:46.019" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:46.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:46.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:46.017" endtime="20231207 17:56:46.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:46.042" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:46.041" endtime="20231207 17:56:46.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:46.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:46.042" endtime="20231207 17:56:46.042"/>
</kw>
<status status="PASS" starttime="20231207 17:56:46.017" endtime="20231207 17:56:46.042"/>
</kw>
<msg timestamp="20231207 17:56:46.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:46.017" endtime="20231207 17:56:46.043"/>
</kw>
<status status="PASS" starttime="20231207 17:56:46.017" endtime="20231207 17:56:46.043"/>
</kw>
<status status="PASS" starttime="20231207 17:56:46.016" endtime="20231207 17:56:46.043"/>
</kw>
<status status="PASS" starttime="20231207 17:56:46.007" endtime="20231207 17:56:46.043"/>
</kw>
<status status="PASS" starttime="20231207 17:56:46.006" endtime="20231207 17:56:46.043"/>
</kw>
<test id="s1-s16-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:56:46.045" level="INFO">${random} = 61418</msg>
<status status="PASS" starttime="20231207 17:56:46.044" endtime="20231207 17:56:46.045"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:46.047" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-61418 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:49.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:49.705" level="INFO">${output} = 2023-12-07 17:56:48,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:48,647 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:56:46.046" endtime="20231207 17:56:49.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:49.706" level="INFO">2023-12-07 17:56:48,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:48,647 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:56:48,647 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 17:56:49.706" endtime="20231207 17:56:49.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:49.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:49.707" endtime="20231207 17:56:49.707"/>
</kw>
<status status="PASS" starttime="20231207 17:56:46.045" endtime="20231207 17:56:49.707"/>
</kw>
<msg timestamp="20231207 17:56:49.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:46.045" endtime="20231207 17:56:49.707"/>
</kw>
<msg timestamp="20231207 17:56:49.708" level="INFO">${output} = 2023-12-07 17:56:48,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:56:48,647 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:56:46.045" endtime="20231207 17:56:49.708"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:49.708" endtime="20231207 17:56:49.708"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:49.710" level="INFO">Running command 'cat /tmp/key-61418 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:49.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:49.711" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:49.709" endtime="20231207 17:56:49.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:49.712" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:49.712" endtime="20231207 17:56:49.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:49.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:49.712" endtime="20231207 17:56:49.713"/>
</kw>
<msg timestamp="20231207 17:56:49.713" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:49.708" endtime="20231207 17:56:49.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:49.713" endtime="20231207 17:56:49.714"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:49.715" level="INFO">Running command 'rm /tmp/key-61418 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:49.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:49.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:49.714" endtime="20231207 17:56:49.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:49.717" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:49.717" endtime="20231207 17:56:49.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:49.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:49.717" endtime="20231207 17:56:49.718"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.714" endtime="20231207 17:56:49.718"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:46.043" endtime="20231207 17:56:49.718"/>
</test>
<test id="s1-s16-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:49.723" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:49.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:49.725" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:56:49.722" endtime="20231207 17:56:49.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:49.725" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:56:49.725" endtime="20231207 17:56:49.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:49.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:49.726" endtime="20231207 17:56:49.726"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.721" endtime="20231207 17:56:49.726"/>
</kw>
<msg timestamp="20231207 17:56:49.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:49.721" endtime="20231207 17:56:49.727"/>
</kw>
<msg timestamp="20231207 17:56:49.727" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:56:49.721" endtime="20231207 17:56:49.727"/>
</kw>
<msg timestamp="20231207 17:56:49.727" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:49.721" endtime="20231207 17:56:49.727"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:56:49.728" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:49.727" endtime="20231207 17:56:49.728"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:49.730" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:49.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:49.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:49.729" endtime="20231207 17:56:49.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:49.747" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:49.747" endtime="20231207 17:56:49.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:49.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:49.747" endtime="20231207 17:56:49.748"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.729" endtime="20231207 17:56:49.748"/>
</kw>
<msg timestamp="20231207 17:56:49.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:49.728" endtime="20231207 17:56:49.748"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.728" endtime="20231207 17:56:49.748"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.728" endtime="20231207 17:56:49.748"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.720" endtime="20231207 17:56:49.749"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.720" endtime="20231207 17:56:49.749"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:49.751" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:51.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:51.592" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:49.750" endtime="20231207 17:56:51.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:51.593" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:51.593" endtime="20231207 17:56:51.593"/>
</kw>
<msg timestamp="20231207 17:56:51.593" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:49.749" endtime="20231207 17:56:51.593"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:56:51.595" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:56:51.594" endtime="20231207 17:56:51.595"/>
</kw>
<msg timestamp="20231207 17:56:51.595" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:56:51.594" endtime="20231207 17:56:51.595"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:51.595" endtime="20231207 17:56:51.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:51.595" endtime="20231207 17:56:51.595"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:56:51.595" endtime="20231207 17:56:51.595"/>
</branch>
<status status="PASS" starttime="20231207 17:56:51.595" endtime="20231207 17:56:51.595"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:51.596" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:51.595" endtime="20231207 17:56:51.596"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:56:51.597" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:51.596" endtime="20231207 17:56:51.597"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:51.597" level="INFO">${secret} = ['c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405']</msg>
<status status="PASS" starttime="20231207 17:56:51.597" endtime="20231207 17:56:51.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:51.598" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:51.597" endtime="20231207 17:56:51.598"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:51.599" level="INFO">${secret} = c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:51.598" endtime="20231207 17:56:51.599"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:51.602" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:51.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:51.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:51.600" endtime="20231207 17:56:51.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:51.952" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:51.951" endtime="20231207 17:56:51.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:51.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:51.952" endtime="20231207 17:56:51.952"/>
</kw>
<status status="PASS" starttime="20231207 17:56:51.600" endtime="20231207 17:56:51.952"/>
</kw>
<msg timestamp="20231207 17:56:51.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:51.600" endtime="20231207 17:56:51.953"/>
</kw>
<status status="PASS" starttime="20231207 17:56:51.599" endtime="20231207 17:56:51.953"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:51.956" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:52.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:52.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:51.954" endtime="20231207 17:56:52.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:52.334" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:52.333" endtime="20231207 17:56:52.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:52.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:52.334" endtime="20231207 17:56:52.334"/>
</kw>
<status status="PASS" starttime="20231207 17:56:51.954" endtime="20231207 17:56:52.334"/>
</kw>
<msg timestamp="20231207 17:56:52.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:51.954" endtime="20231207 17:56:52.335"/>
</kw>
<status status="PASS" starttime="20231207 17:56:51.953" endtime="20231207 17:56:52.335"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:52.338" level="INFO">Running command 'aws configure set aws_secret_access_key c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:52.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:52.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:52.336" endtime="20231207 17:56:52.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:52.719" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:52.718" endtime="20231207 17:56:52.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:52.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:52.719" endtime="20231207 17:56:52.719"/>
</kw>
<status status="PASS" starttime="20231207 17:56:52.336" endtime="20231207 17:56:52.719"/>
</kw>
<msg timestamp="20231207 17:56:52.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:52.336" endtime="20231207 17:56:52.720"/>
</kw>
<status status="PASS" starttime="20231207 17:56:52.335" endtime="20231207 17:56:52.720"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:52.723" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:53.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:53.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:52.721" endtime="20231207 17:56:53.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:53.078" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:53.078" endtime="20231207 17:56:53.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:53.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:53.079" endtime="20231207 17:56:53.079"/>
</kw>
<status status="PASS" starttime="20231207 17:56:52.721" endtime="20231207 17:56:53.079"/>
</kw>
<msg timestamp="20231207 17:56:53.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:52.721" endtime="20231207 17:56:53.080"/>
</kw>
<status status="PASS" starttime="20231207 17:56:52.720" endtime="20231207 17:56:53.080"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:53.083" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:53.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:53.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:53.081" endtime="20231207 17:56:53.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:53.457" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:53.456" endtime="20231207 17:56:53.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:53.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:53.457" endtime="20231207 17:56:53.457"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.081" endtime="20231207 17:56:53.458"/>
</kw>
<msg timestamp="20231207 17:56:53.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:53.080" endtime="20231207 17:56:53.458"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.080" endtime="20231207 17:56:53.458"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.749" endtime="20231207 17:56:53.458"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.749" endtime="20231207 17:56:53.459"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:56:53.459" endtime="20231207 17:56:53.459"/>
</kw>
<status status="PASS" starttime="20231207 17:56:49.719" endtime="20231207 17:56:53.459"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:53.461" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:53.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:53.969" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:56:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:53.460" endtime="20231207 17:56:53.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:53.970" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:56:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:56:53 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:56:53.970" endtime="20231207 17:56:53.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:53.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:53.970" endtime="20231207 17:56:53.971"/>
</kw>
<msg timestamp="20231207 17:56:53.971" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:56:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:53.460" endtime="20231207 17:56:53.971"/>
</kw>
<msg timestamp="20231207 17:56:53.971" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:56:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:53.459" endtime="20231207 17:56:53.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:53.971" endtime="20231207 17:56:53.971"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:53.973" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:53.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:53.975" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:53.972" endtime="20231207 17:56:53.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:53.976" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:53.975" endtime="20231207 17:56:53.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:53.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:53.976" endtime="20231207 17:56:53.976"/>
</kw>
<msg timestamp="20231207 17:56:53.976" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 17:56:53.972" endtime="20231207 17:56:53.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:53.976" endtime="20231207 17:56:53.977"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:53.978" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:53.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:53.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:53.977" endtime="20231207 17:56:53.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:53.980" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:53.980" endtime="20231207 17:56:53.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:53.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:53.981" endtime="20231207 17:56:53.981"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.977" endtime="20231207 17:56:53.981"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:49.719" endtime="20231207 17:56:53.981"/>
</test>
<test id="s1-s16-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:53.986" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:53.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:53.988" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:56:53.985" endtime="20231207 17:56:53.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:53.988" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:56:53.988" endtime="20231207 17:56:53.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:53.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:53.988" endtime="20231207 17:56:53.989"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.984" endtime="20231207 17:56:53.989"/>
</kw>
<msg timestamp="20231207 17:56:53.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:53.984" endtime="20231207 17:56:53.990"/>
</kw>
<msg timestamp="20231207 17:56:53.990" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:56:53.984" endtime="20231207 17:56:53.990"/>
</kw>
<msg timestamp="20231207 17:56:53.990" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:53.983" endtime="20231207 17:56:53.990"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:56:53.990" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:53.990" endtime="20231207 17:56:53.990"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:53.993" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:54.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:54.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:53.992" endtime="20231207 17:56:54.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:54.008" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:54.007" endtime="20231207 17:56:54.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:54.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:54.008" endtime="20231207 17:56:54.008"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.991" endtime="20231207 17:56:54.009"/>
</kw>
<msg timestamp="20231207 17:56:54.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:53.991" endtime="20231207 17:56:54.009"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.991" endtime="20231207 17:56:54.009"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.991" endtime="20231207 17:56:54.009"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.983" endtime="20231207 17:56:54.009"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.983" endtime="20231207 17:56:54.010"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:54.012" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:55.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:55.827" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:54.011" endtime="20231207 17:56:55.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:55.828" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:55.828" endtime="20231207 17:56:55.828"/>
</kw>
<msg timestamp="20231207 17:56:55.828" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:54.010" endtime="20231207 17:56:55.829"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:56:55.830" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:56:55.829" endtime="20231207 17:56:55.830"/>
</kw>
<msg timestamp="20231207 17:56:55.830" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:56:55.829" endtime="20231207 17:56:55.830"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:55.830" endtime="20231207 17:56:55.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:56:55.830" endtime="20231207 17:56:55.830"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:56:55.830" endtime="20231207 17:56:55.830"/>
</branch>
<status status="PASS" starttime="20231207 17:56:55.830" endtime="20231207 17:56:55.830"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:55.831" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:55.830" endtime="20231207 17:56:55.831"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:56:55.831" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:56:55.831" endtime="20231207 17:56:55.831"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:56:55.832" level="INFO">${secret} = ['c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405']</msg>
<status status="PASS" starttime="20231207 17:56:55.831" endtime="20231207 17:56:55.832"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:55.833" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:56:55.832" endtime="20231207 17:56:55.833"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:56:55.833" level="INFO">${secret} = c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:56:55.833" endtime="20231207 17:56:55.834"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:55.836" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:56.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:56.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:55.834" endtime="20231207 17:56:56.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:56.185" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:56.184" endtime="20231207 17:56:56.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:56.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:56.185" endtime="20231207 17:56:56.185"/>
</kw>
<status status="PASS" starttime="20231207 17:56:55.834" endtime="20231207 17:56:56.186"/>
</kw>
<msg timestamp="20231207 17:56:56.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:55.834" endtime="20231207 17:56:56.186"/>
</kw>
<status status="PASS" starttime="20231207 17:56:55.834" endtime="20231207 17:56:56.186"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:56.189" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:56.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:56.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:56.187" endtime="20231207 17:56:56.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:56.559" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:56.558" endtime="20231207 17:56:56.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:56.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:56.559" endtime="20231207 17:56:56.559"/>
</kw>
<status status="PASS" starttime="20231207 17:56:56.187" endtime="20231207 17:56:56.559"/>
</kw>
<msg timestamp="20231207 17:56:56.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:56.187" endtime="20231207 17:56:56.560"/>
</kw>
<status status="PASS" starttime="20231207 17:56:56.186" endtime="20231207 17:56:56.560"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:56.563" level="INFO">Running command 'aws configure set aws_secret_access_key c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:56.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:56.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:56.561" endtime="20231207 17:56:56.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:56.918" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:56.917" endtime="20231207 17:56:56.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:56.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:56.918" endtime="20231207 17:56:56.918"/>
</kw>
<status status="PASS" starttime="20231207 17:56:56.561" endtime="20231207 17:56:56.919"/>
</kw>
<msg timestamp="20231207 17:56:56.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:56.561" endtime="20231207 17:56:56.919"/>
</kw>
<status status="PASS" starttime="20231207 17:56:56.560" endtime="20231207 17:56:56.919"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:56.922" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:57.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:57.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:56.920" endtime="20231207 17:56:57.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:57.286" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:57.285" endtime="20231207 17:56:57.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:57.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:57.286" endtime="20231207 17:56:57.286"/>
</kw>
<status status="PASS" starttime="20231207 17:56:56.920" endtime="20231207 17:56:57.286"/>
</kw>
<msg timestamp="20231207 17:56:57.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:56.920" endtime="20231207 17:56:57.287"/>
</kw>
<status status="PASS" starttime="20231207 17:56:56.919" endtime="20231207 17:56:57.287"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:57.289" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:57.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:57.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:57.288" endtime="20231207 17:56:57.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:57.650" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:57.649" endtime="20231207 17:56:57.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:57.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:57.650" endtime="20231207 17:56:57.650"/>
</kw>
<status status="PASS" starttime="20231207 17:56:57.288" endtime="20231207 17:56:57.651"/>
</kw>
<msg timestamp="20231207 17:56:57.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:56:57.288" endtime="20231207 17:56:57.651"/>
</kw>
<status status="PASS" starttime="20231207 17:56:57.287" endtime="20231207 17:56:57.651"/>
</kw>
<status status="PASS" starttime="20231207 17:56:54.010" endtime="20231207 17:56:57.651"/>
</kw>
<status status="PASS" starttime="20231207 17:56:54.010" endtime="20231207 17:56:57.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:56:57.652" endtime="20231207 17:56:57.652"/>
</kw>
<status status="PASS" starttime="20231207 17:56:53.982" endtime="20231207 17:56:57.652"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:57.655" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:58.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:58.130" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:56:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:57.653" endtime="20231207 17:56:58.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:58.131" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:56:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 17:56:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 17:56:58.130" endtime="20231207 17:56:58.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:58.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:58.131" endtime="20231207 17:56:58.131"/>
</kw>
<msg timestamp="20231207 17:56:58.132" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:56:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:57.653" endtime="20231207 17:56:58.132"/>
</kw>
<msg timestamp="20231207 17:56:58.132" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 17:56:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 17:56:57.652" endtime="20231207 17:56:58.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:58.132" endtime="20231207 17:56:58.132"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:58.134" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:58.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:58.136" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:56:58.133" endtime="20231207 17:56:58.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:58.136" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:56:58.136" endtime="20231207 17:56:58.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:58.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:58.137" endtime="20231207 17:56:58.137"/>
</kw>
<msg timestamp="20231207 17:56:58.137" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 17:56:58.133" endtime="20231207 17:56:58.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:56:58.137" endtime="20231207 17:56:58.138"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:56:58.139" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:56:58.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:56:58.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:56:58.138" endtime="20231207 17:56:58.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:56:58.141" level="INFO"/>
<status status="PASS" starttime="20231207 17:56:58.141" endtime="20231207 17:56:58.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:56:58.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:56:58.141" endtime="20231207 17:56:58.142"/>
</kw>
<status status="PASS" starttime="20231207 17:56:58.138" endtime="20231207 17:56:58.142"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:56:53.982" endtime="20231207 17:56:58.142"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 17:56:45.945" endtime="20231207 17:56:58.143"/>
</suite>
<suite id="s1-s17" name="1.3.0-1.4.0-3-downgraded-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:01.169" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:01.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:01.171" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:57:01.166" endtime="20231207 17:57:01.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:01.172" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:57:01.171" endtime="20231207 17:57:01.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:01.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:01.172" endtime="20231207 17:57:01.172"/>
</kw>
<status status="PASS" starttime="20231207 17:57:01.166" endtime="20231207 17:57:01.172"/>
</kw>
<msg timestamp="20231207 17:57:01.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:01.165" endtime="20231207 17:57:01.173"/>
</kw>
<msg timestamp="20231207 17:57:01.173" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:57:01.165" endtime="20231207 17:57:01.173"/>
</kw>
<msg timestamp="20231207 17:57:01.174" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:57:01.165" endtime="20231207 17:57:01.174"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:57:01.174" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:57:01.174" endtime="20231207 17:57:01.174"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:01.176" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:01.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:01.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:01.175" endtime="20231207 17:57:01.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:01.192" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:01.191" endtime="20231207 17:57:01.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:01.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:01.192" endtime="20231207 17:57:01.192"/>
</kw>
<status status="PASS" starttime="20231207 17:57:01.175" endtime="20231207 17:57:01.192"/>
</kw>
<msg timestamp="20231207 17:57:01.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:01.175" endtime="20231207 17:57:01.193"/>
</kw>
<status status="PASS" starttime="20231207 17:57:01.175" endtime="20231207 17:57:01.193"/>
</kw>
<status status="PASS" starttime="20231207 17:57:01.174" endtime="20231207 17:57:01.193"/>
</kw>
<status status="PASS" starttime="20231207 17:57:01.165" endtime="20231207 17:57:01.193"/>
</kw>
<status status="PASS" starttime="20231207 17:57:01.164" endtime="20231207 17:57:01.193"/>
</kw>
<test id="s1-s17-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:01.196" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:57:01.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:01.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:01.195" endtime="20231207 17:57:01.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:01.198" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:01.197" endtime="20231207 17:57:01.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:01.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:01.198" endtime="20231207 17:57:01.198"/>
</kw>
<status status="PASS" starttime="20231207 17:57:01.194" endtime="20231207 17:57:01.198"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:01.201" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:05.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:05.190" level="INFO">${output} = 2023-12-07 17:57:03,907 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:57:03,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:57:01.200" endtime="20231207 17:57:05.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:05.191" level="INFO">2023-12-07 17:57:03,907 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:57:03,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:57:03,978 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 17:57:04,232 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 17:57:05.191" endtime="20231207 17:57:05.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:05.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:05.191" endtime="20231207 17:57:05.192"/>
</kw>
<status status="PASS" starttime="20231207 17:57:01.199" endtime="20231207 17:57:05.192"/>
</kw>
<msg timestamp="20231207 17:57:05.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:01.199" endtime="20231207 17:57:05.192"/>
</kw>
<msg timestamp="20231207 17:57:05.192" level="INFO">${output} = 2023-12-07 17:57:03,907 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:57:03,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:57:01.199" endtime="20231207 17:57:05.193"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:57:05.193" endtime="20231207 17:57:05.193"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:05.195" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:05.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:05.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:05.193" endtime="20231207 17:57:05.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:05.197" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:05.197" endtime="20231207 17:57:05.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:05.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:05.197" endtime="20231207 17:57:05.198"/>
</kw>
<status status="PASS" starttime="20231207 17:57:05.193" endtime="20231207 17:57:05.198"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:57:01.194" endtime="20231207 17:57:05.198"/>
</test>
<test id="s1-s17-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:05.201" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:57:05.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:05.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:05.200" endtime="20231207 17:57:05.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:05.202" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:05.202" endtime="20231207 17:57:05.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:05.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:05.203" endtime="20231207 17:57:05.203"/>
</kw>
<status status="PASS" starttime="20231207 17:57:05.199" endtime="20231207 17:57:05.203"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:05.206" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:09.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:09.066" level="INFO">${output} = 2023-12-07 17:57:07,687 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:57:07,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:57:05.204" endtime="20231207 17:57:09.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:09.067" level="INFO">2023-12-07 17:57:07,687 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:57:07,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 17:57:07,868 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 17:57:08,101 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 17:57:09.067" endtime="20231207 17:57:09.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:09.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:09.067" endtime="20231207 17:57:09.068"/>
</kw>
<status status="PASS" starttime="20231207 17:57:05.204" endtime="20231207 17:57:09.068"/>
</kw>
<msg timestamp="20231207 17:57:09.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:05.204" endtime="20231207 17:57:09.069"/>
</kw>
<msg timestamp="20231207 17:57:09.069" level="INFO">${output} = 2023-12-07 17:57:07,687 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 17:57:07,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 17:57:05.203" endtime="20231207 17:57:09.069"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:57:09.069" endtime="20231207 17:57:09.069"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:09.071" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:09.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:09.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:09.070" endtime="20231207 17:57:09.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:09.073" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:09.073" endtime="20231207 17:57:09.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:09.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:09.073" endtime="20231207 17:57:09.074"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.069" endtime="20231207 17:57:09.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:57:05.199" endtime="20231207 17:57:09.074"/>
</test>
<test id="s1-s17-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:09.078" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:09.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:09.080" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:57:09.077" endtime="20231207 17:57:09.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:09.081" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:57:09.081" endtime="20231207 17:57:09.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:09.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:09.081" endtime="20231207 17:57:09.082"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.077" endtime="20231207 17:57:09.082"/>
</kw>
<msg timestamp="20231207 17:57:09.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:09.077" endtime="20231207 17:57:09.082"/>
</kw>
<msg timestamp="20231207 17:57:09.083" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:57:09.077" endtime="20231207 17:57:09.083"/>
</kw>
<msg timestamp="20231207 17:57:09.083" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:57:09.076" endtime="20231207 17:57:09.083"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:57:09.083" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:57:09.083" endtime="20231207 17:57:09.083"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:09.086" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:09.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:09.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:09.085" endtime="20231207 17:57:09.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:09.131" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:09.131" endtime="20231207 17:57:09.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:09.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:09.132" endtime="20231207 17:57:09.132"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.084" endtime="20231207 17:57:09.132"/>
</kw>
<msg timestamp="20231207 17:57:09.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:09.084" endtime="20231207 17:57:09.133"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.084" endtime="20231207 17:57:09.133"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.083" endtime="20231207 17:57:09.133"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.076" endtime="20231207 17:57:09.133"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.076" endtime="20231207 17:57:09.133"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:09.136" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:10.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:10.935" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:57:09.134" endtime="20231207 17:57:10.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:10.936" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:57:10.935" endtime="20231207 17:57:10.936"/>
</kw>
<msg timestamp="20231207 17:57:10.936" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:57:09.134" endtime="20231207 17:57:10.936"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 17:57:10.937" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 17:57:10.936" endtime="20231207 17:57:10.937"/>
</kw>
<msg timestamp="20231207 17:57:10.937" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 17:57:10.936" endtime="20231207 17:57:10.937"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:57:10.938" endtime="20231207 17:57:10.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 17:57:10.938" endtime="20231207 17:57:10.938"/>
</kw>
<status status="NOT RUN" starttime="20231207 17:57:10.937" endtime="20231207 17:57:10.938"/>
</branch>
<status status="PASS" starttime="20231207 17:57:10.937" endtime="20231207 17:57:10.938"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:57:10.938" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:57:10.938" endtime="20231207 17:57:10.938"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 17:57:10.939" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 17:57:10.939" endtime="20231207 17:57:10.939"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 17:57:10.939" level="INFO">${secret} = ['c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405']</msg>
<status status="PASS" starttime="20231207 17:57:10.939" endtime="20231207 17:57:10.939"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:57:10.940" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:57:10.940" endtime="20231207 17:57:10.940"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 17:57:10.941" level="INFO">${secret} = c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405</msg>
<status status="PASS" starttime="20231207 17:57:10.941" endtime="20231207 17:57:10.941"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:10.944" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:11.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:11.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:10.942" endtime="20231207 17:57:11.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:11.296" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:11.295" endtime="20231207 17:57:11.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:11.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:11.296" endtime="20231207 17:57:11.296"/>
</kw>
<status status="PASS" starttime="20231207 17:57:10.942" endtime="20231207 17:57:11.297"/>
</kw>
<msg timestamp="20231207 17:57:11.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:10.942" endtime="20231207 17:57:11.297"/>
</kw>
<status status="PASS" starttime="20231207 17:57:10.941" endtime="20231207 17:57:11.297"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:11.300" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:11.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:11.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:11.298" endtime="20231207 17:57:11.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:11.664" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:11.663" endtime="20231207 17:57:11.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:11.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:11.664" endtime="20231207 17:57:11.664"/>
</kw>
<status status="PASS" starttime="20231207 17:57:11.298" endtime="20231207 17:57:11.665"/>
</kw>
<msg timestamp="20231207 17:57:11.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:11.298" endtime="20231207 17:57:11.665"/>
</kw>
<status status="PASS" starttime="20231207 17:57:11.297" endtime="20231207 17:57:11.665"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:11.668" level="INFO">Running command 'aws configure set aws_secret_access_key c2e0abce2f942305d50c2c9ce54bcdc4c4580d899db3d74b894b3554dc5ea405 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:12.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:12.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:11.666" endtime="20231207 17:57:12.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:12.020" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:12.020" endtime="20231207 17:57:12.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:12.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:12.020" endtime="20231207 17:57:12.021"/>
</kw>
<status status="PASS" starttime="20231207 17:57:11.666" endtime="20231207 17:57:12.021"/>
</kw>
<msg timestamp="20231207 17:57:12.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:11.666" endtime="20231207 17:57:12.022"/>
</kw>
<status status="PASS" starttime="20231207 17:57:11.665" endtime="20231207 17:57:12.022"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:12.024" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:12.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:12.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:12.023" endtime="20231207 17:57:12.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:12.387" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:12.386" endtime="20231207 17:57:12.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:12.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:12.387" endtime="20231207 17:57:12.387"/>
</kw>
<status status="PASS" starttime="20231207 17:57:12.022" endtime="20231207 17:57:12.388"/>
</kw>
<msg timestamp="20231207 17:57:12.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:12.022" endtime="20231207 17:57:12.388"/>
</kw>
<status status="PASS" starttime="20231207 17:57:12.022" endtime="20231207 17:57:12.389"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:12.392" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:12.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:12.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:12.391" endtime="20231207 17:57:12.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:12.768" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:12.767" endtime="20231207 17:57:12.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:12.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:12.768" endtime="20231207 17:57:12.768"/>
</kw>
<status status="PASS" starttime="20231207 17:57:12.390" endtime="20231207 17:57:12.769"/>
</kw>
<msg timestamp="20231207 17:57:12.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:12.390" endtime="20231207 17:57:12.769"/>
</kw>
<status status="PASS" starttime="20231207 17:57:12.389" endtime="20231207 17:57:12.769"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.134" endtime="20231207 17:57:12.770"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.133" endtime="20231207 17:57:12.770"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 17:57:12.770" endtime="20231207 17:57:12.770"/>
</kw>
<status status="PASS" starttime="20231207 17:57:09.075" endtime="20231207 17:57:12.770"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 17:57:12.771" level="INFO">${randStr} = 2186356901</msg>
<status status="PASS" starttime="20231207 17:57:12.771" endtime="20231207 17:57:12.771"/>
</kw>
<msg timestamp="20231207 17:57:12.771" level="INFO">${random} = ozone-test-2186356901</msg>
<status status="PASS" starttime="20231207 17:57:12.770" endtime="20231207 17:57:12.771"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:12.775" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-2186356901 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:13.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:13.240" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2186356901"
}</msg>
<status status="PASS" starttime="20231207 17:57:12.773" endtime="20231207 17:57:13.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:13.241" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2186356901"
}</msg>
<status status="PASS" starttime="20231207 17:57:13.240" endtime="20231207 17:57:13.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:13.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:13.241" endtime="20231207 17:57:13.241"/>
</kw>
<status status="PASS" starttime="20231207 17:57:12.773" endtime="20231207 17:57:13.242"/>
</kw>
<msg timestamp="20231207 17:57:13.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:12.773" endtime="20231207 17:57:13.242"/>
</kw>
<msg timestamp="20231207 17:57:13.242" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2186356901"
}</msg>
<status status="PASS" starttime="20231207 17:57:12.772" endtime="20231207 17:57:13.242"/>
</kw>
<msg timestamp="20231207 17:57:13.242" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2186356901"
}</msg>
<status status="PASS" starttime="20231207 17:57:12.772" endtime="20231207 17:57:13.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:57:13.243" endtime="20231207 17:57:13.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:57:13.243" endtime="20231207 17:57:13.243"/>
</kw>
<msg timestamp="20231207 17:57:13.243" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 17:57:12.771" endtime="20231207 17:57:13.243"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 17:57:13.244" endtime="20231207 17:57:13.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:57:09.075" endtime="20231207 17:57:13.244"/>
</test>
<test id="s1-s17-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:13.248" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 17:57:13.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:13.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:13.246" endtime="20231207 17:57:13.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:13.250" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:13.250" endtime="20231207 17:57:13.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:13.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:13.250" endtime="20231207 17:57:13.251"/>
</kw>
<status status="PASS" starttime="20231207 17:57:13.246" endtime="20231207 17:57:13.251"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:13.253" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:13.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:13.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:13.252" endtime="20231207 17:57:13.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:13.811" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:13.810" endtime="20231207 17:57:13.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:13.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:13.811" endtime="20231207 17:57:13.811"/>
</kw>
<msg timestamp="20231207 17:57:13.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:13.251" endtime="20231207 17:57:13.812"/>
</kw>
<msg timestamp="20231207 17:57:13.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:13.251" endtime="20231207 17:57:13.812"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 17:57:13.812" endtime="20231207 17:57:13.812"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:13.814" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:13.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:13.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:13.813" endtime="20231207 17:57:13.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:13.816" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:13.816" endtime="20231207 17:57:13.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:13.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:13.817" endtime="20231207 17:57:13.817"/>
</kw>
<status status="PASS" starttime="20231207 17:57:13.812" endtime="20231207 17:57:13.817"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 17:57:13.245" endtime="20231207 17:57:13.817"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 17:57:01.102" endtime="20231207 17:57:13.818"/>
</suite>
<suite id="s1-s18" name="1.3.0-1.4.0-3-downgraded-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s18-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:16.811" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:16.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:16.813" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 17:57:16.809" endtime="20231207 17:57:16.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:16.814" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 17:57:16.814" endtime="20231207 17:57:16.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:16.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:16.814" endtime="20231207 17:57:16.814"/>
</kw>
<status status="PASS" starttime="20231207 17:57:16.808" endtime="20231207 17:57:16.815"/>
</kw>
<msg timestamp="20231207 17:57:16.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:16.808" endtime="20231207 17:57:16.816"/>
</kw>
<msg timestamp="20231207 17:57:16.816" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 17:57:16.808" endtime="20231207 17:57:16.816"/>
</kw>
<msg timestamp="20231207 17:57:16.816" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:57:16.807" endtime="20231207 17:57:16.816"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 17:57:16.816" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 17:57:16.816" endtime="20231207 17:57:16.816"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:16.819" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 17:57:16.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 17:57:16.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 17:57:16.818" endtime="20231207 17:57:16.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 17:57:16.855" level="INFO"/>
<status status="PASS" starttime="20231207 17:57:16.854" endtime="20231207 17:57:16.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 17:57:16.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 17:57:16.855" endtime="20231207 17:57:16.855"/>
</kw>
<status status="PASS" starttime="20231207 17:57:16.818" endtime="20231207 17:57:16.855"/>
</kw>
<msg timestamp="20231207 17:57:16.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 17:57:16.817" endtime="20231207 17:57:16.856"/>
</kw>
<status status="PASS" starttime="20231207 17:57:16.817" endtime="20231207 17:57:16.856"/>
</kw>
<status status="PASS" starttime="20231207 17:57:16.817" endtime="20231207 17:57:16.856"/>
</kw>
<status status="PASS" starttime="20231207 17:57:16.807" endtime="20231207 17:57:16.856"/>
</kw>
<status status="PASS" starttime="20231207 17:57:16.807" endtime="20231207 17:57:16.856"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 17:57:16.856" endtime="20231207 17:57:16.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 17:57:16.859" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 18:02:16.806" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231207 17:57:16.858" endtime="20231207 18:02:16.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231207 18:02:16.807" endtime="20231207 18:02:16.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231207 18:02:16.807" endtime="20231207 18:02:16.807"/>
</kw>
<status status="FAIL" starttime="20231207 17:57:16.857" endtime="20231207 18:02:16.808"/>
</kw>
<msg timestamp="20231207 18:02:16.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231207 17:57:16.857" endtime="20231207 18:02:16.808"/>
</kw>
<status status="FAIL" starttime="20231207 17:57:16.857" endtime="20231207 18:02:16.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20231207 18:02:16.809" endtime="20231207 18:02:16.809"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231207 17:57:16.806" endtime="20231207 18:02:16.810">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20231207 17:57:16.769" endtime="20231207 18:02:16.811"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="573163"/>
</suite>
<statistics>
<total>
<stat pass="56" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="4" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="3" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="56" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization">upgrade.1.3.0-1.4.0-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1">upgrade.1.3.0-1.4.0-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1">upgrade.1.3.0-1.4.0-1-original-validate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="1.3.0-1.4.0-1-original-prepare">upgrade.1.3.0-1.4.0-1-original-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="1.3.0-1.4.0-2-pre-finalized-validate-old1">upgrade.1.3.0-1.4.0-2-pre-finalized-validate-old1</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6" name="1.3.0-1.4.0-2-pre-finalized-generate-old1">upgrade.1.3.0-1.4.0-2-pre-finalized-generate-old1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s7" name="1.3.0-1.4.0-2-pre-finalized-generate-new1">upgrade.1.3.0-1.4.0-2-pre-finalized-generate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="1.3.0-1.4.0-2-pre-finalized-validate-new1">upgrade.1.3.0-1.4.0-2-pre-finalized-validate-new1</stat>
<stat pass="2" fail="0" skip="0" id="s1-s9" name="1.3.0-1.4.0-2-pre-finalized-check-finalization">upgrade.1.3.0-1.4.0-2-pre-finalized-check-finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s10" name="1.3.0-1.4.0-2-pre-finalized-snapshot">upgrade.1.3.0-1.4.0-2-pre-finalized-snapshot</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="1.3.0-1.4.0-2-pre-finalized-prepare">upgrade.1.3.0-1.4.0-2-pre-finalized-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s12" name="1.3.0-1.4.0-3-downgraded-check-finalization">upgrade.1.3.0-1.4.0-3-downgraded-check-finalization</stat>
<stat pass="3" fail="0" skip="0" id="s1-s13" name="1.3.0-1.4.0-3-downgraded-validate-old1">upgrade.1.3.0-1.4.0-3-downgraded-validate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s14" name="1.3.0-1.4.0-3-downgraded-validate-new1">upgrade.1.3.0-1.4.0-3-downgraded-validate-new1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s15" name="1.3.0-1.4.0-3-downgraded-generate-old2">upgrade.1.3.0-1.4.0-3-downgraded-generate-old2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s16" name="1.3.0-1.4.0-3-downgraded-validate-old2">upgrade.1.3.0-1.4.0-3-downgraded-validate-old2</stat>
<stat pass="4" fail="0" skip="0" id="s1-s17" name="1.3.0-1.4.0-3-downgraded-generate-old1">upgrade.1.3.0-1.4.0-3-downgraded-generate-old1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s18" name="1.3.0-1.4.0-3-downgraded-prepare">upgrade.1.3.0-1.4.0-3-downgraded-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
