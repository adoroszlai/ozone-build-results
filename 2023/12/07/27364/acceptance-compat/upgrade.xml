<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231207 10:36:08.516" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:17.737" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:17.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:17.739" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:19:17.734" endtime="20231207 10:19:17.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:17.739" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:19:17.739" endtime="20231207 10:19:17.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:17.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:17.739" endtime="20231207 10:19:17.740"/>
</kw>
<status status="PASS" starttime="20231207 10:19:17.734" endtime="20231207 10:19:17.740"/>
</kw>
<msg timestamp="20231207 10:19:17.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:17.734" endtime="20231207 10:19:17.741"/>
</kw>
<msg timestamp="20231207 10:19:17.741" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:19:17.734" endtime="20231207 10:19:17.741"/>
</kw>
<msg timestamp="20231207 10:19:17.741" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:17.733" endtime="20231207 10:19:17.741"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:19:17.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:17.742" endtime="20231207 10:19:17.742"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:17.745" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:17.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:17.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:17.744" endtime="20231207 10:19:17.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:17.802" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:17.801" endtime="20231207 10:19:17.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:17.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:17.802" endtime="20231207 10:19:17.803"/>
</kw>
<status status="PASS" starttime="20231207 10:19:17.743" endtime="20231207 10:19:17.803"/>
</kw>
<msg timestamp="20231207 10:19:17.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:17.743" endtime="20231207 10:19:17.803"/>
</kw>
<status status="PASS" starttime="20231207 10:19:17.742" endtime="20231207 10:19:17.803"/>
</kw>
<status status="PASS" starttime="20231207 10:19:17.742" endtime="20231207 10:19:17.803"/>
</kw>
<status status="PASS" starttime="20231207 10:19:17.733" endtime="20231207 10:19:17.803"/>
</kw>
<status status="PASS" starttime="20231207 10:19:17.732" endtime="20231207 10:19:17.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:17.805" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:17.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:17.807" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 10:19:17.804" endtime="20231207 10:19:17.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:17.807" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 10:19:17.807" endtime="20231207 10:19:17.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:17.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:17.808" endtime="20231207 10:19:17.808"/>
</kw>
<status status="PASS" starttime="20231207 10:19:17.804" endtime="20231207 10:19:17.808"/>
</kw>
<msg timestamp="20231207 10:19:17.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:17.804" endtime="20231207 10:19:17.809"/>
</kw>
<msg timestamp="20231207 10:19:17.809" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 10:19:17.804" endtime="20231207 10:19:17.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:17.809" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 10:19:17.809" endtime="20231207 10:19:17.809"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:19:17.810" endtime="20231207 10:19:17.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:17.812" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:19.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:19.814" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 10:19:17.811" endtime="20231207 10:19:19.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:19.815" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 10:19:19.814" endtime="20231207 10:19:19.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:19.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:19.815" endtime="20231207 10:19:19.815"/>
</kw>
<status status="PASS" starttime="20231207 10:19:17.810" endtime="20231207 10:19:19.815"/>
</kw>
<msg timestamp="20231207 10:19:19.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:17.810" endtime="20231207 10:19:19.816"/>
</kw>
<msg timestamp="20231207 10:19:19.816" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 10:19:17.810" endtime="20231207 10:19:19.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:19.816" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 10:19:19.816" endtime="20231207 10:19:19.817"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:19:19.817" endtime="20231207 10:19:19.817"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:19:17.732" endtime="20231207 10:19:19.817"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:19.823" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:19.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:19.825" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:19:19.821" endtime="20231207 10:19:19.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:19.825" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:19:19.825" endtime="20231207 10:19:19.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:19.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:19.826" endtime="20231207 10:19:19.826"/>
</kw>
<status status="PASS" starttime="20231207 10:19:19.820" endtime="20231207 10:19:19.826"/>
</kw>
<msg timestamp="20231207 10:19:19.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:19.820" endtime="20231207 10:19:19.827"/>
</kw>
<msg timestamp="20231207 10:19:19.827" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:19:19.820" endtime="20231207 10:19:19.827"/>
</kw>
<msg timestamp="20231207 10:19:19.828" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:19.819" endtime="20231207 10:19:19.828"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:19:19.828" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:19.828" endtime="20231207 10:19:19.828"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:19.830" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:19.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:19.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:19.829" endtime="20231207 10:19:19.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:19.884" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:19.884" endtime="20231207 10:19:19.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:19.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:19.884" endtime="20231207 10:19:19.885"/>
</kw>
<status status="PASS" starttime="20231207 10:19:19.829" endtime="20231207 10:19:19.885"/>
</kw>
<msg timestamp="20231207 10:19:19.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:19.829" endtime="20231207 10:19:19.886"/>
</kw>
<status status="PASS" starttime="20231207 10:19:19.828" endtime="20231207 10:19:19.886"/>
</kw>
<status status="PASS" starttime="20231207 10:19:19.828" endtime="20231207 10:19:19.886"/>
</kw>
<status status="PASS" starttime="20231207 10:19:19.819" endtime="20231207 10:19:19.886"/>
</kw>
<status status="PASS" starttime="20231207 10:19:19.818" endtime="20231207 10:19:19.886"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:19:19.886" endtime="20231207 10:19:19.886"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:19.889" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:22.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:22.001" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:19:19.887" endtime="20231207 10:19:22.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:22.001" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:19:22.001" endtime="20231207 10:19:22.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:22.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:22.002" endtime="20231207 10:19:22.002"/>
</kw>
<status status="PASS" starttime="20231207 10:19:19.887" endtime="20231207 10:19:22.002"/>
</kw>
<msg timestamp="20231207 10:19:22.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:19.887" endtime="20231207 10:19:22.002"/>
</kw>
<msg timestamp="20231207 10:19:22.003" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:19:19.886" endtime="20231207 10:19:22.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:22.003" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:19:22.003" endtime="20231207 10:19:22.003"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:19:22.003" endtime="20231207 10:19:22.003"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:19:19.818" endtime="20231207 10:19:22.004"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 10:19:17.696" endtime="20231207 10:19:22.004"/>
</suite>
<suite id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:24.971" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:24.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:24.973" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:19:24.969" endtime="20231207 10:19:24.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:24.974" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:19:24.973" endtime="20231207 10:19:24.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:24.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:24.974" endtime="20231207 10:19:24.974"/>
</kw>
<status status="PASS" starttime="20231207 10:19:24.968" endtime="20231207 10:19:24.974"/>
</kw>
<msg timestamp="20231207 10:19:24.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:24.967" endtime="20231207 10:19:24.975"/>
</kw>
<msg timestamp="20231207 10:19:24.975" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:19:24.967" endtime="20231207 10:19:24.975"/>
</kw>
<msg timestamp="20231207 10:19:24.975" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:24.967" endtime="20231207 10:19:24.975"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:19:24.976" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:24.976" endtime="20231207 10:19:24.976"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:24.978" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:25.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:25.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:24.977" endtime="20231207 10:19:25.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:25.038" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:25.038" endtime="20231207 10:19:25.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:25.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:25.038" endtime="20231207 10:19:25.039"/>
</kw>
<status status="PASS" starttime="20231207 10:19:24.977" endtime="20231207 10:19:25.039"/>
</kw>
<msg timestamp="20231207 10:19:25.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:24.977" endtime="20231207 10:19:25.039"/>
</kw>
<status status="PASS" starttime="20231207 10:19:24.976" endtime="20231207 10:19:25.039"/>
</kw>
<status status="PASS" starttime="20231207 10:19:24.976" endtime="20231207 10:19:25.039"/>
</kw>
<status status="PASS" starttime="20231207 10:19:24.966" endtime="20231207 10:19:25.039"/>
</kw>
<status status="PASS" starttime="20231207 10:19:24.966" endtime="20231207 10:19:25.040"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:25.043" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:27.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:27.213" level="INFO">${output} = 2023-12-07 10:19:27,103 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 10:19:25.042" endtime="20231207 10:19:27.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:27.214" level="INFO">2023-12-07 10:19:27,103 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 10:19:27.213" endtime="20231207 10:19:27.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:27.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:27.214" endtime="20231207 10:19:27.215"/>
</kw>
<status status="PASS" starttime="20231207 10:19:25.041" endtime="20231207 10:19:27.215"/>
</kw>
<msg timestamp="20231207 10:19:27.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:25.041" endtime="20231207 10:19:27.216"/>
</kw>
<msg timestamp="20231207 10:19:27.216" level="INFO">${output} = 2023-12-07 10:19:27,103 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 10:19:25.041" endtime="20231207 10:19:27.218"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:27.218" endtime="20231207 10:19:27.218"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:27.227" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:29.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:29.506" level="INFO">${output} = 2023-12-07 10:19:29,463 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 10:19:27.224" endtime="20231207 10:19:29.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:29.507" level="INFO">2023-12-07 10:19:29,463 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 10:19:29.507" endtime="20231207 10:19:29.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:29.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:29.508" endtime="20231207 10:19:29.508"/>
</kw>
<status status="PASS" starttime="20231207 10:19:27.220" endtime="20231207 10:19:29.509"/>
</kw>
<msg timestamp="20231207 10:19:29.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:27.219" endtime="20231207 10:19:29.509"/>
</kw>
<msg timestamp="20231207 10:19:29.509" level="INFO">${output} = 2023-12-07 10:19:29,463 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 10:19:27.219" endtime="20231207 10:19:29.509"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:29.510" endtime="20231207 10:19:29.510"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:19:25.040" endtime="20231207 10:19:29.510"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:29.513" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:19:29.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:29.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:29.512" endtime="20231207 10:19:29.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:29.515" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:29.515" endtime="20231207 10:19:29.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:29.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:29.515" endtime="20231207 10:19:29.516"/>
</kw>
<status status="PASS" starttime="20231207 10:19:29.511" endtime="20231207 10:19:29.516"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:29.518" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:33.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:33.808" level="INFO">${output} = 2023-12-07 10:19:32,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:19:32,297 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:19:29.517" endtime="20231207 10:19:33.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:33.809" level="INFO">2023-12-07 10:19:32,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:19:32,297 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:19:32,298 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 10:19:32,524 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 10:19:33.809" endtime="20231207 10:19:33.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:33.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:33.809" endtime="20231207 10:19:33.810"/>
</kw>
<status status="PASS" starttime="20231207 10:19:29.517" endtime="20231207 10:19:33.810"/>
</kw>
<msg timestamp="20231207 10:19:33.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:29.517" endtime="20231207 10:19:33.810"/>
</kw>
<msg timestamp="20231207 10:19:33.811" level="INFO">${output} = 2023-12-07 10:19:32,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:19:32,297 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:19:29.516" endtime="20231207 10:19:33.811"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:33.811" endtime="20231207 10:19:33.811"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:33.813" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:33.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:33.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:33.811" endtime="20231207 10:19:33.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:33.815" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:33.815" endtime="20231207 10:19:33.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:33.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:33.815" endtime="20231207 10:19:33.816"/>
</kw>
<status status="PASS" starttime="20231207 10:19:33.811" endtime="20231207 10:19:33.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:19:29.511" endtime="20231207 10:19:33.816"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:33.819" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:36.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:36.006" level="INFO">${output} = 2023-12-07 10:19:35,975 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 10:19:33.818" endtime="20231207 10:19:36.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:36.007" level="INFO">2023-12-07 10:19:35,975 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 10:19:36.006" endtime="20231207 10:19:36.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:36.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:36.007" endtime="20231207 10:19:36.007"/>
</kw>
<status status="PASS" starttime="20231207 10:19:33.818" endtime="20231207 10:19:36.007"/>
</kw>
<msg timestamp="20231207 10:19:36.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:33.817" endtime="20231207 10:19:36.008"/>
</kw>
<msg timestamp="20231207 10:19:36.008" level="INFO">${output} = 2023-12-07 10:19:35,975 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 10:19:33.817" endtime="20231207 10:19:36.008"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:36.008" endtime="20231207 10:19:36.008"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:19:33.816" endtime="20231207 10:19:36.009"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:36.012" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:19:36.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:36.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:36.010" endtime="20231207 10:19:36.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:36.014" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:36.014" endtime="20231207 10:19:36.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:36.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:36.014" endtime="20231207 10:19:36.015"/>
</kw>
<status status="PASS" starttime="20231207 10:19:36.010" endtime="20231207 10:19:36.015"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:36.018" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:39.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:39.808" level="INFO">${output} = 2023-12-07 10:19:38,533 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:19:38,599 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:19:36.017" endtime="20231207 10:19:39.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:39.808" level="INFO">2023-12-07 10:19:38,533 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:19:38,599 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:19:38,600 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 10:19:38,766 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 10:19:39.808" endtime="20231207 10:19:39.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:39.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:39.809" endtime="20231207 10:19:39.809"/>
</kw>
<status status="PASS" starttime="20231207 10:19:36.016" endtime="20231207 10:19:39.809"/>
</kw>
<msg timestamp="20231207 10:19:39.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:36.016" endtime="20231207 10:19:39.810"/>
</kw>
<msg timestamp="20231207 10:19:39.810" level="INFO">${output} = 2023-12-07 10:19:38,533 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:19:38,599 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:19:36.015" endtime="20231207 10:19:39.810"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:39.810" endtime="20231207 10:19:39.810"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:39.812" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:39.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:39.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:39.811" endtime="20231207 10:19:39.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:39.814" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:39.814" endtime="20231207 10:19:39.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:39.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:39.815" endtime="20231207 10:19:39.815"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.810" endtime="20231207 10:19:39.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:19:36.009" endtime="20231207 10:19:39.815"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:39.820" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:39.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:39.821" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:19:39.819" endtime="20231207 10:19:39.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:39.822" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:19:39.822" endtime="20231207 10:19:39.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:39.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:39.822" endtime="20231207 10:19:39.823"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.818" endtime="20231207 10:19:39.823"/>
</kw>
<msg timestamp="20231207 10:19:39.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:39.818" endtime="20231207 10:19:39.823"/>
</kw>
<msg timestamp="20231207 10:19:39.823" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:19:39.818" endtime="20231207 10:19:39.823"/>
</kw>
<msg timestamp="20231207 10:19:39.824" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:39.817" endtime="20231207 10:19:39.824"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:19:39.824" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:39.824" endtime="20231207 10:19:39.824"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:39.827" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:39.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:39.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:39.826" endtime="20231207 10:19:39.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:39.841" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:39.841" endtime="20231207 10:19:39.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:39.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:39.842" endtime="20231207 10:19:39.842"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.825" endtime="20231207 10:19:39.842"/>
</kw>
<msg timestamp="20231207 10:19:39.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:39.825" endtime="20231207 10:19:39.843"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.825" endtime="20231207 10:19:39.843"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.824" endtime="20231207 10:19:39.843"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.817" endtime="20231207 10:19:39.843"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.817" endtime="20231207 10:19:39.843"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:39.845" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:41.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:41.580" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:39.844" endtime="20231207 10:19:41.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:41.581" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:41.581" endtime="20231207 10:19:41.581"/>
</kw>
<msg timestamp="20231207 10:19:41.581" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:39.844" endtime="20231207 10:19:41.581"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:19:41.582" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:19:41.582" endtime="20231207 10:19:41.583"/>
</kw>
<msg timestamp="20231207 10:19:41.583" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:19:41.582" endtime="20231207 10:19:41.583"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:19:41.583" endtime="20231207 10:19:41.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:19:41.583" endtime="20231207 10:19:41.583"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:19:41.583" endtime="20231207 10:19:41.583"/>
</branch>
<status status="PASS" starttime="20231207 10:19:41.583" endtime="20231207 10:19:41.583"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:19:41.584" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:19:41.583" endtime="20231207 10:19:41.584"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:19:41.584" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:19:41.584" endtime="20231207 10:19:41.584"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:19:41.585" level="INFO">${secret} = ['0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d']</msg>
<status status="PASS" starttime="20231207 10:19:41.584" endtime="20231207 10:19:41.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:19:41.586" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:41.585" endtime="20231207 10:19:41.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:19:41.587" level="INFO">${secret} = 0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:41.586" endtime="20231207 10:19:41.587"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:41.589" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:41.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:41.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:41.588" endtime="20231207 10:19:41.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:41.945" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:41.945" endtime="20231207 10:19:41.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:41.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:41.945" endtime="20231207 10:19:41.946"/>
</kw>
<status status="PASS" starttime="20231207 10:19:41.587" endtime="20231207 10:19:41.946"/>
</kw>
<msg timestamp="20231207 10:19:41.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:41.587" endtime="20231207 10:19:41.946"/>
</kw>
<status status="PASS" starttime="20231207 10:19:41.587" endtime="20231207 10:19:41.947"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:41.949" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:42.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:42.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:41.948" endtime="20231207 10:19:42.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:42.277" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:42.277" endtime="20231207 10:19:42.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:42.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:42.277" endtime="20231207 10:19:42.278"/>
</kw>
<status status="PASS" starttime="20231207 10:19:41.947" endtime="20231207 10:19:42.278"/>
</kw>
<msg timestamp="20231207 10:19:42.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:41.947" endtime="20231207 10:19:42.279"/>
</kw>
<status status="PASS" starttime="20231207 10:19:41.947" endtime="20231207 10:19:42.279"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:42.281" level="INFO">Running command 'aws configure set aws_secret_access_key 0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:42.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:42.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:42.280" endtime="20231207 10:19:42.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:42.628" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:42.627" endtime="20231207 10:19:42.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:42.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:42.628" endtime="20231207 10:19:42.628"/>
</kw>
<status status="PASS" starttime="20231207 10:19:42.279" endtime="20231207 10:19:42.628"/>
</kw>
<msg timestamp="20231207 10:19:42.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:42.279" endtime="20231207 10:19:42.629"/>
</kw>
<status status="PASS" starttime="20231207 10:19:42.279" endtime="20231207 10:19:42.629"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:42.631" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:42.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:42.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:42.630" endtime="20231207 10:19:42.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:42.975" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:42.975" endtime="20231207 10:19:42.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:42.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:42.976" endtime="20231207 10:19:42.976"/>
</kw>
<status status="PASS" starttime="20231207 10:19:42.630" endtime="20231207 10:19:42.976"/>
</kw>
<msg timestamp="20231207 10:19:42.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:42.630" endtime="20231207 10:19:42.977"/>
</kw>
<status status="PASS" starttime="20231207 10:19:42.629" endtime="20231207 10:19:42.977"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:42.979" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:43.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:43.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:42.978" endtime="20231207 10:19:43.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:43.328" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:43.328" endtime="20231207 10:19:43.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:43.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:43.328" endtime="20231207 10:19:43.329"/>
</kw>
<status status="PASS" starttime="20231207 10:19:42.978" endtime="20231207 10:19:43.329"/>
</kw>
<msg timestamp="20231207 10:19:43.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:42.977" endtime="20231207 10:19:43.329"/>
</kw>
<status status="PASS" starttime="20231207 10:19:42.977" endtime="20231207 10:19:43.330"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.843" endtime="20231207 10:19:43.330"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.843" endtime="20231207 10:19:43.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:19:43.330" endtime="20231207 10:19:43.330"/>
</kw>
<status status="PASS" starttime="20231207 10:19:39.816" endtime="20231207 10:19:43.330"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:19:43.331" level="INFO">${randStr} = 0759488047</msg>
<status status="PASS" starttime="20231207 10:19:43.331" endtime="20231207 10:19:43.331"/>
</kw>
<msg timestamp="20231207 10:19:43.332" level="INFO">${random} = ozone-test-0759488047</msg>
<status status="PASS" starttime="20231207 10:19:43.331" endtime="20231207 10:19:43.332"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:43.335" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-0759488047 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:44.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:44.708" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0759488047"
}</msg>
<status status="PASS" starttime="20231207 10:19:43.333" endtime="20231207 10:19:44.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:44.709" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0759488047"
}</msg>
<status status="PASS" starttime="20231207 10:19:44.709" endtime="20231207 10:19:44.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:44.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:44.710" endtime="20231207 10:19:44.710"/>
</kw>
<status status="PASS" starttime="20231207 10:19:43.333" endtime="20231207 10:19:44.710"/>
</kw>
<msg timestamp="20231207 10:19:44.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:43.333" endtime="20231207 10:19:44.711"/>
</kw>
<msg timestamp="20231207 10:19:44.712" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0759488047"
}</msg>
<status status="PASS" starttime="20231207 10:19:43.332" endtime="20231207 10:19:44.712"/>
</kw>
<msg timestamp="20231207 10:19:44.712" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0759488047"
}</msg>
<status status="PASS" starttime="20231207 10:19:43.332" endtime="20231207 10:19:44.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:44.712" endtime="20231207 10:19:44.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:44.713" endtime="20231207 10:19:44.713"/>
</kw>
<msg timestamp="20231207 10:19:44.714" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 10:19:43.332" endtime="20231207 10:19:44.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 10:19:44.714" endtime="20231207 10:19:44.714"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:19:39.816" endtime="20231207 10:19:44.715"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:44.719" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:19:44.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:44.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:44.717" endtime="20231207 10:19:44.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:44.721" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:44.720" endtime="20231207 10:19:44.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:44.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:44.721" endtime="20231207 10:19:44.721"/>
</kw>
<status status="PASS" starttime="20231207 10:19:44.716" endtime="20231207 10:19:44.721"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:44.724" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:46.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:46.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:44.722" endtime="20231207 10:19:46.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:46.033" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:46.032" endtime="20231207 10:19:46.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:46.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:46.033" endtime="20231207 10:19:46.033"/>
</kw>
<msg timestamp="20231207 10:19:46.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:44.722" endtime="20231207 10:19:46.034"/>
</kw>
<msg timestamp="20231207 10:19:46.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:44.722" endtime="20231207 10:19:46.034"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:46.034" endtime="20231207 10:19:46.034"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:46.036" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:46.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:46.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:46.035" endtime="20231207 10:19:46.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:46.038" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:46.038" endtime="20231207 10:19:46.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:46.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:46.039" endtime="20231207 10:19:46.039"/>
</kw>
<status status="PASS" starttime="20231207 10:19:46.034" endtime="20231207 10:19:46.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:19:44.715" endtime="20231207 10:19:46.039"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 10:19:24.902" endtime="20231207 10:19:46.040"/>
</suite>
<suite id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:49.022" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:49.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:49.024" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:19:49.020" endtime="20231207 10:19:49.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:49.024" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:19:49.024" endtime="20231207 10:19:49.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:49.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:49.025" endtime="20231207 10:19:49.025"/>
</kw>
<status status="PASS" starttime="20231207 10:19:49.019" endtime="20231207 10:19:49.025"/>
</kw>
<msg timestamp="20231207 10:19:49.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:49.019" endtime="20231207 10:19:49.026"/>
</kw>
<msg timestamp="20231207 10:19:49.026" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:19:49.019" endtime="20231207 10:19:49.026"/>
</kw>
<msg timestamp="20231207 10:19:49.026" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:49.019" endtime="20231207 10:19:49.026"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:19:49.027" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:49.027" endtime="20231207 10:19:49.027"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:49.029" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:49.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:49.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:49.028" endtime="20231207 10:19:49.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:49.042" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:49.041" endtime="20231207 10:19:49.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:49.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:49.042" endtime="20231207 10:19:49.042"/>
</kw>
<status status="PASS" starttime="20231207 10:19:49.028" endtime="20231207 10:19:49.042"/>
</kw>
<msg timestamp="20231207 10:19:49.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:49.028" endtime="20231207 10:19:49.043"/>
</kw>
<status status="PASS" starttime="20231207 10:19:49.027" endtime="20231207 10:19:49.043"/>
</kw>
<status status="PASS" starttime="20231207 10:19:49.027" endtime="20231207 10:19:49.043"/>
</kw>
<status status="PASS" starttime="20231207 10:19:49.018" endtime="20231207 10:19:49.043"/>
</kw>
<status status="PASS" starttime="20231207 10:19:49.018" endtime="20231207 10:19:49.043"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:19:49.044" level="INFO">${random} = 63090</msg>
<status status="PASS" starttime="20231207 10:19:49.044" endtime="20231207 10:19:49.044"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:49.047" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-63090 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:52.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:52.585" level="INFO">${output} = 2023-12-07 10:19:51,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:19:51,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:19:49.046" endtime="20231207 10:19:52.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:52.586" level="INFO">2023-12-07 10:19:51,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:19:51,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:19:51,577 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 10:19:52.586" endtime="20231207 10:19:52.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:52.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:52.586" endtime="20231207 10:19:52.587"/>
</kw>
<status status="PASS" starttime="20231207 10:19:49.045" endtime="20231207 10:19:52.587"/>
</kw>
<msg timestamp="20231207 10:19:52.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:49.045" endtime="20231207 10:19:52.587"/>
</kw>
<msg timestamp="20231207 10:19:52.588" level="INFO">${output} = 2023-12-07 10:19:51,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:19:51,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:19:49.045" endtime="20231207 10:19:52.588"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:52.588" endtime="20231207 10:19:52.588"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:52.590" level="INFO">Running command 'cat /tmp/key-63090 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:52.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:52.591" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:19:52.588" endtime="20231207 10:19:52.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:52.592" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:19:52.591" endtime="20231207 10:19:52.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:52.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:52.592" endtime="20231207 10:19:52.592"/>
</kw>
<msg timestamp="20231207 10:19:52.592" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:19:52.588" endtime="20231207 10:19:52.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:52.593" endtime="20231207 10:19:52.593"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:52.594" level="INFO">Running command 'rm /tmp/key-63090 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:52.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:52.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:52.593" endtime="20231207 10:19:52.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:52.596" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:52.596" endtime="20231207 10:19:52.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:52.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:52.596" endtime="20231207 10:19:52.597"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.593" endtime="20231207 10:19:52.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:19:49.043" endtime="20231207 10:19:52.597"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:52.601" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:52.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:52.603" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:19:52.600" endtime="20231207 10:19:52.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:52.604" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:19:52.603" endtime="20231207 10:19:52.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:52.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:52.604" endtime="20231207 10:19:52.604"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.600" endtime="20231207 10:19:52.604"/>
</kw>
<msg timestamp="20231207 10:19:52.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:52.600" endtime="20231207 10:19:52.605"/>
</kw>
<msg timestamp="20231207 10:19:52.605" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:19:52.599" endtime="20231207 10:19:52.605"/>
</kw>
<msg timestamp="20231207 10:19:52.605" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:52.599" endtime="20231207 10:19:52.605"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:19:52.606" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:52.605" endtime="20231207 10:19:52.606"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:52.608" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:52.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:52.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:52.607" endtime="20231207 10:19:52.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:52.647" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:52.647" endtime="20231207 10:19:52.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:52.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:52.647" endtime="20231207 10:19:52.648"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.607" endtime="20231207 10:19:52.648"/>
</kw>
<msg timestamp="20231207 10:19:52.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:52.606" endtime="20231207 10:19:52.648"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.606" endtime="20231207 10:19:52.649"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.606" endtime="20231207 10:19:52.649"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.599" endtime="20231207 10:19:52.649"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.598" endtime="20231207 10:19:52.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:52.651" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:54.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:54.409" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:52.650" endtime="20231207 10:19:54.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:54.410" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:54.409" endtime="20231207 10:19:54.410"/>
</kw>
<msg timestamp="20231207 10:19:54.410" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:52.650" endtime="20231207 10:19:54.410"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:19:54.411" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:19:54.411" endtime="20231207 10:19:54.411"/>
</kw>
<msg timestamp="20231207 10:19:54.412" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:19:54.410" endtime="20231207 10:19:54.412"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:19:54.412" endtime="20231207 10:19:54.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:19:54.412" endtime="20231207 10:19:54.412"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:19:54.412" endtime="20231207 10:19:54.412"/>
</branch>
<status status="PASS" starttime="20231207 10:19:54.412" endtime="20231207 10:19:54.412"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:19:54.413" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:19:54.412" endtime="20231207 10:19:54.413"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:19:54.413" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:19:54.413" endtime="20231207 10:19:54.413"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:19:54.414" level="INFO">${secret} = ['0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d']</msg>
<status status="PASS" starttime="20231207 10:19:54.414" endtime="20231207 10:19:54.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:19:54.415" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:54.414" endtime="20231207 10:19:54.415"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:19:54.416" level="INFO">${secret} = 0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:54.415" endtime="20231207 10:19:54.416"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:54.418" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:54.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:54.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:54.417" endtime="20231207 10:19:54.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:54.758" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:54.757" endtime="20231207 10:19:54.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:54.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:54.758" endtime="20231207 10:19:54.758"/>
</kw>
<status status="PASS" starttime="20231207 10:19:54.416" endtime="20231207 10:19:54.759"/>
</kw>
<msg timestamp="20231207 10:19:54.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:54.416" endtime="20231207 10:19:54.759"/>
</kw>
<status status="PASS" starttime="20231207 10:19:54.416" endtime="20231207 10:19:54.759"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:54.762" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:55.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:55.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:54.761" endtime="20231207 10:19:55.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:55.129" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:55.129" endtime="20231207 10:19:55.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:55.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:55.130" endtime="20231207 10:19:55.130"/>
</kw>
<status status="PASS" starttime="20231207 10:19:54.760" endtime="20231207 10:19:55.130"/>
</kw>
<msg timestamp="20231207 10:19:55.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:54.760" endtime="20231207 10:19:55.131"/>
</kw>
<status status="PASS" starttime="20231207 10:19:54.760" endtime="20231207 10:19:55.131"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:55.133" level="INFO">Running command 'aws configure set aws_secret_access_key 0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:55.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:55.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:55.132" endtime="20231207 10:19:55.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:55.474" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:55.473" endtime="20231207 10:19:55.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:55.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:55.474" endtime="20231207 10:19:55.475"/>
</kw>
<status status="PASS" starttime="20231207 10:19:55.132" endtime="20231207 10:19:55.475"/>
</kw>
<msg timestamp="20231207 10:19:55.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:55.131" endtime="20231207 10:19:55.475"/>
</kw>
<status status="PASS" starttime="20231207 10:19:55.131" endtime="20231207 10:19:55.475"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:55.478" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:55.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:55.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:55.476" endtime="20231207 10:19:55.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:55.819" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:55.818" endtime="20231207 10:19:55.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:55.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:55.819" endtime="20231207 10:19:55.820"/>
</kw>
<status status="PASS" starttime="20231207 10:19:55.476" endtime="20231207 10:19:55.820"/>
</kw>
<msg timestamp="20231207 10:19:55.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:55.476" endtime="20231207 10:19:55.821"/>
</kw>
<status status="PASS" starttime="20231207 10:19:55.475" endtime="20231207 10:19:55.821"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:55.823" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:56.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:56.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:55.822" endtime="20231207 10:19:56.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:56.181" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:56.181" endtime="20231207 10:19:56.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:56.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:56.181" endtime="20231207 10:19:56.182"/>
</kw>
<status status="PASS" starttime="20231207 10:19:55.822" endtime="20231207 10:19:56.182"/>
</kw>
<msg timestamp="20231207 10:19:56.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:55.821" endtime="20231207 10:19:56.182"/>
</kw>
<status status="PASS" starttime="20231207 10:19:55.821" endtime="20231207 10:19:56.183"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.649" endtime="20231207 10:19:56.183"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.649" endtime="20231207 10:19:56.183"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:19:56.183" endtime="20231207 10:19:56.183"/>
</kw>
<status status="PASS" starttime="20231207 10:19:52.598" endtime="20231207 10:19:56.183"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:56.186" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:56.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:56.725" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:19:56.184" endtime="20231207 10:19:56.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:56.726" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:19:56 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:19:56.725" endtime="20231207 10:19:56.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:56.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:56.726" endtime="20231207 10:19:56.727"/>
</kw>
<msg timestamp="20231207 10:19:56.727" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:19:56.184" endtime="20231207 10:19:56.727"/>
</kw>
<msg timestamp="20231207 10:19:56.727" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:19:56.183" endtime="20231207 10:19:56.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:56.727" endtime="20231207 10:19:56.727"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:56.729" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:56.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:56.731" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:19:56.728" endtime="20231207 10:19:56.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:56.732" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:19:56.731" endtime="20231207 10:19:56.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:56.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:56.732" endtime="20231207 10:19:56.732"/>
</kw>
<msg timestamp="20231207 10:19:56.733" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:19:56.728" endtime="20231207 10:19:56.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:19:56.733" endtime="20231207 10:19:56.733"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:56.735" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:56.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:56.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:56.734" endtime="20231207 10:19:56.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:56.737" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:56.737" endtime="20231207 10:19:56.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:56.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:56.737" endtime="20231207 10:19:56.738"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.733" endtime="20231207 10:19:56.738"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:19:52.598" endtime="20231207 10:19:56.738"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:56.743" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:56.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:56.745" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:19:56.742" endtime="20231207 10:19:56.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:56.746" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:19:56.745" endtime="20231207 10:19:56.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:56.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:56.746" endtime="20231207 10:19:56.746"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.741" endtime="20231207 10:19:56.747"/>
</kw>
<msg timestamp="20231207 10:19:56.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:56.741" endtime="20231207 10:19:56.747"/>
</kw>
<msg timestamp="20231207 10:19:56.747" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:19:56.740" endtime="20231207 10:19:56.747"/>
</kw>
<msg timestamp="20231207 10:19:56.748" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:56.740" endtime="20231207 10:19:56.748"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:19:56.748" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:56.748" endtime="20231207 10:19:56.748"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:56.751" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:56.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:56.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:56.750" endtime="20231207 10:19:56.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:56.764" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:56.764" endtime="20231207 10:19:56.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:56.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:56.764" endtime="20231207 10:19:56.765"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.749" endtime="20231207 10:19:56.765"/>
</kw>
<msg timestamp="20231207 10:19:56.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:56.749" endtime="20231207 10:19:56.765"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.749" endtime="20231207 10:19:56.765"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.748" endtime="20231207 10:19:56.765"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.740" endtime="20231207 10:19:56.765"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.739" endtime="20231207 10:19:56.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:56.768" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:58.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:58.627" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:56.767" endtime="20231207 10:19:58.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:58.628" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:58.627" endtime="20231207 10:19:58.628"/>
</kw>
<msg timestamp="20231207 10:19:58.628" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:56.766" endtime="20231207 10:19:58.628"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:19:58.629" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:19:58.628" endtime="20231207 10:19:58.629"/>
</kw>
<msg timestamp="20231207 10:19:58.629" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:19:58.628" endtime="20231207 10:19:58.629"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:19:58.630" endtime="20231207 10:19:58.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:19:58.630" endtime="20231207 10:19:58.630"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:19:58.630" endtime="20231207 10:19:58.630"/>
</branch>
<status status="PASS" starttime="20231207 10:19:58.630" endtime="20231207 10:19:58.630"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:19:58.630" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:19:58.630" endtime="20231207 10:19:58.630"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:19:58.631" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:19:58.631" endtime="20231207 10:19:58.631"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:19:58.631" level="INFO">${secret} = ['0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d']</msg>
<status status="PASS" starttime="20231207 10:19:58.631" endtime="20231207 10:19:58.631"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:19:58.632" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:19:58.631" endtime="20231207 10:19:58.632"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:19:58.633" level="INFO">${secret} = 0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d</msg>
<status status="PASS" starttime="20231207 10:19:58.632" endtime="20231207 10:19:58.633"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:58.636" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:58.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:58.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:58.634" endtime="20231207 10:19:58.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:58.979" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:58.979" endtime="20231207 10:19:58.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:58.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:58.979" endtime="20231207 10:19:58.980"/>
</kw>
<status status="PASS" starttime="20231207 10:19:58.634" endtime="20231207 10:19:58.980"/>
</kw>
<msg timestamp="20231207 10:19:58.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:58.634" endtime="20231207 10:19:58.980"/>
</kw>
<status status="PASS" starttime="20231207 10:19:58.633" endtime="20231207 10:19:58.981"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:58.983" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:59.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:59.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:58.982" endtime="20231207 10:19:59.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:59.322" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:59.322" endtime="20231207 10:19:59.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:59.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:59.322" endtime="20231207 10:19:59.323"/>
</kw>
<status status="PASS" starttime="20231207 10:19:58.981" endtime="20231207 10:19:59.323"/>
</kw>
<msg timestamp="20231207 10:19:59.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:58.981" endtime="20231207 10:19:59.324"/>
</kw>
<status status="PASS" starttime="20231207 10:19:58.981" endtime="20231207 10:19:59.324"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:59.326" level="INFO">Running command 'aws configure set aws_secret_access_key 0db8ae711eb6f75f5831e22605d5ac65de5cafc2c2f8cad64d413bbff08dbd2d 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:19:59.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:19:59.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:59.325" endtime="20231207 10:19:59.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:19:59.701" level="INFO"/>
<status status="PASS" starttime="20231207 10:19:59.700" endtime="20231207 10:19:59.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:19:59.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:19:59.701" endtime="20231207 10:19:59.701"/>
</kw>
<status status="PASS" starttime="20231207 10:19:59.325" endtime="20231207 10:19:59.702"/>
</kw>
<msg timestamp="20231207 10:19:59.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:59.324" endtime="20231207 10:19:59.702"/>
</kw>
<status status="PASS" starttime="20231207 10:19:59.324" endtime="20231207 10:19:59.702"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:19:59.705" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:20:00.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:20:00.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:19:59.703" endtime="20231207 10:20:00.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:20:00.044" level="INFO"/>
<status status="PASS" starttime="20231207 10:20:00.043" endtime="20231207 10:20:00.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:20:00.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:20:00.044" endtime="20231207 10:20:00.044"/>
</kw>
<status status="PASS" starttime="20231207 10:19:59.703" endtime="20231207 10:20:00.044"/>
</kw>
<msg timestamp="20231207 10:20:00.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:19:59.703" endtime="20231207 10:20:00.045"/>
</kw>
<status status="PASS" starttime="20231207 10:19:59.702" endtime="20231207 10:20:00.045"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:20:00.047" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:20:00.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:20:00.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:20:00.046" endtime="20231207 10:20:00.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:20:00.386" level="INFO"/>
<status status="PASS" starttime="20231207 10:20:00.385" endtime="20231207 10:20:00.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:20:00.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:20:00.386" endtime="20231207 10:20:00.386"/>
</kw>
<status status="PASS" starttime="20231207 10:20:00.046" endtime="20231207 10:20:00.387"/>
</kw>
<msg timestamp="20231207 10:20:00.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:20:00.045" endtime="20231207 10:20:00.387"/>
</kw>
<status status="PASS" starttime="20231207 10:20:00.045" endtime="20231207 10:20:00.387"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.766" endtime="20231207 10:20:00.387"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.766" endtime="20231207 10:20:00.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:20:00.388" endtime="20231207 10:20:00.388"/>
</kw>
<status status="PASS" starttime="20231207 10:19:56.739" endtime="20231207 10:20:00.388"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:20:00.390" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:20:00.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:20:00.834" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:45 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:20:00.389" endtime="20231207 10:20:00.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:20:00.835" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:45 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:20:00 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:20:00.834" endtime="20231207 10:20:00.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:20:00.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:20:00.835" endtime="20231207 10:20:00.836"/>
</kw>
<msg timestamp="20231207 10:20:00.836" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:45 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:20:00.389" endtime="20231207 10:20:00.836"/>
</kw>
<msg timestamp="20231207 10:20:00.836" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:45 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:20:00.388" endtime="20231207 10:20:00.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:20:00.836" endtime="20231207 10:20:00.837"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:20:00.838" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:20:00.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:20:00.840" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:20:00.837" endtime="20231207 10:20:00.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:20:00.841" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:20:00.840" endtime="20231207 10:20:00.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:20:00.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:20:00.841" endtime="20231207 10:20:00.841"/>
</kw>
<msg timestamp="20231207 10:20:00.841" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:20:00.837" endtime="20231207 10:20:00.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:20:00.842" endtime="20231207 10:20:00.842"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:20:00.843" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:20:00.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:20:00.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:20:00.842" endtime="20231207 10:20:00.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:20:00.845" level="INFO"/>
<status status="PASS" starttime="20231207 10:20:00.845" endtime="20231207 10:20:00.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:20:00.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:20:00.846" endtime="20231207 10:20:00.846"/>
</kw>
<status status="PASS" starttime="20231207 10:20:00.842" endtime="20231207 10:20:00.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:19:56.739" endtime="20231207 10:20:00.846"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:19:48.957" endtime="20231207 10:20:00.847"/>
</suite>
<suite id="s1-s4" name="1.3.0-1.4.0-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:20:03.739" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:20:03.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:20:03.741" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:20:03.737" endtime="20231207 10:20:03.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:20:03.742" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:20:03.741" endtime="20231207 10:20:03.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:20:03.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:20:03.742" endtime="20231207 10:20:03.743"/>
</kw>
<status status="PASS" starttime="20231207 10:20:03.737" endtime="20231207 10:20:03.743"/>
</kw>
<msg timestamp="20231207 10:20:03.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:20:03.737" endtime="20231207 10:20:03.744"/>
</kw>
<msg timestamp="20231207 10:20:03.744" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:20:03.736" endtime="20231207 10:20:03.744"/>
</kw>
<msg timestamp="20231207 10:20:03.744" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:20:03.736" endtime="20231207 10:20:03.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:20:03.745" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:20:03.744" endtime="20231207 10:20:03.745"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:20:03.747" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:20:03.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:20:03.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:20:03.746" endtime="20231207 10:20:03.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:20:03.760" level="INFO"/>
<status status="PASS" starttime="20231207 10:20:03.760" endtime="20231207 10:20:03.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:20:03.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:20:03.760" endtime="20231207 10:20:03.761"/>
</kw>
<status status="PASS" starttime="20231207 10:20:03.745" endtime="20231207 10:20:03.761"/>
</kw>
<msg timestamp="20231207 10:20:03.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:20:03.745" endtime="20231207 10:20:03.761"/>
</kw>
<status status="PASS" starttime="20231207 10:20:03.745" endtime="20231207 10:20:03.761"/>
</kw>
<status status="PASS" starttime="20231207 10:20:03.745" endtime="20231207 10:20:03.762"/>
</kw>
<status status="PASS" starttime="20231207 10:20:03.736" endtime="20231207 10:20:03.762"/>
</kw>
<status status="PASS" starttime="20231207 10:20:03.735" endtime="20231207 10:20:03.762"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:20:03.762" endtime="20231207 10:20:03.762"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:20:03.764" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:20:11.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:20:11.265" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20231207 10:20:03.763" endtime="20231207 10:20:11.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:20:11.266" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231207 10:20:11.265" endtime="20231207 10:20:11.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:20:11.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:20:11.266" endtime="20231207 10:20:11.266"/>
</kw>
<status status="PASS" starttime="20231207 10:20:03.763" endtime="20231207 10:20:11.267"/>
</kw>
<msg timestamp="20231207 10:20:11.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:20:03.763" endtime="20231207 10:20:11.267"/>
</kw>
<msg timestamp="20231207 10:20:11.267" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20231207 10:20:03.762" endtime="20231207 10:20:11.267"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:20:11.268" endtime="20231207 10:20:11.268"/>
</kw>
<status status="PASS" starttime="20231207 10:20:11.267" endtime="20231207 10:20:11.268"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:20:03.735" endtime="20231207 10:20:11.268"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20231207 10:20:03.700" endtime="20231207 10:20:11.269"/>
</suite>
<suite id="s1-s5" name="1.3.0-1.4.0-2-pre-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:21:50.810" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:21:50.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:21:50.813" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:21:50.809" endtime="20231207 10:21:50.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:21:50.813" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:21:50.813" endtime="20231207 10:21:50.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:21:50.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:21:50.813" endtime="20231207 10:21:50.814"/>
</kw>
<status status="PASS" starttime="20231207 10:21:50.808" endtime="20231207 10:21:50.814"/>
</kw>
<msg timestamp="20231207 10:21:50.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:21:50.808" endtime="20231207 10:21:50.814"/>
</kw>
<msg timestamp="20231207 10:21:50.814" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:21:50.808" endtime="20231207 10:21:50.814"/>
</kw>
<msg timestamp="20231207 10:21:50.814" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:21:50.807" endtime="20231207 10:21:50.814"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:21:50.815" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:21:50.815" endtime="20231207 10:21:50.815"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:21:50.817" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:21:50.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:21:50.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:21:50.816" endtime="20231207 10:21:50.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:21:50.832" level="INFO"/>
<status status="PASS" starttime="20231207 10:21:50.832" endtime="20231207 10:21:50.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:21:50.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:21:50.832" endtime="20231207 10:21:50.832"/>
</kw>
<status status="PASS" starttime="20231207 10:21:50.816" endtime="20231207 10:21:50.833"/>
</kw>
<msg timestamp="20231207 10:21:50.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:21:50.816" endtime="20231207 10:21:50.833"/>
</kw>
<status status="PASS" starttime="20231207 10:21:50.815" endtime="20231207 10:21:50.833"/>
</kw>
<status status="PASS" starttime="20231207 10:21:50.815" endtime="20231207 10:21:50.833"/>
</kw>
<status status="PASS" starttime="20231207 10:21:50.807" endtime="20231207 10:21:50.833"/>
</kw>
<status status="PASS" starttime="20231207 10:21:50.806" endtime="20231207 10:21:50.833"/>
</kw>
<test id="s1-s5-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:21:50.834" level="INFO">${random} = 26551</msg>
<status status="PASS" starttime="20231207 10:21:50.834" endtime="20231207 10:21:50.834"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:21:50.837" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-26551 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:21:59.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:21:59.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:21:50.836" endtime="20231207 10:21:59.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:21:59.838" level="INFO"/>
<status status="PASS" starttime="20231207 10:21:59.837" endtime="20231207 10:21:59.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:21:59.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:21:59.838" endtime="20231207 10:21:59.838"/>
</kw>
<status status="PASS" starttime="20231207 10:21:50.835" endtime="20231207 10:21:59.839"/>
</kw>
<msg timestamp="20231207 10:21:59.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:21:50.835" endtime="20231207 10:21:59.839"/>
</kw>
<msg timestamp="20231207 10:21:59.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:21:50.834" endtime="20231207 10:21:59.839"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:21:59.839" endtime="20231207 10:21:59.840"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:21:59.842" level="INFO">Running command 'cat /tmp/key-26551 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:21:59.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:21:59.844" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:21:59.840" endtime="20231207 10:21:59.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:21:59.845" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:21:59.844" endtime="20231207 10:21:59.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:21:59.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:21:59.845" endtime="20231207 10:21:59.845"/>
</kw>
<msg timestamp="20231207 10:21:59.845" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:21:59.840" endtime="20231207 10:21:59.845"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:21:59.846" endtime="20231207 10:21:59.846"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:21:59.848" level="INFO">Running command 'rm /tmp/key-26551 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:21:59.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:21:59.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:21:59.847" endtime="20231207 10:21:59.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:21:59.850" level="INFO"/>
<status status="PASS" starttime="20231207 10:21:59.850" endtime="20231207 10:21:59.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:21:59.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:21:59.850" endtime="20231207 10:21:59.851"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.846" endtime="20231207 10:21:59.851"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:21:50.833" endtime="20231207 10:21:59.851"/>
</test>
<test id="s1-s5-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:21:59.856" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:21:59.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:21:59.859" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:21:59.855" endtime="20231207 10:21:59.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:21:59.859" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:21:59.859" endtime="20231207 10:21:59.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:21:59.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:21:59.860" endtime="20231207 10:21:59.860"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.855" endtime="20231207 10:21:59.860"/>
</kw>
<msg timestamp="20231207 10:21:59.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:21:59.854" endtime="20231207 10:21:59.860"/>
</kw>
<msg timestamp="20231207 10:21:59.860" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:21:59.854" endtime="20231207 10:21:59.861"/>
</kw>
<msg timestamp="20231207 10:21:59.861" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:21:59.854" endtime="20231207 10:21:59.861"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:21:59.861" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:21:59.861" endtime="20231207 10:21:59.861"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:21:59.864" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:21:59.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:21:59.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:21:59.863" endtime="20231207 10:21:59.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:21:59.904" level="INFO"/>
<status status="PASS" starttime="20231207 10:21:59.904" endtime="20231207 10:21:59.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:21:59.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:21:59.904" endtime="20231207 10:21:59.905"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.863" endtime="20231207 10:21:59.905"/>
</kw>
<msg timestamp="20231207 10:21:59.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:21:59.862" endtime="20231207 10:21:59.905"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.862" endtime="20231207 10:21:59.905"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.861" endtime="20231207 10:21:59.905"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.853" endtime="20231207 10:21:59.905"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.853" endtime="20231207 10:21:59.905"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:21:59.908" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:02.664" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:22:02.664" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:21:59.907" endtime="20231207 10:22:02.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:02.665" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:22:02.664" endtime="20231207 10:22:02.665"/>
</kw>
<msg timestamp="20231207 10:22:02.665" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:21:59.906" endtime="20231207 10:22:02.665"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:02.666" endtime="20231207 10:22:02.666"/>
</kw>
<msg timestamp="20231207 10:22:02.666" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:22:02.665" endtime="20231207 10:22:02.666"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:02.669" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:05.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:05.479" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:22:02.668" endtime="20231207 10:22:05.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:05.480" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:22:05.480" endtime="20231207 10:22:05.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:05.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:05.481" endtime="20231207 10:22:05.481"/>
</kw>
<status status="PASS" starttime="20231207 10:22:02.667" endtime="20231207 10:22:05.481"/>
</kw>
<msg timestamp="20231207 10:22:05.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:02.667" endtime="20231207 10:22:05.482"/>
</kw>
<status status="PASS" starttime="20231207 10:22:02.667" endtime="20231207 10:22:05.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:05.485" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:08.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:08.102" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=085add2d9e2eabeff7f5af92c271c3b006870e81a77e905f11d6c01224e79791
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:22:05.483" endtime="20231207 10:22:08.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:08.103" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=085add2d9e2eabeff7f5af92c271c3b006870e81a77e905f11d6c01224e79791
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:22:08.102" endtime="20231207 10:22:08.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:08.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:08.103" endtime="20231207 10:22:08.104"/>
</kw>
<status status="PASS" starttime="20231207 10:22:05.483" endtime="20231207 10:22:08.104"/>
</kw>
<msg timestamp="20231207 10:22:08.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:05.482" endtime="20231207 10:22:08.104"/>
</kw>
<msg timestamp="20231207 10:22:08.104" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=085add2d9e2eabeff7f5af92c271c3b006870e81a77e905f11d6c01224e79791
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:22:05.482" endtime="20231207 10:22:08.104"/>
</kw>
<status status="PASS" starttime="20231207 10:22:02.666" endtime="20231207 10:22:08.104"/>
</branch>
<status status="PASS" starttime="20231207 10:22:02.666" endtime="20231207 10:22:08.104"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:22:08.105" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:22:08.105" endtime="20231207 10:22:08.105"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:22:08.106" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:22:08.105" endtime="20231207 10:22:08.106"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:22:08.106" level="INFO">${secret} = ['085add2d9e2eabeff7f5af92c271c3b006870e81a77e905f11d6c01224e79791']</msg>
<status status="PASS" starttime="20231207 10:22:08.106" endtime="20231207 10:22:08.106"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:22:08.108" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:08.106" endtime="20231207 10:22:08.108"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:22:08.109" level="INFO">${secret} = 085add2d9e2eabeff7f5af92c271c3b006870e81a77e905f11d6c01224e79791</msg>
<status status="PASS" starttime="20231207 10:22:08.108" endtime="20231207 10:22:08.109"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:08.112" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:08.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:08.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:08.110" endtime="20231207 10:22:08.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:08.525" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:08.525" endtime="20231207 10:22:08.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:08.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:08.525" endtime="20231207 10:22:08.526"/>
</kw>
<status status="PASS" starttime="20231207 10:22:08.110" endtime="20231207 10:22:08.526"/>
</kw>
<msg timestamp="20231207 10:22:08.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:08.109" endtime="20231207 10:22:08.526"/>
</kw>
<status status="PASS" starttime="20231207 10:22:08.109" endtime="20231207 10:22:08.526"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:08.529" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:09.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:09.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:08.528" endtime="20231207 10:22:09.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:09.036" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:09.036" endtime="20231207 10:22:09.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:09.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:09.036" endtime="20231207 10:22:09.037"/>
</kw>
<status status="PASS" starttime="20231207 10:22:08.527" endtime="20231207 10:22:09.037"/>
</kw>
<msg timestamp="20231207 10:22:09.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:08.527" endtime="20231207 10:22:09.037"/>
</kw>
<status status="PASS" starttime="20231207 10:22:08.526" endtime="20231207 10:22:09.037"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:09.040" level="INFO">Running command 'aws configure set aws_secret_access_key 085add2d9e2eabeff7f5af92c271c3b006870e81a77e905f11d6c01224e79791 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:09.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:09.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:09.038" endtime="20231207 10:22:09.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:09.451" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:09.450" endtime="20231207 10:22:09.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:09.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:09.451" endtime="20231207 10:22:09.451"/>
</kw>
<status status="PASS" starttime="20231207 10:22:09.038" endtime="20231207 10:22:09.452"/>
</kw>
<msg timestamp="20231207 10:22:09.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:09.038" endtime="20231207 10:22:09.452"/>
</kw>
<status status="PASS" starttime="20231207 10:22:09.037" endtime="20231207 10:22:09.452"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:09.454" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:09.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:09.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:09.453" endtime="20231207 10:22:09.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:09.859" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:09.859" endtime="20231207 10:22:09.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:09.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:09.860" endtime="20231207 10:22:09.860"/>
</kw>
<status status="PASS" starttime="20231207 10:22:09.453" endtime="20231207 10:22:09.860"/>
</kw>
<msg timestamp="20231207 10:22:09.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:09.452" endtime="20231207 10:22:09.860"/>
</kw>
<status status="PASS" starttime="20231207 10:22:09.452" endtime="20231207 10:22:09.861"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:09.864" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:10.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:10.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:09.862" endtime="20231207 10:22:10.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:10.351" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:10.351" endtime="20231207 10:22:10.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:10.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:10.351" endtime="20231207 10:22:10.352"/>
</kw>
<status status="PASS" starttime="20231207 10:22:09.861" endtime="20231207 10:22:10.352"/>
</kw>
<msg timestamp="20231207 10:22:10.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:09.861" endtime="20231207 10:22:10.353"/>
</kw>
<status status="PASS" starttime="20231207 10:22:09.861" endtime="20231207 10:22:10.353"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.906" endtime="20231207 10:22:10.353"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.906" endtime="20231207 10:22:10.353"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:22:10.353" endtime="20231207 10:22:10.353"/>
</kw>
<status status="PASS" starttime="20231207 10:21:59.853" endtime="20231207 10:22:10.353"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:10.356" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:13.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:13.321" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:39 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:22:10.354" endtime="20231207 10:22:13.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:13.322" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:39 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:22:10 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:22:13.322" endtime="20231207 10:22:13.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:13.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:13.322" endtime="20231207 10:22:13.323"/>
</kw>
<msg timestamp="20231207 10:22:13.323" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:39 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:22:10.354" endtime="20231207 10:22:13.323"/>
</kw>
<msg timestamp="20231207 10:22:13.323" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:39 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:22:10.353" endtime="20231207 10:22:13.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:13.323" endtime="20231207 10:22:13.324"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:13.326" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:13.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:13.328" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:22:13.324" endtime="20231207 10:22:13.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:13.329" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:22:13.328" endtime="20231207 10:22:13.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:13.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:13.329" endtime="20231207 10:22:13.329"/>
</kw>
<msg timestamp="20231207 10:22:13.329" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:22:13.324" endtime="20231207 10:22:13.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:13.330" endtime="20231207 10:22:13.330"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:13.332" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:13.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:13.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:13.330" endtime="20231207 10:22:13.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:13.334" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:13.334" endtime="20231207 10:22:13.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:13.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:13.334" endtime="20231207 10:22:13.335"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.330" endtime="20231207 10:22:13.335"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:21:59.852" endtime="20231207 10:22:13.335"/>
</test>
<test id="s1-s5-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:13.340" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:13.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:13.342" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:22:13.339" endtime="20231207 10:22:13.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:13.343" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:22:13.342" endtime="20231207 10:22:13.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:13.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:13.343" endtime="20231207 10:22:13.343"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.338" endtime="20231207 10:22:13.344"/>
</kw>
<msg timestamp="20231207 10:22:13.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:13.338" endtime="20231207 10:22:13.344"/>
</kw>
<msg timestamp="20231207 10:22:13.344" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:22:13.338" endtime="20231207 10:22:13.344"/>
</kw>
<msg timestamp="20231207 10:22:13.344" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:13.337" endtime="20231207 10:22:13.344"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:22:13.345" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:13.344" endtime="20231207 10:22:13.345"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:13.348" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:13.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:13.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:13.347" endtime="20231207 10:22:13.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:13.363" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:13.362" endtime="20231207 10:22:13.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:13.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:13.363" endtime="20231207 10:22:13.363"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.346" endtime="20231207 10:22:13.363"/>
</kw>
<msg timestamp="20231207 10:22:13.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:13.346" endtime="20231207 10:22:13.364"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.345" endtime="20231207 10:22:13.364"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.345" endtime="20231207 10:22:13.364"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.337" endtime="20231207 10:22:13.364"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.336" endtime="20231207 10:22:13.364"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:13.366" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:15.821" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:22:15.821" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:22:13.365" endtime="20231207 10:22:15.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:15.823" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:22:15.822" endtime="20231207 10:22:15.823"/>
</kw>
<msg timestamp="20231207 10:22:15.823" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:22:13.365" endtime="20231207 10:22:15.823"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:15.823" endtime="20231207 10:22:15.824"/>
</kw>
<msg timestamp="20231207 10:22:15.824" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:22:15.823" endtime="20231207 10:22:15.824"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:15.827" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:18.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:18.406" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:22:15.826" endtime="20231207 10:22:18.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:18.407" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:22:18.406" endtime="20231207 10:22:18.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:18.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:18.407" endtime="20231207 10:22:18.408"/>
</kw>
<status status="PASS" starttime="20231207 10:22:15.825" endtime="20231207 10:22:18.408"/>
</kw>
<msg timestamp="20231207 10:22:18.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:15.825" endtime="20231207 10:22:18.409"/>
</kw>
<status status="PASS" starttime="20231207 10:22:15.824" endtime="20231207 10:22:18.409"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:18.413" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:21.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:21.059" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=482e1556e008c1204207b0005676ef2c20f098a40bce23b25272f41316db5c3c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:22:18.410" endtime="20231207 10:22:21.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:21.060" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=482e1556e008c1204207b0005676ef2c20f098a40bce23b25272f41316db5c3c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:22:21.059" endtime="20231207 10:22:21.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:21.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:21.060" endtime="20231207 10:22:21.060"/>
</kw>
<status status="PASS" starttime="20231207 10:22:18.410" endtime="20231207 10:22:21.060"/>
</kw>
<msg timestamp="20231207 10:22:21.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:18.409" endtime="20231207 10:22:21.061"/>
</kw>
<msg timestamp="20231207 10:22:21.061" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=482e1556e008c1204207b0005676ef2c20f098a40bce23b25272f41316db5c3c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:22:18.409" endtime="20231207 10:22:21.061"/>
</kw>
<status status="PASS" starttime="20231207 10:22:15.824" endtime="20231207 10:22:21.061"/>
</branch>
<status status="PASS" starttime="20231207 10:22:15.824" endtime="20231207 10:22:21.061"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:22:21.061" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:22:21.061" endtime="20231207 10:22:21.062"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:22:21.062" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:22:21.062" endtime="20231207 10:22:21.062"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:22:21.063" level="INFO">${secret} = ['482e1556e008c1204207b0005676ef2c20f098a40bce23b25272f41316db5c3c']</msg>
<status status="PASS" starttime="20231207 10:22:21.062" endtime="20231207 10:22:21.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:22:21.064" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:21.063" endtime="20231207 10:22:21.064"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:22:21.065" level="INFO">${secret} = 482e1556e008c1204207b0005676ef2c20f098a40bce23b25272f41316db5c3c</msg>
<status status="PASS" starttime="20231207 10:22:21.064" endtime="20231207 10:22:21.065"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:21.068" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:21.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:21.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:21.066" endtime="20231207 10:22:21.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:21.539" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:21.538" endtime="20231207 10:22:21.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:21.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:21.539" endtime="20231207 10:22:21.539"/>
</kw>
<status status="PASS" starttime="20231207 10:22:21.066" endtime="20231207 10:22:21.539"/>
</kw>
<msg timestamp="20231207 10:22:21.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:21.066" endtime="20231207 10:22:21.539"/>
</kw>
<status status="PASS" starttime="20231207 10:22:21.065" endtime="20231207 10:22:21.540"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:21.542" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:21.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:21.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:21.541" endtime="20231207 10:22:21.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:21.930" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:21.929" endtime="20231207 10:22:21.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:21.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:21.930" endtime="20231207 10:22:21.931"/>
</kw>
<status status="PASS" starttime="20231207 10:22:21.541" endtime="20231207 10:22:21.931"/>
</kw>
<msg timestamp="20231207 10:22:21.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:21.540" endtime="20231207 10:22:21.931"/>
</kw>
<status status="PASS" starttime="20231207 10:22:21.540" endtime="20231207 10:22:21.931"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:21.934" level="INFO">Running command 'aws configure set aws_secret_access_key 482e1556e008c1204207b0005676ef2c20f098a40bce23b25272f41316db5c3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:22.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:22.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:21.933" endtime="20231207 10:22:22.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:22.354" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:22.353" endtime="20231207 10:22:22.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:22.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:22.354" endtime="20231207 10:22:22.355"/>
</kw>
<status status="PASS" starttime="20231207 10:22:21.932" endtime="20231207 10:22:22.355"/>
</kw>
<msg timestamp="20231207 10:22:22.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:21.932" endtime="20231207 10:22:22.355"/>
</kw>
<status status="PASS" starttime="20231207 10:22:21.931" endtime="20231207 10:22:22.355"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:22.358" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:22.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:22.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:22.356" endtime="20231207 10:22:22.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:22.757" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:22.756" endtime="20231207 10:22:22.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:22.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:22.757" endtime="20231207 10:22:22.757"/>
</kw>
<status status="PASS" starttime="20231207 10:22:22.356" endtime="20231207 10:22:22.757"/>
</kw>
<msg timestamp="20231207 10:22:22.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:22.356" endtime="20231207 10:22:22.758"/>
</kw>
<status status="PASS" starttime="20231207 10:22:22.355" endtime="20231207 10:22:22.758"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:22.761" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:23.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:23.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:22.759" endtime="20231207 10:22:23.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:23.167" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:23.166" endtime="20231207 10:22:23.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:23.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:23.167" endtime="20231207 10:22:23.168"/>
</kw>
<status status="PASS" starttime="20231207 10:22:22.759" endtime="20231207 10:22:23.168"/>
</kw>
<msg timestamp="20231207 10:22:23.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:22.758" endtime="20231207 10:22:23.168"/>
</kw>
<status status="PASS" starttime="20231207 10:22:22.758" endtime="20231207 10:22:23.168"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.364" endtime="20231207 10:22:23.168"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.364" endtime="20231207 10:22:23.168"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:22:23.169" endtime="20231207 10:22:23.169"/>
</kw>
<status status="PASS" starttime="20231207 10:22:13.336" endtime="20231207 10:22:23.169"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:23.172" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:23.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:23.947" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:45 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:22:23.170" endtime="20231207 10:22:23.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:23.948" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:45 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:22:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:22:23.948" endtime="20231207 10:22:23.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:23.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:23.949" endtime="20231207 10:22:23.949"/>
</kw>
<msg timestamp="20231207 10:22:23.949" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:45 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:22:23.170" endtime="20231207 10:22:23.949"/>
</kw>
<msg timestamp="20231207 10:22:23.949" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:19:45 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:22:23.169" endtime="20231207 10:22:23.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:23.950" endtime="20231207 10:22:23.950"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:23.952" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:23.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:23.954" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:22:23.951" endtime="20231207 10:22:23.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:23.955" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:22:23.954" endtime="20231207 10:22:23.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:23.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:23.955" endtime="20231207 10:22:23.956"/>
</kw>
<msg timestamp="20231207 10:22:23.956" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:22:23.950" endtime="20231207 10:22:23.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:23.956" endtime="20231207 10:22:23.956"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:23.958" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:23.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:23.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:23.957" endtime="20231207 10:22:23.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:23.961" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:23.960" endtime="20231207 10:22:23.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:23.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:23.961" endtime="20231207 10:22:23.961"/>
</kw>
<status status="PASS" starttime="20231207 10:22:23.956" endtime="20231207 10:22:23.962"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:22:13.336" endtime="20231207 10:22:23.962"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:21:50.723" endtime="20231207 10:22:23.963"/>
</suite>
<suite id="s1-s6" name="1.3.0-1.4.0-2-pre-finalized-generate-old1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:27.368" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:27.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:27.371" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:22:27.365" endtime="20231207 10:22:27.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:27.371" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:22:27.371" endtime="20231207 10:22:27.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:27.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:27.372" endtime="20231207 10:22:27.372"/>
</kw>
<status status="PASS" starttime="20231207 10:22:27.365" endtime="20231207 10:22:27.372"/>
</kw>
<msg timestamp="20231207 10:22:27.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:27.365" endtime="20231207 10:22:27.372"/>
</kw>
<msg timestamp="20231207 10:22:27.373" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:22:27.364" endtime="20231207 10:22:27.373"/>
</kw>
<msg timestamp="20231207 10:22:27.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:27.364" endtime="20231207 10:22:27.373"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:22:27.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:27.373" endtime="20231207 10:22:27.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:27.376" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:27.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:27.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:27.375" endtime="20231207 10:22:27.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:27.389" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:27.389" endtime="20231207 10:22:27.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:27.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:27.389" endtime="20231207 10:22:27.390"/>
</kw>
<status status="PASS" starttime="20231207 10:22:27.375" endtime="20231207 10:22:27.390"/>
</kw>
<msg timestamp="20231207 10:22:27.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:27.374" endtime="20231207 10:22:27.390"/>
</kw>
<status status="PASS" starttime="20231207 10:22:27.374" endtime="20231207 10:22:27.390"/>
</kw>
<status status="PASS" starttime="20231207 10:22:27.374" endtime="20231207 10:22:27.390"/>
</kw>
<status status="PASS" starttime="20231207 10:22:27.364" endtime="20231207 10:22:27.390"/>
</kw>
<status status="PASS" starttime="20231207 10:22:27.363" endtime="20231207 10:22:27.390"/>
</kw>
<test id="s1-s6-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:27.393" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:22:27.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:27.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:27.391" endtime="20231207 10:22:27.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:27.395" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:27.394" endtime="20231207 10:22:27.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:27.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:27.395" endtime="20231207 10:22:27.395"/>
</kw>
<status status="PASS" starttime="20231207 10:22:27.391" endtime="20231207 10:22:27.395"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:27.398" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:33.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:33.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:27.397" endtime="20231207 10:22:33.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:33.178" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:33.177" endtime="20231207 10:22:33.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:33.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:33.178" endtime="20231207 10:22:33.178"/>
</kw>
<status status="PASS" starttime="20231207 10:22:27.396" endtime="20231207 10:22:33.179"/>
</kw>
<msg timestamp="20231207 10:22:33.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:27.396" endtime="20231207 10:22:33.179"/>
</kw>
<msg timestamp="20231207 10:22:33.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:27.395" endtime="20231207 10:22:33.179"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:33.179" endtime="20231207 10:22:33.179"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:33.182" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:33.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:33.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:33.180" endtime="20231207 10:22:33.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:33.185" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:33.185" endtime="20231207 10:22:33.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:33.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:33.185" endtime="20231207 10:22:33.186"/>
</kw>
<status status="PASS" starttime="20231207 10:22:33.180" endtime="20231207 10:22:33.186"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:22:27.390" endtime="20231207 10:22:33.186"/>
</test>
<test id="s1-s6-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:33.190" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:22:33.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:33.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:33.188" endtime="20231207 10:22:33.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:33.192" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:33.191" endtime="20231207 10:22:33.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:33.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:33.192" endtime="20231207 10:22:33.192"/>
</kw>
<status status="PASS" starttime="20231207 10:22:33.188" endtime="20231207 10:22:33.192"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:33.195" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:38.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:38.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:33.194" endtime="20231207 10:22:38.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:38.378" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:38.377" endtime="20231207 10:22:38.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:38.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:38.378" endtime="20231207 10:22:38.379"/>
</kw>
<status status="PASS" starttime="20231207 10:22:33.193" endtime="20231207 10:22:38.379"/>
</kw>
<msg timestamp="20231207 10:22:38.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:33.193" endtime="20231207 10:22:38.379"/>
</kw>
<msg timestamp="20231207 10:22:38.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:33.193" endtime="20231207 10:22:38.379"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:38.379" endtime="20231207 10:22:38.379"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:38.382" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:38.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:38.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:38.380" endtime="20231207 10:22:38.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:38.384" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:38.384" endtime="20231207 10:22:38.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:38.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:38.385" endtime="20231207 10:22:38.385"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.380" endtime="20231207 10:22:38.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:22:33.187" endtime="20231207 10:22:38.385"/>
</test>
<test id="s1-s6-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:38.391" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:38.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:38.393" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:22:38.389" endtime="20231207 10:22:38.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:38.394" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:22:38.394" endtime="20231207 10:22:38.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:38.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:38.394" endtime="20231207 10:22:38.395"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.389" endtime="20231207 10:22:38.395"/>
</kw>
<msg timestamp="20231207 10:22:38.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:38.389" endtime="20231207 10:22:38.395"/>
</kw>
<msg timestamp="20231207 10:22:38.395" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:22:38.388" endtime="20231207 10:22:38.395"/>
</kw>
<msg timestamp="20231207 10:22:38.395" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:38.388" endtime="20231207 10:22:38.395"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:22:38.396" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:38.396" endtime="20231207 10:22:38.396"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:38.399" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:38.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:38.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:38.398" endtime="20231207 10:22:38.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:38.415" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:38.414" endtime="20231207 10:22:38.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:38.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:38.415" endtime="20231207 10:22:38.415"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.397" endtime="20231207 10:22:38.415"/>
</kw>
<msg timestamp="20231207 10:22:38.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:38.397" endtime="20231207 10:22:38.415"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.397" endtime="20231207 10:22:38.416"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.396" endtime="20231207 10:22:38.416"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.387" endtime="20231207 10:22:38.416"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.387" endtime="20231207 10:22:38.416"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:38.418" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:41.240" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:22:41.240" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:22:38.417" endtime="20231207 10:22:41.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:41.242" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:22:41.241" endtime="20231207 10:22:41.242"/>
</kw>
<msg timestamp="20231207 10:22:41.242" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:22:38.417" endtime="20231207 10:22:41.242"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:41.243" endtime="20231207 10:22:41.243"/>
</kw>
<msg timestamp="20231207 10:22:41.243" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:22:41.242" endtime="20231207 10:22:41.243"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:41.248" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:43.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:43.982" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:22:41.245" endtime="20231207 10:22:43.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:43.983" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:22:43.982" endtime="20231207 10:22:43.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:43.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:43.983" endtime="20231207 10:22:43.983"/>
</kw>
<status status="PASS" starttime="20231207 10:22:41.245" endtime="20231207 10:22:43.983"/>
</kw>
<msg timestamp="20231207 10:22:43.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:41.244" endtime="20231207 10:22:43.983"/>
</kw>
<status status="PASS" starttime="20231207 10:22:41.244" endtime="20231207 10:22:43.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:43.986" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:46.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:46.584" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f83bb60541ac1f01e8e1aea4c3d9009b89b92bf666076c23c11f35e0db55723c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:22:43.985" endtime="20231207 10:22:46.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:46.585" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f83bb60541ac1f01e8e1aea4c3d9009b89b92bf666076c23c11f35e0db55723c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:22:46.584" endtime="20231207 10:22:46.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:46.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:46.585" endtime="20231207 10:22:46.585"/>
</kw>
<status status="PASS" starttime="20231207 10:22:43.984" endtime="20231207 10:22:46.585"/>
</kw>
<msg timestamp="20231207 10:22:46.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:43.984" endtime="20231207 10:22:46.586"/>
</kw>
<msg timestamp="20231207 10:22:46.586" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f83bb60541ac1f01e8e1aea4c3d9009b89b92bf666076c23c11f35e0db55723c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:22:43.984" endtime="20231207 10:22:46.586"/>
</kw>
<status status="PASS" starttime="20231207 10:22:41.244" endtime="20231207 10:22:46.586"/>
</branch>
<status status="PASS" starttime="20231207 10:22:41.244" endtime="20231207 10:22:46.586"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:22:46.587" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:22:46.586" endtime="20231207 10:22:46.587"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:22:46.587" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:22:46.587" endtime="20231207 10:22:46.587"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:22:46.588" level="INFO">${secret} = ['f83bb60541ac1f01e8e1aea4c3d9009b89b92bf666076c23c11f35e0db55723c']</msg>
<status status="PASS" starttime="20231207 10:22:46.587" endtime="20231207 10:22:46.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:22:46.589" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:46.588" endtime="20231207 10:22:46.589"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:22:46.590" level="INFO">${secret} = f83bb60541ac1f01e8e1aea4c3d9009b89b92bf666076c23c11f35e0db55723c</msg>
<status status="PASS" starttime="20231207 10:22:46.589" endtime="20231207 10:22:46.590"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:46.593" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:46.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:46.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:46.591" endtime="20231207 10:22:46.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:46.993" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:46.993" endtime="20231207 10:22:46.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:46.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:46.993" endtime="20231207 10:22:46.994"/>
</kw>
<status status="PASS" starttime="20231207 10:22:46.591" endtime="20231207 10:22:46.994"/>
</kw>
<msg timestamp="20231207 10:22:46.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:46.590" endtime="20231207 10:22:46.994"/>
</kw>
<status status="PASS" starttime="20231207 10:22:46.590" endtime="20231207 10:22:46.994"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:46.997" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:47.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:47.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:46.995" endtime="20231207 10:22:47.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:47.388" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:47.387" endtime="20231207 10:22:47.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:47.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:47.388" endtime="20231207 10:22:47.389"/>
</kw>
<status status="PASS" starttime="20231207 10:22:46.995" endtime="20231207 10:22:47.389"/>
</kw>
<msg timestamp="20231207 10:22:47.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:46.995" endtime="20231207 10:22:47.389"/>
</kw>
<status status="PASS" starttime="20231207 10:22:46.994" endtime="20231207 10:22:47.389"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:47.392" level="INFO">Running command 'aws configure set aws_secret_access_key f83bb60541ac1f01e8e1aea4c3d9009b89b92bf666076c23c11f35e0db55723c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:47.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:47.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:47.390" endtime="20231207 10:22:47.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:47.798" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:47.797" endtime="20231207 10:22:47.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:47.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:47.798" endtime="20231207 10:22:47.798"/>
</kw>
<status status="PASS" starttime="20231207 10:22:47.390" endtime="20231207 10:22:47.798"/>
</kw>
<msg timestamp="20231207 10:22:47.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:47.390" endtime="20231207 10:22:47.799"/>
</kw>
<status status="PASS" starttime="20231207 10:22:47.389" endtime="20231207 10:22:47.799"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:47.802" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:48.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:48.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:47.800" endtime="20231207 10:22:48.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:48.233" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:48.232" endtime="20231207 10:22:48.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:48.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:48.233" endtime="20231207 10:22:48.233"/>
</kw>
<status status="PASS" starttime="20231207 10:22:47.799" endtime="20231207 10:22:48.233"/>
</kw>
<msg timestamp="20231207 10:22:48.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:47.799" endtime="20231207 10:22:48.234"/>
</kw>
<status status="PASS" starttime="20231207 10:22:47.799" endtime="20231207 10:22:48.234"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:48.237" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:48.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:48.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:48.235" endtime="20231207 10:22:48.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:48.633" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:48.633" endtime="20231207 10:22:48.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:48.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:48.634" endtime="20231207 10:22:48.634"/>
</kw>
<status status="PASS" starttime="20231207 10:22:48.235" endtime="20231207 10:22:48.634"/>
</kw>
<msg timestamp="20231207 10:22:48.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:48.234" endtime="20231207 10:22:48.635"/>
</kw>
<status status="PASS" starttime="20231207 10:22:48.234" endtime="20231207 10:22:48.635"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.416" endtime="20231207 10:22:48.635"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.416" endtime="20231207 10:22:48.635"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:22:48.635" endtime="20231207 10:22:48.635"/>
</kw>
<status status="PASS" starttime="20231207 10:22:38.386" endtime="20231207 10:22:48.635"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:22:48.636" level="INFO">${randStr} = 6080095024</msg>
<status status="PASS" starttime="20231207 10:22:48.636" endtime="20231207 10:22:48.636"/>
</kw>
<msg timestamp="20231207 10:22:48.636" level="INFO">${random} = ozone-test-6080095024</msg>
<status status="PASS" starttime="20231207 10:22:48.635" endtime="20231207 10:22:48.636"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:48.640" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-6080095024 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:49.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:49.225" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-6080095024"
}</msg>
<status status="PASS" starttime="20231207 10:22:48.638" endtime="20231207 10:22:49.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:49.225" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-6080095024"
}</msg>
<status status="PASS" starttime="20231207 10:22:49.225" endtime="20231207 10:22:49.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:49.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:49.226" endtime="20231207 10:22:49.226"/>
</kw>
<status status="PASS" starttime="20231207 10:22:48.638" endtime="20231207 10:22:49.226"/>
</kw>
<msg timestamp="20231207 10:22:49.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:48.638" endtime="20231207 10:22:49.226"/>
</kw>
<msg timestamp="20231207 10:22:49.227" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-6080095024"
}</msg>
<status status="PASS" starttime="20231207 10:22:48.637" endtime="20231207 10:22:49.227"/>
</kw>
<msg timestamp="20231207 10:22:49.227" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-6080095024"
}</msg>
<status status="PASS" starttime="20231207 10:22:48.637" endtime="20231207 10:22:49.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:49.227" endtime="20231207 10:22:49.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:49.227" endtime="20231207 10:22:49.228"/>
</kw>
<msg timestamp="20231207 10:22:49.228" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 10:22:48.637" endtime="20231207 10:22:49.228"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 10:22:49.228" endtime="20231207 10:22:49.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:22:38.386" endtime="20231207 10:22:49.229"/>
</test>
<test id="s1-s6-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:49.232" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:22:49.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:49.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:49.230" endtime="20231207 10:22:49.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:49.234" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:49.234" endtime="20231207 10:22:49.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:49.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:49.234" endtime="20231207 10:22:49.235"/>
</kw>
<status status="PASS" starttime="20231207 10:22:49.230" endtime="20231207 10:22:49.235"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:49.237" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:50.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:50.040" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 10:22:49.236" endtime="20231207 10:22:50.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:50.041" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 10:22:50.040" endtime="20231207 10:22:50.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:50.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:50.041" endtime="20231207 10:22:50.042"/>
</kw>
<msg timestamp="20231207 10:22:50.042" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 10:22:49.235" endtime="20231207 10:22:50.042"/>
</kw>
<msg timestamp="20231207 10:22:50.042" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 10:22:49.235" endtime="20231207 10:22:50.042"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:50.042" endtime="20231207 10:22:50.042"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:50.045" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:50.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:50.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:50.043" endtime="20231207 10:22:50.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:50.047" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:50.047" endtime="20231207 10:22:50.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:50.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:50.048" endtime="20231207 10:22:50.048"/>
</kw>
<status status="PASS" starttime="20231207 10:22:50.043" endtime="20231207 10:22:50.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:22:49.229" endtime="20231207 10:22:50.048"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 10:22:27.287" endtime="20231207 10:22:50.049"/>
</suite>
<suite id="s1-s7" name="1.3.0-1.4.0-2-pre-finalized-generate-new1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:53.576" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:53.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:53.578" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:22:53.574" endtime="20231207 10:22:53.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:53.579" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:22:53.579" endtime="20231207 10:22:53.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:53.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:53.579" endtime="20231207 10:22:53.580"/>
</kw>
<status status="PASS" starttime="20231207 10:22:53.574" endtime="20231207 10:22:53.580"/>
</kw>
<msg timestamp="20231207 10:22:53.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:53.574" endtime="20231207 10:22:53.580"/>
</kw>
<msg timestamp="20231207 10:22:53.580" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:22:53.574" endtime="20231207 10:22:53.580"/>
</kw>
<msg timestamp="20231207 10:22:53.580" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:53.573" endtime="20231207 10:22:53.580"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:22:53.581" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:22:53.580" endtime="20231207 10:22:53.581"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:53.584" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:53.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:53.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:53.582" endtime="20231207 10:22:53.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:53.599" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:53.599" endtime="20231207 10:22:53.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:53.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:53.600" endtime="20231207 10:22:53.600"/>
</kw>
<status status="PASS" starttime="20231207 10:22:53.582" endtime="20231207 10:22:53.600"/>
</kw>
<msg timestamp="20231207 10:22:53.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:53.582" endtime="20231207 10:22:53.601"/>
</kw>
<status status="PASS" starttime="20231207 10:22:53.581" endtime="20231207 10:22:53.601"/>
</kw>
<status status="PASS" starttime="20231207 10:22:53.581" endtime="20231207 10:22:53.601"/>
</kw>
<status status="PASS" starttime="20231207 10:22:53.573" endtime="20231207 10:22:53.601"/>
</kw>
<status status="PASS" starttime="20231207 10:22:53.572" endtime="20231207 10:22:53.601"/>
</kw>
<test id="s1-s7-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:53.605" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:22:56.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:22:56.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:53.603" endtime="20231207 10:22:56.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:22:56.846" level="INFO"/>
<status status="PASS" starttime="20231207 10:22:56.845" endtime="20231207 10:22:56.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:22:56.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:22:56.846" endtime="20231207 10:22:56.846"/>
</kw>
<status status="PASS" starttime="20231207 10:22:53.603" endtime="20231207 10:22:56.846"/>
</kw>
<msg timestamp="20231207 10:22:56.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:53.602" endtime="20231207 10:22:56.847"/>
</kw>
<msg timestamp="20231207 10:22:56.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:53.602" endtime="20231207 10:22:56.847"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:22:56.847" endtime="20231207 10:22:56.847"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:22:56.851" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:00.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:00.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:56.849" endtime="20231207 10:23:00.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:00.425" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:00.425" endtime="20231207 10:23:00.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:00.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:00.426" endtime="20231207 10:23:00.426"/>
</kw>
<status status="PASS" starttime="20231207 10:22:56.848" endtime="20231207 10:23:00.426"/>
</kw>
<msg timestamp="20231207 10:23:00.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:22:56.848" endtime="20231207 10:23:00.426"/>
</kw>
<msg timestamp="20231207 10:23:00.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:22:56.848" endtime="20231207 10:23:00.427"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:00.427" endtime="20231207 10:23:00.427"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:22:53.601" endtime="20231207 10:23:00.427"/>
</test>
<test id="s1-s7-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:00.430" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:23:00.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:00.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:00.429" endtime="20231207 10:23:00.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:00.432" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:00.432" endtime="20231207 10:23:00.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:00.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:00.433" endtime="20231207 10:23:00.433"/>
</kw>
<status status="PASS" starttime="20231207 10:23:00.428" endtime="20231207 10:23:00.433"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:00.436" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:05.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:05.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:00.435" endtime="20231207 10:23:05.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:05.840" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:05.839" endtime="20231207 10:23:05.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:05.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:05.840" endtime="20231207 10:23:05.840"/>
</kw>
<status status="PASS" starttime="20231207 10:23:00.434" endtime="20231207 10:23:05.841"/>
</kw>
<msg timestamp="20231207 10:23:05.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:00.434" endtime="20231207 10:23:05.841"/>
</kw>
<msg timestamp="20231207 10:23:05.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:00.433" endtime="20231207 10:23:05.841"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:05.841" endtime="20231207 10:23:05.842"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:05.844" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:05.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:05.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:05.842" endtime="20231207 10:23:05.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:05.846" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:05.846" endtime="20231207 10:23:05.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:05.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:05.847" endtime="20231207 10:23:05.847"/>
</kw>
<status status="PASS" starttime="20231207 10:23:05.842" endtime="20231207 10:23:05.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:23:00.428" endtime="20231207 10:23:05.847"/>
</test>
<test id="s1-s7-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:05.851" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:09.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:09.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:05.850" endtime="20231207 10:23:09.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:09.469" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:09.469" endtime="20231207 10:23:09.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:09.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:09.470" endtime="20231207 10:23:09.470"/>
</kw>
<status status="PASS" starttime="20231207 10:23:05.849" endtime="20231207 10:23:09.470"/>
</kw>
<msg timestamp="20231207 10:23:09.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:05.849" endtime="20231207 10:23:09.470"/>
</kw>
<msg timestamp="20231207 10:23:09.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:05.849" endtime="20231207 10:23:09.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:09.471" endtime="20231207 10:23:09.471"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:23:05.848" endtime="20231207 10:23:09.471"/>
</test>
<test id="s1-s7-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:09.475" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:23:09.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:09.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:09.473" endtime="20231207 10:23:09.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:09.477" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:09.476" endtime="20231207 10:23:09.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:09.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:09.477" endtime="20231207 10:23:09.477"/>
</kw>
<status status="PASS" starttime="20231207 10:23:09.472" endtime="20231207 10:23:09.477"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:09.480" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:14.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:14.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:09.479" endtime="20231207 10:23:14.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:14.727" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:14.726" endtime="20231207 10:23:14.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:14.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:14.727" endtime="20231207 10:23:14.727"/>
</kw>
<status status="PASS" starttime="20231207 10:23:09.478" endtime="20231207 10:23:14.727"/>
</kw>
<msg timestamp="20231207 10:23:14.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:09.478" endtime="20231207 10:23:14.728"/>
</kw>
<msg timestamp="20231207 10:23:14.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:09.478" endtime="20231207 10:23:14.728"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:14.728" endtime="20231207 10:23:14.728"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:14.730" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:14.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:14.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:14.729" endtime="20231207 10:23:14.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:14.733" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:14.732" endtime="20231207 10:23:14.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:14.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:14.733" endtime="20231207 10:23:14.733"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.728" endtime="20231207 10:23:14.734"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:23:09.472" endtime="20231207 10:23:14.734"/>
</test>
<test id="s1-s7-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:14.739" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:14.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:14.741" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:23:14.737" endtime="20231207 10:23:14.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:14.742" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:23:14.741" endtime="20231207 10:23:14.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:14.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:14.742" endtime="20231207 10:23:14.742"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.737" endtime="20231207 10:23:14.743"/>
</kw>
<msg timestamp="20231207 10:23:14.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:14.737" endtime="20231207 10:23:14.743"/>
</kw>
<msg timestamp="20231207 10:23:14.743" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:23:14.737" endtime="20231207 10:23:14.743"/>
</kw>
<msg timestamp="20231207 10:23:14.743" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:14.736" endtime="20231207 10:23:14.743"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:23:14.743" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:14.743" endtime="20231207 10:23:14.744"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:14.746" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:14.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:14.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:14.745" endtime="20231207 10:23:14.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:14.762" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:14.762" endtime="20231207 10:23:14.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:14.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:14.762" endtime="20231207 10:23:14.763"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.745" endtime="20231207 10:23:14.763"/>
</kw>
<msg timestamp="20231207 10:23:14.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:14.744" endtime="20231207 10:23:14.763"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.744" endtime="20231207 10:23:14.763"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.744" endtime="20231207 10:23:14.763"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.736" endtime="20231207 10:23:14.763"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.735" endtime="20231207 10:23:14.763"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:14.766" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:17.356" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:23:17.356" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:23:14.765" endtime="20231207 10:23:17.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:17.357" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:23:17.356" endtime="20231207 10:23:17.357"/>
</kw>
<msg timestamp="20231207 10:23:17.357" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:23:14.764" endtime="20231207 10:23:17.357"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:17.358" endtime="20231207 10:23:17.358"/>
</kw>
<msg timestamp="20231207 10:23:17.358" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:23:17.357" endtime="20231207 10:23:17.358"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:17.361" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:19.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:19.959" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:23:17.360" endtime="20231207 10:23:19.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:19.960" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:23:19.959" endtime="20231207 10:23:19.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:19.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:19.960" endtime="20231207 10:23:19.961"/>
</kw>
<status status="PASS" starttime="20231207 10:23:17.359" endtime="20231207 10:23:19.961"/>
</kw>
<msg timestamp="20231207 10:23:19.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:17.359" endtime="20231207 10:23:19.961"/>
</kw>
<status status="PASS" starttime="20231207 10:23:17.359" endtime="20231207 10:23:19.961"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:19.964" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:22.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:22.708" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=beaaf1d2aecd41ec1d07d186c5dd733d43e9563b60cf4f4874319ac2e4e5c09e
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:23:19.962" endtime="20231207 10:23:22.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:22.709" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=beaaf1d2aecd41ec1d07d186c5dd733d43e9563b60cf4f4874319ac2e4e5c09e
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:23:22.708" endtime="20231207 10:23:22.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:22.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:22.709" endtime="20231207 10:23:22.709"/>
</kw>
<status status="PASS" starttime="20231207 10:23:19.962" endtime="20231207 10:23:22.710"/>
</kw>
<msg timestamp="20231207 10:23:22.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:19.962" endtime="20231207 10:23:22.710"/>
</kw>
<msg timestamp="20231207 10:23:22.710" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=beaaf1d2aecd41ec1d07d186c5dd733d43e9563b60cf4f4874319ac2e4e5c09e
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:23:19.961" endtime="20231207 10:23:22.710"/>
</kw>
<status status="PASS" starttime="20231207 10:23:17.358" endtime="20231207 10:23:22.710"/>
</branch>
<status status="PASS" starttime="20231207 10:23:17.358" endtime="20231207 10:23:22.710"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:23:22.711" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:23:22.710" endtime="20231207 10:23:22.711"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:23:22.711" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:23:22.711" endtime="20231207 10:23:22.711"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:23:22.712" level="INFO">${secret} = ['beaaf1d2aecd41ec1d07d186c5dd733d43e9563b60cf4f4874319ac2e4e5c09e']</msg>
<status status="PASS" starttime="20231207 10:23:22.712" endtime="20231207 10:23:22.712"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:23:22.713" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:22.712" endtime="20231207 10:23:22.713"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:23:22.714" level="INFO">${secret} = beaaf1d2aecd41ec1d07d186c5dd733d43e9563b60cf4f4874319ac2e4e5c09e</msg>
<status status="PASS" starttime="20231207 10:23:22.713" endtime="20231207 10:23:22.714"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:22.717" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:23.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:23.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:22.716" endtime="20231207 10:23:23.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:23.127" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:23.127" endtime="20231207 10:23:23.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:23.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:23.127" endtime="20231207 10:23:23.128"/>
</kw>
<status status="PASS" starttime="20231207 10:23:22.715" endtime="20231207 10:23:23.128"/>
</kw>
<msg timestamp="20231207 10:23:23.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:22.715" endtime="20231207 10:23:23.128"/>
</kw>
<status status="PASS" starttime="20231207 10:23:22.714" endtime="20231207 10:23:23.128"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:23.131" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:23.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:23.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:23.130" endtime="20231207 10:23:23.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:23.608" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:23.607" endtime="20231207 10:23:23.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:23.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:23.608" endtime="20231207 10:23:23.609"/>
</kw>
<status status="PASS" starttime="20231207 10:23:23.129" endtime="20231207 10:23:23.609"/>
</kw>
<msg timestamp="20231207 10:23:23.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:23.129" endtime="20231207 10:23:23.609"/>
</kw>
<status status="PASS" starttime="20231207 10:23:23.129" endtime="20231207 10:23:23.609"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:23.612" level="INFO">Running command 'aws configure set aws_secret_access_key beaaf1d2aecd41ec1d07d186c5dd733d43e9563b60cf4f4874319ac2e4e5c09e 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:24.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:24.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:23.610" endtime="20231207 10:23:24.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:24.036" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:24.036" endtime="20231207 10:23:24.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:24.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:24.036" endtime="20231207 10:23:24.037"/>
</kw>
<status status="PASS" starttime="20231207 10:23:23.610" endtime="20231207 10:23:24.037"/>
</kw>
<msg timestamp="20231207 10:23:24.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:23.610" endtime="20231207 10:23:24.037"/>
</kw>
<status status="PASS" starttime="20231207 10:23:23.609" endtime="20231207 10:23:24.037"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:24.041" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:24.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:24.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:24.039" endtime="20231207 10:23:24.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:24.430" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:24.429" endtime="20231207 10:23:24.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:24.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:24.430" endtime="20231207 10:23:24.430"/>
</kw>
<status status="PASS" starttime="20231207 10:23:24.038" endtime="20231207 10:23:24.430"/>
</kw>
<msg timestamp="20231207 10:23:24.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:24.038" endtime="20231207 10:23:24.431"/>
</kw>
<status status="PASS" starttime="20231207 10:23:24.038" endtime="20231207 10:23:24.431"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:24.433" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:24.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:24.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:24.432" endtime="20231207 10:23:24.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:24.828" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:24.827" endtime="20231207 10:23:24.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:24.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:24.828" endtime="20231207 10:23:24.828"/>
</kw>
<status status="PASS" starttime="20231207 10:23:24.432" endtime="20231207 10:23:24.829"/>
</kw>
<msg timestamp="20231207 10:23:24.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:24.431" endtime="20231207 10:23:24.829"/>
</kw>
<status status="PASS" starttime="20231207 10:23:24.431" endtime="20231207 10:23:24.829"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.764" endtime="20231207 10:23:24.829"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.763" endtime="20231207 10:23:24.829"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:23:24.829" endtime="20231207 10:23:24.830"/>
</kw>
<status status="PASS" starttime="20231207 10:23:14.735" endtime="20231207 10:23:24.830"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:23:24.831" level="INFO">${randStr} = 6305362331</msg>
<status status="PASS" starttime="20231207 10:23:24.830" endtime="20231207 10:23:24.831"/>
</kw>
<msg timestamp="20231207 10:23:24.831" level="INFO">${random} = ozone-test-6305362331</msg>
<status status="PASS" starttime="20231207 10:23:24.830" endtime="20231207 10:23:24.831"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:24.835" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket-ozone-test-6305362331 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:25.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:25.346" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-6305362331"
}</msg>
<status status="PASS" starttime="20231207 10:23:24.833" endtime="20231207 10:23:25.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:25.347" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket-ozone-test-6305362331"
}</msg>
<status status="PASS" starttime="20231207 10:23:25.346" endtime="20231207 10:23:25.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:25.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:25.347" endtime="20231207 10:23:25.347"/>
</kw>
<status status="PASS" starttime="20231207 10:23:24.833" endtime="20231207 10:23:25.348"/>
</kw>
<msg timestamp="20231207 10:23:25.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:24.833" endtime="20231207 10:23:25.348"/>
</kw>
<msg timestamp="20231207 10:23:25.348" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-6305362331"
}</msg>
<status status="PASS" starttime="20231207 10:23:24.832" endtime="20231207 10:23:25.348"/>
</kw>
<msg timestamp="20231207 10:23:25.348" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-6305362331"
}</msg>
<status status="PASS" starttime="20231207 10:23:24.832" endtime="20231207 10:23:25.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:25.348" endtime="20231207 10:23:25.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:25.349" endtime="20231207 10:23:25.349"/>
</kw>
<msg timestamp="20231207 10:23:25.349" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 10:23:24.831" endtime="20231207 10:23:25.349"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 10:23:25.349" endtime="20231207 10:23:25.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:23:14.734" endtime="20231207 10:23:25.350"/>
</test>
<test id="s1-s7-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:25.353" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:23:25.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:25.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:25.352" endtime="20231207 10:23:25.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:25.355" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:25.355" endtime="20231207 10:23:25.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:25.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:25.355" endtime="20231207 10:23:25.356"/>
</kw>
<status status="PASS" starttime="20231207 10:23:25.351" endtime="20231207 10:23:25.356"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:25.358" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:26.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:26.034" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 10:23:25.357" endtime="20231207 10:23:26.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:26.035" level="INFO">{
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 10:23:26.034" endtime="20231207 10:23:26.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:26.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:26.036" endtime="20231207 10:23:26.036"/>
</kw>
<msg timestamp="20231207 10:23:26.036" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 10:23:25.357" endtime="20231207 10:23:26.036"/>
</kw>
<msg timestamp="20231207 10:23:26.037" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 10:23:25.356" endtime="20231207 10:23:26.037"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:26.037" endtime="20231207 10:23:26.037"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:26.039" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:26.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:26.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:26.038" endtime="20231207 10:23:26.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:26.042" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:26.041" endtime="20231207 10:23:26.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:26.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:26.042" endtime="20231207 10:23:26.042"/>
</kw>
<status status="PASS" starttime="20231207 10:23:26.037" endtime="20231207 10:23:26.042"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:23:25.350" endtime="20231207 10:23:26.043"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 10:22:53.503" endtime="20231207 10:23:26.044"/>
</suite>
<suite id="s1-s8" name="1.3.0-1.4.0-2-pre-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:29.553" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:29.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:29.555" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:23:29.551" endtime="20231207 10:23:29.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:29.556" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:23:29.556" endtime="20231207 10:23:29.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:29.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:29.556" endtime="20231207 10:23:29.557"/>
</kw>
<status status="PASS" starttime="20231207 10:23:29.551" endtime="20231207 10:23:29.557"/>
</kw>
<msg timestamp="20231207 10:23:29.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:29.551" endtime="20231207 10:23:29.557"/>
</kw>
<msg timestamp="20231207 10:23:29.557" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:23:29.551" endtime="20231207 10:23:29.557"/>
</kw>
<msg timestamp="20231207 10:23:29.557" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:29.550" endtime="20231207 10:23:29.557"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:23:29.558" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:29.557" endtime="20231207 10:23:29.558"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:29.560" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:29.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:29.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:29.559" endtime="20231207 10:23:29.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:29.595" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:29.594" endtime="20231207 10:23:29.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:29.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:29.595" endtime="20231207 10:23:29.595"/>
</kw>
<status status="PASS" starttime="20231207 10:23:29.559" endtime="20231207 10:23:29.596"/>
</kw>
<msg timestamp="20231207 10:23:29.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:29.559" endtime="20231207 10:23:29.596"/>
</kw>
<status status="PASS" starttime="20231207 10:23:29.558" endtime="20231207 10:23:29.596"/>
</kw>
<status status="PASS" starttime="20231207 10:23:29.558" endtime="20231207 10:23:29.596"/>
</kw>
<status status="PASS" starttime="20231207 10:23:29.550" endtime="20231207 10:23:29.596"/>
</kw>
<status status="PASS" starttime="20231207 10:23:29.549" endtime="20231207 10:23:29.596"/>
</kw>
<test id="s1-s8-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:23:29.598" level="INFO">${random} = 81173</msg>
<status status="PASS" starttime="20231207 10:23:29.597" endtime="20231207 10:23:29.598"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:29.601" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-81173 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:34.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:34.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:29.599" endtime="20231207 10:23:34.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:34.403" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:34.402" endtime="20231207 10:23:34.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:34.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:34.403" endtime="20231207 10:23:34.404"/>
</kw>
<status status="PASS" starttime="20231207 10:23:29.599" endtime="20231207 10:23:34.404"/>
</kw>
<msg timestamp="20231207 10:23:34.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:29.598" endtime="20231207 10:23:34.404"/>
</kw>
<msg timestamp="20231207 10:23:34.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:29.598" endtime="20231207 10:23:34.404"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:34.405" endtime="20231207 10:23:34.405"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:34.408" level="INFO">Running command 'cat /tmp/key-81173 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:34.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:34.410" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:23:34.406" endtime="20231207 10:23:34.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:34.410" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:23:34.410" endtime="20231207 10:23:34.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:34.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:34.410" endtime="20231207 10:23:34.411"/>
</kw>
<msg timestamp="20231207 10:23:34.411" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:23:34.405" endtime="20231207 10:23:34.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:34.411" endtime="20231207 10:23:34.412"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:34.414" level="INFO">Running command 'rm /tmp/key-81173 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:34.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:34.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:34.412" endtime="20231207 10:23:34.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:34.416" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:34.416" endtime="20231207 10:23:34.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:34.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:34.416" endtime="20231207 10:23:34.417"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.412" endtime="20231207 10:23:34.417"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:23:29.596" endtime="20231207 10:23:34.417"/>
</test>
<test id="s1-s8-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:34.422" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:34.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:34.424" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:23:34.421" endtime="20231207 10:23:34.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:34.425" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:23:34.425" endtime="20231207 10:23:34.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:34.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:34.425" endtime="20231207 10:23:34.426"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.420" endtime="20231207 10:23:34.426"/>
</kw>
<msg timestamp="20231207 10:23:34.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:34.420" endtime="20231207 10:23:34.426"/>
</kw>
<msg timestamp="20231207 10:23:34.426" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:23:34.420" endtime="20231207 10:23:34.426"/>
</kw>
<msg timestamp="20231207 10:23:34.426" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:34.419" endtime="20231207 10:23:34.426"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:23:34.427" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:34.427" endtime="20231207 10:23:34.427"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:34.430" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:34.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:34.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:34.429" endtime="20231207 10:23:34.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:34.465" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:34.465" endtime="20231207 10:23:34.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:34.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:34.465" endtime="20231207 10:23:34.466"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.428" endtime="20231207 10:23:34.466"/>
</kw>
<msg timestamp="20231207 10:23:34.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:34.428" endtime="20231207 10:23:34.466"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.427" endtime="20231207 10:23:34.466"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.427" endtime="20231207 10:23:34.467"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.419" endtime="20231207 10:23:34.467"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.419" endtime="20231207 10:23:34.467"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:34.470" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:36.961" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:23:36.961" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:23:34.468" endtime="20231207 10:23:36.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:36.962" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:23:36.962" endtime="20231207 10:23:36.962"/>
</kw>
<msg timestamp="20231207 10:23:36.963" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:23:34.468" endtime="20231207 10:23:36.963"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:36.963" endtime="20231207 10:23:36.964"/>
</kw>
<msg timestamp="20231207 10:23:36.964" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:23:36.963" endtime="20231207 10:23:36.964"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:36.967" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:39.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:39.593" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:23:36.966" endtime="20231207 10:23:39.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:39.594" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:23:39.593" endtime="20231207 10:23:39.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:39.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:39.594" endtime="20231207 10:23:39.594"/>
</kw>
<status status="PASS" starttime="20231207 10:23:36.965" endtime="20231207 10:23:39.594"/>
</kw>
<msg timestamp="20231207 10:23:39.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:36.965" endtime="20231207 10:23:39.595"/>
</kw>
<status status="PASS" starttime="20231207 10:23:36.964" endtime="20231207 10:23:39.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:39.598" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:42.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:42.338" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=9c97b1979f0c1fcef612be30b8561dbe83ba5b1642f50f4e6090f7dd321b4913
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:23:39.596" endtime="20231207 10:23:42.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:42.339" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=9c97b1979f0c1fcef612be30b8561dbe83ba5b1642f50f4e6090f7dd321b4913
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:23:42.338" endtime="20231207 10:23:42.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:42.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:42.339" endtime="20231207 10:23:42.339"/>
</kw>
<status status="PASS" starttime="20231207 10:23:39.596" endtime="20231207 10:23:42.340"/>
</kw>
<msg timestamp="20231207 10:23:42.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:39.595" endtime="20231207 10:23:42.340"/>
</kw>
<msg timestamp="20231207 10:23:42.340" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=9c97b1979f0c1fcef612be30b8561dbe83ba5b1642f50f4e6090f7dd321b4913
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:23:39.595" endtime="20231207 10:23:42.340"/>
</kw>
<status status="PASS" starttime="20231207 10:23:36.964" endtime="20231207 10:23:42.340"/>
</branch>
<status status="PASS" starttime="20231207 10:23:36.964" endtime="20231207 10:23:42.340"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:23:42.341" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:23:42.340" endtime="20231207 10:23:42.341"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:23:42.342" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:23:42.341" endtime="20231207 10:23:42.342"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:23:42.342" level="INFO">${secret} = ['9c97b1979f0c1fcef612be30b8561dbe83ba5b1642f50f4e6090f7dd321b4913']</msg>
<status status="PASS" starttime="20231207 10:23:42.342" endtime="20231207 10:23:42.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:23:42.343" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:42.342" endtime="20231207 10:23:42.343"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:23:42.344" level="INFO">${secret} = 9c97b1979f0c1fcef612be30b8561dbe83ba5b1642f50f4e6090f7dd321b4913</msg>
<status status="PASS" starttime="20231207 10:23:42.343" endtime="20231207 10:23:42.344"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:42.347" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:42.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:42.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:42.346" endtime="20231207 10:23:42.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:42.757" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:42.757" endtime="20231207 10:23:42.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:42.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:42.758" endtime="20231207 10:23:42.758"/>
</kw>
<status status="PASS" starttime="20231207 10:23:42.345" endtime="20231207 10:23:42.758"/>
</kw>
<msg timestamp="20231207 10:23:42.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:42.345" endtime="20231207 10:23:42.759"/>
</kw>
<status status="PASS" starttime="20231207 10:23:42.344" endtime="20231207 10:23:42.759"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:42.761" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:43.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:43.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:42.760" endtime="20231207 10:23:43.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:43.173" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:43.173" endtime="20231207 10:23:43.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:43.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:43.173" endtime="20231207 10:23:43.174"/>
</kw>
<status status="PASS" starttime="20231207 10:23:42.760" endtime="20231207 10:23:43.174"/>
</kw>
<msg timestamp="20231207 10:23:43.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:42.759" endtime="20231207 10:23:43.174"/>
</kw>
<status status="PASS" starttime="20231207 10:23:42.759" endtime="20231207 10:23:43.174"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:43.178" level="INFO">Running command 'aws configure set aws_secret_access_key 9c97b1979f0c1fcef612be30b8561dbe83ba5b1642f50f4e6090f7dd321b4913 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:43.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:43.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:43.176" endtime="20231207 10:23:43.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:43.576" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:43.576" endtime="20231207 10:23:43.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:43.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:43.576" endtime="20231207 10:23:43.577"/>
</kw>
<status status="PASS" starttime="20231207 10:23:43.175" endtime="20231207 10:23:43.577"/>
</kw>
<msg timestamp="20231207 10:23:43.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:43.175" endtime="20231207 10:23:43.577"/>
</kw>
<status status="PASS" starttime="20231207 10:23:43.175" endtime="20231207 10:23:43.577"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:43.580" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:43.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:43.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:43.579" endtime="20231207 10:23:43.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:43.981" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:43.980" endtime="20231207 10:23:43.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:43.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:43.981" endtime="20231207 10:23:43.982"/>
</kw>
<status status="PASS" starttime="20231207 10:23:43.578" endtime="20231207 10:23:43.982"/>
</kw>
<msg timestamp="20231207 10:23:43.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:43.578" endtime="20231207 10:23:43.982"/>
</kw>
<status status="PASS" starttime="20231207 10:23:43.578" endtime="20231207 10:23:43.982"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:43.985" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:44.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:44.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:43.983" endtime="20231207 10:23:44.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:44.387" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:44.387" endtime="20231207 10:23:44.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:44.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:44.388" endtime="20231207 10:23:44.388"/>
</kw>
<status status="PASS" starttime="20231207 10:23:43.983" endtime="20231207 10:23:44.389"/>
</kw>
<msg timestamp="20231207 10:23:44.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:43.983" endtime="20231207 10:23:44.389"/>
</kw>
<status status="PASS" starttime="20231207 10:23:43.982" endtime="20231207 10:23:44.389"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.467" endtime="20231207 10:23:44.389"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.467" endtime="20231207 10:23:44.389"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:23:44.389" endtime="20231207 10:23:44.389"/>
</kw>
<status status="PASS" starttime="20231207 10:23:34.418" endtime="20231207 10:23:44.390"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:44.393" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:44.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:44.982" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:23:44.391" endtime="20231207 10:23:44.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:44.983" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:23:44 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:23:44.983" endtime="20231207 10:23:44.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:44.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:44.983" endtime="20231207 10:23:44.984"/>
</kw>
<msg timestamp="20231207 10:23:44.984" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:23:44.390" endtime="20231207 10:23:44.984"/>
</kw>
<msg timestamp="20231207 10:23:44.984" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:23:44.390" endtime="20231207 10:23:44.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:44.984" endtime="20231207 10:23:44.985"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:44.987" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:44.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:44.989" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:23:44.986" endtime="20231207 10:23:44.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:44.990" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:23:44.989" endtime="20231207 10:23:44.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:44.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:44.990" endtime="20231207 10:23:44.990"/>
</kw>
<msg timestamp="20231207 10:23:44.991" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:23:44.985" endtime="20231207 10:23:44.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:44.991" endtime="20231207 10:23:44.991"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:44.993" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:44.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:44.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:44.992" endtime="20231207 10:23:44.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:44.996" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:44.995" endtime="20231207 10:23:44.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:44.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:44.996" endtime="20231207 10:23:44.996"/>
</kw>
<status status="PASS" starttime="20231207 10:23:44.991" endtime="20231207 10:23:44.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:23:34.418" endtime="20231207 10:23:44.997"/>
</test>
<test id="s1-s8-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:45.002" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:45.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:45.004" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:23:45.000" endtime="20231207 10:23:45.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:45.004" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:23:45.004" endtime="20231207 10:23:45.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:45.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:45.005" endtime="20231207 10:23:45.005"/>
</kw>
<status status="PASS" starttime="20231207 10:23:45.000" endtime="20231207 10:23:45.005"/>
</kw>
<msg timestamp="20231207 10:23:45.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:45.000" endtime="20231207 10:23:45.005"/>
</kw>
<msg timestamp="20231207 10:23:45.005" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:23:44.999" endtime="20231207 10:23:45.005"/>
</kw>
<msg timestamp="20231207 10:23:45.006" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:44.999" endtime="20231207 10:23:45.006"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:23:45.006" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:45.006" endtime="20231207 10:23:45.006"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:45.009" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:45.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:45.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:45.008" endtime="20231207 10:23:45.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:45.024" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:45.023" endtime="20231207 10:23:45.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:45.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:45.024" endtime="20231207 10:23:45.024"/>
</kw>
<status status="PASS" starttime="20231207 10:23:45.008" endtime="20231207 10:23:45.025"/>
</kw>
<msg timestamp="20231207 10:23:45.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:45.007" endtime="20231207 10:23:45.025"/>
</kw>
<status status="PASS" starttime="20231207 10:23:45.007" endtime="20231207 10:23:45.025"/>
</kw>
<status status="PASS" starttime="20231207 10:23:45.006" endtime="20231207 10:23:45.025"/>
</kw>
<status status="PASS" starttime="20231207 10:23:44.999" endtime="20231207 10:23:45.025"/>
</kw>
<status status="PASS" starttime="20231207 10:23:44.998" endtime="20231207 10:23:45.025"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:45.028" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:47.397" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:23:47.397" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:23:45.026" endtime="20231207 10:23:47.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:47.398" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:23:47.397" endtime="20231207 10:23:47.398"/>
</kw>
<msg timestamp="20231207 10:23:47.398" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:23:45.026" endtime="20231207 10:23:47.398"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:47.399" endtime="20231207 10:23:47.399"/>
</kw>
<msg timestamp="20231207 10:23:47.399" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:23:47.398" endtime="20231207 10:23:47.399"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:47.402" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:49.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:49.868" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:23:47.400" endtime="20231207 10:23:49.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:49.869" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:23:49.868" endtime="20231207 10:23:49.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:49.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:49.869" endtime="20231207 10:23:49.870"/>
</kw>
<status status="PASS" starttime="20231207 10:23:47.400" endtime="20231207 10:23:49.870"/>
</kw>
<msg timestamp="20231207 10:23:49.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:47.400" endtime="20231207 10:23:49.870"/>
</kw>
<status status="PASS" starttime="20231207 10:23:47.399" endtime="20231207 10:23:49.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:49.873" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:52.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:52.505" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:23:49.872" endtime="20231207 10:23:52.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:52.506" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:23:52.506" endtime="20231207 10:23:52.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:52.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:52.507" endtime="20231207 10:23:52.507"/>
</kw>
<status status="PASS" starttime="20231207 10:23:49.871" endtime="20231207 10:23:52.507"/>
</kw>
<msg timestamp="20231207 10:23:52.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:49.871" endtime="20231207 10:23:52.507"/>
</kw>
<msg timestamp="20231207 10:23:52.508" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:23:49.870" endtime="20231207 10:23:52.508"/>
</kw>
<status status="PASS" starttime="20231207 10:23:47.399" endtime="20231207 10:23:52.508"/>
</branch>
<status status="PASS" starttime="20231207 10:23:47.399" endtime="20231207 10:23:52.508"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:23:52.508" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:23:52.508" endtime="20231207 10:23:52.508"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:23:52.509" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:23:52.509" endtime="20231207 10:23:52.509"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:23:52.509" level="INFO">${secret} = ['1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4']</msg>
<status status="PASS" starttime="20231207 10:23:52.509" endtime="20231207 10:23:52.509"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:23:52.511" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:52.510" endtime="20231207 10:23:52.511"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:23:52.512" level="INFO">${secret} = 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:23:52.511" endtime="20231207 10:23:52.512"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:52.515" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:52.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:52.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:52.513" endtime="20231207 10:23:52.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:52.925" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:52.925" endtime="20231207 10:23:52.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:52.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:52.926" endtime="20231207 10:23:52.926"/>
</kw>
<status status="PASS" starttime="20231207 10:23:52.513" endtime="20231207 10:23:52.926"/>
</kw>
<msg timestamp="20231207 10:23:52.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:52.512" endtime="20231207 10:23:52.926"/>
</kw>
<status status="PASS" starttime="20231207 10:23:52.512" endtime="20231207 10:23:52.926"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:52.929" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:53.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:53.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:52.928" endtime="20231207 10:23:53.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:53.335" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:53.335" endtime="20231207 10:23:53.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:53.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:53.335" endtime="20231207 10:23:53.336"/>
</kw>
<status status="PASS" starttime="20231207 10:23:52.927" endtime="20231207 10:23:53.336"/>
</kw>
<msg timestamp="20231207 10:23:53.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:52.927" endtime="20231207 10:23:53.336"/>
</kw>
<status status="PASS" starttime="20231207 10:23:52.927" endtime="20231207 10:23:53.336"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:53.339" level="INFO">Running command 'aws configure set aws_secret_access_key 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:53.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:53.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:53.338" endtime="20231207 10:23:53.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:53.726" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:53.725" endtime="20231207 10:23:53.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:53.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:53.726" endtime="20231207 10:23:53.727"/>
</kw>
<status status="PASS" starttime="20231207 10:23:53.337" endtime="20231207 10:23:53.727"/>
</kw>
<msg timestamp="20231207 10:23:53.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:53.337" endtime="20231207 10:23:53.727"/>
</kw>
<status status="PASS" starttime="20231207 10:23:53.337" endtime="20231207 10:23:53.727"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:53.730" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:54.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:54.119" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:53.728" endtime="20231207 10:23:54.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:54.121" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:54.120" endtime="20231207 10:23:54.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:54.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:54.121" endtime="20231207 10:23:54.121"/>
</kw>
<status status="PASS" starttime="20231207 10:23:53.728" endtime="20231207 10:23:54.122"/>
</kw>
<msg timestamp="20231207 10:23:54.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:53.728" endtime="20231207 10:23:54.122"/>
</kw>
<status status="PASS" starttime="20231207 10:23:53.727" endtime="20231207 10:23:54.122"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:54.125" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:54.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:54.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:54.123" endtime="20231207 10:23:54.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:54.519" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:54.518" endtime="20231207 10:23:54.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:54.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:54.519" endtime="20231207 10:23:54.520"/>
</kw>
<status status="PASS" starttime="20231207 10:23:54.123" endtime="20231207 10:23:54.520"/>
</kw>
<msg timestamp="20231207 10:23:54.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:54.123" endtime="20231207 10:23:54.520"/>
</kw>
<status status="PASS" starttime="20231207 10:23:54.122" endtime="20231207 10:23:54.520"/>
</kw>
<status status="PASS" starttime="20231207 10:23:45.026" endtime="20231207 10:23:54.520"/>
</kw>
<status status="PASS" starttime="20231207 10:23:45.025" endtime="20231207 10:23:54.520"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:23:54.520" endtime="20231207 10:23:54.521"/>
</kw>
<status status="PASS" starttime="20231207 10:23:44.998" endtime="20231207 10:23:54.521"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:54.523" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:55.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:55.072" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:23:54.522" endtime="20231207 10:23:55.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:55.073" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:23:54 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:23:55.073" endtime="20231207 10:23:55.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:55.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:55.073" endtime="20231207 10:23:55.074"/>
</kw>
<msg timestamp="20231207 10:23:55.074" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:23:54.521" endtime="20231207 10:23:55.074"/>
</kw>
<msg timestamp="20231207 10:23:55.074" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:23:54.521" endtime="20231207 10:23:55.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:55.074" endtime="20231207 10:23:55.075"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:55.077" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:55.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:55.079" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:23:55.075" endtime="20231207 10:23:55.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:55.080" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:23:55.079" endtime="20231207 10:23:55.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:55.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:55.080" endtime="20231207 10:23:55.080"/>
</kw>
<msg timestamp="20231207 10:23:55.080" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:23:55.075" endtime="20231207 10:23:55.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:23:55.081" endtime="20231207 10:23:55.081"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:55.083" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:55.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:55.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:55.082" endtime="20231207 10:23:55.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:55.085" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:55.085" endtime="20231207 10:23:55.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:55.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:55.086" endtime="20231207 10:23:55.086"/>
</kw>
<status status="PASS" starttime="20231207 10:23:55.081" endtime="20231207 10:23:55.086"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:23:44.997" endtime="20231207 10:23:55.086"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:23:29.477" endtime="20231207 10:23:55.087"/>
</suite>
<suite id="s1-s9" name="1.3.0-1.4.0-2-pre-finalized-check-finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s9-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:58.448" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:58.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:58.449" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:23:58.445" endtime="20231207 10:23:58.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:58.450" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:23:58.449" endtime="20231207 10:23:58.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:58.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:58.450" endtime="20231207 10:23:58.450"/>
</kw>
<status status="PASS" starttime="20231207 10:23:58.445" endtime="20231207 10:23:58.451"/>
</kw>
<msg timestamp="20231207 10:23:58.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:58.444" endtime="20231207 10:23:58.451"/>
</kw>
<msg timestamp="20231207 10:23:58.451" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:23:58.444" endtime="20231207 10:23:58.451"/>
</kw>
<msg timestamp="20231207 10:23:58.451" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:58.444" endtime="20231207 10:23:58.451"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:23:58.452" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:23:58.451" endtime="20231207 10:23:58.452"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:58.455" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:23:58.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:23:58.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:23:58.454" endtime="20231207 10:23:58.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:23:58.493" level="INFO"/>
<status status="PASS" starttime="20231207 10:23:58.493" endtime="20231207 10:23:58.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:23:58.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:23:58.493" endtime="20231207 10:23:58.494"/>
</kw>
<status status="PASS" starttime="20231207 10:23:58.453" endtime="20231207 10:23:58.494"/>
</kw>
<msg timestamp="20231207 10:23:58.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:58.453" endtime="20231207 10:23:58.494"/>
</kw>
<status status="PASS" starttime="20231207 10:23:58.452" endtime="20231207 10:23:58.494"/>
</kw>
<status status="PASS" starttime="20231207 10:23:58.452" endtime="20231207 10:23:58.495"/>
</kw>
<status status="PASS" starttime="20231207 10:23:58.443" endtime="20231207 10:23:58.495"/>
</kw>
<status status="PASS" starttime="20231207 10:23:58.443" endtime="20231207 10:23:58.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:23:58.498" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:01.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:01.333" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 10:23:58.496" endtime="20231207 10:24:01.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:01.335" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 10:24:01.334" endtime="20231207 10:24:01.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:01.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:01.335" endtime="20231207 10:24:01.336"/>
</kw>
<status status="PASS" starttime="20231207 10:23:58.496" endtime="20231207 10:24:01.336"/>
</kw>
<msg timestamp="20231207 10:24:01.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:23:58.496" endtime="20231207 10:24:01.336"/>
</kw>
<msg timestamp="20231207 10:24:01.336" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 10:23:58.495" endtime="20231207 10:24:01.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:01.337" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 10:24:01.337" endtime="20231207 10:24:01.337"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:24:01.337" endtime="20231207 10:24:01.338"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:23:58.442" endtime="20231207 10:24:01.338"/>
</test>
<test id="s1-s9-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:01.345" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:01.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:01.348" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:24:01.343" endtime="20231207 10:24:01.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:01.349" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:24:01.348" endtime="20231207 10:24:01.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:01.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:01.349" endtime="20231207 10:24:01.349"/>
</kw>
<status status="PASS" starttime="20231207 10:24:01.342" endtime="20231207 10:24:01.349"/>
</kw>
<msg timestamp="20231207 10:24:01.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:24:01.342" endtime="20231207 10:24:01.349"/>
</kw>
<msg timestamp="20231207 10:24:01.350" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:24:01.342" endtime="20231207 10:24:01.350"/>
</kw>
<msg timestamp="20231207 10:24:01.350" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:24:01.341" endtime="20231207 10:24:01.350"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:24:01.350" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:24:01.350" endtime="20231207 10:24:01.350"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:01.354" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:01.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:01.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:24:01.352" endtime="20231207 10:24:01.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:01.381" level="INFO"/>
<status status="PASS" starttime="20231207 10:24:01.380" endtime="20231207 10:24:01.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:01.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:01.381" endtime="20231207 10:24:01.381"/>
</kw>
<status status="PASS" starttime="20231207 10:24:01.352" endtime="20231207 10:24:01.381"/>
</kw>
<msg timestamp="20231207 10:24:01.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:24:01.351" endtime="20231207 10:24:01.382"/>
</kw>
<status status="PASS" starttime="20231207 10:24:01.351" endtime="20231207 10:24:01.382"/>
</kw>
<status status="PASS" starttime="20231207 10:24:01.351" endtime="20231207 10:24:01.382"/>
</kw>
<status status="PASS" starttime="20231207 10:24:01.341" endtime="20231207 10:24:01.382"/>
</kw>
<status status="PASS" starttime="20231207 10:24:01.340" endtime="20231207 10:24:01.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:01.385" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:06.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:06.133" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 10:24:01.383" endtime="20231207 10:24:06.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:06.134" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 10:24:06.133" endtime="20231207 10:24:06.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:06.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:06.135" endtime="20231207 10:24:06.135"/>
</kw>
<status status="PASS" starttime="20231207 10:24:01.383" endtime="20231207 10:24:06.135"/>
</kw>
<msg timestamp="20231207 10:24:06.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:24:01.382" endtime="20231207 10:24:06.136"/>
</kw>
<msg timestamp="20231207 10:24:06.136" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 10:24:01.382" endtime="20231207 10:24:06.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:06.137" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 10:24:06.136" endtime="20231207 10:24:06.137"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:24:06.137" endtime="20231207 10:24:06.137"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:24:01.339" endtime="20231207 10:24:06.138"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 10:23:58.397" endtime="20231207 10:24:06.139"/>
</suite>
<suite id="s1-s10" name="1.3.0-1.4.0-2-pre-finalized-snapshot" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:09.560" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:09.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:09.562" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:24:09.558" endtime="20231207 10:24:09.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:09.563" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:24:09.563" endtime="20231207 10:24:09.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:09.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:09.563" endtime="20231207 10:24:09.563"/>
</kw>
<status status="PASS" starttime="20231207 10:24:09.558" endtime="20231207 10:24:09.564"/>
</kw>
<msg timestamp="20231207 10:24:09.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:24:09.558" endtime="20231207 10:24:09.564"/>
</kw>
<msg timestamp="20231207 10:24:09.564" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:24:09.557" endtime="20231207 10:24:09.564"/>
</kw>
<msg timestamp="20231207 10:24:09.564" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:24:09.557" endtime="20231207 10:24:09.564"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:24:09.565" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:24:09.564" endtime="20231207 10:24:09.565"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:09.567" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:09.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:09.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:24:09.566" endtime="20231207 10:24:09.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:09.607" level="INFO"/>
<status status="PASS" starttime="20231207 10:24:09.607" endtime="20231207 10:24:09.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:09.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:09.607" endtime="20231207 10:24:09.608"/>
</kw>
<status status="PASS" starttime="20231207 10:24:09.566" endtime="20231207 10:24:09.608"/>
</kw>
<msg timestamp="20231207 10:24:09.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:24:09.565" endtime="20231207 10:24:09.608"/>
</kw>
<status status="PASS" starttime="20231207 10:24:09.565" endtime="20231207 10:24:09.608"/>
</kw>
<status status="PASS" starttime="20231207 10:24:09.565" endtime="20231207 10:24:09.608"/>
</kw>
<status status="PASS" starttime="20231207 10:24:09.557" endtime="20231207 10:24:09.608"/>
</kw>
<status status="PASS" starttime="20231207 10:24:09.556" endtime="20231207 10:24:09.608"/>
</kw>
<test id="s1-s10-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="29">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:09.611" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:12.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:12.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:24:09.610" endtime="20231207 10:24:12.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:12.855" level="INFO"/>
<status status="PASS" starttime="20231207 10:24:12.855" endtime="20231207 10:24:12.856"/>
</kw>
<msg timestamp="20231207 10:24:12.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:24:09.609" endtime="20231207 10:24:12.856"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:24:12.856" endtime="20231207 10:24:12.856"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:12.859" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:15.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:15.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:24:12.857" endtime="20231207 10:24:15.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:15.982" level="INFO"/>
<status status="PASS" starttime="20231207 10:24:15.981" endtime="20231207 10:24:15.982"/>
</kw>
<msg timestamp="20231207 10:24:15.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:24:12.857" endtime="20231207 10:24:15.982"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:24:15.983" endtime="20231207 10:24:15.983"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:15.985" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:18.943" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:24:18.943" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 10:24:15.984" endtime="20231207 10:24:18.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:18.944" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 10:24:18.944" endtime="20231207 10:24:18.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:18.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:18.944" endtime="20231207 10:24:18.945"/>
</kw>
<msg timestamp="20231207 10:24:18.945" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 10:24:15.983" endtime="20231207 10:24:18.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:24:18.945" endtime="20231207 10:24:18.946"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:24:09.609" endtime="20231207 10:24:18.946"/>
</test>
<test id="s1-s10-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="37">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:18.949" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:22.095" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:24:22.096" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 10:24:18.948" endtime="20231207 10:24:22.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:22.097" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 10:24:22.096" endtime="20231207 10:24:22.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:22.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:22.097" endtime="20231207 10:24:22.097"/>
</kw>
<msg timestamp="20231207 10:24:22.098" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 10:24:18.947" endtime="20231207 10:24:22.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:24:22.098" endtime="20231207 10:24:22.098"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:24:18.946" endtime="20231207 10:24:22.098"/>
</test>
<test id="s1-s10-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="41">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:22.102" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:25.183" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:24:25.183" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 10:24:22.100" endtime="20231207 10:24:25.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:25.184" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 10:24:25.183" endtime="20231207 10:24:25.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:25.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:25.184" endtime="20231207 10:24:25.184"/>
</kw>
<msg timestamp="20231207 10:24:25.184" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 10:24:22.099" endtime="20231207 10:24:25.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:24:25.185" endtime="20231207 10:24:25.185"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:24:22.099" endtime="20231207 10:24:25.185"/>
</test>
<test id="s1-s10-t4" name="Attempt to delete when snapshot feature is disabled" line="45">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:25.189" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:28.220" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:24:28.220" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 10:24:25.187" endtime="20231207 10:24:28.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:28.221" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 10:24:28.221" endtime="20231207 10:24:28.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:28.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:28.221" endtime="20231207 10:24:28.222"/>
</kw>
<msg timestamp="20231207 10:24:28.222" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 10:24:25.186" endtime="20231207 10:24:28.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:24:28.222" endtime="20231207 10:24:28.223"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:24:25.186" endtime="20231207 10:24:28.223"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20231207 10:24:09.515" endtime="20231207 10:24:28.224"/>
</suite>
<suite id="s1-s11" name="1.3.0-1.4.0-2-pre-finalized-prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s11-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:31.607" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:31.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:31.609" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:24:31.605" endtime="20231207 10:24:31.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:31.610" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:24:31.609" endtime="20231207 10:24:31.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:31.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:31.610" endtime="20231207 10:24:31.610"/>
</kw>
<status status="PASS" starttime="20231207 10:24:31.604" endtime="20231207 10:24:31.611"/>
</kw>
<msg timestamp="20231207 10:24:31.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:24:31.604" endtime="20231207 10:24:31.611"/>
</kw>
<msg timestamp="20231207 10:24:31.611" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:24:31.604" endtime="20231207 10:24:31.611"/>
</kw>
<msg timestamp="20231207 10:24:31.611" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:24:31.603" endtime="20231207 10:24:31.611"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:24:31.612" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:24:31.611" endtime="20231207 10:24:31.612"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:31.615" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:31.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:31.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:24:31.613" endtime="20231207 10:24:31.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:31.715" level="INFO"/>
<status status="PASS" starttime="20231207 10:24:31.715" endtime="20231207 10:24:31.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:31.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:31.716" endtime="20231207 10:24:31.716"/>
</kw>
<status status="PASS" starttime="20231207 10:24:31.613" endtime="20231207 10:24:31.716"/>
</kw>
<msg timestamp="20231207 10:24:31.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:24:31.613" endtime="20231207 10:24:31.716"/>
</kw>
<status status="PASS" starttime="20231207 10:24:31.612" endtime="20231207 10:24:31.716"/>
</kw>
<status status="PASS" starttime="20231207 10:24:31.612" endtime="20231207 10:24:31.717"/>
</kw>
<status status="PASS" starttime="20231207 10:24:31.603" endtime="20231207 10:24:31.717"/>
</kw>
<status status="PASS" starttime="20231207 10:24:31.603" endtime="20231207 10:24:31.717"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:24:31.717" endtime="20231207 10:24:31.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:24:31.720" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:24:39.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:24:39.775" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231207 10:24:31.718" endtime="20231207 10:24:39.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:24:39.776" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231207 10:24:39.775" endtime="20231207 10:24:39.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:24:39.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:24:39.776" endtime="20231207 10:24:39.777"/>
</kw>
<status status="PASS" starttime="20231207 10:24:31.718" endtime="20231207 10:24:39.777"/>
</kw>
<msg timestamp="20231207 10:24:39.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:24:31.718" endtime="20231207 10:24:39.777"/>
</kw>
<msg timestamp="20231207 10:24:39.777" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231207 10:24:31.717" endtime="20231207 10:24:39.777"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:24:39.778" endtime="20231207 10:24:39.778"/>
</kw>
<status status="PASS" starttime="20231207 10:24:39.777" endtime="20231207 10:24:39.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:24:31.602" endtime="20231207 10:24:39.778"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20231207 10:24:31.558" endtime="20231207 10:24:39.779"/>
</suite>
<suite id="s1-s12" name="1.3.0-1.4.0-3-downgraded-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s12-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:07.665" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:07.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:07.667" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:26:07.663" endtime="20231207 10:26:07.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:07.667" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:26:07.667" endtime="20231207 10:26:07.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:07.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:07.667" endtime="20231207 10:26:07.668"/>
</kw>
<status status="PASS" starttime="20231207 10:26:07.662" endtime="20231207 10:26:07.668"/>
</kw>
<msg timestamp="20231207 10:26:07.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:07.662" endtime="20231207 10:26:07.669"/>
</kw>
<msg timestamp="20231207 10:26:07.669" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:26:07.662" endtime="20231207 10:26:07.669"/>
</kw>
<msg timestamp="20231207 10:26:07.669" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:07.661" endtime="20231207 10:26:07.669"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:26:07.670" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:07.669" endtime="20231207 10:26:07.670"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:07.672" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:07.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:07.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:07.671" endtime="20231207 10:26:07.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:07.707" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:07.707" endtime="20231207 10:26:07.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:07.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:07.707" endtime="20231207 10:26:07.708"/>
</kw>
<status status="PASS" starttime="20231207 10:26:07.671" endtime="20231207 10:26:07.708"/>
</kw>
<msg timestamp="20231207 10:26:07.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:07.670" endtime="20231207 10:26:07.708"/>
</kw>
<status status="PASS" starttime="20231207 10:26:07.670" endtime="20231207 10:26:07.708"/>
</kw>
<status status="PASS" starttime="20231207 10:26:07.670" endtime="20231207 10:26:07.708"/>
</kw>
<status status="PASS" starttime="20231207 10:26:07.661" endtime="20231207 10:26:07.708"/>
</kw>
<status status="PASS" starttime="20231207 10:26:07.661" endtime="20231207 10:26:07.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:07.710" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:07.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:07.712" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 10:26:07.709" endtime="20231207 10:26:07.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:07.712" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 10:26:07.712" endtime="20231207 10:26:07.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:07.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:07.713" endtime="20231207 10:26:07.713"/>
</kw>
<status status="PASS" starttime="20231207 10:26:07.709" endtime="20231207 10:26:07.713"/>
</kw>
<msg timestamp="20231207 10:26:07.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:07.709" endtime="20231207 10:26:07.714"/>
</kw>
<msg timestamp="20231207 10:26:07.714" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 10:26:07.709" endtime="20231207 10:26:07.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:07.714" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 10:26:07.714" endtime="20231207 10:26:07.714"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:26:07.714" endtime="20231207 10:26:07.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:07.717" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:09.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:09.946" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 10:26:07.716" endtime="20231207 10:26:09.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:09.947" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 10:26:09.947" endtime="20231207 10:26:09.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:09.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:09.947" endtime="20231207 10:26:09.948"/>
</kw>
<status status="PASS" starttime="20231207 10:26:07.715" endtime="20231207 10:26:09.948"/>
</kw>
<msg timestamp="20231207 10:26:09.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:07.715" endtime="20231207 10:26:09.948"/>
</kw>
<msg timestamp="20231207 10:26:09.948" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 10:26:07.715" endtime="20231207 10:26:09.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:09.949" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 10:26:09.949" endtime="20231207 10:26:09.949"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:26:09.949" endtime="20231207 10:26:09.949"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:26:07.660" endtime="20231207 10:26:09.950"/>
</test>
<test id="s1-s12-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:09.954" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:09.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:09.956" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:26:09.953" endtime="20231207 10:26:09.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:09.957" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:26:09.956" endtime="20231207 10:26:09.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:09.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:09.957" endtime="20231207 10:26:09.957"/>
</kw>
<status status="PASS" starttime="20231207 10:26:09.953" endtime="20231207 10:26:09.958"/>
</kw>
<msg timestamp="20231207 10:26:09.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:09.952" endtime="20231207 10:26:09.958"/>
</kw>
<msg timestamp="20231207 10:26:09.959" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:26:09.952" endtime="20231207 10:26:09.959"/>
</kw>
<msg timestamp="20231207 10:26:09.959" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:09.952" endtime="20231207 10:26:09.959"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:26:09.960" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:09.959" endtime="20231207 10:26:09.960"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:09.964" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:09.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:09.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:09.962" endtime="20231207 10:26:09.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:09.999" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:09.998" endtime="20231207 10:26:09.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:09.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:09.999" endtime="20231207 10:26:09.999"/>
</kw>
<status status="PASS" starttime="20231207 10:26:09.961" endtime="20231207 10:26:10.000"/>
</kw>
<msg timestamp="20231207 10:26:10.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:09.961" endtime="20231207 10:26:10.000"/>
</kw>
<status status="PASS" starttime="20231207 10:26:09.960" endtime="20231207 10:26:10.000"/>
</kw>
<status status="PASS" starttime="20231207 10:26:09.960" endtime="20231207 10:26:10.000"/>
</kw>
<status status="PASS" starttime="20231207 10:26:09.951" endtime="20231207 10:26:10.000"/>
</kw>
<status status="PASS" starttime="20231207 10:26:09.951" endtime="20231207 10:26:10.000"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:26:10.001" endtime="20231207 10:26:10.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:10.003" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:12.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:12.086" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:26:10.002" endtime="20231207 10:26:12.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:12.087" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:26:12.086" endtime="20231207 10:26:12.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:12.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:12.087" endtime="20231207 10:26:12.087"/>
</kw>
<status status="PASS" starttime="20231207 10:26:10.001" endtime="20231207 10:26:12.088"/>
</kw>
<msg timestamp="20231207 10:26:12.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:10.001" endtime="20231207 10:26:12.088"/>
</kw>
<msg timestamp="20231207 10:26:12.088" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:26:10.001" endtime="20231207 10:26:12.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:12.089" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:26:12.088" endtime="20231207 10:26:12.089"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:26:12.089" endtime="20231207 10:26:12.089"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:26:09.950" endtime="20231207 10:26:12.089"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 10:26:07.624" endtime="20231207 10:26:12.090"/>
</suite>
<suite id="s1-s13" name="1.3.0-1.4.0-3-downgraded-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:15.031" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:15.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:15.033" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:26:15.029" endtime="20231207 10:26:15.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:15.033" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:26:15.033" endtime="20231207 10:26:15.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:15.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:15.033" endtime="20231207 10:26:15.034"/>
</kw>
<status status="PASS" starttime="20231207 10:26:15.028" endtime="20231207 10:26:15.034"/>
</kw>
<msg timestamp="20231207 10:26:15.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:15.028" endtime="20231207 10:26:15.035"/>
</kw>
<msg timestamp="20231207 10:26:15.035" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:26:15.027" endtime="20231207 10:26:15.035"/>
</kw>
<msg timestamp="20231207 10:26:15.035" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:15.027" endtime="20231207 10:26:15.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:26:15.036" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:15.035" endtime="20231207 10:26:15.036"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:15.038" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:15.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:15.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:15.037" endtime="20231207 10:26:15.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:15.072" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:15.072" endtime="20231207 10:26:15.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:15.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:15.072" endtime="20231207 10:26:15.072"/>
</kw>
<status status="PASS" starttime="20231207 10:26:15.037" endtime="20231207 10:26:15.073"/>
</kw>
<msg timestamp="20231207 10:26:15.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:15.036" endtime="20231207 10:26:15.073"/>
</kw>
<status status="PASS" starttime="20231207 10:26:15.036" endtime="20231207 10:26:15.073"/>
</kw>
<status status="PASS" starttime="20231207 10:26:15.036" endtime="20231207 10:26:15.073"/>
</kw>
<status status="PASS" starttime="20231207 10:26:15.027" endtime="20231207 10:26:15.073"/>
</kw>
<status status="PASS" starttime="20231207 10:26:15.026" endtime="20231207 10:26:15.073"/>
</kw>
<test id="s1-s13-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:26:15.075" level="INFO">${random} = 53107</msg>
<status status="PASS" starttime="20231207 10:26:15.074" endtime="20231207 10:26:15.075"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:15.077" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-53107 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:18.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:18.594" level="INFO">${output} = 2023-12-07 10:26:17,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:17,572 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:26:15.076" endtime="20231207 10:26:18.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:18.595" level="INFO">2023-12-07 10:26:17,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:17,572 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:26:17,572 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 10:26:18.594" endtime="20231207 10:26:18.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:18.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:18.595" endtime="20231207 10:26:18.596"/>
</kw>
<status status="PASS" starttime="20231207 10:26:15.075" endtime="20231207 10:26:18.596"/>
</kw>
<msg timestamp="20231207 10:26:18.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:15.075" endtime="20231207 10:26:18.596"/>
</kw>
<msg timestamp="20231207 10:26:18.596" level="INFO">${output} = 2023-12-07 10:26:17,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:17,572 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:26:15.075" endtime="20231207 10:26:18.596"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:18.596" endtime="20231207 10:26:18.597"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:18.598" level="INFO">Running command 'cat /tmp/key-53107 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:18.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:18.600" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:18.597" endtime="20231207 10:26:18.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:18.601" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:18.601" endtime="20231207 10:26:18.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:18.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:18.601" endtime="20231207 10:26:18.601"/>
</kw>
<msg timestamp="20231207 10:26:18.602" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:18.597" endtime="20231207 10:26:18.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:18.602" endtime="20231207 10:26:18.602"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:18.604" level="INFO">Running command 'rm /tmp/key-53107 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:18.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:18.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:18.603" endtime="20231207 10:26:18.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:18.606" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:18.606" endtime="20231207 10:26:18.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:18.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:18.606" endtime="20231207 10:26:18.607"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.602" endtime="20231207 10:26:18.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:15.074" endtime="20231207 10:26:18.607"/>
</test>
<test id="s1-s13-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:18.612" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:18.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:18.614" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:26:18.610" endtime="20231207 10:26:18.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:18.614" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:26:18.614" endtime="20231207 10:26:18.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:18.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:18.614" endtime="20231207 10:26:18.615"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.610" endtime="20231207 10:26:18.615"/>
</kw>
<msg timestamp="20231207 10:26:18.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:18.610" endtime="20231207 10:26:18.615"/>
</kw>
<msg timestamp="20231207 10:26:18.616" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:26:18.610" endtime="20231207 10:26:18.616"/>
</kw>
<msg timestamp="20231207 10:26:18.616" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:18.609" endtime="20231207 10:26:18.616"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:26:18.616" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:18.616" endtime="20231207 10:26:18.616"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:18.619" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:18.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:18.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:18.618" endtime="20231207 10:26:18.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:18.632" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:18.632" endtime="20231207 10:26:18.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:18.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:18.632" endtime="20231207 10:26:18.633"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.617" endtime="20231207 10:26:18.633"/>
</kw>
<msg timestamp="20231207 10:26:18.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:18.617" endtime="20231207 10:26:18.633"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.617" endtime="20231207 10:26:18.633"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.616" endtime="20231207 10:26:18.634"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.609" endtime="20231207 10:26:18.634"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.608" endtime="20231207 10:26:18.634"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:18.636" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:20.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:20.457" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:18.635" endtime="20231207 10:26:20.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:20.458" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:20.457" endtime="20231207 10:26:20.458"/>
</kw>
<msg timestamp="20231207 10:26:20.458" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:18.634" endtime="20231207 10:26:20.459"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:26:20.460" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:26:20.459" endtime="20231207 10:26:20.460"/>
</kw>
<msg timestamp="20231207 10:26:20.461" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:26:20.459" endtime="20231207 10:26:20.461"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:26:20.461" endtime="20231207 10:26:20.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:26:20.461" endtime="20231207 10:26:20.461"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:26:20.461" endtime="20231207 10:26:20.462"/>
</branch>
<status status="PASS" starttime="20231207 10:26:20.461" endtime="20231207 10:26:20.462"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:26:20.463" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:26:20.462" endtime="20231207 10:26:20.463"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:26:20.464" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:26:20.463" endtime="20231207 10:26:20.464"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:26:20.464" level="INFO">${secret} = ['1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4']</msg>
<status status="PASS" starttime="20231207 10:26:20.464" endtime="20231207 10:26:20.464"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:26:20.466" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:20.465" endtime="20231207 10:26:20.466"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:26:20.468" level="INFO">${secret} = 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:20.466" endtime="20231207 10:26:20.468"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:20.471" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:20.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:20.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:20.469" endtime="20231207 10:26:20.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:20.891" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:20.891" endtime="20231207 10:26:20.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:20.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:20.891" endtime="20231207 10:26:20.892"/>
</kw>
<status status="PASS" starttime="20231207 10:26:20.469" endtime="20231207 10:26:20.892"/>
</kw>
<msg timestamp="20231207 10:26:20.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:20.468" endtime="20231207 10:26:20.893"/>
</kw>
<status status="PASS" starttime="20231207 10:26:20.468" endtime="20231207 10:26:20.893"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:20.895" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:21.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:21.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:20.894" endtime="20231207 10:26:21.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:21.243" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:21.242" endtime="20231207 10:26:21.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:21.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:21.243" endtime="20231207 10:26:21.243"/>
</kw>
<status status="PASS" starttime="20231207 10:26:20.893" endtime="20231207 10:26:21.243"/>
</kw>
<msg timestamp="20231207 10:26:21.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:20.893" endtime="20231207 10:26:21.244"/>
</kw>
<status status="PASS" starttime="20231207 10:26:20.893" endtime="20231207 10:26:21.244"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:21.247" level="INFO">Running command 'aws configure set aws_secret_access_key 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:21.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:21.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:21.245" endtime="20231207 10:26:21.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:21.588" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:21.587" endtime="20231207 10:26:21.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:21.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:21.588" endtime="20231207 10:26:21.588"/>
</kw>
<status status="PASS" starttime="20231207 10:26:21.245" endtime="20231207 10:26:21.589"/>
</kw>
<msg timestamp="20231207 10:26:21.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:21.245" endtime="20231207 10:26:21.589"/>
</kw>
<status status="PASS" starttime="20231207 10:26:21.244" endtime="20231207 10:26:21.589"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:21.592" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:21.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:21.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:21.590" endtime="20231207 10:26:21.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:21.938" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:21.938" endtime="20231207 10:26:21.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:21.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:21.938" endtime="20231207 10:26:21.939"/>
</kw>
<status status="PASS" starttime="20231207 10:26:21.590" endtime="20231207 10:26:21.939"/>
</kw>
<msg timestamp="20231207 10:26:21.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:21.590" endtime="20231207 10:26:21.940"/>
</kw>
<status status="PASS" starttime="20231207 10:26:21.589" endtime="20231207 10:26:21.940"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:21.942" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:22.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:22.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:21.941" endtime="20231207 10:26:22.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:22.286" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:22.285" endtime="20231207 10:26:22.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:22.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:22.286" endtime="20231207 10:26:22.286"/>
</kw>
<status status="PASS" starttime="20231207 10:26:21.941" endtime="20231207 10:26:22.286"/>
</kw>
<msg timestamp="20231207 10:26:22.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:21.940" endtime="20231207 10:26:22.287"/>
</kw>
<status status="PASS" starttime="20231207 10:26:21.940" endtime="20231207 10:26:22.287"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.634" endtime="20231207 10:26:22.287"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.634" endtime="20231207 10:26:22.287"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:26:22.287" endtime="20231207 10:26:22.288"/>
</kw>
<status status="PASS" starttime="20231207 10:26:18.608" endtime="20231207 10:26:22.288"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:22.290" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:24.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:24.299" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:22:38 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:22.289" endtime="20231207 10:26:24.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:24.300" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:22:38 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:26:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:26:24.299" endtime="20231207 10:26:24.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:24.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:24.300" endtime="20231207 10:26:24.300"/>
</kw>
<msg timestamp="20231207 10:26:24.301" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:22:38 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:22.288" endtime="20231207 10:26:24.301"/>
</kw>
<msg timestamp="20231207 10:26:24.301" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:22:38 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:22.288" endtime="20231207 10:26:24.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:24.301" endtime="20231207 10:26:24.301"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:24.303" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:24.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:24.305" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:24.302" endtime="20231207 10:26:24.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:24.305" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:24.305" endtime="20231207 10:26:24.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:24.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:24.306" endtime="20231207 10:26:24.306"/>
</kw>
<msg timestamp="20231207 10:26:24.306" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:24.301" endtime="20231207 10:26:24.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:24.306" endtime="20231207 10:26:24.307"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:24.308" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:24.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:24.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:24.307" endtime="20231207 10:26:24.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:24.310" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:24.310" endtime="20231207 10:26:24.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:24.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:24.310" endtime="20231207 10:26:24.311"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.307" endtime="20231207 10:26:24.311"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:18.608" endtime="20231207 10:26:24.311"/>
</test>
<test id="s1-s13-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:24.316" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:24.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:24.318" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:26:24.315" endtime="20231207 10:26:24.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:24.318" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:26:24.318" endtime="20231207 10:26:24.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:24.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:24.318" endtime="20231207 10:26:24.319"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.314" endtime="20231207 10:26:24.319"/>
</kw>
<msg timestamp="20231207 10:26:24.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:24.314" endtime="20231207 10:26:24.319"/>
</kw>
<msg timestamp="20231207 10:26:24.320" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:26:24.314" endtime="20231207 10:26:24.320"/>
</kw>
<msg timestamp="20231207 10:26:24.320" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:24.313" endtime="20231207 10:26:24.320"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:26:24.320" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:24.320" endtime="20231207 10:26:24.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:24.323" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:24.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:24.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:24.322" endtime="20231207 10:26:24.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:24.336" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:24.336" endtime="20231207 10:26:24.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:24.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:24.336" endtime="20231207 10:26:24.337"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.321" endtime="20231207 10:26:24.337"/>
</kw>
<msg timestamp="20231207 10:26:24.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:24.321" endtime="20231207 10:26:24.337"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.321" endtime="20231207 10:26:24.337"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.321" endtime="20231207 10:26:24.338"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.313" endtime="20231207 10:26:24.338"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.313" endtime="20231207 10:26:24.338"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:24.340" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:26.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:26.098" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:24.339" endtime="20231207 10:26:26.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:26.099" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:26.098" endtime="20231207 10:26:26.099"/>
</kw>
<msg timestamp="20231207 10:26:26.099" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:24.338" endtime="20231207 10:26:26.099"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:26:26.100" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:26:26.100" endtime="20231207 10:26:26.101"/>
</kw>
<msg timestamp="20231207 10:26:26.101" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:26:26.099" endtime="20231207 10:26:26.101"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:26:26.101" endtime="20231207 10:26:26.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:26:26.101" endtime="20231207 10:26:26.101"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:26:26.101" endtime="20231207 10:26:26.101"/>
</branch>
<status status="PASS" starttime="20231207 10:26:26.101" endtime="20231207 10:26:26.101"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:26:26.102" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:26:26.101" endtime="20231207 10:26:26.102"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:26:26.102" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:26:26.102" endtime="20231207 10:26:26.102"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:26:26.103" level="INFO">${secret} = ['1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4']</msg>
<status status="PASS" starttime="20231207 10:26:26.102" endtime="20231207 10:26:26.103"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:26:26.104" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:26.103" endtime="20231207 10:26:26.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:26:26.105" level="INFO">${secret} = 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:26.104" endtime="20231207 10:26:26.105"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:26.107" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:26.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:26.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:26.106" endtime="20231207 10:26:26.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:26.452" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:26.451" endtime="20231207 10:26:26.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:26.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:26.452" endtime="20231207 10:26:26.453"/>
</kw>
<status status="PASS" starttime="20231207 10:26:26.105" endtime="20231207 10:26:26.453"/>
</kw>
<msg timestamp="20231207 10:26:26.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:26.105" endtime="20231207 10:26:26.453"/>
</kw>
<status status="PASS" starttime="20231207 10:26:26.105" endtime="20231207 10:26:26.453"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:26.456" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:26.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:26.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:26.455" endtime="20231207 10:26:26.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:26.795" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:26.795" endtime="20231207 10:26:26.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:26.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:26.795" endtime="20231207 10:26:26.796"/>
</kw>
<status status="PASS" starttime="20231207 10:26:26.454" endtime="20231207 10:26:26.796"/>
</kw>
<msg timestamp="20231207 10:26:26.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:26.454" endtime="20231207 10:26:26.797"/>
</kw>
<status status="PASS" starttime="20231207 10:26:26.453" endtime="20231207 10:26:26.797"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:26.799" level="INFO">Running command 'aws configure set aws_secret_access_key 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:27.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:27.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:26.798" endtime="20231207 10:26:27.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:27.136" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:27.135" endtime="20231207 10:26:27.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:27.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:27.136" endtime="20231207 10:26:27.136"/>
</kw>
<status status="PASS" starttime="20231207 10:26:26.797" endtime="20231207 10:26:27.137"/>
</kw>
<msg timestamp="20231207 10:26:27.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:26.797" endtime="20231207 10:26:27.137"/>
</kw>
<status status="PASS" starttime="20231207 10:26:26.797" endtime="20231207 10:26:27.137"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:27.140" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:27.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:27.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:27.138" endtime="20231207 10:26:27.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:27.488" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:27.488" endtime="20231207 10:26:27.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:27.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:27.488" endtime="20231207 10:26:27.489"/>
</kw>
<status status="PASS" starttime="20231207 10:26:27.138" endtime="20231207 10:26:27.489"/>
</kw>
<msg timestamp="20231207 10:26:27.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:27.138" endtime="20231207 10:26:27.489"/>
</kw>
<status status="PASS" starttime="20231207 10:26:27.137" endtime="20231207 10:26:27.490"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:27.492" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:27.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:27.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:27.491" endtime="20231207 10:26:27.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:27.825" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:27.824" endtime="20231207 10:26:27.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:27.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:27.825" endtime="20231207 10:26:27.825"/>
</kw>
<status status="PASS" starttime="20231207 10:26:27.490" endtime="20231207 10:26:27.826"/>
</kw>
<msg timestamp="20231207 10:26:27.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:27.490" endtime="20231207 10:26:27.826"/>
</kw>
<status status="PASS" starttime="20231207 10:26:27.490" endtime="20231207 10:26:27.826"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.338" endtime="20231207 10:26:27.826"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.338" endtime="20231207 10:26:27.826"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:26:27.827" endtime="20231207 10:26:27.827"/>
</kw>
<status status="PASS" starttime="20231207 10:26:24.312" endtime="20231207 10:26:27.827"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:27.830" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:28.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:28.261" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:22:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:27.828" endtime="20231207 10:26:28.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:28.262" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:22:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:26:28 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:26:28.261" endtime="20231207 10:26:28.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:28.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:28.262" endtime="20231207 10:26:28.262"/>
</kw>
<msg timestamp="20231207 10:26:28.263" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:22:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:27.828" endtime="20231207 10:26:28.263"/>
</kw>
<msg timestamp="20231207 10:26:28.263" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:22:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:27.827" endtime="20231207 10:26:28.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:28.263" endtime="20231207 10:26:28.263"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:28.265" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:28.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:28.268" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:26:28.264" endtime="20231207 10:26:28.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:28.269" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:26:28.269" endtime="20231207 10:26:28.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:28.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:28.269" endtime="20231207 10:26:28.270"/>
</kw>
<msg timestamp="20231207 10:26:28.270" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:26:28.263" endtime="20231207 10:26:28.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:28.270" endtime="20231207 10:26:28.270"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:28.272" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:28.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:28.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:28.271" endtime="20231207 10:26:28.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:28.274" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:28.274" endtime="20231207 10:26:28.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:28.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:28.274" endtime="20231207 10:26:28.275"/>
</kw>
<status status="PASS" starttime="20231207 10:26:28.270" endtime="20231207 10:26:28.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:24.312" endtime="20231207 10:26:28.275"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:26:14.960" endtime="20231207 10:26:28.277"/>
</suite>
<suite id="s1-s14" name="1.3.0-1.4.0-3-downgraded-validate-new1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:31.396" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:31.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:31.398" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:26:31.394" endtime="20231207 10:26:31.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:31.398" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:26:31.398" endtime="20231207 10:26:31.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:31.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:31.398" endtime="20231207 10:26:31.399"/>
</kw>
<status status="PASS" starttime="20231207 10:26:31.393" endtime="20231207 10:26:31.399"/>
</kw>
<msg timestamp="20231207 10:26:31.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:31.393" endtime="20231207 10:26:31.400"/>
</kw>
<msg timestamp="20231207 10:26:31.400" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:26:31.393" endtime="20231207 10:26:31.400"/>
</kw>
<msg timestamp="20231207 10:26:31.400" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:31.392" endtime="20231207 10:26:31.401"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:26:31.401" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:31.401" endtime="20231207 10:26:31.401"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:31.403" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:31.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:31.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:31.402" endtime="20231207 10:26:31.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:31.417" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:31.417" endtime="20231207 10:26:31.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:31.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:31.417" endtime="20231207 10:26:31.417"/>
</kw>
<status status="PASS" starttime="20231207 10:26:31.402" endtime="20231207 10:26:31.418"/>
</kw>
<msg timestamp="20231207 10:26:31.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:31.402" endtime="20231207 10:26:31.418"/>
</kw>
<status status="PASS" starttime="20231207 10:26:31.401" endtime="20231207 10:26:31.418"/>
</kw>
<status status="PASS" starttime="20231207 10:26:31.401" endtime="20231207 10:26:31.418"/>
</kw>
<status status="PASS" starttime="20231207 10:26:31.392" endtime="20231207 10:26:31.418"/>
</kw>
<status status="PASS" starttime="20231207 10:26:31.392" endtime="20231207 10:26:31.418"/>
</kw>
<test id="s1-s14-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:26:31.420" level="INFO">${random} = 51974</msg>
<status status="PASS" starttime="20231207 10:26:31.420" endtime="20231207 10:26:31.420"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:31.423" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-51974 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:35.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:35.027" level="INFO">${output} = 2023-12-07 10:26:33,942 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:34,013 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:26:31.421" endtime="20231207 10:26:35.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:35.028" level="INFO">2023-12-07 10:26:33,942 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:34,013 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:26:34,013 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 10:26:35.027" endtime="20231207 10:26:35.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:35.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:35.028" endtime="20231207 10:26:35.028"/>
</kw>
<status status="PASS" starttime="20231207 10:26:31.421" endtime="20231207 10:26:35.029"/>
</kw>
<msg timestamp="20231207 10:26:35.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:31.421" endtime="20231207 10:26:35.029"/>
</kw>
<msg timestamp="20231207 10:26:35.029" level="INFO">${output} = 2023-12-07 10:26:33,942 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:34,013 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:26:31.420" endtime="20231207 10:26:35.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:35.029" endtime="20231207 10:26:35.030"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:35.031" level="INFO">Running command 'cat /tmp/key-51974 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:35.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:35.033" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:35.030" endtime="20231207 10:26:35.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:35.034" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:35.033" endtime="20231207 10:26:35.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:35.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:35.034" endtime="20231207 10:26:35.034"/>
</kw>
<msg timestamp="20231207 10:26:35.035" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:35.030" endtime="20231207 10:26:35.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:35.035" endtime="20231207 10:26:35.035"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:35.036" level="INFO">Running command 'rm /tmp/key-51974 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:35.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:35.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:35.035" endtime="20231207 10:26:35.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:35.039" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:35.038" endtime="20231207 10:26:35.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:35.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:35.039" endtime="20231207 10:26:35.039"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.035" endtime="20231207 10:26:35.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:31.419" endtime="20231207 10:26:35.039"/>
</test>
<test id="s1-s14-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:35.044" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:35.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:35.046" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:26:35.043" endtime="20231207 10:26:35.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:35.046" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:26:35.046" endtime="20231207 10:26:35.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:35.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:35.046" endtime="20231207 10:26:35.047"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.042" endtime="20231207 10:26:35.047"/>
</kw>
<msg timestamp="20231207 10:26:35.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:35.042" endtime="20231207 10:26:35.048"/>
</kw>
<msg timestamp="20231207 10:26:35.048" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:26:35.042" endtime="20231207 10:26:35.048"/>
</kw>
<msg timestamp="20231207 10:26:35.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:35.042" endtime="20231207 10:26:35.048"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:26:35.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:35.048" endtime="20231207 10:26:35.048"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:35.051" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:35.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:35.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:35.050" endtime="20231207 10:26:35.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:35.064" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:35.063" endtime="20231207 10:26:35.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:35.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:35.064" endtime="20231207 10:26:35.064"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.050" endtime="20231207 10:26:35.065"/>
</kw>
<msg timestamp="20231207 10:26:35.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:35.049" endtime="20231207 10:26:35.065"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.049" endtime="20231207 10:26:35.065"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.049" endtime="20231207 10:26:35.065"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.041" endtime="20231207 10:26:35.065"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.041" endtime="20231207 10:26:35.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:35.067" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:36.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:36.835" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:35.066" endtime="20231207 10:26:36.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:36.836" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:36.835" endtime="20231207 10:26:36.836"/>
</kw>
<msg timestamp="20231207 10:26:36.836" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:35.066" endtime="20231207 10:26:36.836"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:26:36.837" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:26:36.836" endtime="20231207 10:26:36.837"/>
</kw>
<msg timestamp="20231207 10:26:36.837" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:26:36.836" endtime="20231207 10:26:36.837"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:26:36.838" endtime="20231207 10:26:36.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:26:36.838" endtime="20231207 10:26:36.838"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:26:36.837" endtime="20231207 10:26:36.838"/>
</branch>
<status status="PASS" starttime="20231207 10:26:36.837" endtime="20231207 10:26:36.838"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:26:36.839" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:26:36.838" endtime="20231207 10:26:36.839"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:26:36.839" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:26:36.839" endtime="20231207 10:26:36.839"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:26:36.840" level="INFO">${secret} = ['1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4']</msg>
<status status="PASS" starttime="20231207 10:26:36.839" endtime="20231207 10:26:36.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:26:36.841" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:36.840" endtime="20231207 10:26:36.841"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:26:36.842" level="INFO">${secret} = 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:36.841" endtime="20231207 10:26:36.842"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:36.844" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:37.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:37.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:36.843" endtime="20231207 10:26:37.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:37.189" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:37.189" endtime="20231207 10:26:37.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:37.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:37.190" endtime="20231207 10:26:37.190"/>
</kw>
<status status="PASS" starttime="20231207 10:26:36.842" endtime="20231207 10:26:37.190"/>
</kw>
<msg timestamp="20231207 10:26:37.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:36.842" endtime="20231207 10:26:37.191"/>
</kw>
<status status="PASS" starttime="20231207 10:26:36.842" endtime="20231207 10:26:37.191"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:37.193" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:37.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:37.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:37.192" endtime="20231207 10:26:37.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:37.540" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:37.539" endtime="20231207 10:26:37.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:37.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:37.540" endtime="20231207 10:26:37.540"/>
</kw>
<status status="PASS" starttime="20231207 10:26:37.192" endtime="20231207 10:26:37.540"/>
</kw>
<msg timestamp="20231207 10:26:37.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:37.191" endtime="20231207 10:26:37.541"/>
</kw>
<status status="PASS" starttime="20231207 10:26:37.191" endtime="20231207 10:26:37.541"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:37.543" level="INFO">Running command 'aws configure set aws_secret_access_key 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:37.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:37.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:37.542" endtime="20231207 10:26:37.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:37.877" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:37.876" endtime="20231207 10:26:37.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:37.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:37.877" endtime="20231207 10:26:37.877"/>
</kw>
<status status="PASS" starttime="20231207 10:26:37.542" endtime="20231207 10:26:37.878"/>
</kw>
<msg timestamp="20231207 10:26:37.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:37.541" endtime="20231207 10:26:37.878"/>
</kw>
<status status="PASS" starttime="20231207 10:26:37.541" endtime="20231207 10:26:37.878"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:37.881" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:38.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:38.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:37.879" endtime="20231207 10:26:38.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:38.223" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:38.223" endtime="20231207 10:26:38.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:38.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:38.224" endtime="20231207 10:26:38.224"/>
</kw>
<status status="PASS" starttime="20231207 10:26:37.879" endtime="20231207 10:26:38.225"/>
</kw>
<msg timestamp="20231207 10:26:38.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:37.879" endtime="20231207 10:26:38.225"/>
</kw>
<status status="PASS" starttime="20231207 10:26:37.878" endtime="20231207 10:26:38.225"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:38.227" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:38.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:38.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:38.226" endtime="20231207 10:26:38.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:38.580" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:38.579" endtime="20231207 10:26:38.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:38.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:38.580" endtime="20231207 10:26:38.581"/>
</kw>
<status status="PASS" starttime="20231207 10:26:38.226" endtime="20231207 10:26:38.581"/>
</kw>
<msg timestamp="20231207 10:26:38.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:38.226" endtime="20231207 10:26:38.581"/>
</kw>
<status status="PASS" starttime="20231207 10:26:38.225" endtime="20231207 10:26:38.581"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.066" endtime="20231207 10:26:38.582"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.065" endtime="20231207 10:26:38.582"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:26:38.582" endtime="20231207 10:26:38.582"/>
</kw>
<status status="PASS" starttime="20231207 10:26:35.041" endtime="20231207 10:26:38.582"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:38.584" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:39.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:39.057" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:38.583" endtime="20231207 10:26:39.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:39.058" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:26:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:26:39.057" endtime="20231207 10:26:39.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:39.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:39.058" endtime="20231207 10:26:39.059"/>
</kw>
<msg timestamp="20231207 10:26:39.059" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:38.583" endtime="20231207 10:26:39.059"/>
</kw>
<msg timestamp="20231207 10:26:39.059" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:38.582" endtime="20231207 10:26:39.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:39.059" endtime="20231207 10:26:39.059"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:39.061" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:39.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:39.063" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:39.060" endtime="20231207 10:26:39.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:39.063" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:39.063" endtime="20231207 10:26:39.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:39.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:39.064" endtime="20231207 10:26:39.064"/>
</kw>
<msg timestamp="20231207 10:26:39.064" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:26:39.060" endtime="20231207 10:26:39.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:39.064" endtime="20231207 10:26:39.065"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:39.066" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:39.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:39.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:39.065" endtime="20231207 10:26:39.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:39.068" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:39.068" endtime="20231207 10:26:39.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:39.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:39.068" endtime="20231207 10:26:39.069"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.065" endtime="20231207 10:26:39.069"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:35.040" endtime="20231207 10:26:39.069"/>
</test>
<test id="s1-s14-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:39.074" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:39.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:39.076" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:26:39.073" endtime="20231207 10:26:39.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:39.076" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:26:39.076" endtime="20231207 10:26:39.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:39.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:39.077" endtime="20231207 10:26:39.077"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.072" endtime="20231207 10:26:39.077"/>
</kw>
<msg timestamp="20231207 10:26:39.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:39.072" endtime="20231207 10:26:39.078"/>
</kw>
<msg timestamp="20231207 10:26:39.078" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:26:39.072" endtime="20231207 10:26:39.078"/>
</kw>
<msg timestamp="20231207 10:26:39.078" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:39.071" endtime="20231207 10:26:39.078"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:26:39.078" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:39.078" endtime="20231207 10:26:39.078"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:39.081" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:39.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:39.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:39.080" endtime="20231207 10:26:39.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:39.190" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:39.190" endtime="20231207 10:26:39.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:39.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:39.190" endtime="20231207 10:26:39.191"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.080" endtime="20231207 10:26:39.191"/>
</kw>
<msg timestamp="20231207 10:26:39.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:39.079" endtime="20231207 10:26:39.191"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.079" endtime="20231207 10:26:39.191"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.079" endtime="20231207 10:26:39.192"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.071" endtime="20231207 10:26:39.192"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.071" endtime="20231207 10:26:39.192"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:39.194" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:41.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:41.086" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:39.193" endtime="20231207 10:26:41.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:41.087" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:41.087" endtime="20231207 10:26:41.087"/>
</kw>
<msg timestamp="20231207 10:26:41.088" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:39.193" endtime="20231207 10:26:41.088"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:26:41.089" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:26:41.088" endtime="20231207 10:26:41.089"/>
</kw>
<msg timestamp="20231207 10:26:41.089" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:26:41.088" endtime="20231207 10:26:41.089"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:26:41.089" endtime="20231207 10:26:41.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:26:41.089" endtime="20231207 10:26:41.089"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:26:41.089" endtime="20231207 10:26:41.089"/>
</branch>
<status status="PASS" starttime="20231207 10:26:41.089" endtime="20231207 10:26:41.089"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:26:41.090" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:26:41.090" endtime="20231207 10:26:41.090"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:26:41.090" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:26:41.090" endtime="20231207 10:26:41.090"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:26:41.091" level="INFO">${secret} = ['1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4']</msg>
<status status="PASS" starttime="20231207 10:26:41.090" endtime="20231207 10:26:41.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:26:41.092" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:41.091" endtime="20231207 10:26:41.092"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:26:41.093" level="INFO">${secret} = 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:26:41.092" endtime="20231207 10:26:41.093"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:41.095" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:41.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:41.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:41.094" endtime="20231207 10:26:41.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:41.449" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:41.448" endtime="20231207 10:26:41.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:41.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:41.449" endtime="20231207 10:26:41.449"/>
</kw>
<status status="PASS" starttime="20231207 10:26:41.093" endtime="20231207 10:26:41.450"/>
</kw>
<msg timestamp="20231207 10:26:41.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:41.093" endtime="20231207 10:26:41.450"/>
</kw>
<status status="PASS" starttime="20231207 10:26:41.093" endtime="20231207 10:26:41.450"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:41.453" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:41.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:41.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:41.451" endtime="20231207 10:26:41.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:41.795" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:41.795" endtime="20231207 10:26:41.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:41.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:41.796" endtime="20231207 10:26:41.796"/>
</kw>
<status status="PASS" starttime="20231207 10:26:41.451" endtime="20231207 10:26:41.796"/>
</kw>
<msg timestamp="20231207 10:26:41.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:41.451" endtime="20231207 10:26:41.797"/>
</kw>
<status status="PASS" starttime="20231207 10:26:41.450" endtime="20231207 10:26:41.797"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:41.799" level="INFO">Running command 'aws configure set aws_secret_access_key 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:42.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:42.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:41.798" endtime="20231207 10:26:42.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:42.143" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:42.143" endtime="20231207 10:26:42.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:42.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:42.143" endtime="20231207 10:26:42.144"/>
</kw>
<status status="PASS" starttime="20231207 10:26:41.797" endtime="20231207 10:26:42.144"/>
</kw>
<msg timestamp="20231207 10:26:42.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:41.797" endtime="20231207 10:26:42.145"/>
</kw>
<status status="PASS" starttime="20231207 10:26:41.797" endtime="20231207 10:26:42.145"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:42.147" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:42.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:42.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:42.146" endtime="20231207 10:26:42.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:42.493" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:42.492" endtime="20231207 10:26:42.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:42.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:42.493" endtime="20231207 10:26:42.493"/>
</kw>
<status status="PASS" starttime="20231207 10:26:42.145" endtime="20231207 10:26:42.494"/>
</kw>
<msg timestamp="20231207 10:26:42.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:42.145" endtime="20231207 10:26:42.494"/>
</kw>
<status status="PASS" starttime="20231207 10:26:42.145" endtime="20231207 10:26:42.494"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:42.497" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:42.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:42.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:42.495" endtime="20231207 10:26:42.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:42.848" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:42.848" endtime="20231207 10:26:42.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:42.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:42.848" endtime="20231207 10:26:42.849"/>
</kw>
<status status="PASS" starttime="20231207 10:26:42.495" endtime="20231207 10:26:42.849"/>
</kw>
<msg timestamp="20231207 10:26:42.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:42.495" endtime="20231207 10:26:42.849"/>
</kw>
<status status="PASS" starttime="20231207 10:26:42.494" endtime="20231207 10:26:42.850"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.192" endtime="20231207 10:26:42.850"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.192" endtime="20231207 10:26:42.850"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:26:42.850" endtime="20231207 10:26:42.850"/>
</kw>
<status status="PASS" starttime="20231207 10:26:39.071" endtime="20231207 10:26:42.850"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:42.853" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:43.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:43.297" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:42.852" endtime="20231207 10:26:43.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:43.298" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:26:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:26:43.297" endtime="20231207 10:26:43.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:43.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:43.298" endtime="20231207 10:26:43.298"/>
</kw>
<msg timestamp="20231207 10:26:43.299" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:42.851" endtime="20231207 10:26:43.299"/>
</kw>
<msg timestamp="20231207 10:26:43.299" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:26:42.850" endtime="20231207 10:26:43.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:43.299" endtime="20231207 10:26:43.299"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:43.301" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:43.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:43.303" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:26:43.300" endtime="20231207 10:26:43.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:43.303" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:26:43.303" endtime="20231207 10:26:43.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:43.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:43.304" endtime="20231207 10:26:43.304"/>
</kw>
<msg timestamp="20231207 10:26:43.304" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:26:43.299" endtime="20231207 10:26:43.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:43.304" endtime="20231207 10:26:43.305"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:43.306" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:43.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:43.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:43.305" endtime="20231207 10:26:43.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:43.308" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:43.308" endtime="20231207 10:26:43.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:43.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:43.308" endtime="20231207 10:26:43.309"/>
</kw>
<status status="PASS" starttime="20231207 10:26:43.305" endtime="20231207 10:26:43.309"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:39.070" endtime="20231207 10:26:43.309"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:26:31.328" endtime="20231207 10:26:43.310"/>
</suite>
<suite id="s1-s15" name="1.3.0-1.4.0-3-downgraded-generate-old2" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:46.237" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:46.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:46.239" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:26:46.235" endtime="20231207 10:26:46.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:46.239" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:26:46.239" endtime="20231207 10:26:46.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:46.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:46.240" endtime="20231207 10:26:46.240"/>
</kw>
<status status="PASS" starttime="20231207 10:26:46.234" endtime="20231207 10:26:46.240"/>
</kw>
<msg timestamp="20231207 10:26:46.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:46.234" endtime="20231207 10:26:46.241"/>
</kw>
<msg timestamp="20231207 10:26:46.241" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:26:46.234" endtime="20231207 10:26:46.241"/>
</kw>
<msg timestamp="20231207 10:26:46.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:46.233" endtime="20231207 10:26:46.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:26:46.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:26:46.242" endtime="20231207 10:26:46.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:46.244" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:46.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:46.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:46.243" endtime="20231207 10:26:46.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:46.279" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:46.279" endtime="20231207 10:26:46.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:46.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:46.279" endtime="20231207 10:26:46.280"/>
</kw>
<status status="PASS" starttime="20231207 10:26:46.243" endtime="20231207 10:26:46.280"/>
</kw>
<msg timestamp="20231207 10:26:46.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:46.243" endtime="20231207 10:26:46.280"/>
</kw>
<status status="PASS" starttime="20231207 10:26:46.242" endtime="20231207 10:26:46.280"/>
</kw>
<status status="PASS" starttime="20231207 10:26:46.242" endtime="20231207 10:26:46.280"/>
</kw>
<status status="PASS" starttime="20231207 10:26:46.233" endtime="20231207 10:26:46.281"/>
</kw>
<status status="PASS" starttime="20231207 10:26:46.233" endtime="20231207 10:26:46.281"/>
</kw>
<test id="s1-s15-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:46.284" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:48.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:48.461" level="INFO">${output} = 2023-12-07 10:26:48,418 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 10:26:46.283" endtime="20231207 10:26:48.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:48.462" level="INFO">2023-12-07 10:26:48,418 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 10:26:48.462" endtime="20231207 10:26:48.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:48.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:48.462" endtime="20231207 10:26:48.463"/>
</kw>
<status status="PASS" starttime="20231207 10:26:46.282" endtime="20231207 10:26:48.463"/>
</kw>
<msg timestamp="20231207 10:26:48.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:46.282" endtime="20231207 10:26:48.463"/>
</kw>
<msg timestamp="20231207 10:26:48.463" level="INFO">${output} = 2023-12-07 10:26:48,418 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 10:26:46.282" endtime="20231207 10:26:48.464"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:48.464" endtime="20231207 10:26:48.464"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:48.466" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:50.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:50.697" level="INFO">${output} = 2023-12-07 10:26:50,659 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 10:26:48.465" endtime="20231207 10:26:50.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:50.698" level="INFO">2023-12-07 10:26:50,659 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 10:26:50.697" endtime="20231207 10:26:50.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:50.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:50.698" endtime="20231207 10:26:50.698"/>
</kw>
<status status="PASS" starttime="20231207 10:26:48.465" endtime="20231207 10:26:50.699"/>
</kw>
<msg timestamp="20231207 10:26:50.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:48.465" endtime="20231207 10:26:50.699"/>
</kw>
<msg timestamp="20231207 10:26:50.699" level="INFO">${output} = 2023-12-07 10:26:50,659 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 10:26:48.464" endtime="20231207 10:26:50.699"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:50.699" endtime="20231207 10:26:50.700"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:46.281" endtime="20231207 10:26:50.700"/>
</test>
<test id="s1-s15-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:50.702" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:26:50.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:50.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:50.701" endtime="20231207 10:26:50.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:50.704" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:50.704" endtime="20231207 10:26:50.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:50.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:50.704" endtime="20231207 10:26:50.705"/>
</kw>
<status status="PASS" starttime="20231207 10:26:50.701" endtime="20231207 10:26:50.705"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:50.707" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:54.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:54.991" level="INFO">${output} = 2023-12-07 10:26:53,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:53,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:26:50.706" endtime="20231207 10:26:54.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:54.992" level="INFO">2023-12-07 10:26:53,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:53,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:26:53,431 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 10:26:53,612 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 10:26:54.992" endtime="20231207 10:26:54.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:54.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:54.992" endtime="20231207 10:26:54.993"/>
</kw>
<status status="PASS" starttime="20231207 10:26:50.706" endtime="20231207 10:26:54.993"/>
</kw>
<msg timestamp="20231207 10:26:54.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:50.705" endtime="20231207 10:26:54.993"/>
</kw>
<msg timestamp="20231207 10:26:54.993" level="INFO">${output} = 2023-12-07 10:26:53,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:53,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:26:50.705" endtime="20231207 10:26:54.993"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:54.994" endtime="20231207 10:26:54.994"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:54.996" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:54.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:54.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:54.994" endtime="20231207 10:26:54.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:54.998" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:54.998" endtime="20231207 10:26:54.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:54.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:54.998" endtime="20231207 10:26:54.998"/>
</kw>
<status status="PASS" starttime="20231207 10:26:54.994" endtime="20231207 10:26:54.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:50.700" endtime="20231207 10:26:54.999"/>
</test>
<test id="s1-s15-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:55.002" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:26:57.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:57.107" level="INFO">${output} = 2023-12-07 10:26:57,079 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 10:26:55.001" endtime="20231207 10:26:57.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:57.108" level="INFO">2023-12-07 10:26:57,079 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 10:26:57.107" endtime="20231207 10:26:57.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:57.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:57.108" endtime="20231207 10:26:57.108"/>
</kw>
<status status="PASS" starttime="20231207 10:26:55.001" endtime="20231207 10:26:57.109"/>
</kw>
<msg timestamp="20231207 10:26:57.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:55.000" endtime="20231207 10:26:57.109"/>
</kw>
<msg timestamp="20231207 10:26:57.109" level="INFO">${output} = 2023-12-07 10:26:57,079 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 10:26:55.000" endtime="20231207 10:26:57.109"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:26:57.109" endtime="20231207 10:26:57.109"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:54.999" endtime="20231207 10:26:57.110"/>
</test>
<test id="s1-s15-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:57.112" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:26:57.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:26:57.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:26:57.111" endtime="20231207 10:26:57.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:26:57.114" level="INFO"/>
<status status="PASS" starttime="20231207 10:26:57.114" endtime="20231207 10:26:57.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:26:57.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:26:57.114" endtime="20231207 10:26:57.115"/>
</kw>
<status status="PASS" starttime="20231207 10:26:57.111" endtime="20231207 10:26:57.115"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:26:57.117" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:03.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:03.441" level="INFO">${output} = 2023-12-07 10:26:59,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:59,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:26:57.116" endtime="20231207 10:27:03.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:03.442" level="INFO">2023-12-07 10:26:59,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:59,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:26:59,816 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 10:26:59,998 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 10:27:03.441" endtime="20231207 10:27:03.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:03.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:03.442" endtime="20231207 10:27:03.442"/>
</kw>
<status status="PASS" starttime="20231207 10:26:57.116" endtime="20231207 10:27:03.443"/>
</kw>
<msg timestamp="20231207 10:27:03.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:26:57.115" endtime="20231207 10:27:03.443"/>
</kw>
<msg timestamp="20231207 10:27:03.443" level="INFO">${output} = 2023-12-07 10:26:59,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:26:59,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:26:57.115" endtime="20231207 10:27:03.443"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:03.443" endtime="20231207 10:27:03.444"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:03.446" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:03.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:03.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:03.444" endtime="20231207 10:27:03.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:03.448" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:03.448" endtime="20231207 10:27:03.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:03.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:03.448" endtime="20231207 10:27:03.449"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.444" endtime="20231207 10:27:03.449"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:26:57.110" endtime="20231207 10:27:03.449"/>
</test>
<test id="s1-s15-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:03.454" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:03.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:03.455" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:27:03.452" endtime="20231207 10:27:03.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:03.456" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:27:03.456" endtime="20231207 10:27:03.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:03.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:03.456" endtime="20231207 10:27:03.457"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.452" endtime="20231207 10:27:03.457"/>
</kw>
<msg timestamp="20231207 10:27:03.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:03.452" endtime="20231207 10:27:03.457"/>
</kw>
<msg timestamp="20231207 10:27:03.457" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:27:03.452" endtime="20231207 10:27:03.458"/>
</kw>
<msg timestamp="20231207 10:27:03.458" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:03.451" endtime="20231207 10:27:03.458"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:27:03.458" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:03.458" endtime="20231207 10:27:03.458"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:03.461" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:03.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:03.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:03.460" endtime="20231207 10:27:03.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:03.476" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:03.475" endtime="20231207 10:27:03.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:03.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:03.476" endtime="20231207 10:27:03.476"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.459" endtime="20231207 10:27:03.476"/>
</kw>
<msg timestamp="20231207 10:27:03.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:03.459" endtime="20231207 10:27:03.477"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.459" endtime="20231207 10:27:03.477"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.458" endtime="20231207 10:27:03.477"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.451" endtime="20231207 10:27:03.477"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.451" endtime="20231207 10:27:03.477"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:03.480" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:05.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:05.246" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:03.478" endtime="20231207 10:27:05.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:05.247" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:05.247" endtime="20231207 10:27:05.247"/>
</kw>
<msg timestamp="20231207 10:27:05.248" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:03.478" endtime="20231207 10:27:05.248"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:27:05.249" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:27:05.248" endtime="20231207 10:27:05.249"/>
</kw>
<msg timestamp="20231207 10:27:05.249" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:27:05.248" endtime="20231207 10:27:05.249"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:27:05.249" endtime="20231207 10:27:05.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:27:05.249" endtime="20231207 10:27:05.249"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:27:05.249" endtime="20231207 10:27:05.249"/>
</branch>
<status status="PASS" starttime="20231207 10:27:05.249" endtime="20231207 10:27:05.249"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:27:05.250" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:27:05.250" endtime="20231207 10:27:05.250"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:27:05.251" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:27:05.250" endtime="20231207 10:27:05.251"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:27:05.251" level="INFO">${secret} = ['1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4']</msg>
<status status="PASS" starttime="20231207 10:27:05.251" endtime="20231207 10:27:05.251"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:27:05.252" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:05.251" endtime="20231207 10:27:05.252"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:27:05.253" level="INFO">${secret} = 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:05.252" endtime="20231207 10:27:05.253"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:05.255" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:05.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:05.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:05.254" endtime="20231207 10:27:05.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:05.671" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:05.671" endtime="20231207 10:27:05.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:05.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:05.671" endtime="20231207 10:27:05.672"/>
</kw>
<status status="PASS" starttime="20231207 10:27:05.254" endtime="20231207 10:27:05.672"/>
</kw>
<msg timestamp="20231207 10:27:05.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:05.254" endtime="20231207 10:27:05.672"/>
</kw>
<status status="PASS" starttime="20231207 10:27:05.253" endtime="20231207 10:27:05.673"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:05.675" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:06.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:06.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:05.674" endtime="20231207 10:27:06.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:06.020" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:06.019" endtime="20231207 10:27:06.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:06.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:06.020" endtime="20231207 10:27:06.020"/>
</kw>
<status status="PASS" starttime="20231207 10:27:05.673" endtime="20231207 10:27:06.021"/>
</kw>
<msg timestamp="20231207 10:27:06.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:05.673" endtime="20231207 10:27:06.021"/>
</kw>
<status status="PASS" starttime="20231207 10:27:05.673" endtime="20231207 10:27:06.021"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:06.024" level="INFO">Running command 'aws configure set aws_secret_access_key 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:06.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:06.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:06.022" endtime="20231207 10:27:06.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:06.382" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:06.381" endtime="20231207 10:27:06.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:06.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:06.382" endtime="20231207 10:27:06.382"/>
</kw>
<status status="PASS" starttime="20231207 10:27:06.022" endtime="20231207 10:27:06.382"/>
</kw>
<msg timestamp="20231207 10:27:06.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:06.022" endtime="20231207 10:27:06.383"/>
</kw>
<status status="PASS" starttime="20231207 10:27:06.021" endtime="20231207 10:27:06.383"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:06.385" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:06.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:06.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:06.384" endtime="20231207 10:27:06.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:06.723" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:06.723" endtime="20231207 10:27:06.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:06.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:06.724" endtime="20231207 10:27:06.724"/>
</kw>
<status status="PASS" starttime="20231207 10:27:06.384" endtime="20231207 10:27:06.724"/>
</kw>
<msg timestamp="20231207 10:27:06.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:06.384" endtime="20231207 10:27:06.725"/>
</kw>
<status status="PASS" starttime="20231207 10:27:06.383" endtime="20231207 10:27:06.725"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:06.727" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:07.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:07.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:06.726" endtime="20231207 10:27:07.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:07.080" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:07.079" endtime="20231207 10:27:07.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:07.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:07.080" endtime="20231207 10:27:07.080"/>
</kw>
<status status="PASS" starttime="20231207 10:27:06.726" endtime="20231207 10:27:07.080"/>
</kw>
<msg timestamp="20231207 10:27:07.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:06.725" endtime="20231207 10:27:07.081"/>
</kw>
<status status="PASS" starttime="20231207 10:27:06.725" endtime="20231207 10:27:07.081"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.478" endtime="20231207 10:27:07.081"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.477" endtime="20231207 10:27:07.081"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:27:07.081" endtime="20231207 10:27:07.081"/>
</kw>
<status status="PASS" starttime="20231207 10:27:03.450" endtime="20231207 10:27:07.082"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:27:07.082" level="INFO">${randStr} = 5344432104</msg>
<status status="PASS" starttime="20231207 10:27:07.082" endtime="20231207 10:27:07.082"/>
</kw>
<msg timestamp="20231207 10:27:07.083" level="INFO">${random} = ozone-test-5344432104</msg>
<status status="PASS" starttime="20231207 10:27:07.082" endtime="20231207 10:27:07.083"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:07.086" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket-ozone-test-5344432104 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:07.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:07.559" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-5344432104"
}</msg>
<status status="PASS" starttime="20231207 10:27:07.084" endtime="20231207 10:27:07.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:07.560" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket-ozone-test-5344432104"
}</msg>
<status status="PASS" starttime="20231207 10:27:07.559" endtime="20231207 10:27:07.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:07.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:07.560" endtime="20231207 10:27:07.560"/>
</kw>
<status status="PASS" starttime="20231207 10:27:07.084" endtime="20231207 10:27:07.561"/>
</kw>
<msg timestamp="20231207 10:27:07.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:07.084" endtime="20231207 10:27:07.561"/>
</kw>
<msg timestamp="20231207 10:27:07.561" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-5344432104"
}</msg>
<status status="PASS" starttime="20231207 10:27:07.083" endtime="20231207 10:27:07.561"/>
</kw>
<msg timestamp="20231207 10:27:07.562" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-5344432104"
}</msg>
<status status="PASS" starttime="20231207 10:27:07.083" endtime="20231207 10:27:07.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:07.562" endtime="20231207 10:27:07.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:07.562" endtime="20231207 10:27:07.562"/>
</kw>
<msg timestamp="20231207 10:27:07.562" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 10:27:07.083" endtime="20231207 10:27:07.563"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 10:27:07.563" endtime="20231207 10:27:07.563"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:03.450" endtime="20231207 10:27:07.563"/>
</test>
<test id="s1-s15-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:07.566" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:27:07.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:07.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:07.565" endtime="20231207 10:27:07.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:07.568" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:07.568" endtime="20231207 10:27:07.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:07.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:07.568" endtime="20231207 10:27:07.568"/>
</kw>
<status status="PASS" starttime="20231207 10:27:07.564" endtime="20231207 10:27:07.569"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:07.571" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:08.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:08.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:07.570" endtime="20231207 10:27:08.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:08.243" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:08.242" endtime="20231207 10:27:08.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:08.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:08.243" endtime="20231207 10:27:08.243"/>
</kw>
<msg timestamp="20231207 10:27:08.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:07.569" endtime="20231207 10:27:08.243"/>
</kw>
<msg timestamp="20231207 10:27:08.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:07.569" endtime="20231207 10:27:08.244"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:08.244" endtime="20231207 10:27:08.244"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:08.246" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:08.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:08.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:08.245" endtime="20231207 10:27:08.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:08.248" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:08.248" endtime="20231207 10:27:08.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:08.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:08.248" endtime="20231207 10:27:08.249"/>
</kw>
<status status="PASS" starttime="20231207 10:27:08.244" endtime="20231207 10:27:08.249"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:07.564" endtime="20231207 10:27:08.249"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 10:26:46.174" endtime="20231207 10:27:08.250"/>
</suite>
<suite id="s1-s16" name="1.3.0-1.4.0-3-downgraded-validate-old2" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:11.249" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:11.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:11.251" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:27:11.246" endtime="20231207 10:27:11.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:11.251" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:27:11.251" endtime="20231207 10:27:11.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:11.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:11.251" endtime="20231207 10:27:11.252"/>
</kw>
<status status="PASS" starttime="20231207 10:27:11.246" endtime="20231207 10:27:11.252"/>
</kw>
<msg timestamp="20231207 10:27:11.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:11.245" endtime="20231207 10:27:11.253"/>
</kw>
<msg timestamp="20231207 10:27:11.253" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:27:11.245" endtime="20231207 10:27:11.253"/>
</kw>
<msg timestamp="20231207 10:27:11.253" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:11.245" endtime="20231207 10:27:11.253"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:27:11.254" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:11.253" endtime="20231207 10:27:11.254"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:11.256" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:11.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:11.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:11.255" endtime="20231207 10:27:11.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:11.270" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:11.270" endtime="20231207 10:27:11.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:11.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:11.270" endtime="20231207 10:27:11.270"/>
</kw>
<status status="PASS" starttime="20231207 10:27:11.255" endtime="20231207 10:27:11.271"/>
</kw>
<msg timestamp="20231207 10:27:11.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:11.254" endtime="20231207 10:27:11.271"/>
</kw>
<status status="PASS" starttime="20231207 10:27:11.254" endtime="20231207 10:27:11.271"/>
</kw>
<status status="PASS" starttime="20231207 10:27:11.254" endtime="20231207 10:27:11.271"/>
</kw>
<status status="PASS" starttime="20231207 10:27:11.245" endtime="20231207 10:27:11.271"/>
</kw>
<status status="PASS" starttime="20231207 10:27:11.244" endtime="20231207 10:27:11.271"/>
</kw>
<test id="s1-s16-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:27:11.273" level="INFO">${random} = 37611</msg>
<status status="PASS" starttime="20231207 10:27:11.273" endtime="20231207 10:27:11.273"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:11.275" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-37611 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:14.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:14.769" level="INFO">${output} = 2023-12-07 10:27:13,686 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:27:13,753 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:27:11.274" endtime="20231207 10:27:14.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:14.770" level="INFO">2023-12-07 10:27:13,686 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:27:13,753 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:27:13,755 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 10:27:14.769" endtime="20231207 10:27:14.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:14.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:14.770" endtime="20231207 10:27:14.770"/>
</kw>
<status status="PASS" starttime="20231207 10:27:11.274" endtime="20231207 10:27:14.771"/>
</kw>
<msg timestamp="20231207 10:27:14.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:11.274" endtime="20231207 10:27:14.771"/>
</kw>
<msg timestamp="20231207 10:27:14.771" level="INFO">${output} = 2023-12-07 10:27:13,686 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:27:13,753 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:27:11.273" endtime="20231207 10:27:14.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:14.771" endtime="20231207 10:27:14.772"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:14.774" level="INFO">Running command 'cat /tmp/key-37611 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:14.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:14.775" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:27:14.772" endtime="20231207 10:27:14.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:14.776" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:27:14.775" endtime="20231207 10:27:14.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:14.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:14.776" endtime="20231207 10:27:14.776"/>
</kw>
<msg timestamp="20231207 10:27:14.777" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:27:14.772" endtime="20231207 10:27:14.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:14.777" endtime="20231207 10:27:14.777"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:14.779" level="INFO">Running command 'rm /tmp/key-37611 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:14.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:14.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:14.778" endtime="20231207 10:27:14.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:14.781" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:14.781" endtime="20231207 10:27:14.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:14.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:14.781" endtime="20231207 10:27:14.782"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.777" endtime="20231207 10:27:14.782"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:11.272" endtime="20231207 10:27:14.782"/>
</test>
<test id="s1-s16-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:14.787" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:14.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:14.789" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:27:14.786" endtime="20231207 10:27:14.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:14.789" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:27:14.789" endtime="20231207 10:27:14.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:14.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:14.789" endtime="20231207 10:27:14.790"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.785" endtime="20231207 10:27:14.790"/>
</kw>
<msg timestamp="20231207 10:27:14.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:14.785" endtime="20231207 10:27:14.790"/>
</kw>
<msg timestamp="20231207 10:27:14.791" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:27:14.785" endtime="20231207 10:27:14.791"/>
</kw>
<msg timestamp="20231207 10:27:14.791" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:14.784" endtime="20231207 10:27:14.791"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:27:14.791" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:14.791" endtime="20231207 10:27:14.791"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:14.794" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:14.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:14.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:14.793" endtime="20231207 10:27:14.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:14.829" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:14.828" endtime="20231207 10:27:14.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:14.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:14.829" endtime="20231207 10:27:14.829"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.792" endtime="20231207 10:27:14.829"/>
</kw>
<msg timestamp="20231207 10:27:14.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:14.792" endtime="20231207 10:27:14.830"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.792" endtime="20231207 10:27:14.830"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.791" endtime="20231207 10:27:14.830"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.784" endtime="20231207 10:27:14.830"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.784" endtime="20231207 10:27:14.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:14.833" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:16.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:16.610" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:14.831" endtime="20231207 10:27:16.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:16.611" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:16.611" endtime="20231207 10:27:16.611"/>
</kw>
<msg timestamp="20231207 10:27:16.612" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:14.831" endtime="20231207 10:27:16.612"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:27:16.613" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:27:16.612" endtime="20231207 10:27:16.613"/>
</kw>
<msg timestamp="20231207 10:27:16.613" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:27:16.612" endtime="20231207 10:27:16.613"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:27:16.613" endtime="20231207 10:27:16.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:27:16.613" endtime="20231207 10:27:16.613"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:27:16.613" endtime="20231207 10:27:16.613"/>
</branch>
<status status="PASS" starttime="20231207 10:27:16.613" endtime="20231207 10:27:16.613"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:27:16.614" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:27:16.614" endtime="20231207 10:27:16.614"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:27:16.615" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:27:16.614" endtime="20231207 10:27:16.615"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:27:16.615" level="INFO">${secret} = ['1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4']</msg>
<status status="PASS" starttime="20231207 10:27:16.615" endtime="20231207 10:27:16.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:27:16.616" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:16.615" endtime="20231207 10:27:16.616"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:27:16.617" level="INFO">${secret} = 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:16.616" endtime="20231207 10:27:16.617"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:16.619" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:16.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:16.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:16.618" endtime="20231207 10:27:16.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:16.964" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:16.964" endtime="20231207 10:27:16.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:16.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:16.964" endtime="20231207 10:27:16.965"/>
</kw>
<status status="PASS" starttime="20231207 10:27:16.618" endtime="20231207 10:27:16.965"/>
</kw>
<msg timestamp="20231207 10:27:16.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:16.618" endtime="20231207 10:27:16.966"/>
</kw>
<status status="PASS" starttime="20231207 10:27:16.617" endtime="20231207 10:27:16.966"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:16.968" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:17.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:17.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:16.967" endtime="20231207 10:27:17.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:17.346" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:17.345" endtime="20231207 10:27:17.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:17.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:17.346" endtime="20231207 10:27:17.346"/>
</kw>
<status status="PASS" starttime="20231207 10:27:16.966" endtime="20231207 10:27:17.347"/>
</kw>
<msg timestamp="20231207 10:27:17.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:16.966" endtime="20231207 10:27:17.347"/>
</kw>
<status status="PASS" starttime="20231207 10:27:16.966" endtime="20231207 10:27:17.347"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:17.350" level="INFO">Running command 'aws configure set aws_secret_access_key 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:17.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:17.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:17.348" endtime="20231207 10:27:17.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:17.689" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:17.689" endtime="20231207 10:27:17.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:17.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:17.690" endtime="20231207 10:27:17.690"/>
</kw>
<status status="PASS" starttime="20231207 10:27:17.348" endtime="20231207 10:27:17.690"/>
</kw>
<msg timestamp="20231207 10:27:17.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:17.348" endtime="20231207 10:27:17.691"/>
</kw>
<status status="PASS" starttime="20231207 10:27:17.347" endtime="20231207 10:27:17.691"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:17.693" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:18.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:18.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:17.692" endtime="20231207 10:27:18.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:18.031" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:18.031" endtime="20231207 10:27:18.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:18.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:18.031" endtime="20231207 10:27:18.032"/>
</kw>
<status status="PASS" starttime="20231207 10:27:17.692" endtime="20231207 10:27:18.032"/>
</kw>
<msg timestamp="20231207 10:27:18.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:17.691" endtime="20231207 10:27:18.033"/>
</kw>
<status status="PASS" starttime="20231207 10:27:17.691" endtime="20231207 10:27:18.033"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:18.035" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:18.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:18.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:18.034" endtime="20231207 10:27:18.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:18.373" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:18.372" endtime="20231207 10:27:18.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:18.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:18.373" endtime="20231207 10:27:18.373"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.033" endtime="20231207 10:27:18.374"/>
</kw>
<msg timestamp="20231207 10:27:18.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:18.033" endtime="20231207 10:27:18.374"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.033" endtime="20231207 10:27:18.374"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.831" endtime="20231207 10:27:18.374"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.830" endtime="20231207 10:27:18.374"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:27:18.374" endtime="20231207 10:27:18.375"/>
</kw>
<status status="PASS" starttime="20231207 10:27:14.783" endtime="20231207 10:27:18.375"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:18.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:18.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:18.849" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:27:18.376" endtime="20231207 10:27:18.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:18.850" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:27:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:27:18.850" endtime="20231207 10:27:18.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:18.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:18.851" endtime="20231207 10:27:18.851"/>
</kw>
<msg timestamp="20231207 10:27:18.851" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:27:18.375" endtime="20231207 10:27:18.851"/>
</kw>
<msg timestamp="20231207 10:27:18.851" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:27:18.375" endtime="20231207 10:27:18.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:18.852" endtime="20231207 10:27:18.852"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:18.854" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:18.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:18.855" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:27:18.852" endtime="20231207 10:27:18.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:18.856" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:27:18.856" endtime="20231207 10:27:18.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:18.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:18.856" endtime="20231207 10:27:18.857"/>
</kw>
<msg timestamp="20231207 10:27:18.857" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:27:18.852" endtime="20231207 10:27:18.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:18.857" endtime="20231207 10:27:18.857"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:18.859" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:18.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:18.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:18.858" endtime="20231207 10:27:18.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:18.861" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:18.860" endtime="20231207 10:27:18.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:18.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:18.861" endtime="20231207 10:27:18.861"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.857" endtime="20231207 10:27:18.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:14.783" endtime="20231207 10:27:18.862"/>
</test>
<test id="s1-s16-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:18.867" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:18.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:18.868" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:27:18.865" endtime="20231207 10:27:18.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:18.869" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:27:18.869" endtime="20231207 10:27:18.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:18.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:18.869" endtime="20231207 10:27:18.870"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.865" endtime="20231207 10:27:18.870"/>
</kw>
<msg timestamp="20231207 10:27:18.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:18.865" endtime="20231207 10:27:18.870"/>
</kw>
<msg timestamp="20231207 10:27:18.870" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:27:18.864" endtime="20231207 10:27:18.870"/>
</kw>
<msg timestamp="20231207 10:27:18.871" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:18.864" endtime="20231207 10:27:18.871"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:27:18.871" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:18.871" endtime="20231207 10:27:18.871"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:18.873" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:18.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:18.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:18.872" endtime="20231207 10:27:18.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:18.887" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:18.887" endtime="20231207 10:27:18.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:18.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:18.887" endtime="20231207 10:27:18.888"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.872" endtime="20231207 10:27:18.888"/>
</kw>
<msg timestamp="20231207 10:27:18.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:18.872" endtime="20231207 10:27:18.888"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.871" endtime="20231207 10:27:18.888"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.871" endtime="20231207 10:27:18.889"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.864" endtime="20231207 10:27:18.889"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.863" endtime="20231207 10:27:18.889"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:18.891" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:20.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:20.645" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:18.890" endtime="20231207 10:27:20.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:20.646" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:20.645" endtime="20231207 10:27:20.646"/>
</kw>
<msg timestamp="20231207 10:27:20.646" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:18.889" endtime="20231207 10:27:20.646"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:27:20.647" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:27:20.646" endtime="20231207 10:27:20.647"/>
</kw>
<msg timestamp="20231207 10:27:20.647" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:27:20.646" endtime="20231207 10:27:20.647"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:27:20.648" endtime="20231207 10:27:20.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:27:20.648" endtime="20231207 10:27:20.648"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:27:20.648" endtime="20231207 10:27:20.648"/>
</branch>
<status status="PASS" starttime="20231207 10:27:20.647" endtime="20231207 10:27:20.648"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:27:20.648" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:27:20.648" endtime="20231207 10:27:20.648"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:27:20.649" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:27:20.648" endtime="20231207 10:27:20.649"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:27:20.649" level="INFO">${secret} = ['1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4']</msg>
<status status="PASS" starttime="20231207 10:27:20.649" endtime="20231207 10:27:20.649"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:27:20.650" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:20.649" endtime="20231207 10:27:20.650"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:27:20.651" level="INFO">${secret} = 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:20.650" endtime="20231207 10:27:20.651"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:20.654" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:21.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:21.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:20.652" endtime="20231207 10:27:21.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:21.028" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:21.028" endtime="20231207 10:27:21.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:21.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:21.029" endtime="20231207 10:27:21.029"/>
</kw>
<status status="PASS" starttime="20231207 10:27:20.652" endtime="20231207 10:27:21.029"/>
</kw>
<msg timestamp="20231207 10:27:21.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:20.651" endtime="20231207 10:27:21.030"/>
</kw>
<status status="PASS" starttime="20231207 10:27:20.651" endtime="20231207 10:27:21.030"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:21.034" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:21.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:21.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:21.032" endtime="20231207 10:27:21.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:21.380" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:21.379" endtime="20231207 10:27:21.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:21.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:21.380" endtime="20231207 10:27:21.380"/>
</kw>
<status status="PASS" starttime="20231207 10:27:21.031" endtime="20231207 10:27:21.380"/>
</kw>
<msg timestamp="20231207 10:27:21.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:21.031" endtime="20231207 10:27:21.381"/>
</kw>
<status status="PASS" starttime="20231207 10:27:21.031" endtime="20231207 10:27:21.381"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:21.384" level="INFO">Running command 'aws configure set aws_secret_access_key 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:21.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:21.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:21.382" endtime="20231207 10:27:21.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:21.759" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:21.758" endtime="20231207 10:27:21.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:21.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:21.759" endtime="20231207 10:27:21.759"/>
</kw>
<status status="PASS" starttime="20231207 10:27:21.382" endtime="20231207 10:27:21.760"/>
</kw>
<msg timestamp="20231207 10:27:21.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:21.382" endtime="20231207 10:27:21.760"/>
</kw>
<status status="PASS" starttime="20231207 10:27:21.381" endtime="20231207 10:27:21.760"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:21.763" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:22.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:22.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:21.761" endtime="20231207 10:27:22.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:22.108" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:22.108" endtime="20231207 10:27:22.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:22.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:22.108" endtime="20231207 10:27:22.109"/>
</kw>
<status status="PASS" starttime="20231207 10:27:21.761" endtime="20231207 10:27:22.109"/>
</kw>
<msg timestamp="20231207 10:27:22.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:21.761" endtime="20231207 10:27:22.109"/>
</kw>
<status status="PASS" starttime="20231207 10:27:21.760" endtime="20231207 10:27:22.110"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:22.112" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:22.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:22.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:22.111" endtime="20231207 10:27:22.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:22.461" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:22.460" endtime="20231207 10:27:22.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:22.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:22.461" endtime="20231207 10:27:22.461"/>
</kw>
<status status="PASS" starttime="20231207 10:27:22.110" endtime="20231207 10:27:22.462"/>
</kw>
<msg timestamp="20231207 10:27:22.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:22.110" endtime="20231207 10:27:22.462"/>
</kw>
<status status="PASS" starttime="20231207 10:27:22.110" endtime="20231207 10:27:22.462"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.889" endtime="20231207 10:27:22.462"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.889" endtime="20231207 10:27:22.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:27:22.463" endtime="20231207 10:27:22.463"/>
</kw>
<status status="PASS" starttime="20231207 10:27:18.863" endtime="20231207 10:27:22.463"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:22.466" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:22.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:22.886" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:27:22.464" endtime="20231207 10:27:22.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:22.887" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:27:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:27:22.886" endtime="20231207 10:27:22.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:22.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:22.887" endtime="20231207 10:27:22.887"/>
</kw>
<msg timestamp="20231207 10:27:22.888" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:27:22.464" endtime="20231207 10:27:22.888"/>
</kw>
<msg timestamp="20231207 10:27:22.888" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 10:27:22.463" endtime="20231207 10:27:22.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:22.888" endtime="20231207 10:27:22.889"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:22.890" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:22.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:22.892" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:27:22.889" endtime="20231207 10:27:22.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:22.893" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:27:22.892" endtime="20231207 10:27:22.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:22.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:22.893" endtime="20231207 10:27:22.893"/>
</kw>
<msg timestamp="20231207 10:27:22.893" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:27:22.889" endtime="20231207 10:27:22.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:22.894" endtime="20231207 10:27:22.894"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:22.895" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:22.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:22.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:22.894" endtime="20231207 10:27:22.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:22.897" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:22.897" endtime="20231207 10:27:22.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:22.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:22.898" endtime="20231207 10:27:22.898"/>
</kw>
<status status="PASS" starttime="20231207 10:27:22.894" endtime="20231207 10:27:22.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:18.863" endtime="20231207 10:27:22.898"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:27:11.182" endtime="20231207 10:27:22.899"/>
</suite>
<suite id="s1-s17" name="1.3.0-1.4.0-3-downgraded-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:25.834" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:25.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:25.836" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:27:25.832" endtime="20231207 10:27:25.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:25.836" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:27:25.836" endtime="20231207 10:27:25.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:25.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:25.837" endtime="20231207 10:27:25.837"/>
</kw>
<status status="PASS" starttime="20231207 10:27:25.831" endtime="20231207 10:27:25.837"/>
</kw>
<msg timestamp="20231207 10:27:25.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:25.831" endtime="20231207 10:27:25.838"/>
</kw>
<msg timestamp="20231207 10:27:25.838" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:27:25.831" endtime="20231207 10:27:25.838"/>
</kw>
<msg timestamp="20231207 10:27:25.838" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:25.830" endtime="20231207 10:27:25.838"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:27:25.839" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:25.839" endtime="20231207 10:27:25.839"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:25.841" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:25.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:25.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:25.840" endtime="20231207 10:27:25.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:25.855" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:25.855" endtime="20231207 10:27:25.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:25.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:25.855" endtime="20231207 10:27:25.856"/>
</kw>
<status status="PASS" starttime="20231207 10:27:25.840" endtime="20231207 10:27:25.856"/>
</kw>
<msg timestamp="20231207 10:27:25.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:25.840" endtime="20231207 10:27:25.856"/>
</kw>
<status status="PASS" starttime="20231207 10:27:25.839" endtime="20231207 10:27:25.856"/>
</kw>
<status status="PASS" starttime="20231207 10:27:25.839" endtime="20231207 10:27:25.857"/>
</kw>
<status status="PASS" starttime="20231207 10:27:25.830" endtime="20231207 10:27:25.857"/>
</kw>
<status status="PASS" starttime="20231207 10:27:25.830" endtime="20231207 10:27:25.857"/>
</kw>
<test id="s1-s17-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:25.859" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:27:25.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:25.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:25.858" endtime="20231207 10:27:25.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:25.861" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:25.861" endtime="20231207 10:27:25.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:25.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:25.861" endtime="20231207 10:27:25.861"/>
</kw>
<status status="PASS" starttime="20231207 10:27:25.858" endtime="20231207 10:27:25.862"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:25.864" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:29.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:29.789" level="INFO">${output} = 2023-12-07 10:27:28,405 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:27:28,502 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:27:25.863" endtime="20231207 10:27:29.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:29.790" level="INFO">2023-12-07 10:27:28,405 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:27:28,502 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:27:28,502 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 10:27:28,710 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 10:27:29.789" endtime="20231207 10:27:29.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:29.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:29.790" endtime="20231207 10:27:29.790"/>
</kw>
<status status="PASS" starttime="20231207 10:27:25.862" endtime="20231207 10:27:29.790"/>
</kw>
<msg timestamp="20231207 10:27:29.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:25.862" endtime="20231207 10:27:29.791"/>
</kw>
<msg timestamp="20231207 10:27:29.791" level="INFO">${output} = 2023-12-07 10:27:28,405 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:27:28,502 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:27:25.862" endtime="20231207 10:27:29.791"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:29.791" endtime="20231207 10:27:29.792"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:29.794" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:29.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:29.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:29.792" endtime="20231207 10:27:29.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:29.796" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:29.796" endtime="20231207 10:27:29.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:29.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:29.796" endtime="20231207 10:27:29.797"/>
</kw>
<status status="PASS" starttime="20231207 10:27:29.792" endtime="20231207 10:27:29.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:25.857" endtime="20231207 10:27:29.800"/>
</test>
<test id="s1-s17-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:29.803" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:27:29.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:29.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:29.802" endtime="20231207 10:27:29.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:29.805" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:29.805" endtime="20231207 10:27:29.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:29.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:29.806" endtime="20231207 10:27:29.806"/>
</kw>
<status status="PASS" starttime="20231207 10:27:29.802" endtime="20231207 10:27:29.806"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:29.808" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:33.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:33.586" level="INFO">${output} = 2023-12-07 10:27:32,392 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:27:32,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:27:29.807" endtime="20231207 10:27:33.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:33.587" level="INFO">2023-12-07 10:27:32,392 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:27:32,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 10:27:32,456 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 10:27:32,617 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 10:27:33.587" endtime="20231207 10:27:33.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:33.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:33.587" endtime="20231207 10:27:33.588"/>
</kw>
<status status="PASS" starttime="20231207 10:27:29.807" endtime="20231207 10:27:33.588"/>
</kw>
<msg timestamp="20231207 10:27:33.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:29.807" endtime="20231207 10:27:33.589"/>
</kw>
<msg timestamp="20231207 10:27:33.589" level="INFO">${output} = 2023-12-07 10:27:32,392 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 10:27:32,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 10:27:29.806" endtime="20231207 10:27:33.589"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:33.589" endtime="20231207 10:27:33.589"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:33.591" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:33.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:33.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:33.590" endtime="20231207 10:27:33.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:33.593" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:33.593" endtime="20231207 10:27:33.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:33.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:33.594" endtime="20231207 10:27:33.594"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.589" endtime="20231207 10:27:33.594"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:29.801" endtime="20231207 10:27:33.594"/>
</test>
<test id="s1-s17-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:33.599" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:33.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:33.600" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:27:33.598" endtime="20231207 10:27:33.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:33.601" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:27:33.601" endtime="20231207 10:27:33.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:33.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:33.601" endtime="20231207 10:27:33.602"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.597" endtime="20231207 10:27:33.602"/>
</kw>
<msg timestamp="20231207 10:27:33.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:33.597" endtime="20231207 10:27:33.602"/>
</kw>
<msg timestamp="20231207 10:27:33.602" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:27:33.597" endtime="20231207 10:27:33.602"/>
</kw>
<msg timestamp="20231207 10:27:33.603" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:33.596" endtime="20231207 10:27:33.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:27:33.603" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:33.603" endtime="20231207 10:27:33.603"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:33.605" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:33.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:33.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:33.604" endtime="20231207 10:27:33.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:33.638" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:33.638" endtime="20231207 10:27:33.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:33.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:33.638" endtime="20231207 10:27:33.639"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.604" endtime="20231207 10:27:33.639"/>
</kw>
<msg timestamp="20231207 10:27:33.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:33.604" endtime="20231207 10:27:33.640"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.604" endtime="20231207 10:27:33.640"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.603" endtime="20231207 10:27:33.640"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.596" endtime="20231207 10:27:33.640"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.596" endtime="20231207 10:27:33.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:33.642" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:35.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:35.362" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:33.641" endtime="20231207 10:27:35.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:35.363" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:35.362" endtime="20231207 10:27:35.363"/>
</kw>
<msg timestamp="20231207 10:27:35.363" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:33.641" endtime="20231207 10:27:35.363"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 10:27:35.364" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 10:27:35.364" endtime="20231207 10:27:35.364"/>
</kw>
<msg timestamp="20231207 10:27:35.365" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 10:27:35.363" endtime="20231207 10:27:35.365"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:27:35.365" endtime="20231207 10:27:35.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 10:27:35.365" endtime="20231207 10:27:35.365"/>
</kw>
<status status="NOT RUN" starttime="20231207 10:27:35.365" endtime="20231207 10:27:35.365"/>
</branch>
<status status="PASS" starttime="20231207 10:27:35.365" endtime="20231207 10:27:35.365"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:27:35.366" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:27:35.365" endtime="20231207 10:27:35.366"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:27:35.366" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:27:35.366" endtime="20231207 10:27:35.366"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:27:35.367" level="INFO">${secret} = ['1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4']</msg>
<status status="PASS" starttime="20231207 10:27:35.366" endtime="20231207 10:27:35.367"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:27:35.368" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:35.367" endtime="20231207 10:27:35.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:27:35.369" level="INFO">${secret} = 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4</msg>
<status status="PASS" starttime="20231207 10:27:35.368" endtime="20231207 10:27:35.369"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:35.371" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:35.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:35.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:35.370" endtime="20231207 10:27:35.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:35.719" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:35.719" endtime="20231207 10:27:35.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:35.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:35.720" endtime="20231207 10:27:35.720"/>
</kw>
<status status="PASS" starttime="20231207 10:27:35.369" endtime="20231207 10:27:35.720"/>
</kw>
<msg timestamp="20231207 10:27:35.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:35.369" endtime="20231207 10:27:35.721"/>
</kw>
<status status="PASS" starttime="20231207 10:27:35.369" endtime="20231207 10:27:35.721"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:35.724" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:36.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:36.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:35.722" endtime="20231207 10:27:36.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:36.059" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:36.059" endtime="20231207 10:27:36.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:36.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:36.059" endtime="20231207 10:27:36.060"/>
</kw>
<status status="PASS" starttime="20231207 10:27:35.722" endtime="20231207 10:27:36.060"/>
</kw>
<msg timestamp="20231207 10:27:36.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:35.721" endtime="20231207 10:27:36.061"/>
</kw>
<status status="PASS" starttime="20231207 10:27:35.721" endtime="20231207 10:27:36.061"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:36.063" level="INFO">Running command 'aws configure set aws_secret_access_key 1b6b07d8c1f411e73ceffc248d9aa24be73c94fa35a5a5fc84808fe3ccd653a4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:36.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:36.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:36.062" endtime="20231207 10:27:36.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:36.403" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:36.402" endtime="20231207 10:27:36.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:36.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:36.403" endtime="20231207 10:27:36.403"/>
</kw>
<status status="PASS" starttime="20231207 10:27:36.061" endtime="20231207 10:27:36.403"/>
</kw>
<msg timestamp="20231207 10:27:36.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:36.061" endtime="20231207 10:27:36.404"/>
</kw>
<status status="PASS" starttime="20231207 10:27:36.061" endtime="20231207 10:27:36.404"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:36.406" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:36.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:36.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:36.405" endtime="20231207 10:27:36.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:36.742" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:36.741" endtime="20231207 10:27:36.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:36.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:36.742" endtime="20231207 10:27:36.742"/>
</kw>
<status status="PASS" starttime="20231207 10:27:36.405" endtime="20231207 10:27:36.742"/>
</kw>
<msg timestamp="20231207 10:27:36.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:36.404" endtime="20231207 10:27:36.743"/>
</kw>
<status status="PASS" starttime="20231207 10:27:36.404" endtime="20231207 10:27:36.743"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:36.745" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:37.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:37.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:36.744" endtime="20231207 10:27:37.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:37.088" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:37.087" endtime="20231207 10:27:37.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:37.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:37.088" endtime="20231207 10:27:37.088"/>
</kw>
<status status="PASS" starttime="20231207 10:27:36.744" endtime="20231207 10:27:37.089"/>
</kw>
<msg timestamp="20231207 10:27:37.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:36.744" endtime="20231207 10:27:37.089"/>
</kw>
<status status="PASS" starttime="20231207 10:27:36.743" endtime="20231207 10:27:37.089"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.640" endtime="20231207 10:27:37.089"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.640" endtime="20231207 10:27:37.089"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:27:37.090" endtime="20231207 10:27:37.090"/>
</kw>
<status status="PASS" starttime="20231207 10:27:33.595" endtime="20231207 10:27:37.090"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:27:37.091" level="INFO">${randStr} = 8453215761</msg>
<status status="PASS" starttime="20231207 10:27:37.090" endtime="20231207 10:27:37.091"/>
</kw>
<msg timestamp="20231207 10:27:37.091" level="INFO">${random} = ozone-test-8453215761</msg>
<status status="PASS" starttime="20231207 10:27:37.090" endtime="20231207 10:27:37.091"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:37.094" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-8453215761 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:37.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:37.531" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8453215761"
}</msg>
<status status="PASS" starttime="20231207 10:27:37.093" endtime="20231207 10:27:37.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:37.532" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8453215761"
}</msg>
<status status="PASS" starttime="20231207 10:27:37.531" endtime="20231207 10:27:37.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:37.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:37.532" endtime="20231207 10:27:37.533"/>
</kw>
<status status="PASS" starttime="20231207 10:27:37.093" endtime="20231207 10:27:37.533"/>
</kw>
<msg timestamp="20231207 10:27:37.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:37.092" endtime="20231207 10:27:37.533"/>
</kw>
<msg timestamp="20231207 10:27:37.534" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8453215761"
}</msg>
<status status="PASS" starttime="20231207 10:27:37.092" endtime="20231207 10:27:37.534"/>
</kw>
<msg timestamp="20231207 10:27:37.534" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8453215761"
}</msg>
<status status="PASS" starttime="20231207 10:27:37.092" endtime="20231207 10:27:37.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:37.534" endtime="20231207 10:27:37.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:37.534" endtime="20231207 10:27:37.534"/>
</kw>
<msg timestamp="20231207 10:27:37.535" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 10:27:37.091" endtime="20231207 10:27:37.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 10:27:37.535" endtime="20231207 10:27:37.535"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:33.595" endtime="20231207 10:27:37.535"/>
</test>
<test id="s1-s17-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:37.538" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:27:37.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:37.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:37.537" endtime="20231207 10:27:37.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:37.540" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:37.540" endtime="20231207 10:27:37.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:37.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:37.540" endtime="20231207 10:27:37.541"/>
</kw>
<status status="PASS" starttime="20231207 10:27:37.536" endtime="20231207 10:27:37.541"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:37.543" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:38.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:38.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:37.542" endtime="20231207 10:27:38.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:38.052" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:38.052" endtime="20231207 10:27:38.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:38.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:38.053" endtime="20231207 10:27:38.053"/>
</kw>
<msg timestamp="20231207 10:27:38.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:37.541" endtime="20231207 10:27:38.053"/>
</kw>
<msg timestamp="20231207 10:27:38.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:37.541" endtime="20231207 10:27:38.054"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:38.054" endtime="20231207 10:27:38.054"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:38.056" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:38.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:38.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:38.054" endtime="20231207 10:27:38.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:38.058" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:38.058" endtime="20231207 10:27:38.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:38.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:38.058" endtime="20231207 10:27:38.059"/>
</kw>
<status status="PASS" starttime="20231207 10:27:38.054" endtime="20231207 10:27:38.059"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:37.536" endtime="20231207 10:27:38.059"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 10:27:25.769" endtime="20231207 10:27:38.060"/>
</suite>
<suite id="s1-s18" name="1.3.0-1.4.0-3-downgraded-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s18-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:40.972" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:40.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:40.974" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:27:40.970" endtime="20231207 10:27:40.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:40.975" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:27:40.974" endtime="20231207 10:27:40.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:40.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:40.975" endtime="20231207 10:27:40.975"/>
</kw>
<status status="PASS" starttime="20231207 10:27:40.969" endtime="20231207 10:27:40.975"/>
</kw>
<msg timestamp="20231207 10:27:40.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:40.969" endtime="20231207 10:27:40.976"/>
</kw>
<msg timestamp="20231207 10:27:40.976" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:27:40.969" endtime="20231207 10:27:40.977"/>
</kw>
<msg timestamp="20231207 10:27:40.977" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:40.969" endtime="20231207 10:27:40.977"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:27:40.977" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:27:40.977" endtime="20231207 10:27:40.977"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:40.980" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:40.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:40.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:27:40.979" endtime="20231207 10:27:40.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:40.994" level="INFO"/>
<status status="PASS" starttime="20231207 10:27:40.993" endtime="20231207 10:27:40.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:40.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:40.994" endtime="20231207 10:27:40.994"/>
</kw>
<status status="PASS" starttime="20231207 10:27:40.978" endtime="20231207 10:27:40.994"/>
</kw>
<msg timestamp="20231207 10:27:40.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:40.978" endtime="20231207 10:27:40.995"/>
</kw>
<status status="PASS" starttime="20231207 10:27:40.978" endtime="20231207 10:27:40.995"/>
</kw>
<status status="PASS" starttime="20231207 10:27:40.977" endtime="20231207 10:27:40.995"/>
</kw>
<status status="PASS" starttime="20231207 10:27:40.968" endtime="20231207 10:27:40.995"/>
</kw>
<status status="PASS" starttime="20231207 10:27:40.968" endtime="20231207 10:27:40.995"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:27:40.995" endtime="20231207 10:27:40.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:27:40.997" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:27:48.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:27:48.167" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [167].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231207 10:27:40.996" endtime="20231207 10:27:48.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:27:48.168" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [167].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [167]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [167]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [167]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231207 10:27:48.168" endtime="20231207 10:27:48.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:27:48.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:27:48.168" endtime="20231207 10:27:48.169"/>
</kw>
<status status="PASS" starttime="20231207 10:27:40.996" endtime="20231207 10:27:48.169"/>
</kw>
<msg timestamp="20231207 10:27:48.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:27:40.996" endtime="20231207 10:27:48.169"/>
</kw>
<msg timestamp="20231207 10:27:48.170" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [167].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231207 10:27:40.995" endtime="20231207 10:27:48.170"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:27:48.170" endtime="20231207 10:27:48.170"/>
</kw>
<status status="PASS" starttime="20231207 10:27:48.170" endtime="20231207 10:27:48.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:27:40.967" endtime="20231207 10:27:48.171"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20231207 10:27:40.930" endtime="20231207 10:27:48.171"/>
</suite>
<suite id="s1-s19" name="1.3.0-1.4.0-4-finalized-finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize HDDS" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:29:29.955" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:29:29.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:29:29.958" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:29:29.954" endtime="20231207 10:29:29.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:29:29.959" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:29:29.958" endtime="20231207 10:29:29.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:29:29.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:29:29.959" endtime="20231207 10:29:29.959"/>
</kw>
<status status="PASS" starttime="20231207 10:29:29.953" endtime="20231207 10:29:29.959"/>
</kw>
<msg timestamp="20231207 10:29:29.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:29:29.953" endtime="20231207 10:29:29.960"/>
</kw>
<msg timestamp="20231207 10:29:29.960" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:29:29.953" endtime="20231207 10:29:29.960"/>
</kw>
<msg timestamp="20231207 10:29:29.960" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:29:29.952" endtime="20231207 10:29:29.960"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:29:29.960" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:29:29.960" endtime="20231207 10:29:29.960"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:29:29.963" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:29:29.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:29:29.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:29:29.962" endtime="20231207 10:29:29.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:29:29.978" level="INFO"/>
<status status="PASS" starttime="20231207 10:29:29.977" endtime="20231207 10:29:29.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:29:29.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:29:29.978" endtime="20231207 10:29:29.978"/>
</kw>
<status status="PASS" starttime="20231207 10:29:29.962" endtime="20231207 10:29:29.979"/>
</kw>
<msg timestamp="20231207 10:29:29.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:29:29.961" endtime="20231207 10:29:29.979"/>
</kw>
<status status="PASS" starttime="20231207 10:29:29.961" endtime="20231207 10:29:29.979"/>
</kw>
<status status="PASS" starttime="20231207 10:29:29.961" endtime="20231207 10:29:29.979"/>
</kw>
<status status="PASS" starttime="20231207 10:29:29.952" endtime="20231207 10:29:29.979"/>
</kw>
<status status="PASS" starttime="20231207 10:29:29.951" endtime="20231207 10:29:29.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:29:29.982" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:00.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:00.398" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20231207 10:29:29.980" endtime="20231207 10:32:00.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:00.399" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: RATIS_DATASTREAM_PORT_IN_DATANODEDETAILS.
No onFinalize work defined for feature: WEBUI_PORTS_IN_DATANODEDETAILS.
No onFinalize work defined for feature: HADOOP_PRC_PORTS_IN_DATANODEDETAILS.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20231207 10:32:00.399" endtime="20231207 10:32:00.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:00.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:00.400" endtime="20231207 10:32:00.400"/>
</kw>
<status status="PASS" starttime="20231207 10:29:29.980" endtime="20231207 10:32:00.400"/>
</kw>
<msg timestamp="20231207 10:32:00.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:29:29.980" endtime="20231207 10:32:00.401"/>
</kw>
<msg timestamp="20231207 10:32:00.401" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20231207 10:29:29.979" endtime="20231207 10:32:00.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:00.401" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: RATIS_DATASTREAM_PORT_IN_DATANODEDETAILS.
No onFinalize work defined for feature: WEBUI_PORTS_IN_DATANODEDETAILS.
No onFinalize work defined for feature: HADOOP_PRC_PORTS_IN_DATANODEDETAILS.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20231207 10:32:00.401" endtime="20231207 10:32:00.401"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:29:29.951" endtime="20231207 10:32:00.402"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:00.407" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:00.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:00.410" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:32:00.405" endtime="20231207 10:32:00.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:00.410" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:32:00.410" endtime="20231207 10:32:00.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:00.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:00.410" endtime="20231207 10:32:00.411"/>
</kw>
<status status="PASS" starttime="20231207 10:32:00.405" endtime="20231207 10:32:00.411"/>
</kw>
<msg timestamp="20231207 10:32:00.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:00.404" endtime="20231207 10:32:00.411"/>
</kw>
<msg timestamp="20231207 10:32:00.411" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:32:00.404" endtime="20231207 10:32:00.411"/>
</kw>
<msg timestamp="20231207 10:32:00.411" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:00.404" endtime="20231207 10:32:00.411"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:32:00.412" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:00.412" endtime="20231207 10:32:00.412"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:00.415" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:00.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:00.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:00.414" endtime="20231207 10:32:00.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:00.542" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:00.541" endtime="20231207 10:32:00.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:00.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:00.542" endtime="20231207 10:32:00.542"/>
</kw>
<status status="PASS" starttime="20231207 10:32:00.413" endtime="20231207 10:32:00.543"/>
</kw>
<msg timestamp="20231207 10:32:00.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:00.413" endtime="20231207 10:32:00.543"/>
</kw>
<status status="PASS" starttime="20231207 10:32:00.412" endtime="20231207 10:32:00.543"/>
</kw>
<status status="PASS" starttime="20231207 10:32:00.412" endtime="20231207 10:32:00.543"/>
</kw>
<status status="PASS" starttime="20231207 10:32:00.403" endtime="20231207 10:32:00.543"/>
</kw>
<status status="PASS" starttime="20231207 10:32:00.403" endtime="20231207 10:32:00.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:00.546" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:03.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:03.757" level="INFO">${output} = Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
No onFinalize work defined for feature: QUOTA.
Finalization is done.
E...</msg>
<status status="PASS" starttime="20231207 10:32:00.544" endtime="20231207 10:32:03.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:03.758" level="INFO">Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
No onFinalize work defined for feature: QUOTA.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20231207 10:32:03.757" endtime="20231207 10:32:03.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:03.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:03.758" endtime="20231207 10:32:03.759"/>
</kw>
<status status="PASS" starttime="20231207 10:32:00.544" endtime="20231207 10:32:03.759"/>
</kw>
<msg timestamp="20231207 10:32:03.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:00.544" endtime="20231207 10:32:03.759"/>
</kw>
<msg timestamp="20231207 10:32:03.759" level="INFO">${result} = Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
No onFinalize work defined for feature: QUOTA.
Finalization is done.
E...</msg>
<status status="PASS" starttime="20231207 10:32:00.543" endtime="20231207 10:32:03.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:03.760" level="INFO">Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
No onFinalize work defined for feature: QUOTA.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20231207 10:32:03.759" endtime="20231207 10:32:03.760"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:32:00.402" endtime="20231207 10:32:03.760"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 10:29:29.906" endtime="20231207 10:32:03.761"/>
</suite>
<suite id="s1-s20" name="1.3.0-1.4.0-4-finalized-check-finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s20-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:07.052" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:07.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:07.055" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:32:07.051" endtime="20231207 10:32:07.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:07.055" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:32:07.055" endtime="20231207 10:32:07.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:07.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:07.055" endtime="20231207 10:32:07.056"/>
</kw>
<status status="PASS" starttime="20231207 10:32:07.050" endtime="20231207 10:32:07.056"/>
</kw>
<msg timestamp="20231207 10:32:07.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:07.050" endtime="20231207 10:32:07.056"/>
</kw>
<msg timestamp="20231207 10:32:07.056" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:32:07.050" endtime="20231207 10:32:07.056"/>
</kw>
<msg timestamp="20231207 10:32:07.056" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:07.049" endtime="20231207 10:32:07.056"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:32:07.057" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:07.057" endtime="20231207 10:32:07.057"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:07.060" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:07.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:07.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:07.058" endtime="20231207 10:32:07.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:07.163" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:07.163" endtime="20231207 10:32:07.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:07.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:07.163" endtime="20231207 10:32:07.164"/>
</kw>
<status status="PASS" starttime="20231207 10:32:07.058" endtime="20231207 10:32:07.164"/>
</kw>
<msg timestamp="20231207 10:32:07.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:07.058" endtime="20231207 10:32:07.164"/>
</kw>
<status status="PASS" starttime="20231207 10:32:07.057" endtime="20231207 10:32:07.164"/>
</kw>
<status status="PASS" starttime="20231207 10:32:07.057" endtime="20231207 10:32:07.164"/>
</kw>
<status status="PASS" starttime="20231207 10:32:07.049" endtime="20231207 10:32:07.164"/>
</kw>
<status status="PASS" starttime="20231207 10:32:07.048" endtime="20231207 10:32:07.164"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:07.167" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:07.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:07.169" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 10:32:07.166" endtime="20231207 10:32:07.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:07.170" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 10:32:07.169" endtime="20231207 10:32:07.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:07.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:07.170" endtime="20231207 10:32:07.170"/>
</kw>
<status status="PASS" starttime="20231207 10:32:07.165" endtime="20231207 10:32:07.170"/>
</kw>
<msg timestamp="20231207 10:32:07.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:07.165" endtime="20231207 10:32:07.171"/>
</kw>
<msg timestamp="20231207 10:32:07.171" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 10:32:07.164" endtime="20231207 10:32:07.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:07.171" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 10:32:07.171" endtime="20231207 10:32:07.172"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:32:07.172" endtime="20231207 10:32:07.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:07.174" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:10.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:10.073" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:32:07.173" endtime="20231207 10:32:10.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:10.074" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:32:10.073" endtime="20231207 10:32:10.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:10.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:10.074" endtime="20231207 10:32:10.074"/>
</kw>
<status status="PASS" starttime="20231207 10:32:07.173" endtime="20231207 10:32:10.074"/>
</kw>
<msg timestamp="20231207 10:32:10.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:07.172" endtime="20231207 10:32:10.075"/>
</kw>
<msg timestamp="20231207 10:32:10.075" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:32:07.172" endtime="20231207 10:32:10.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:10.075" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:32:10.075" endtime="20231207 10:32:10.075"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:32:10.075" endtime="20231207 10:32:10.076"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:32:07.048" endtime="20231207 10:32:10.076"/>
</test>
<test id="s1-s20-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:10.081" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:10.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:10.083" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:32:10.079" endtime="20231207 10:32:10.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:10.084" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:32:10.083" endtime="20231207 10:32:10.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:10.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:10.084" endtime="20231207 10:32:10.085"/>
</kw>
<status status="PASS" starttime="20231207 10:32:10.079" endtime="20231207 10:32:10.085"/>
</kw>
<msg timestamp="20231207 10:32:10.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:10.078" endtime="20231207 10:32:10.085"/>
</kw>
<msg timestamp="20231207 10:32:10.085" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:32:10.078" endtime="20231207 10:32:10.085"/>
</kw>
<msg timestamp="20231207 10:32:10.085" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:10.078" endtime="20231207 10:32:10.085"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:32:10.086" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:10.086" endtime="20231207 10:32:10.086"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:10.089" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:10.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:10.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:10.088" endtime="20231207 10:32:10.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:10.147" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:10.146" endtime="20231207 10:32:10.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:10.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:10.147" endtime="20231207 10:32:10.147"/>
</kw>
<status status="PASS" starttime="20231207 10:32:10.087" endtime="20231207 10:32:10.147"/>
</kw>
<msg timestamp="20231207 10:32:10.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:10.087" endtime="20231207 10:32:10.148"/>
</kw>
<status status="PASS" starttime="20231207 10:32:10.086" endtime="20231207 10:32:10.148"/>
</kw>
<status status="PASS" starttime="20231207 10:32:10.086" endtime="20231207 10:32:10.148"/>
</kw>
<status status="PASS" starttime="20231207 10:32:10.077" endtime="20231207 10:32:10.148"/>
</kw>
<status status="PASS" starttime="20231207 10:32:10.077" endtime="20231207 10:32:10.148"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:32:10.148" endtime="20231207 10:32:10.148"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:10.151" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:14.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:14.861" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:32:10.149" endtime="20231207 10:32:14.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:14.862" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:32:14.862" endtime="20231207 10:32:14.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:14.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:14.863" endtime="20231207 10:32:14.863"/>
</kw>
<status status="PASS" starttime="20231207 10:32:10.149" endtime="20231207 10:32:14.863"/>
</kw>
<msg timestamp="20231207 10:32:14.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:10.149" endtime="20231207 10:32:14.863"/>
</kw>
<msg timestamp="20231207 10:32:14.864" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:32:10.148" endtime="20231207 10:32:14.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:14.864" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:32:14.864" endtime="20231207 10:32:14.864"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:32:14.864" endtime="20231207 10:32:14.865"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:32:10.076" endtime="20231207 10:32:14.865"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 10:32:07.005" endtime="20231207 10:32:14.866"/>
</suite>
<suite id="s1-s21" name="1.3.0-1.4.0-4-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:18.286" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:18.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:18.288" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:32:18.284" endtime="20231207 10:32:18.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:18.289" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:32:18.289" endtime="20231207 10:32:18.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:18.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:18.289" endtime="20231207 10:32:18.290"/>
</kw>
<status status="PASS" starttime="20231207 10:32:18.284" endtime="20231207 10:32:18.290"/>
</kw>
<msg timestamp="20231207 10:32:18.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:18.284" endtime="20231207 10:32:18.290"/>
</kw>
<msg timestamp="20231207 10:32:18.290" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:32:18.284" endtime="20231207 10:32:18.290"/>
</kw>
<msg timestamp="20231207 10:32:18.290" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:18.283" endtime="20231207 10:32:18.290"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:32:18.291" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:18.291" endtime="20231207 10:32:18.291"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:18.294" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:18.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:18.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:18.292" endtime="20231207 10:32:18.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:18.329" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:18.329" endtime="20231207 10:32:18.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:18.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:18.329" endtime="20231207 10:32:18.330"/>
</kw>
<status status="PASS" starttime="20231207 10:32:18.292" endtime="20231207 10:32:18.330"/>
</kw>
<msg timestamp="20231207 10:32:18.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:18.292" endtime="20231207 10:32:18.330"/>
</kw>
<status status="PASS" starttime="20231207 10:32:18.291" endtime="20231207 10:32:18.330"/>
</kw>
<status status="PASS" starttime="20231207 10:32:18.291" endtime="20231207 10:32:18.330"/>
</kw>
<status status="PASS" starttime="20231207 10:32:18.283" endtime="20231207 10:32:18.330"/>
</kw>
<status status="PASS" starttime="20231207 10:32:18.282" endtime="20231207 10:32:18.330"/>
</kw>
<test id="s1-s21-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:32:18.332" level="INFO">${random} = 71926</msg>
<status status="PASS" starttime="20231207 10:32:18.331" endtime="20231207 10:32:18.332"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:18.335" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-71926 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:25.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:25.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:18.333" endtime="20231207 10:32:25.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:25.097" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:25.097" endtime="20231207 10:32:25.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:25.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:25.098" endtime="20231207 10:32:25.098"/>
</kw>
<status status="PASS" starttime="20231207 10:32:18.333" endtime="20231207 10:32:25.098"/>
</kw>
<msg timestamp="20231207 10:32:25.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:18.332" endtime="20231207 10:32:25.099"/>
</kw>
<msg timestamp="20231207 10:32:25.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:18.332" endtime="20231207 10:32:25.099"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:25.099" endtime="20231207 10:32:25.099"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:25.102" level="INFO">Running command 'cat /tmp/key-71926 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:25.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:25.104" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:32:25.100" endtime="20231207 10:32:25.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:25.105" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:32:25.105" endtime="20231207 10:32:25.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:25.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:25.105" endtime="20231207 10:32:25.106"/>
</kw>
<msg timestamp="20231207 10:32:25.106" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:32:25.099" endtime="20231207 10:32:25.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:25.106" endtime="20231207 10:32:25.106"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:25.108" level="INFO">Running command 'rm /tmp/key-71926 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:25.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:25.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:25.107" endtime="20231207 10:32:25.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:25.111" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:25.110" endtime="20231207 10:32:25.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:25.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:25.111" endtime="20231207 10:32:25.111"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.107" endtime="20231207 10:32:25.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:32:18.330" endtime="20231207 10:32:25.112"/>
</test>
<test id="s1-s21-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:25.117" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:25.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:25.119" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:32:25.115" endtime="20231207 10:32:25.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:25.120" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:32:25.119" endtime="20231207 10:32:25.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:25.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:25.120" endtime="20231207 10:32:25.120"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.115" endtime="20231207 10:32:25.121"/>
</kw>
<msg timestamp="20231207 10:32:25.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:25.115" endtime="20231207 10:32:25.121"/>
</kw>
<msg timestamp="20231207 10:32:25.121" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:32:25.114" endtime="20231207 10:32:25.121"/>
</kw>
<msg timestamp="20231207 10:32:25.121" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:25.114" endtime="20231207 10:32:25.121"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:32:25.122" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:25.121" endtime="20231207 10:32:25.122"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:25.125" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:25.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:25.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:25.123" endtime="20231207 10:32:25.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:25.160" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:25.160" endtime="20231207 10:32:25.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:25.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:25.161" endtime="20231207 10:32:25.161"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.123" endtime="20231207 10:32:25.161"/>
</kw>
<msg timestamp="20231207 10:32:25.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:25.123" endtime="20231207 10:32:25.161"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.122" endtime="20231207 10:32:25.161"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.122" endtime="20231207 10:32:25.161"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.114" endtime="20231207 10:32:25.162"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.113" endtime="20231207 10:32:25.162"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:25.164" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:27.723" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:32:27.724" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:32:25.163" endtime="20231207 10:32:27.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:27.725" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:32:27.724" endtime="20231207 10:32:27.725"/>
</kw>
<msg timestamp="20231207 10:32:27.725" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:32:25.163" endtime="20231207 10:32:27.725"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:27.726" endtime="20231207 10:32:27.726"/>
</kw>
<msg timestamp="20231207 10:32:27.726" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:32:27.725" endtime="20231207 10:32:27.726"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:27.730" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:30.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:30.268" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:32:27.728" endtime="20231207 10:32:30.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:30.269" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:32:30.269" endtime="20231207 10:32:30.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:30.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:30.269" endtime="20231207 10:32:30.270"/>
</kw>
<status status="PASS" starttime="20231207 10:32:27.728" endtime="20231207 10:32:30.270"/>
</kw>
<msg timestamp="20231207 10:32:30.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:27.727" endtime="20231207 10:32:30.270"/>
</kw>
<status status="PASS" starttime="20231207 10:32:27.727" endtime="20231207 10:32:30.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:30.273" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:32.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:32.684" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=94a6bcfc180f97832bb3adf088166613d739aaae18e65cdb70d12b85890fcee5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:32:30.272" endtime="20231207 10:32:32.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:32.685" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=94a6bcfc180f97832bb3adf088166613d739aaae18e65cdb70d12b85890fcee5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:32:32.685" endtime="20231207 10:32:32.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:32.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:32.685" endtime="20231207 10:32:32.686"/>
</kw>
<status status="PASS" starttime="20231207 10:32:30.271" endtime="20231207 10:32:32.686"/>
</kw>
<msg timestamp="20231207 10:32:32.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:30.271" endtime="20231207 10:32:32.686"/>
</kw>
<msg timestamp="20231207 10:32:32.686" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=94a6bcfc180f97832bb3adf088166613d739aaae18e65cdb70d12b85890fcee5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:32:30.270" endtime="20231207 10:32:32.686"/>
</kw>
<status status="PASS" starttime="20231207 10:32:27.727" endtime="20231207 10:32:32.686"/>
</branch>
<status status="PASS" starttime="20231207 10:32:27.726" endtime="20231207 10:32:32.687"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:32:32.687" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:32:32.687" endtime="20231207 10:32:32.687"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:32:32.688" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:32:32.687" endtime="20231207 10:32:32.688"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:32:32.688" level="INFO">${secret} = ['94a6bcfc180f97832bb3adf088166613d739aaae18e65cdb70d12b85890fcee5']</msg>
<status status="PASS" starttime="20231207 10:32:32.688" endtime="20231207 10:32:32.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:32:32.690" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:32.689" endtime="20231207 10:32:32.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:32:32.691" level="INFO">${secret} = 94a6bcfc180f97832bb3adf088166613d739aaae18e65cdb70d12b85890fcee5</msg>
<status status="PASS" starttime="20231207 10:32:32.690" endtime="20231207 10:32:32.691"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:32.694" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:33.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:33.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:32.692" endtime="20231207 10:32:33.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:33.094" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:33.093" endtime="20231207 10:32:33.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:33.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:33.094" endtime="20231207 10:32:33.095"/>
</kw>
<status status="PASS" starttime="20231207 10:32:32.691" endtime="20231207 10:32:33.095"/>
</kw>
<msg timestamp="20231207 10:32:33.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:32.691" endtime="20231207 10:32:33.095"/>
</kw>
<status status="PASS" starttime="20231207 10:32:32.691" endtime="20231207 10:32:33.095"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:33.098" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:33.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:33.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:33.096" endtime="20231207 10:32:33.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:33.478" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:33.477" endtime="20231207 10:32:33.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:33.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:33.478" endtime="20231207 10:32:33.478"/>
</kw>
<status status="PASS" starttime="20231207 10:32:33.096" endtime="20231207 10:32:33.479"/>
</kw>
<msg timestamp="20231207 10:32:33.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:33.096" endtime="20231207 10:32:33.479"/>
</kw>
<status status="PASS" starttime="20231207 10:32:33.095" endtime="20231207 10:32:33.479"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:33.482" level="INFO">Running command 'aws configure set aws_secret_access_key 94a6bcfc180f97832bb3adf088166613d739aaae18e65cdb70d12b85890fcee5 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:33.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:33.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:33.480" endtime="20231207 10:32:33.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:33.864" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:33.864" endtime="20231207 10:32:33.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:33.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:33.864" endtime="20231207 10:32:33.865"/>
</kw>
<status status="PASS" starttime="20231207 10:32:33.480" endtime="20231207 10:32:33.865"/>
</kw>
<msg timestamp="20231207 10:32:33.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:33.480" endtime="20231207 10:32:33.865"/>
</kw>
<status status="PASS" starttime="20231207 10:32:33.479" endtime="20231207 10:32:33.865"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:33.868" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:34.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:34.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:33.867" endtime="20231207 10:32:34.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:34.253" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:34.252" endtime="20231207 10:32:34.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:34.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:34.253" endtime="20231207 10:32:34.254"/>
</kw>
<status status="PASS" starttime="20231207 10:32:33.866" endtime="20231207 10:32:34.254"/>
</kw>
<msg timestamp="20231207 10:32:34.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:33.866" endtime="20231207 10:32:34.254"/>
</kw>
<status status="PASS" starttime="20231207 10:32:33.866" endtime="20231207 10:32:34.254"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:34.257" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:34.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:34.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:34.255" endtime="20231207 10:32:34.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:34.654" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:34.654" endtime="20231207 10:32:34.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:34.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:34.655" endtime="20231207 10:32:34.655"/>
</kw>
<status status="PASS" starttime="20231207 10:32:34.255" endtime="20231207 10:32:34.656"/>
</kw>
<msg timestamp="20231207 10:32:34.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:34.255" endtime="20231207 10:32:34.656"/>
</kw>
<status status="PASS" starttime="20231207 10:32:34.254" endtime="20231207 10:32:34.656"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.162" endtime="20231207 10:32:34.656"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.162" endtime="20231207 10:32:34.656"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:32:34.656" endtime="20231207 10:32:34.657"/>
</kw>
<status status="PASS" starttime="20231207 10:32:25.113" endtime="20231207 10:32:34.657"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:34.660" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:37.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:37.164" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:33 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:32:34.658" endtime="20231207 10:32:37.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:37.165" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:33 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:32:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:32:37.164" endtime="20231207 10:32:37.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:37.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:37.165" endtime="20231207 10:32:37.165"/>
</kw>
<msg timestamp="20231207 10:32:37.166" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:33 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:32:34.657" endtime="20231207 10:32:37.166"/>
</kw>
<msg timestamp="20231207 10:32:37.166" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:33 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:32:34.657" endtime="20231207 10:32:37.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:37.166" endtime="20231207 10:32:37.167"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:37.169" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:37.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:37.171" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:32:37.167" endtime="20231207 10:32:37.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:37.171" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:32:37.171" endtime="20231207 10:32:37.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:37.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:37.172" endtime="20231207 10:32:37.172"/>
</kw>
<msg timestamp="20231207 10:32:37.172" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:32:37.167" endtime="20231207 10:32:37.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:37.172" endtime="20231207 10:32:37.173"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:37.175" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:37.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:37.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:37.173" endtime="20231207 10:32:37.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:37.177" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:37.177" endtime="20231207 10:32:37.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:37.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:37.177" endtime="20231207 10:32:37.178"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.173" endtime="20231207 10:32:37.178"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:32:25.112" endtime="20231207 10:32:37.178"/>
</test>
<test id="s1-s21-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:37.183" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:37.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:37.185" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:32:37.182" endtime="20231207 10:32:37.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:37.186" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:32:37.185" endtime="20231207 10:32:37.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:37.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:37.186" endtime="20231207 10:32:37.187"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.181" endtime="20231207 10:32:37.187"/>
</kw>
<msg timestamp="20231207 10:32:37.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:37.181" endtime="20231207 10:32:37.187"/>
</kw>
<msg timestamp="20231207 10:32:37.187" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:32:37.181" endtime="20231207 10:32:37.187"/>
</kw>
<msg timestamp="20231207 10:32:37.187" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:37.180" endtime="20231207 10:32:37.187"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:32:37.188" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:37.187" endtime="20231207 10:32:37.188"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:37.191" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:37.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:37.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:37.190" endtime="20231207 10:32:37.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:37.270" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:37.270" endtime="20231207 10:32:37.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:37.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:37.270" endtime="20231207 10:32:37.271"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.189" endtime="20231207 10:32:37.271"/>
</kw>
<msg timestamp="20231207 10:32:37.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:37.189" endtime="20231207 10:32:37.271"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.188" endtime="20231207 10:32:37.271"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.188" endtime="20231207 10:32:37.271"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.180" endtime="20231207 10:32:37.271"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.180" endtime="20231207 10:32:37.271"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:37.274" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:39.498" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:32:39.499" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:32:37.273" endtime="20231207 10:32:39.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:39.500" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:32:39.499" endtime="20231207 10:32:39.500"/>
</kw>
<msg timestamp="20231207 10:32:39.500" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:32:37.272" endtime="20231207 10:32:39.500"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:39.500" endtime="20231207 10:32:39.501"/>
</kw>
<msg timestamp="20231207 10:32:39.501" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:32:39.500" endtime="20231207 10:32:39.501"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:39.504" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:41.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:41.662" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:32:39.502" endtime="20231207 10:32:41.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:41.663" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:32:41.663" endtime="20231207 10:32:41.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:41.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:41.663" endtime="20231207 10:32:41.664"/>
</kw>
<status status="PASS" starttime="20231207 10:32:39.502" endtime="20231207 10:32:41.664"/>
</kw>
<msg timestamp="20231207 10:32:41.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:39.502" endtime="20231207 10:32:41.664"/>
</kw>
<status status="PASS" starttime="20231207 10:32:39.501" endtime="20231207 10:32:41.664"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:41.668" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:43.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:43.797" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=99ae1ec04820c4280ea1a815019e8f346640fd86f7d8a76364ccdce7ca478303
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:32:41.666" endtime="20231207 10:32:43.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:43.799" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=99ae1ec04820c4280ea1a815019e8f346640fd86f7d8a76364ccdce7ca478303
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:32:43.798" endtime="20231207 10:32:43.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:43.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:43.799" endtime="20231207 10:32:43.799"/>
</kw>
<status status="PASS" starttime="20231207 10:32:41.665" endtime="20231207 10:32:43.799"/>
</kw>
<msg timestamp="20231207 10:32:43.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:41.665" endtime="20231207 10:32:43.800"/>
</kw>
<msg timestamp="20231207 10:32:43.800" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=99ae1ec04820c4280ea1a815019e8f346640fd86f7d8a76364ccdce7ca478303
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:32:41.665" endtime="20231207 10:32:43.800"/>
</kw>
<status status="PASS" starttime="20231207 10:32:39.501" endtime="20231207 10:32:43.800"/>
</branch>
<status status="PASS" starttime="20231207 10:32:39.501" endtime="20231207 10:32:43.800"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:32:43.801" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:32:43.800" endtime="20231207 10:32:43.801"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:32:43.801" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:32:43.801" endtime="20231207 10:32:43.801"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:32:43.802" level="INFO">${secret} = ['99ae1ec04820c4280ea1a815019e8f346640fd86f7d8a76364ccdce7ca478303']</msg>
<status status="PASS" starttime="20231207 10:32:43.801" endtime="20231207 10:32:43.802"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:32:43.803" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:43.802" endtime="20231207 10:32:43.803"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:32:43.804" level="INFO">${secret} = 99ae1ec04820c4280ea1a815019e8f346640fd86f7d8a76364ccdce7ca478303</msg>
<status status="PASS" starttime="20231207 10:32:43.803" endtime="20231207 10:32:43.804"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:43.807" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:44.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:44.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:43.806" endtime="20231207 10:32:44.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:44.205" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:44.205" endtime="20231207 10:32:44.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:44.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:44.205" endtime="20231207 10:32:44.206"/>
</kw>
<status status="PASS" starttime="20231207 10:32:43.805" endtime="20231207 10:32:44.206"/>
</kw>
<msg timestamp="20231207 10:32:44.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:43.805" endtime="20231207 10:32:44.206"/>
</kw>
<status status="PASS" starttime="20231207 10:32:43.804" endtime="20231207 10:32:44.206"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:44.209" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:44.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:44.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:44.208" endtime="20231207 10:32:44.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:44.594" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:44.594" endtime="20231207 10:32:44.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:44.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:44.594" endtime="20231207 10:32:44.595"/>
</kw>
<status status="PASS" starttime="20231207 10:32:44.207" endtime="20231207 10:32:44.595"/>
</kw>
<msg timestamp="20231207 10:32:44.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:44.207" endtime="20231207 10:32:44.595"/>
</kw>
<status status="PASS" starttime="20231207 10:32:44.206" endtime="20231207 10:32:44.595"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:44.598" level="INFO">Running command 'aws configure set aws_secret_access_key 99ae1ec04820c4280ea1a815019e8f346640fd86f7d8a76364ccdce7ca478303 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:44.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:44.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:44.597" endtime="20231207 10:32:44.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:44.997" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:44.996" endtime="20231207 10:32:44.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:44.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:44.997" endtime="20231207 10:32:44.998"/>
</kw>
<status status="PASS" starttime="20231207 10:32:44.596" endtime="20231207 10:32:44.998"/>
</kw>
<msg timestamp="20231207 10:32:44.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:44.596" endtime="20231207 10:32:44.998"/>
</kw>
<status status="PASS" starttime="20231207 10:32:44.595" endtime="20231207 10:32:44.998"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:45.001" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:45.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:45.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:44.999" endtime="20231207 10:32:45.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:45.394" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:45.393" endtime="20231207 10:32:45.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:45.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:45.394" endtime="20231207 10:32:45.394"/>
</kw>
<status status="PASS" starttime="20231207 10:32:44.999" endtime="20231207 10:32:45.395"/>
</kw>
<msg timestamp="20231207 10:32:45.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:44.999" endtime="20231207 10:32:45.395"/>
</kw>
<status status="PASS" starttime="20231207 10:32:44.998" endtime="20231207 10:32:45.395"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:45.398" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:45.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:45.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:45.397" endtime="20231207 10:32:45.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:45.792" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:45.792" endtime="20231207 10:32:45.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:45.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:45.792" endtime="20231207 10:32:45.793"/>
</kw>
<status status="PASS" starttime="20231207 10:32:45.396" endtime="20231207 10:32:45.793"/>
</kw>
<msg timestamp="20231207 10:32:45.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:45.395" endtime="20231207 10:32:45.793"/>
</kw>
<status status="PASS" starttime="20231207 10:32:45.395" endtime="20231207 10:32:45.793"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.272" endtime="20231207 10:32:45.793"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.272" endtime="20231207 10:32:45.793"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:32:45.793" endtime="20231207 10:32:45.794"/>
</kw>
<status status="PASS" starttime="20231207 10:32:37.179" endtime="20231207 10:32:45.794"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:45.797" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:46.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:46.456" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:32:45.795" endtime="20231207 10:32:46.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:46.457" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:32:46 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:32:46.457" endtime="20231207 10:32:46.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:46.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:46.457" endtime="20231207 10:32:46.458"/>
</kw>
<msg timestamp="20231207 10:32:46.458" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:32:45.794" endtime="20231207 10:32:46.458"/>
</kw>
<msg timestamp="20231207 10:32:46.458" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:32:45.794" endtime="20231207 10:32:46.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:46.459" endtime="20231207 10:32:46.459"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:46.461" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:46.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:46.463" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:32:46.459" endtime="20231207 10:32:46.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:46.464" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:32:46.463" endtime="20231207 10:32:46.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:46.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:46.464" endtime="20231207 10:32:46.464"/>
</kw>
<msg timestamp="20231207 10:32:46.465" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:32:46.459" endtime="20231207 10:32:46.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:46.465" endtime="20231207 10:32:46.465"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:46.467" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:46.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:46.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:46.466" endtime="20231207 10:32:46.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:46.470" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:46.469" endtime="20231207 10:32:46.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:46.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:46.470" endtime="20231207 10:32:46.470"/>
</kw>
<status status="PASS" starttime="20231207 10:32:46.465" endtime="20231207 10:32:46.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:32:37.179" endtime="20231207 10:32:46.471"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:32:18.205" endtime="20231207 10:32:46.472"/>
</suite>
<suite id="s1-s22" name="1.3.0-1.4.0-4-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:49.825" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:49.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:49.827" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:32:49.823" endtime="20231207 10:32:49.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:49.828" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:32:49.827" endtime="20231207 10:32:49.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:49.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:49.828" endtime="20231207 10:32:49.828"/>
</kw>
<status status="PASS" starttime="20231207 10:32:49.823" endtime="20231207 10:32:49.828"/>
</kw>
<msg timestamp="20231207 10:32:49.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:49.822" endtime="20231207 10:32:49.829"/>
</kw>
<msg timestamp="20231207 10:32:49.829" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:32:49.822" endtime="20231207 10:32:49.829"/>
</kw>
<msg timestamp="20231207 10:32:49.829" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:49.822" endtime="20231207 10:32:49.829"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:32:49.829" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:49.829" endtime="20231207 10:32:49.829"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:49.832" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:49.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:49.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:49.831" endtime="20231207 10:32:49.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:49.893" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:49.893" endtime="20231207 10:32:49.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:49.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:49.893" endtime="20231207 10:32:49.894"/>
</kw>
<status status="PASS" starttime="20231207 10:32:49.831" endtime="20231207 10:32:49.894"/>
</kw>
<msg timestamp="20231207 10:32:49.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:49.830" endtime="20231207 10:32:49.894"/>
</kw>
<status status="PASS" starttime="20231207 10:32:49.830" endtime="20231207 10:32:49.894"/>
</kw>
<status status="PASS" starttime="20231207 10:32:49.830" endtime="20231207 10:32:49.894"/>
</kw>
<status status="PASS" starttime="20231207 10:32:49.822" endtime="20231207 10:32:49.894"/>
</kw>
<status status="PASS" starttime="20231207 10:32:49.821" endtime="20231207 10:32:49.894"/>
</kw>
<test id="s1-s22-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:32:49.896" level="INFO">${random} = 93914</msg>
<status status="PASS" starttime="20231207 10:32:49.895" endtime="20231207 10:32:49.896"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:49.899" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-93914 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:54.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:54.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:49.897" endtime="20231207 10:32:54.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:54.056" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:54.055" endtime="20231207 10:32:54.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:54.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:54.056" endtime="20231207 10:32:54.057"/>
</kw>
<status status="PASS" starttime="20231207 10:32:49.897" endtime="20231207 10:32:54.057"/>
</kw>
<msg timestamp="20231207 10:32:54.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:49.897" endtime="20231207 10:32:54.058"/>
</kw>
<msg timestamp="20231207 10:32:54.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:49.896" endtime="20231207 10:32:54.058"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:54.058" endtime="20231207 10:32:54.060"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:54.066" level="INFO">Running command 'cat /tmp/key-93914 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:54.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:54.072" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:32:54.061" endtime="20231207 10:32:54.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:54.073" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:32:54.072" endtime="20231207 10:32:54.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:54.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:54.073" endtime="20231207 10:32:54.073"/>
</kw>
<msg timestamp="20231207 10:32:54.074" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:32:54.060" endtime="20231207 10:32:54.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:54.074" endtime="20231207 10:32:54.074"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:54.076" level="INFO">Running command 'rm /tmp/key-93914 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:54.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:54.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:54.075" endtime="20231207 10:32:54.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:54.079" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:54.079" endtime="20231207 10:32:54.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:54.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:54.079" endtime="20231207 10:32:54.080"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.074" endtime="20231207 10:32:54.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:32:49.895" endtime="20231207 10:32:54.080"/>
</test>
<test id="s1-s22-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:54.085" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:54.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:54.089" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:32:54.084" endtime="20231207 10:32:54.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:54.089" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:32:54.089" endtime="20231207 10:32:54.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:54.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:54.090" endtime="20231207 10:32:54.090"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.083" endtime="20231207 10:32:54.090"/>
</kw>
<msg timestamp="20231207 10:32:54.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:54.083" endtime="20231207 10:32:54.090"/>
</kw>
<msg timestamp="20231207 10:32:54.091" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:32:54.083" endtime="20231207 10:32:54.091"/>
</kw>
<msg timestamp="20231207 10:32:54.091" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:54.082" endtime="20231207 10:32:54.091"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:32:54.092" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:32:54.091" endtime="20231207 10:32:54.092"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:54.096" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:54.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:54.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:32:54.094" endtime="20231207 10:32:54.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:54.133" level="INFO"/>
<status status="PASS" starttime="20231207 10:32:54.133" endtime="20231207 10:32:54.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:54.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:54.134" endtime="20231207 10:32:54.134"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.093" endtime="20231207 10:32:54.134"/>
</kw>
<msg timestamp="20231207 10:32:54.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:54.093" endtime="20231207 10:32:54.134"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.092" endtime="20231207 10:32:54.135"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.092" endtime="20231207 10:32:54.135"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.082" endtime="20231207 10:32:54.135"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.082" endtime="20231207 10:32:54.135"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:54.138" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:56.594" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:32:56.594" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:32:54.136" endtime="20231207 10:32:56.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:56.595" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:32:56.594" endtime="20231207 10:32:56.595"/>
</kw>
<msg timestamp="20231207 10:32:56.595" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:32:54.136" endtime="20231207 10:32:56.595"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:32:56.596" endtime="20231207 10:32:56.596"/>
</kw>
<msg timestamp="20231207 10:32:56.596" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:32:56.595" endtime="20231207 10:32:56.596"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:56.600" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:32:59.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:32:59.169" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:32:56.598" endtime="20231207 10:32:59.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:32:59.170" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:32:59.169" endtime="20231207 10:32:59.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:32:59.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:32:59.170" endtime="20231207 10:32:59.170"/>
</kw>
<status status="PASS" starttime="20231207 10:32:56.597" endtime="20231207 10:32:59.171"/>
</kw>
<msg timestamp="20231207 10:32:59.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:56.597" endtime="20231207 10:32:59.171"/>
</kw>
<status status="PASS" starttime="20231207 10:32:56.597" endtime="20231207 10:32:59.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:32:59.174" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:01.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:01.683" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=87c6048964f616c983807059b99f9b5dda82da6ad975f9e6b7f9cd84e28257ee
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:32:59.172" endtime="20231207 10:33:01.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:01.684" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=87c6048964f616c983807059b99f9b5dda82da6ad975f9e6b7f9cd84e28257ee
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:01.684" endtime="20231207 10:33:01.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:01.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:01.684" endtime="20231207 10:33:01.685"/>
</kw>
<status status="PASS" starttime="20231207 10:32:59.172" endtime="20231207 10:33:01.685"/>
</kw>
<msg timestamp="20231207 10:33:01.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:32:59.172" endtime="20231207 10:33:01.685"/>
</kw>
<msg timestamp="20231207 10:33:01.685" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=87c6048964f616c983807059b99f9b5dda82da6ad975f9e6b7f9cd84e28257ee
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:32:59.171" endtime="20231207 10:33:01.685"/>
</kw>
<status status="PASS" starttime="20231207 10:32:56.596" endtime="20231207 10:33:01.685"/>
</branch>
<status status="PASS" starttime="20231207 10:32:56.596" endtime="20231207 10:33:01.686"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:33:01.686" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:33:01.686" endtime="20231207 10:33:01.686"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:33:01.687" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:33:01.687" endtime="20231207 10:33:01.687"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:33:01.687" level="INFO">${secret} = ['87c6048964f616c983807059b99f9b5dda82da6ad975f9e6b7f9cd84e28257ee']</msg>
<status status="PASS" starttime="20231207 10:33:01.687" endtime="20231207 10:33:01.687"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:33:01.689" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:01.688" endtime="20231207 10:33:01.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:33:01.690" level="INFO">${secret} = 87c6048964f616c983807059b99f9b5dda82da6ad975f9e6b7f9cd84e28257ee</msg>
<status status="PASS" starttime="20231207 10:33:01.689" endtime="20231207 10:33:01.690"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:01.693" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:02.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:02.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:01.691" endtime="20231207 10:33:02.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:02.075" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:02.075" endtime="20231207 10:33:02.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:02.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:02.075" endtime="20231207 10:33:02.076"/>
</kw>
<status status="PASS" starttime="20231207 10:33:01.690" endtime="20231207 10:33:02.076"/>
</kw>
<msg timestamp="20231207 10:33:02.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:01.690" endtime="20231207 10:33:02.076"/>
</kw>
<status status="PASS" starttime="20231207 10:33:01.690" endtime="20231207 10:33:02.076"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:02.079" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:02.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:02.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:02.078" endtime="20231207 10:33:02.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:02.463" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:02.463" endtime="20231207 10:33:02.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:02.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:02.464" endtime="20231207 10:33:02.464"/>
</kw>
<status status="PASS" starttime="20231207 10:33:02.077" endtime="20231207 10:33:02.464"/>
</kw>
<msg timestamp="20231207 10:33:02.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:02.077" endtime="20231207 10:33:02.464"/>
</kw>
<status status="PASS" starttime="20231207 10:33:02.076" endtime="20231207 10:33:02.464"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:02.468" level="INFO">Running command 'aws configure set aws_secret_access_key 87c6048964f616c983807059b99f9b5dda82da6ad975f9e6b7f9cd84e28257ee 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:02.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:02.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:02.466" endtime="20231207 10:33:02.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:02.856" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:02.855" endtime="20231207 10:33:02.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:02.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:02.856" endtime="20231207 10:33:02.857"/>
</kw>
<status status="PASS" starttime="20231207 10:33:02.465" endtime="20231207 10:33:02.857"/>
</kw>
<msg timestamp="20231207 10:33:02.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:02.465" endtime="20231207 10:33:02.857"/>
</kw>
<status status="PASS" starttime="20231207 10:33:02.465" endtime="20231207 10:33:02.857"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:02.860" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:03.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:03.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:02.858" endtime="20231207 10:33:03.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:03.250" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:03.249" endtime="20231207 10:33:03.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:03.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:03.250" endtime="20231207 10:33:03.251"/>
</kw>
<status status="PASS" starttime="20231207 10:33:02.858" endtime="20231207 10:33:03.251"/>
</kw>
<msg timestamp="20231207 10:33:03.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:02.858" endtime="20231207 10:33:03.252"/>
</kw>
<status status="PASS" starttime="20231207 10:33:02.857" endtime="20231207 10:33:03.252"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:03.259" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:03.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:03.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:03.254" endtime="20231207 10:33:03.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:03.650" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:03.650" endtime="20231207 10:33:03.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:03.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:03.651" endtime="20231207 10:33:03.651"/>
</kw>
<status status="PASS" starttime="20231207 10:33:03.253" endtime="20231207 10:33:03.652"/>
</kw>
<msg timestamp="20231207 10:33:03.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:03.253" endtime="20231207 10:33:03.652"/>
</kw>
<status status="PASS" starttime="20231207 10:33:03.252" endtime="20231207 10:33:03.652"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.135" endtime="20231207 10:33:03.652"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.135" endtime="20231207 10:33:03.652"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:33:03.652" endtime="20231207 10:33:03.652"/>
</kw>
<status status="PASS" starttime="20231207 10:32:54.081" endtime="20231207 10:33:03.652"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:03.655" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:04.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:04.227" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:33:03.654" endtime="20231207 10:33:04.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:04.228" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:33:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:33:04.227" endtime="20231207 10:33:04.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:04.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:04.228" endtime="20231207 10:33:04.228"/>
</kw>
<msg timestamp="20231207 10:33:04.228" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:33:03.653" endtime="20231207 10:33:04.228"/>
</kw>
<msg timestamp="20231207 10:33:04.229" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:14 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:33:03.653" endtime="20231207 10:33:04.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:04.229" endtime="20231207 10:33:04.229"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:04.231" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:04.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:04.233" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:33:04.230" endtime="20231207 10:33:04.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:04.234" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:33:04.233" endtime="20231207 10:33:04.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:04.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:04.234" endtime="20231207 10:33:04.235"/>
</kw>
<msg timestamp="20231207 10:33:04.235" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:33:04.229" endtime="20231207 10:33:04.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:04.235" endtime="20231207 10:33:04.235"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:04.237" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:04.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:04.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:04.236" endtime="20231207 10:33:04.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:04.240" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:04.239" endtime="20231207 10:33:04.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:04.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:04.240" endtime="20231207 10:33:04.240"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.235" endtime="20231207 10:33:04.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:32:54.081" endtime="20231207 10:33:04.241"/>
</test>
<test id="s1-s22-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:04.246" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:04.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:04.248" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:33:04.244" endtime="20231207 10:33:04.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:04.249" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:33:04.249" endtime="20231207 10:33:04.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:04.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:04.249" endtime="20231207 10:33:04.250"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.244" endtime="20231207 10:33:04.250"/>
</kw>
<msg timestamp="20231207 10:33:04.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:04.244" endtime="20231207 10:33:04.250"/>
</kw>
<msg timestamp="20231207 10:33:04.250" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:33:04.243" endtime="20231207 10:33:04.250"/>
</kw>
<msg timestamp="20231207 10:33:04.250" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:04.243" endtime="20231207 10:33:04.250"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:33:04.251" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:04.251" endtime="20231207 10:33:04.251"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:04.254" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:04.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:04.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:04.253" endtime="20231207 10:33:04.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:04.269" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:04.268" endtime="20231207 10:33:04.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:04.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:04.269" endtime="20231207 10:33:04.270"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.252" endtime="20231207 10:33:04.270"/>
</kw>
<msg timestamp="20231207 10:33:04.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:04.252" endtime="20231207 10:33:04.270"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.251" endtime="20231207 10:33:04.270"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.251" endtime="20231207 10:33:04.270"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.242" endtime="20231207 10:33:04.270"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.242" endtime="20231207 10:33:04.270"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:04.273" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:06.843" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:33:06.843" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:33:04.271" endtime="20231207 10:33:06.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:06.844" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:33:06.843" endtime="20231207 10:33:06.844"/>
</kw>
<msg timestamp="20231207 10:33:06.844" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:33:04.271" endtime="20231207 10:33:06.844"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:06.845" endtime="20231207 10:33:06.845"/>
</kw>
<msg timestamp="20231207 10:33:06.845" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:33:06.844" endtime="20231207 10:33:06.845"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:06.849" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:09.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:09.344" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:33:06.847" endtime="20231207 10:33:09.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:09.346" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:33:09.345" endtime="20231207 10:33:09.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:09.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:09.346" endtime="20231207 10:33:09.346"/>
</kw>
<status status="PASS" starttime="20231207 10:33:06.846" endtime="20231207 10:33:09.347"/>
</kw>
<msg timestamp="20231207 10:33:09.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:06.846" endtime="20231207 10:33:09.347"/>
</kw>
<status status="PASS" starttime="20231207 10:33:06.846" endtime="20231207 10:33:09.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:09.350" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:11.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:11.792" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=043a108f071a7a3327cadd3490e383b1229af9eb0b3d918488b75a64d5f88dbc
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:09.348" endtime="20231207 10:33:11.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:11.793" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=043a108f071a7a3327cadd3490e383b1229af9eb0b3d918488b75a64d5f88dbc
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:11.793" endtime="20231207 10:33:11.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:11.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:11.794" endtime="20231207 10:33:11.794"/>
</kw>
<status status="PASS" starttime="20231207 10:33:09.348" endtime="20231207 10:33:11.794"/>
</kw>
<msg timestamp="20231207 10:33:11.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:09.348" endtime="20231207 10:33:11.794"/>
</kw>
<msg timestamp="20231207 10:33:11.795" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=043a108f071a7a3327cadd3490e383b1229af9eb0b3d918488b75a64d5f88dbc
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:09.347" endtime="20231207 10:33:11.795"/>
</kw>
<status status="PASS" starttime="20231207 10:33:06.845" endtime="20231207 10:33:11.795"/>
</branch>
<status status="PASS" starttime="20231207 10:33:06.845" endtime="20231207 10:33:11.795"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:33:11.795" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:33:11.795" endtime="20231207 10:33:11.796"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:33:11.796" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:33:11.796" endtime="20231207 10:33:11.796"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:33:11.797" level="INFO">${secret} = ['043a108f071a7a3327cadd3490e383b1229af9eb0b3d918488b75a64d5f88dbc']</msg>
<status status="PASS" starttime="20231207 10:33:11.796" endtime="20231207 10:33:11.797"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:33:11.798" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:11.797" endtime="20231207 10:33:11.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:33:11.799" level="INFO">${secret} = 043a108f071a7a3327cadd3490e383b1229af9eb0b3d918488b75a64d5f88dbc</msg>
<status status="PASS" starttime="20231207 10:33:11.798" endtime="20231207 10:33:11.799"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:11.802" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:12.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:12.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:11.800" endtime="20231207 10:33:12.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:12.197" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:12.197" endtime="20231207 10:33:12.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:12.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:12.197" endtime="20231207 10:33:12.198"/>
</kw>
<status status="PASS" starttime="20231207 10:33:11.800" endtime="20231207 10:33:12.198"/>
</kw>
<msg timestamp="20231207 10:33:12.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:11.800" endtime="20231207 10:33:12.198"/>
</kw>
<status status="PASS" starttime="20231207 10:33:11.799" endtime="20231207 10:33:12.198"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:12.201" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:12.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:12.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:12.200" endtime="20231207 10:33:12.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:12.613" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:12.612" endtime="20231207 10:33:12.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:12.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:12.613" endtime="20231207 10:33:12.613"/>
</kw>
<status status="PASS" starttime="20231207 10:33:12.199" endtime="20231207 10:33:12.614"/>
</kw>
<msg timestamp="20231207 10:33:12.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:12.199" endtime="20231207 10:33:12.614"/>
</kw>
<status status="PASS" starttime="20231207 10:33:12.198" endtime="20231207 10:33:12.614"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:12.617" level="INFO">Running command 'aws configure set aws_secret_access_key 043a108f071a7a3327cadd3490e383b1229af9eb0b3d918488b75a64d5f88dbc 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:13.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:13.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:12.615" endtime="20231207 10:33:13.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:13.018" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:13.017" endtime="20231207 10:33:13.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:13.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:13.018" endtime="20231207 10:33:13.018"/>
</kw>
<status status="PASS" starttime="20231207 10:33:12.615" endtime="20231207 10:33:13.019"/>
</kw>
<msg timestamp="20231207 10:33:13.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:12.614" endtime="20231207 10:33:13.019"/>
</kw>
<status status="PASS" starttime="20231207 10:33:12.614" endtime="20231207 10:33:13.019"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:13.022" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:13.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:13.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:13.020" endtime="20231207 10:33:13.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:13.413" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:13.412" endtime="20231207 10:33:13.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:13.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:13.413" endtime="20231207 10:33:13.413"/>
</kw>
<status status="PASS" starttime="20231207 10:33:13.020" endtime="20231207 10:33:13.414"/>
</kw>
<msg timestamp="20231207 10:33:13.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:13.019" endtime="20231207 10:33:13.414"/>
</kw>
<status status="PASS" starttime="20231207 10:33:13.019" endtime="20231207 10:33:13.414"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:13.417" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:13.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:13.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:13.415" endtime="20231207 10:33:13.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:13.808" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:13.807" endtime="20231207 10:33:13.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:13.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:13.808" endtime="20231207 10:33:13.808"/>
</kw>
<status status="PASS" starttime="20231207 10:33:13.415" endtime="20231207 10:33:13.809"/>
</kw>
<msg timestamp="20231207 10:33:13.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:13.414" endtime="20231207 10:33:13.809"/>
</kw>
<status status="PASS" starttime="20231207 10:33:13.414" endtime="20231207 10:33:13.809"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.271" endtime="20231207 10:33:13.809"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.270" endtime="20231207 10:33:13.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:33:13.809" endtime="20231207 10:33:13.809"/>
</kw>
<status status="PASS" starttime="20231207 10:33:04.242" endtime="20231207 10:33:13.810"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:13.812" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:14.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:14.357" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:33:13.811" endtime="20231207 10:33:14.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:14.358" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:33:14 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:33:14.357" endtime="20231207 10:33:14.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:14.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:14.358" endtime="20231207 10:33:14.359"/>
</kw>
<msg timestamp="20231207 10:33:14.359" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:33:13.810" endtime="20231207 10:33:14.359"/>
</kw>
<msg timestamp="20231207 10:33:14.359" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:23:25 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:33:13.810" endtime="20231207 10:33:14.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:14.359" endtime="20231207 10:33:14.359"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:14.362" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:14.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:14.363" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:33:14.360" endtime="20231207 10:33:14.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:14.364" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:33:14.364" endtime="20231207 10:33:14.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:14.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:14.365" endtime="20231207 10:33:14.365"/>
</kw>
<msg timestamp="20231207 10:33:14.365" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:33:14.360" endtime="20231207 10:33:14.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:14.365" endtime="20231207 10:33:14.366"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:14.367" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:14.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:14.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:14.366" endtime="20231207 10:33:14.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:14.370" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:14.370" endtime="20231207 10:33:14.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:14.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:14.370" endtime="20231207 10:33:14.371"/>
</kw>
<status status="PASS" starttime="20231207 10:33:14.366" endtime="20231207 10:33:14.371"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:33:04.241" endtime="20231207 10:33:14.371"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:32:49.748" endtime="20231207 10:33:14.372"/>
</suite>
<suite id="s1-s23" name="1.3.0-1.4.0-4-finalized-validate-old2" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:17.736" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:17.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:17.738" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:33:17.734" endtime="20231207 10:33:17.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:17.739" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:33:17.738" endtime="20231207 10:33:17.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:17.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:17.739" endtime="20231207 10:33:17.739"/>
</kw>
<status status="PASS" starttime="20231207 10:33:17.734" endtime="20231207 10:33:17.740"/>
</kw>
<msg timestamp="20231207 10:33:17.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:17.733" endtime="20231207 10:33:17.740"/>
</kw>
<msg timestamp="20231207 10:33:17.740" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:33:17.733" endtime="20231207 10:33:17.740"/>
</kw>
<msg timestamp="20231207 10:33:17.740" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:17.733" endtime="20231207 10:33:17.740"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:33:17.741" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:17.740" endtime="20231207 10:33:17.741"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:17.744" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:17.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:17.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:17.743" endtime="20231207 10:33:17.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:17.761" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:17.760" endtime="20231207 10:33:17.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:17.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:17.761" endtime="20231207 10:33:17.761"/>
</kw>
<status status="PASS" starttime="20231207 10:33:17.742" endtime="20231207 10:33:17.761"/>
</kw>
<msg timestamp="20231207 10:33:17.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:17.742" endtime="20231207 10:33:17.761"/>
</kw>
<status status="PASS" starttime="20231207 10:33:17.742" endtime="20231207 10:33:17.762"/>
</kw>
<status status="PASS" starttime="20231207 10:33:17.741" endtime="20231207 10:33:17.762"/>
</kw>
<status status="PASS" starttime="20231207 10:33:17.733" endtime="20231207 10:33:17.762"/>
</kw>
<status status="PASS" starttime="20231207 10:33:17.732" endtime="20231207 10:33:17.762"/>
</kw>
<test id="s1-s23-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:33:17.763" level="INFO">${random} = 11225</msg>
<status status="PASS" starttime="20231207 10:33:17.762" endtime="20231207 10:33:17.763"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:17.765" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-11225 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:22.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:22.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:17.764" endtime="20231207 10:33:22.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:22.266" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:22.266" endtime="20231207 10:33:22.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:22.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:22.267" endtime="20231207 10:33:22.267"/>
</kw>
<status status="PASS" starttime="20231207 10:33:17.764" endtime="20231207 10:33:22.267"/>
</kw>
<msg timestamp="20231207 10:33:22.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:17.764" endtime="20231207 10:33:22.267"/>
</kw>
<msg timestamp="20231207 10:33:22.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:17.763" endtime="20231207 10:33:22.268"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:22.268" endtime="20231207 10:33:22.268"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:22.271" level="INFO">Running command 'cat /tmp/key-11225 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:22.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:22.273" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:33:22.269" endtime="20231207 10:33:22.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:22.274" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:33:22.274" endtime="20231207 10:33:22.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:22.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:22.274" endtime="20231207 10:33:22.275"/>
</kw>
<msg timestamp="20231207 10:33:22.275" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:33:22.268" endtime="20231207 10:33:22.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:22.275" endtime="20231207 10:33:22.276"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:22.278" level="INFO">Running command 'rm /tmp/key-11225 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:22.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:22.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:22.277" endtime="20231207 10:33:22.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:22.281" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:22.281" endtime="20231207 10:33:22.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:22.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:22.281" endtime="20231207 10:33:22.282"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.276" endtime="20231207 10:33:22.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:33:17.762" endtime="20231207 10:33:22.282"/>
</test>
<test id="s1-s23-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:22.287" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:22.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:22.289" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:33:22.286" endtime="20231207 10:33:22.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:22.290" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:33:22.289" endtime="20231207 10:33:22.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:22.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:22.290" endtime="20231207 10:33:22.290"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.285" endtime="20231207 10:33:22.291"/>
</kw>
<msg timestamp="20231207 10:33:22.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:22.285" endtime="20231207 10:33:22.291"/>
</kw>
<msg timestamp="20231207 10:33:22.291" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:33:22.285" endtime="20231207 10:33:22.291"/>
</kw>
<msg timestamp="20231207 10:33:22.291" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:22.284" endtime="20231207 10:33:22.291"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:33:22.292" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:22.291" endtime="20231207 10:33:22.292"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:22.295" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:22.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:22.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:22.293" endtime="20231207 10:33:22.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:22.311" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:22.311" endtime="20231207 10:33:22.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:22.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:22.311" endtime="20231207 10:33:22.312"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.293" endtime="20231207 10:33:22.312"/>
</kw>
<msg timestamp="20231207 10:33:22.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:22.293" endtime="20231207 10:33:22.312"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.292" endtime="20231207 10:33:22.312"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.292" endtime="20231207 10:33:22.312"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.284" endtime="20231207 10:33:22.312"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.283" endtime="20231207 10:33:22.312"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:22.315" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:24.633" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:33:24.633" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:33:22.313" endtime="20231207 10:33:24.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:24.634" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:33:24.633" endtime="20231207 10:33:24.634"/>
</kw>
<msg timestamp="20231207 10:33:24.634" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:33:22.313" endtime="20231207 10:33:24.634"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:24.635" endtime="20231207 10:33:24.635"/>
</kw>
<msg timestamp="20231207 10:33:24.635" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:33:24.634" endtime="20231207 10:33:24.635"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:24.638" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:27.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:27.169" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:33:24.637" endtime="20231207 10:33:27.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:27.170" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:33:27.169" endtime="20231207 10:33:27.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:27.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:27.170" endtime="20231207 10:33:27.171"/>
</kw>
<status status="PASS" starttime="20231207 10:33:24.636" endtime="20231207 10:33:27.171"/>
</kw>
<msg timestamp="20231207 10:33:27.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:24.636" endtime="20231207 10:33:27.171"/>
</kw>
<status status="PASS" starttime="20231207 10:33:24.635" endtime="20231207 10:33:27.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:27.174" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:29.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:29.610" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c3ef483a100a5db270bea37a4448a699e0d33f74c7ed338b5b9df690b2864ac5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:27.172" endtime="20231207 10:33:29.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:29.611" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c3ef483a100a5db270bea37a4448a699e0d33f74c7ed338b5b9df690b2864ac5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:29.610" endtime="20231207 10:33:29.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:29.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:29.611" endtime="20231207 10:33:29.612"/>
</kw>
<status status="PASS" starttime="20231207 10:33:27.172" endtime="20231207 10:33:29.612"/>
</kw>
<msg timestamp="20231207 10:33:29.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:27.172" endtime="20231207 10:33:29.612"/>
</kw>
<msg timestamp="20231207 10:33:29.612" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c3ef483a100a5db270bea37a4448a699e0d33f74c7ed338b5b9df690b2864ac5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:27.171" endtime="20231207 10:33:29.612"/>
</kw>
<status status="PASS" starttime="20231207 10:33:24.635" endtime="20231207 10:33:29.612"/>
</branch>
<status status="PASS" starttime="20231207 10:33:24.635" endtime="20231207 10:33:29.612"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:33:29.613" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:33:29.613" endtime="20231207 10:33:29.613"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:33:29.614" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:33:29.613" endtime="20231207 10:33:29.614"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:33:29.614" level="INFO">${secret} = ['c3ef483a100a5db270bea37a4448a699e0d33f74c7ed338b5b9df690b2864ac5']</msg>
<status status="PASS" starttime="20231207 10:33:29.614" endtime="20231207 10:33:29.614"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:33:29.615" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:29.614" endtime="20231207 10:33:29.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:33:29.616" level="INFO">${secret} = c3ef483a100a5db270bea37a4448a699e0d33f74c7ed338b5b9df690b2864ac5</msg>
<status status="PASS" starttime="20231207 10:33:29.615" endtime="20231207 10:33:29.616"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:29.619" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:30.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:30.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:29.618" endtime="20231207 10:33:30.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:30.060" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:30.059" endtime="20231207 10:33:30.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:30.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:30.060" endtime="20231207 10:33:30.060"/>
</kw>
<status status="PASS" starttime="20231207 10:33:29.617" endtime="20231207 10:33:30.061"/>
</kw>
<msg timestamp="20231207 10:33:30.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:29.617" endtime="20231207 10:33:30.061"/>
</kw>
<status status="PASS" starttime="20231207 10:33:29.616" endtime="20231207 10:33:30.061"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:30.064" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:30.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:30.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:30.062" endtime="20231207 10:33:30.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:30.451" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:30.451" endtime="20231207 10:33:30.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:30.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:30.452" endtime="20231207 10:33:30.452"/>
</kw>
<status status="PASS" starttime="20231207 10:33:30.062" endtime="20231207 10:33:30.452"/>
</kw>
<msg timestamp="20231207 10:33:30.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:30.062" endtime="20231207 10:33:30.452"/>
</kw>
<status status="PASS" starttime="20231207 10:33:30.061" endtime="20231207 10:33:30.453"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:30.455" level="INFO">Running command 'aws configure set aws_secret_access_key c3ef483a100a5db270bea37a4448a699e0d33f74c7ed338b5b9df690b2864ac5 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:30.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:30.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:30.454" endtime="20231207 10:33:30.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:30.849" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:30.849" endtime="20231207 10:33:30.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:30.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:30.850" endtime="20231207 10:33:30.850"/>
</kw>
<status status="PASS" starttime="20231207 10:33:30.453" endtime="20231207 10:33:30.850"/>
</kw>
<msg timestamp="20231207 10:33:30.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:30.453" endtime="20231207 10:33:30.851"/>
</kw>
<status status="PASS" starttime="20231207 10:33:30.453" endtime="20231207 10:33:30.851"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:30.854" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:31.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:31.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:30.852" endtime="20231207 10:33:31.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:31.238" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:31.238" endtime="20231207 10:33:31.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:31.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:31.238" endtime="20231207 10:33:31.239"/>
</kw>
<status status="PASS" starttime="20231207 10:33:30.852" endtime="20231207 10:33:31.239"/>
</kw>
<msg timestamp="20231207 10:33:31.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:30.851" endtime="20231207 10:33:31.239"/>
</kw>
<status status="PASS" starttime="20231207 10:33:30.851" endtime="20231207 10:33:31.239"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:31.242" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:31.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:31.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:31.240" endtime="20231207 10:33:31.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:31.627" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:31.626" endtime="20231207 10:33:31.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:31.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:31.627" endtime="20231207 10:33:31.628"/>
</kw>
<status status="PASS" starttime="20231207 10:33:31.240" endtime="20231207 10:33:31.628"/>
</kw>
<msg timestamp="20231207 10:33:31.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:31.240" endtime="20231207 10:33:31.628"/>
</kw>
<status status="PASS" starttime="20231207 10:33:31.239" endtime="20231207 10:33:31.628"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.313" endtime="20231207 10:33:31.628"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.312" endtime="20231207 10:33:31.629"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:33:31.629" endtime="20231207 10:33:31.629"/>
</kw>
<status status="PASS" starttime="20231207 10:33:22.283" endtime="20231207 10:33:31.629"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:31.632" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:32.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:32.189" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:03 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:33:31.630" endtime="20231207 10:33:32.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:32.190" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:03 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:33:32 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:33:32.189" endtime="20231207 10:33:32.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:32.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:32.190" endtime="20231207 10:33:32.190"/>
</kw>
<msg timestamp="20231207 10:33:32.191" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:03 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:33:31.630" endtime="20231207 10:33:32.191"/>
</kw>
<msg timestamp="20231207 10:33:32.191" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:03 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:33:31.629" endtime="20231207 10:33:32.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:32.191" endtime="20231207 10:33:32.191"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:32.194" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:32.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:32.196" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:33:32.192" endtime="20231207 10:33:32.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:32.196" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:33:32.196" endtime="20231207 10:33:32.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:32.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:32.197" endtime="20231207 10:33:32.197"/>
</kw>
<msg timestamp="20231207 10:33:32.197" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:33:32.191" endtime="20231207 10:33:32.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:32.197" endtime="20231207 10:33:32.198"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:32.200" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:32.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:32.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:32.198" endtime="20231207 10:33:32.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:32.202" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:32.202" endtime="20231207 10:33:32.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:32.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:32.202" endtime="20231207 10:33:32.203"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.198" endtime="20231207 10:33:32.203"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:33:22.282" endtime="20231207 10:33:32.203"/>
</test>
<test id="s1-s23-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:32.208" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:32.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:32.210" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:33:32.207" endtime="20231207 10:33:32.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:32.211" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:33:32.211" endtime="20231207 10:33:32.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:32.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:32.211" endtime="20231207 10:33:32.212"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.207" endtime="20231207 10:33:32.212"/>
</kw>
<msg timestamp="20231207 10:33:32.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:32.206" endtime="20231207 10:33:32.212"/>
</kw>
<msg timestamp="20231207 10:33:32.212" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:33:32.206" endtime="20231207 10:33:32.212"/>
</kw>
<msg timestamp="20231207 10:33:32.213" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:32.206" endtime="20231207 10:33:32.213"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:33:32.213" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:32.213" endtime="20231207 10:33:32.213"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:32.218" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:32.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:32.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:32.215" endtime="20231207 10:33:32.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:32.276" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:32.276" endtime="20231207 10:33:32.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:32.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:32.277" endtime="20231207 10:33:32.277"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.215" endtime="20231207 10:33:32.277"/>
</kw>
<msg timestamp="20231207 10:33:32.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:32.214" endtime="20231207 10:33:32.278"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.214" endtime="20231207 10:33:32.278"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.213" endtime="20231207 10:33:32.278"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.205" endtime="20231207 10:33:32.278"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.205" endtime="20231207 10:33:32.278"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:32.281" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:34.707" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:33:34.707" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:33:32.280" endtime="20231207 10:33:34.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:34.708" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:33:34.707" endtime="20231207 10:33:34.708"/>
</kw>
<msg timestamp="20231207 10:33:34.708" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:33:32.279" endtime="20231207 10:33:34.708"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:34.709" endtime="20231207 10:33:34.709"/>
</kw>
<msg timestamp="20231207 10:33:34.709" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:33:34.709" endtime="20231207 10:33:34.709"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:34.712" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:37.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:37.153" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:33:34.711" endtime="20231207 10:33:37.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:37.154" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:33:37.153" endtime="20231207 10:33:37.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:37.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:37.154" endtime="20231207 10:33:37.155"/>
</kw>
<status status="PASS" starttime="20231207 10:33:34.710" endtime="20231207 10:33:37.155"/>
</kw>
<msg timestamp="20231207 10:33:37.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:34.710" endtime="20231207 10:33:37.155"/>
</kw>
<status status="PASS" starttime="20231207 10:33:34.710" endtime="20231207 10:33:37.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:37.159" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:39.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:39.538" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e284a3bc57b7a7e1c1c30d206fd4353f6f513de3dd556efb54fd11e7612d82d5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:37.157" endtime="20231207 10:33:39.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:39.539" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e284a3bc57b7a7e1c1c30d206fd4353f6f513de3dd556efb54fd11e7612d82d5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:39.539" endtime="20231207 10:33:39.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:39.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:39.540" endtime="20231207 10:33:39.540"/>
</kw>
<status status="PASS" starttime="20231207 10:33:37.156" endtime="20231207 10:33:39.540"/>
</kw>
<msg timestamp="20231207 10:33:39.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:37.156" endtime="20231207 10:33:39.540"/>
</kw>
<msg timestamp="20231207 10:33:39.541" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e284a3bc57b7a7e1c1c30d206fd4353f6f513de3dd556efb54fd11e7612d82d5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:33:37.155" endtime="20231207 10:33:39.541"/>
</kw>
<status status="PASS" starttime="20231207 10:33:34.710" endtime="20231207 10:33:39.541"/>
</branch>
<status status="PASS" starttime="20231207 10:33:34.709" endtime="20231207 10:33:39.541"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:33:39.541" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:33:39.541" endtime="20231207 10:33:39.542"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:33:39.542" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:33:39.542" endtime="20231207 10:33:39.542"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:33:39.543" level="INFO">${secret} = ['e284a3bc57b7a7e1c1c30d206fd4353f6f513de3dd556efb54fd11e7612d82d5']</msg>
<status status="PASS" starttime="20231207 10:33:39.542" endtime="20231207 10:33:39.543"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:33:39.544" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:39.543" endtime="20231207 10:33:39.544"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:33:39.545" level="INFO">${secret} = e284a3bc57b7a7e1c1c30d206fd4353f6f513de3dd556efb54fd11e7612d82d5</msg>
<status status="PASS" starttime="20231207 10:33:39.544" endtime="20231207 10:33:39.545"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:39.548" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:39.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:39.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:39.546" endtime="20231207 10:33:39.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:39.950" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:39.950" endtime="20231207 10:33:39.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:39.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:39.950" endtime="20231207 10:33:39.951"/>
</kw>
<status status="PASS" starttime="20231207 10:33:39.546" endtime="20231207 10:33:39.951"/>
</kw>
<msg timestamp="20231207 10:33:39.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:39.546" endtime="20231207 10:33:39.951"/>
</kw>
<status status="PASS" starttime="20231207 10:33:39.545" endtime="20231207 10:33:39.951"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:39.954" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:40.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:40.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:39.953" endtime="20231207 10:33:40.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:40.346" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:40.345" endtime="20231207 10:33:40.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:40.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:40.346" endtime="20231207 10:33:40.347"/>
</kw>
<status status="PASS" starttime="20231207 10:33:39.952" endtime="20231207 10:33:40.347"/>
</kw>
<msg timestamp="20231207 10:33:40.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:39.952" endtime="20231207 10:33:40.347"/>
</kw>
<status status="PASS" starttime="20231207 10:33:39.951" endtime="20231207 10:33:40.347"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:40.350" level="INFO">Running command 'aws configure set aws_secret_access_key e284a3bc57b7a7e1c1c30d206fd4353f6f513de3dd556efb54fd11e7612d82d5 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:40.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:40.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:40.348" endtime="20231207 10:33:40.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:40.731" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:40.730" endtime="20231207 10:33:40.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:40.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:40.731" endtime="20231207 10:33:40.731"/>
</kw>
<status status="PASS" starttime="20231207 10:33:40.348" endtime="20231207 10:33:40.731"/>
</kw>
<msg timestamp="20231207 10:33:40.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:40.348" endtime="20231207 10:33:40.732"/>
</kw>
<status status="PASS" starttime="20231207 10:33:40.347" endtime="20231207 10:33:40.732"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:40.735" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:41.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:41.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:40.733" endtime="20231207 10:33:41.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:41.134" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:41.133" endtime="20231207 10:33:41.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:41.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:41.134" endtime="20231207 10:33:41.135"/>
</kw>
<status status="PASS" starttime="20231207 10:33:40.733" endtime="20231207 10:33:41.135"/>
</kw>
<msg timestamp="20231207 10:33:41.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:40.732" endtime="20231207 10:33:41.135"/>
</kw>
<status status="PASS" starttime="20231207 10:33:40.732" endtime="20231207 10:33:41.135"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:41.139" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:41.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:41.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:41.137" endtime="20231207 10:33:41.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:41.542" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:41.541" endtime="20231207 10:33:41.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:41.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:41.542" endtime="20231207 10:33:41.542"/>
</kw>
<status status="PASS" starttime="20231207 10:33:41.137" endtime="20231207 10:33:41.542"/>
</kw>
<msg timestamp="20231207 10:33:41.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:41.136" endtime="20231207 10:33:41.543"/>
</kw>
<status status="PASS" starttime="20231207 10:33:41.136" endtime="20231207 10:33:41.543"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.279" endtime="20231207 10:33:41.543"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.278" endtime="20231207 10:33:41.543"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:33:41.543" endtime="20231207 10:33:41.543"/>
</kw>
<status status="PASS" starttime="20231207 10:33:32.204" endtime="20231207 10:33:41.543"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:41.546" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:42.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:42.070" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:08 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:33:41.545" endtime="20231207 10:33:42.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:42.071" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:08 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:33:41 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:33:42.070" endtime="20231207 10:33:42.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:42.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:42.071" endtime="20231207 10:33:42.071"/>
</kw>
<msg timestamp="20231207 10:33:42.072" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:08 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:33:41.544" endtime="20231207 10:33:42.072"/>
</kw>
<msg timestamp="20231207 10:33:42.072" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:27:08 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:33:41.544" endtime="20231207 10:33:42.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:42.072" endtime="20231207 10:33:42.072"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:42.074" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:42.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:42.076" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:33:42.073" endtime="20231207 10:33:42.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:42.077" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:33:42.077" endtime="20231207 10:33:42.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:42.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:42.077" endtime="20231207 10:33:42.078"/>
</kw>
<msg timestamp="20231207 10:33:42.078" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:33:42.072" endtime="20231207 10:33:42.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:42.078" endtime="20231207 10:33:42.078"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:42.080" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:42.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:42.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:42.079" endtime="20231207 10:33:42.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:42.083" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:42.082" endtime="20231207 10:33:42.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:42.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:42.083" endtime="20231207 10:33:42.083"/>
</kw>
<status status="PASS" starttime="20231207 10:33:42.078" endtime="20231207 10:33:42.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:33:32.204" endtime="20231207 10:33:42.083"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:33:17.662" endtime="20231207 10:33:42.084"/>
</suite>
<suite id="s1-s24" name="1.3.0-1.4.0-4-finalized-generate-new2" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:45.424" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:45.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:45.426" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:33:45.422" endtime="20231207 10:33:45.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:45.427" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:33:45.427" endtime="20231207 10:33:45.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:45.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:45.427" endtime="20231207 10:33:45.427"/>
</kw>
<status status="PASS" starttime="20231207 10:33:45.422" endtime="20231207 10:33:45.428"/>
</kw>
<msg timestamp="20231207 10:33:45.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:45.421" endtime="20231207 10:33:45.428"/>
</kw>
<msg timestamp="20231207 10:33:45.428" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:33:45.421" endtime="20231207 10:33:45.428"/>
</kw>
<msg timestamp="20231207 10:33:45.428" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:45.421" endtime="20231207 10:33:45.428"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:33:45.429" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:33:45.428" endtime="20231207 10:33:45.429"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:45.432" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:45.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:45.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:45.430" endtime="20231207 10:33:45.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:45.451" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:45.450" endtime="20231207 10:33:45.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:45.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:45.451" endtime="20231207 10:33:45.451"/>
</kw>
<status status="PASS" starttime="20231207 10:33:45.430" endtime="20231207 10:33:45.451"/>
</kw>
<msg timestamp="20231207 10:33:45.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:45.430" endtime="20231207 10:33:45.451"/>
</kw>
<status status="PASS" starttime="20231207 10:33:45.429" endtime="20231207 10:33:45.451"/>
</kw>
<status status="PASS" starttime="20231207 10:33:45.429" endtime="20231207 10:33:45.452"/>
</kw>
<status status="PASS" starttime="20231207 10:33:45.420" endtime="20231207 10:33:45.452"/>
</kw>
<status status="PASS" starttime="20231207 10:33:45.420" endtime="20231207 10:33:45.452"/>
</kw>
<test id="s1-s24-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:45.455" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:48.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:48.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:45.454" endtime="20231207 10:33:48.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:48.534" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:48.533" endtime="20231207 10:33:48.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:48.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:48.534" endtime="20231207 10:33:48.535"/>
</kw>
<status status="PASS" starttime="20231207 10:33:45.453" endtime="20231207 10:33:48.535"/>
</kw>
<msg timestamp="20231207 10:33:48.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:45.453" endtime="20231207 10:33:48.536"/>
</kw>
<msg timestamp="20231207 10:33:48.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:45.453" endtime="20231207 10:33:48.536"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:48.536" endtime="20231207 10:33:48.536"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:48.540" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:51.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:51.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:48.538" endtime="20231207 10:33:51.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:51.776" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:51.775" endtime="20231207 10:33:51.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:51.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:51.776" endtime="20231207 10:33:51.776"/>
</kw>
<status status="PASS" starttime="20231207 10:33:48.537" endtime="20231207 10:33:51.776"/>
</kw>
<msg timestamp="20231207 10:33:51.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:48.537" endtime="20231207 10:33:51.777"/>
</kw>
<msg timestamp="20231207 10:33:51.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:48.536" endtime="20231207 10:33:51.777"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:51.777" endtime="20231207 10:33:51.777"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:33:45.452" endtime="20231207 10:33:51.778"/>
</test>
<test id="s1-s24-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:51.781" level="INFO">Running command 'echo "new2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:33:51.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:51.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:51.779" endtime="20231207 10:33:51.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:51.783" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:51.783" endtime="20231207 10:33:51.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:51.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:51.783" endtime="20231207 10:33:51.784"/>
</kw>
<status status="PASS" starttime="20231207 10:33:51.779" endtime="20231207 10:33:51.784"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:51.787" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:56.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:56.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:51.786" endtime="20231207 10:33:56.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:56.695" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:56.694" endtime="20231207 10:33:56.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:56.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:56.696" endtime="20231207 10:33:56.698"/>
</kw>
<status status="PASS" starttime="20231207 10:33:51.785" endtime="20231207 10:33:56.699"/>
</kw>
<msg timestamp="20231207 10:33:56.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:51.785" endtime="20231207 10:33:56.699"/>
</kw>
<msg timestamp="20231207 10:33:56.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:51.784" endtime="20231207 10:33:56.699"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:56.699" endtime="20231207 10:33:56.700"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:56.703" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:56.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:56.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:56.701" endtime="20231207 10:33:56.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:56.707" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:56.706" endtime="20231207 10:33:56.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:56.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:56.707" endtime="20231207 10:33:56.708"/>
</kw>
<status status="PASS" starttime="20231207 10:33:56.700" endtime="20231207 10:33:56.708"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:33:51.778" endtime="20231207 10:33:56.708"/>
</test>
<test id="s1-s24-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:56.714" level="INFO">Running command 'ozone sh bucket create /s3v/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:33:59.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:59.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:56.712" endtime="20231207 10:33:59.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:59.963" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:59.962" endtime="20231207 10:33:59.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:59.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:59.963" endtime="20231207 10:33:59.964"/>
</kw>
<status status="PASS" starttime="20231207 10:33:56.711" endtime="20231207 10:33:59.964"/>
</kw>
<msg timestamp="20231207 10:33:59.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:56.711" endtime="20231207 10:33:59.964"/>
</kw>
<msg timestamp="20231207 10:33:59.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:56.710" endtime="20231207 10:33:59.964"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:33:59.965" endtime="20231207 10:33:59.965"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:33:56.709" endtime="20231207 10:33:59.965"/>
</test>
<test id="s1-s24-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:59.969" level="INFO">Running command 'echo "new2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:33:59.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:33:59.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:59.967" endtime="20231207 10:33:59.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:33:59.971" level="INFO"/>
<status status="PASS" starttime="20231207 10:33:59.971" endtime="20231207 10:33:59.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:33:59.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:33:59.971" endtime="20231207 10:33:59.972"/>
</kw>
<status status="PASS" starttime="20231207 10:33:59.966" endtime="20231207 10:33:59.972"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:33:59.975" level="INFO">Running command 'ozone sh key put /s3v/new2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:04.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:04.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:59.973" endtime="20231207 10:34:04.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:04.644" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:04.644" endtime="20231207 10:34:04.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:04.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:04.645" endtime="20231207 10:34:04.645"/>
</kw>
<status status="PASS" starttime="20231207 10:33:59.973" endtime="20231207 10:34:04.645"/>
</kw>
<msg timestamp="20231207 10:34:04.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:33:59.973" endtime="20231207 10:34:04.645"/>
</kw>
<msg timestamp="20231207 10:34:04.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:33:59.972" endtime="20231207 10:34:04.646"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:04.646" endtime="20231207 10:34:04.646"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:04.649" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:04.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:04.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:04.647" endtime="20231207 10:34:04.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:04.651" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:04.651" endtime="20231207 10:34:04.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:04.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:04.651" endtime="20231207 10:34:04.652"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.646" endtime="20231207 10:34:04.652"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:33:59.966" endtime="20231207 10:34:04.652"/>
</test>
<test id="s1-s24-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:04.658" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:04.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:04.660" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:34:04.656" endtime="20231207 10:34:04.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:04.661" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:34:04.660" endtime="20231207 10:34:04.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:04.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:04.661" endtime="20231207 10:34:04.661"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.656" endtime="20231207 10:34:04.661"/>
</kw>
<msg timestamp="20231207 10:34:04.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:04.655" endtime="20231207 10:34:04.662"/>
</kw>
<msg timestamp="20231207 10:34:04.662" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:34:04.655" endtime="20231207 10:34:04.662"/>
</kw>
<msg timestamp="20231207 10:34:04.662" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:04.655" endtime="20231207 10:34:04.662"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:34:04.663" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:04.662" endtime="20231207 10:34:04.663"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:04.666" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:04.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:04.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:04.664" endtime="20231207 10:34:04.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:04.680" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:04.680" endtime="20231207 10:34:04.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:04.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:04.680" endtime="20231207 10:34:04.681"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.664" endtime="20231207 10:34:04.681"/>
</kw>
<msg timestamp="20231207 10:34:04.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:04.664" endtime="20231207 10:34:04.681"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.663" endtime="20231207 10:34:04.681"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.663" endtime="20231207 10:34:04.681"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.654" endtime="20231207 10:34:04.681"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.654" endtime="20231207 10:34:04.681"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:04.684" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:07.069" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:34:07.069" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:34:04.683" endtime="20231207 10:34:07.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:07.070" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:34:07.070" endtime="20231207 10:34:07.070"/>
</kw>
<msg timestamp="20231207 10:34:07.070" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:34:04.682" endtime="20231207 10:34:07.071"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:07.071" endtime="20231207 10:34:07.071"/>
</kw>
<msg timestamp="20231207 10:34:07.071" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:34:07.071" endtime="20231207 10:34:07.071"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:07.075" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:09.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:09.475" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:34:07.073" endtime="20231207 10:34:09.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:09.476" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:34:09.475" endtime="20231207 10:34:09.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:09.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:09.476" endtime="20231207 10:34:09.477"/>
</kw>
<status status="PASS" starttime="20231207 10:34:07.073" endtime="20231207 10:34:09.477"/>
</kw>
<msg timestamp="20231207 10:34:09.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:07.072" endtime="20231207 10:34:09.477"/>
</kw>
<status status="PASS" starttime="20231207 10:34:07.072" endtime="20231207 10:34:09.477"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:09.481" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:11.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:11.849" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=02ba7e3862eb7f8cce03d01f3fe5da8abd1cc3edefdf9d8b0080e86a42400044
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:34:09.479" endtime="20231207 10:34:11.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:11.850" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=02ba7e3862eb7f8cce03d01f3fe5da8abd1cc3edefdf9d8b0080e86a42400044
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:34:11.849" endtime="20231207 10:34:11.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:11.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:11.850" endtime="20231207 10:34:11.850"/>
</kw>
<status status="PASS" starttime="20231207 10:34:09.478" endtime="20231207 10:34:11.851"/>
</kw>
<msg timestamp="20231207 10:34:11.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:09.478" endtime="20231207 10:34:11.851"/>
</kw>
<msg timestamp="20231207 10:34:11.851" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=02ba7e3862eb7f8cce03d01f3fe5da8abd1cc3edefdf9d8b0080e86a42400044
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:34:09.477" endtime="20231207 10:34:11.851"/>
</kw>
<status status="PASS" starttime="20231207 10:34:07.072" endtime="20231207 10:34:11.851"/>
</branch>
<status status="PASS" starttime="20231207 10:34:07.072" endtime="20231207 10:34:11.851"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:34:11.852" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:34:11.851" endtime="20231207 10:34:11.852"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:34:11.852" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:34:11.852" endtime="20231207 10:34:11.852"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:34:11.853" level="INFO">${secret} = ['02ba7e3862eb7f8cce03d01f3fe5da8abd1cc3edefdf9d8b0080e86a42400044']</msg>
<status status="PASS" starttime="20231207 10:34:11.852" endtime="20231207 10:34:11.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:34:11.854" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:11.853" endtime="20231207 10:34:11.854"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:34:11.855" level="INFO">${secret} = 02ba7e3862eb7f8cce03d01f3fe5da8abd1cc3edefdf9d8b0080e86a42400044</msg>
<status status="PASS" starttime="20231207 10:34:11.854" endtime="20231207 10:34:11.855"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:11.858" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:12.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:12.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:11.856" endtime="20231207 10:34:12.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:12.241" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:12.240" endtime="20231207 10:34:12.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:12.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:12.241" endtime="20231207 10:34:12.241"/>
</kw>
<status status="PASS" starttime="20231207 10:34:11.856" endtime="20231207 10:34:12.242"/>
</kw>
<msg timestamp="20231207 10:34:12.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:11.856" endtime="20231207 10:34:12.242"/>
</kw>
<status status="PASS" starttime="20231207 10:34:11.855" endtime="20231207 10:34:12.242"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:12.245" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:12.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:12.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:12.243" endtime="20231207 10:34:12.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:12.633" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:12.632" endtime="20231207 10:34:12.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:12.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:12.633" endtime="20231207 10:34:12.634"/>
</kw>
<status status="PASS" starttime="20231207 10:34:12.243" endtime="20231207 10:34:12.634"/>
</kw>
<msg timestamp="20231207 10:34:12.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:12.243" endtime="20231207 10:34:12.634"/>
</kw>
<status status="PASS" starttime="20231207 10:34:12.242" endtime="20231207 10:34:12.634"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:12.638" level="INFO">Running command 'aws configure set aws_secret_access_key 02ba7e3862eb7f8cce03d01f3fe5da8abd1cc3edefdf9d8b0080e86a42400044 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:13.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:13.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:12.636" endtime="20231207 10:34:13.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:13.025" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:13.025" endtime="20231207 10:34:13.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:13.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:13.026" endtime="20231207 10:34:13.026"/>
</kw>
<status status="PASS" starttime="20231207 10:34:12.635" endtime="20231207 10:34:13.026"/>
</kw>
<msg timestamp="20231207 10:34:13.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:12.635" endtime="20231207 10:34:13.026"/>
</kw>
<status status="PASS" starttime="20231207 10:34:12.634" endtime="20231207 10:34:13.026"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:13.030" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:13.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:13.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:13.028" endtime="20231207 10:34:13.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:13.412" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:13.411" endtime="20231207 10:34:13.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:13.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:13.412" endtime="20231207 10:34:13.413"/>
</kw>
<status status="PASS" starttime="20231207 10:34:13.027" endtime="20231207 10:34:13.413"/>
</kw>
<msg timestamp="20231207 10:34:13.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:13.027" endtime="20231207 10:34:13.413"/>
</kw>
<status status="PASS" starttime="20231207 10:34:13.027" endtime="20231207 10:34:13.413"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:13.417" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:13.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:13.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:13.415" endtime="20231207 10:34:13.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:13.810" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:13.809" endtime="20231207 10:34:13.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:13.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:13.810" endtime="20231207 10:34:13.811"/>
</kw>
<status status="PASS" starttime="20231207 10:34:13.414" endtime="20231207 10:34:13.811"/>
</kw>
<msg timestamp="20231207 10:34:13.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:13.414" endtime="20231207 10:34:13.811"/>
</kw>
<status status="PASS" starttime="20231207 10:34:13.413" endtime="20231207 10:34:13.811"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.682" endtime="20231207 10:34:13.811"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.682" endtime="20231207 10:34:13.811"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:34:13.811" endtime="20231207 10:34:13.812"/>
</kw>
<status status="PASS" starttime="20231207 10:34:04.653" endtime="20231207 10:34:13.812"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:34:13.813" level="INFO">${randStr} = 5934279055</msg>
<status status="PASS" starttime="20231207 10:34:13.812" endtime="20231207 10:34:13.813"/>
</kw>
<msg timestamp="20231207 10:34:13.813" level="INFO">${random} = ozone-test-5934279055</msg>
<status status="PASS" starttime="20231207 10:34:13.812" endtime="20231207 10:34:13.813"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:13.817" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new2-bucket-ozone-test-5934279055 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:14.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:14.336" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket-ozone-test-5934279055"
}</msg>
<status status="PASS" starttime="20231207 10:34:13.815" endtime="20231207 10:34:14.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:14.337" level="INFO">{
    "Location": "http://s3g:9878/new2-bucket-ozone-test-5934279055"
}</msg>
<status status="PASS" starttime="20231207 10:34:14.336" endtime="20231207 10:34:14.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:14.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:14.337" endtime="20231207 10:34:14.337"/>
</kw>
<status status="PASS" starttime="20231207 10:34:13.815" endtime="20231207 10:34:14.337"/>
</kw>
<msg timestamp="20231207 10:34:14.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:13.814" endtime="20231207 10:34:14.338"/>
</kw>
<msg timestamp="20231207 10:34:14.338" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket-ozone-test-5934279055"
}</msg>
<status status="PASS" starttime="20231207 10:34:13.814" endtime="20231207 10:34:14.338"/>
</kw>
<msg timestamp="20231207 10:34:14.338" level="INFO">${result} = {
    "Location": "http://s3g:9878/new2-bucket-ozone-test-5934279055"
}</msg>
<status status="PASS" starttime="20231207 10:34:13.814" endtime="20231207 10:34:14.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:14.338" endtime="20231207 10:34:14.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:14.339" endtime="20231207 10:34:14.339"/>
</kw>
<msg timestamp="20231207 10:34:14.339" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 10:34:13.813" endtime="20231207 10:34:14.339"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 10:34:14.339" endtime="20231207 10:34:14.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:34:04.653" endtime="20231207 10:34:14.340"/>
</test>
<test id="s1-s24-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:14.345" level="INFO">Running command 'echo "new2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 10:34:14.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:14.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:14.343" endtime="20231207 10:34:14.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:14.348" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:14.347" endtime="20231207 10:34:14.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:14.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:14.348" endtime="20231207 10:34:14.349"/>
</kw>
<status status="PASS" starttime="20231207 10:34:14.342" endtime="20231207 10:34:14.349"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:14.352" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:15.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:15.294" level="INFO">${output} = {
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20231207 10:34:14.350" endtime="20231207 10:34:15.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:15.295" level="INFO">{
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20231207 10:34:15.294" endtime="20231207 10:34:15.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:15.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:15.295" endtime="20231207 10:34:15.296"/>
</kw>
<msg timestamp="20231207 10:34:15.296" level="INFO">${output} = {
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20231207 10:34:14.350" endtime="20231207 10:34:15.296"/>
</kw>
<msg timestamp="20231207 10:34:15.296" level="INFO">${output} = {
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20231207 10:34:14.349" endtime="20231207 10:34:15.296"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:15.296" endtime="20231207 10:34:15.297"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:15.299" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:15.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:15.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:15.297" endtime="20231207 10:34:15.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:15.302" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:15.301" endtime="20231207 10:34:15.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:15.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:15.302" endtime="20231207 10:34:15.302"/>
</kw>
<status status="PASS" starttime="20231207 10:34:15.297" endtime="20231207 10:34:15.302"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:34:14.340" endtime="20231207 10:34:15.302"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 10:33:45.346" endtime="20231207 10:34:15.304"/>
</suite>
<suite id="s1-s25" name="1.3.0-1.4.0-4-finalized-validate-new2" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:18.642" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:18.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:18.644" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:34:18.640" endtime="20231207 10:34:18.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:18.645" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:34:18.645" endtime="20231207 10:34:18.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:18.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:18.645" endtime="20231207 10:34:18.646"/>
</kw>
<status status="PASS" starttime="20231207 10:34:18.640" endtime="20231207 10:34:18.646"/>
</kw>
<msg timestamp="20231207 10:34:18.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:18.640" endtime="20231207 10:34:18.646"/>
</kw>
<msg timestamp="20231207 10:34:18.646" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:34:18.640" endtime="20231207 10:34:18.646"/>
</kw>
<msg timestamp="20231207 10:34:18.646" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:18.639" endtime="20231207 10:34:18.646"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:34:18.647" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:18.647" endtime="20231207 10:34:18.647"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:18.651" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:18.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:18.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:18.649" endtime="20231207 10:34:18.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:18.712" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:18.712" endtime="20231207 10:34:18.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:18.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:18.712" endtime="20231207 10:34:18.713"/>
</kw>
<status status="PASS" starttime="20231207 10:34:18.648" endtime="20231207 10:34:18.713"/>
</kw>
<msg timestamp="20231207 10:34:18.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:18.648" endtime="20231207 10:34:18.713"/>
</kw>
<status status="PASS" starttime="20231207 10:34:18.647" endtime="20231207 10:34:18.713"/>
</kw>
<status status="PASS" starttime="20231207 10:34:18.647" endtime="20231207 10:34:18.713"/>
</kw>
<status status="PASS" starttime="20231207 10:34:18.639" endtime="20231207 10:34:18.713"/>
</kw>
<status status="PASS" starttime="20231207 10:34:18.638" endtime="20231207 10:34:18.713"/>
</kw>
<test id="s1-s25-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:34:18.714" level="INFO">${random} = 47048</msg>
<status status="PASS" starttime="20231207 10:34:18.714" endtime="20231207 10:34:18.714"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:18.717" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-47048 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:23.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:23.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:18.716" endtime="20231207 10:34:23.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:23.010" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:23.010" endtime="20231207 10:34:23.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:23.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:23.010" endtime="20231207 10:34:23.011"/>
</kw>
<status status="PASS" starttime="20231207 10:34:18.715" endtime="20231207 10:34:23.011"/>
</kw>
<msg timestamp="20231207 10:34:23.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:18.715" endtime="20231207 10:34:23.011"/>
</kw>
<msg timestamp="20231207 10:34:23.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:18.715" endtime="20231207 10:34:23.012"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:23.012" endtime="20231207 10:34:23.012"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:23.015" level="INFO">Running command 'cat /tmp/key-47048 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:23.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:23.017" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:34:23.013" endtime="20231207 10:34:23.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:23.018" level="INFO">new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:34:23.017" endtime="20231207 10:34:23.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:23.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:23.018" endtime="20231207 10:34:23.018"/>
</kw>
<msg timestamp="20231207 10:34:23.018" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:34:23.012" endtime="20231207 10:34:23.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:23.019" endtime="20231207 10:34:23.019"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:23.021" level="INFO">Running command 'rm /tmp/key-47048 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:23.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:23.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:23.020" endtime="20231207 10:34:23.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:23.024" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:23.023" endtime="20231207 10:34:23.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:23.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:23.024" endtime="20231207 10:34:23.024"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.019" endtime="20231207 10:34:23.024"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:34:18.713" endtime="20231207 10:34:23.025"/>
</test>
<test id="s1-s25-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:23.030" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:23.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:23.032" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:34:23.028" endtime="20231207 10:34:23.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:23.033" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:34:23.032" endtime="20231207 10:34:23.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:23.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:23.033" endtime="20231207 10:34:23.033"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.028" endtime="20231207 10:34:23.033"/>
</kw>
<msg timestamp="20231207 10:34:23.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:23.028" endtime="20231207 10:34:23.034"/>
</kw>
<msg timestamp="20231207 10:34:23.034" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:34:23.027" endtime="20231207 10:34:23.034"/>
</kw>
<msg timestamp="20231207 10:34:23.034" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:23.027" endtime="20231207 10:34:23.034"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:34:23.034" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:23.034" endtime="20231207 10:34:23.034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:23.038" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:23.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:23.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:23.036" endtime="20231207 10:34:23.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:23.052" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:23.051" endtime="20231207 10:34:23.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:23.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:23.052" endtime="20231207 10:34:23.053"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.036" endtime="20231207 10:34:23.053"/>
</kw>
<msg timestamp="20231207 10:34:23.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:23.035" endtime="20231207 10:34:23.053"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.035" endtime="20231207 10:34:23.053"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.035" endtime="20231207 10:34:23.053"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.026" endtime="20231207 10:34:23.053"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.026" endtime="20231207 10:34:23.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:23.056" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:25.416" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:34:25.416" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:34:23.054" endtime="20231207 10:34:25.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:25.417" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:34:25.416" endtime="20231207 10:34:25.417"/>
</kw>
<msg timestamp="20231207 10:34:25.417" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:34:23.054" endtime="20231207 10:34:25.417"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:25.418" endtime="20231207 10:34:25.418"/>
</kw>
<msg timestamp="20231207 10:34:25.418" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:34:25.417" endtime="20231207 10:34:25.418"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:25.422" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:27.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:27.785" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:34:25.420" endtime="20231207 10:34:27.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:27.786" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:34:27.785" endtime="20231207 10:34:27.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:27.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:27.786" endtime="20231207 10:34:27.786"/>
</kw>
<status status="PASS" starttime="20231207 10:34:25.419" endtime="20231207 10:34:27.786"/>
</kw>
<msg timestamp="20231207 10:34:27.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:25.419" endtime="20231207 10:34:27.787"/>
</kw>
<status status="PASS" starttime="20231207 10:34:25.418" endtime="20231207 10:34:27.787"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:27.790" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:30.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:30.135" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b7983274b07b728c8684c2283a2c6e1a5076b40060072fc5475d138b98584409
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:34:27.788" endtime="20231207 10:34:30.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:30.136" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b7983274b07b728c8684c2283a2c6e1a5076b40060072fc5475d138b98584409
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:34:30.136" endtime="20231207 10:34:30.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:30.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:30.136" endtime="20231207 10:34:30.137"/>
</kw>
<status status="PASS" starttime="20231207 10:34:27.788" endtime="20231207 10:34:30.137"/>
</kw>
<msg timestamp="20231207 10:34:30.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:27.787" endtime="20231207 10:34:30.137"/>
</kw>
<msg timestamp="20231207 10:34:30.138" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b7983274b07b728c8684c2283a2c6e1a5076b40060072fc5475d138b98584409
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:34:27.787" endtime="20231207 10:34:30.138"/>
</kw>
<status status="PASS" starttime="20231207 10:34:25.418" endtime="20231207 10:34:30.138"/>
</branch>
<status status="PASS" starttime="20231207 10:34:25.418" endtime="20231207 10:34:30.138"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:34:30.138" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:34:30.138" endtime="20231207 10:34:30.139"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:34:30.139" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:34:30.139" endtime="20231207 10:34:30.139"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:34:30.140" level="INFO">${secret} = ['b7983274b07b728c8684c2283a2c6e1a5076b40060072fc5475d138b98584409']</msg>
<status status="PASS" starttime="20231207 10:34:30.139" endtime="20231207 10:34:30.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:34:30.141" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:30.140" endtime="20231207 10:34:30.141"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:34:30.142" level="INFO">${secret} = b7983274b07b728c8684c2283a2c6e1a5076b40060072fc5475d138b98584409</msg>
<status status="PASS" starttime="20231207 10:34:30.141" endtime="20231207 10:34:30.142"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:30.145" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:30.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:30.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:30.143" endtime="20231207 10:34:30.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:30.540" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:30.539" endtime="20231207 10:34:30.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:30.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:30.540" endtime="20231207 10:34:30.541"/>
</kw>
<status status="PASS" starttime="20231207 10:34:30.143" endtime="20231207 10:34:30.541"/>
</kw>
<msg timestamp="20231207 10:34:30.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:30.142" endtime="20231207 10:34:30.541"/>
</kw>
<status status="PASS" starttime="20231207 10:34:30.142" endtime="20231207 10:34:30.541"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:30.544" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:30.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:30.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:30.542" endtime="20231207 10:34:30.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:30.930" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:30.929" endtime="20231207 10:34:30.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:30.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:30.930" endtime="20231207 10:34:30.930"/>
</kw>
<status status="PASS" starttime="20231207 10:34:30.542" endtime="20231207 10:34:30.931"/>
</kw>
<msg timestamp="20231207 10:34:30.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:30.542" endtime="20231207 10:34:30.931"/>
</kw>
<status status="PASS" starttime="20231207 10:34:30.541" endtime="20231207 10:34:30.931"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:30.934" level="INFO">Running command 'aws configure set aws_secret_access_key b7983274b07b728c8684c2283a2c6e1a5076b40060072fc5475d138b98584409 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:31.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:31.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:30.932" endtime="20231207 10:34:31.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:31.320" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:31.319" endtime="20231207 10:34:31.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:31.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:31.320" endtime="20231207 10:34:31.321"/>
</kw>
<status status="PASS" starttime="20231207 10:34:30.932" endtime="20231207 10:34:31.321"/>
</kw>
<msg timestamp="20231207 10:34:31.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:30.932" endtime="20231207 10:34:31.321"/>
</kw>
<status status="PASS" starttime="20231207 10:34:30.931" endtime="20231207 10:34:31.321"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:31.324" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:31.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:31.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:31.322" endtime="20231207 10:34:31.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:31.719" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:31.718" endtime="20231207 10:34:31.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:31.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:31.719" endtime="20231207 10:34:31.719"/>
</kw>
<status status="PASS" starttime="20231207 10:34:31.322" endtime="20231207 10:34:31.720"/>
</kw>
<msg timestamp="20231207 10:34:31.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:31.322" endtime="20231207 10:34:31.720"/>
</kw>
<status status="PASS" starttime="20231207 10:34:31.321" endtime="20231207 10:34:31.720"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:31.723" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:32.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:32.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:31.721" endtime="20231207 10:34:32.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:32.101" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:32.101" endtime="20231207 10:34:32.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:32.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:32.102" endtime="20231207 10:34:32.102"/>
</kw>
<status status="PASS" starttime="20231207 10:34:31.721" endtime="20231207 10:34:32.102"/>
</kw>
<msg timestamp="20231207 10:34:32.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:31.720" endtime="20231207 10:34:32.103"/>
</kw>
<status status="PASS" starttime="20231207 10:34:31.720" endtime="20231207 10:34:32.103"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.054" endtime="20231207 10:34:32.103"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.053" endtime="20231207 10:34:32.103"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:34:32.103" endtime="20231207 10:34:32.103"/>
</kw>
<status status="PASS" starttime="20231207 10:34:23.026" endtime="20231207 10:34:32.103"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:32.106" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:32.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:32.659" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:34:04 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:34:32.104" endtime="20231207 10:34:32.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:32.660" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:34:04 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:34:32 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:34:32.659" endtime="20231207 10:34:32.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:32.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:32.660" endtime="20231207 10:34:32.661"/>
</kw>
<msg timestamp="20231207 10:34:32.661" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:34:04 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:34:32.104" endtime="20231207 10:34:32.661"/>
</kw>
<msg timestamp="20231207 10:34:32.661" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:34:04 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 10:34:32.103" endtime="20231207 10:34:32.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:32.661" endtime="20231207 10:34:32.662"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:32.664" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:32.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:32.666" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:34:32.662" endtime="20231207 10:34:32.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:32.667" level="INFO">new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:34:32.666" endtime="20231207 10:34:32.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:32.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:32.667" endtime="20231207 10:34:32.667"/>
</kw>
<msg timestamp="20231207 10:34:32.667" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 10:34:32.662" endtime="20231207 10:34:32.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:32.668" endtime="20231207 10:34:32.668"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:32.670" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:32.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:32.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:32.669" endtime="20231207 10:34:32.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:32.673" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:32.672" endtime="20231207 10:34:32.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:32.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:32.673" endtime="20231207 10:34:32.673"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.668" endtime="20231207 10:34:32.673"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:34:23.025" endtime="20231207 10:34:32.674"/>
</test>
<test id="s1-s25-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:32.678" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:32.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:32.681" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:34:32.677" endtime="20231207 10:34:32.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:32.681" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:34:32.681" endtime="20231207 10:34:32.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:32.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:32.681" endtime="20231207 10:34:32.682"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.677" endtime="20231207 10:34:32.682"/>
</kw>
<msg timestamp="20231207 10:34:32.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:32.676" endtime="20231207 10:34:32.682"/>
</kw>
<msg timestamp="20231207 10:34:32.682" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:34:32.676" endtime="20231207 10:34:32.682"/>
</kw>
<msg timestamp="20231207 10:34:32.682" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:32.676" endtime="20231207 10:34:32.682"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:34:32.683" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:32.683" endtime="20231207 10:34:32.683"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:32.686" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:32.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:32.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:32.685" endtime="20231207 10:34:32.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:32.735" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:32.734" endtime="20231207 10:34:32.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:32.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:32.735" endtime="20231207 10:34:32.736"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.684" endtime="20231207 10:34:32.736"/>
</kw>
<msg timestamp="20231207 10:34:32.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:32.684" endtime="20231207 10:34:32.736"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.683" endtime="20231207 10:34:32.736"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.683" endtime="20231207 10:34:32.736"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.675" endtime="20231207 10:34:32.736"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.675" endtime="20231207 10:34:32.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:32.739" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:35.126" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 10:34:35.126" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:34:32.738" endtime="20231207 10:34:35.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:35.127" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:34:35.127" endtime="20231207 10:34:35.127"/>
</kw>
<msg timestamp="20231207 10:34:35.127" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 10:34:32.737" endtime="20231207 10:34:35.127"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:35.128" endtime="20231207 10:34:35.128"/>
</kw>
<msg timestamp="20231207 10:34:35.128" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 10:34:35.128" endtime="20231207 10:34:35.128"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:35.132" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:37.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:37.434" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:34:35.130" endtime="20231207 10:34:37.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:37.435" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 10:34:37.434" endtime="20231207 10:34:37.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:37.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:37.435" endtime="20231207 10:34:37.435"/>
</kw>
<status status="PASS" starttime="20231207 10:34:35.130" endtime="20231207 10:34:37.435"/>
</kw>
<msg timestamp="20231207 10:34:37.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:35.129" endtime="20231207 10:34:37.436"/>
</kw>
<status status="PASS" starttime="20231207 10:34:35.129" endtime="20231207 10:34:37.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:37.439" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:39.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:39.819" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5c72168217f00abda87d7eb1fb0fe67b2a8fb157dbc935bd80655334070aaf3d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:34:37.437" endtime="20231207 10:34:39.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:39.820" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5c72168217f00abda87d7eb1fb0fe67b2a8fb157dbc935bd80655334070aaf3d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:34:39.820" endtime="20231207 10:34:39.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:39.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:39.820" endtime="20231207 10:34:39.821"/>
</kw>
<status status="PASS" starttime="20231207 10:34:37.437" endtime="20231207 10:34:39.821"/>
</kw>
<msg timestamp="20231207 10:34:39.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:37.436" endtime="20231207 10:34:39.821"/>
</kw>
<msg timestamp="20231207 10:34:39.821" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5c72168217f00abda87d7eb1fb0fe67b2a8fb157dbc935bd80655334070aaf3d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 10:34:37.436" endtime="20231207 10:34:39.821"/>
</kw>
<status status="PASS" starttime="20231207 10:34:35.129" endtime="20231207 10:34:39.822"/>
</branch>
<status status="PASS" starttime="20231207 10:34:35.129" endtime="20231207 10:34:39.822"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:34:39.822" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:34:39.822" endtime="20231207 10:34:39.822"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 10:34:39.823" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 10:34:39.822" endtime="20231207 10:34:39.823"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 10:34:39.823" level="INFO">${secret} = ['5c72168217f00abda87d7eb1fb0fe67b2a8fb157dbc935bd80655334070aaf3d']</msg>
<status status="PASS" starttime="20231207 10:34:39.823" endtime="20231207 10:34:39.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:34:39.824" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:39.823" endtime="20231207 10:34:39.824"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:34:39.825" level="INFO">${secret} = 5c72168217f00abda87d7eb1fb0fe67b2a8fb157dbc935bd80655334070aaf3d</msg>
<status status="PASS" starttime="20231207 10:34:39.825" endtime="20231207 10:34:39.826"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:39.829" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:40.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:40.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:39.827" endtime="20231207 10:34:40.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:40.221" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:40.221" endtime="20231207 10:34:40.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:40.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:40.221" endtime="20231207 10:34:40.222"/>
</kw>
<status status="PASS" starttime="20231207 10:34:39.827" endtime="20231207 10:34:40.222"/>
</kw>
<msg timestamp="20231207 10:34:40.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:39.826" endtime="20231207 10:34:40.222"/>
</kw>
<status status="PASS" starttime="20231207 10:34:39.826" endtime="20231207 10:34:40.222"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:40.225" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:40.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:40.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:40.224" endtime="20231207 10:34:40.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:40.615" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:40.614" endtime="20231207 10:34:40.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:40.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:40.615" endtime="20231207 10:34:40.615"/>
</kw>
<status status="PASS" starttime="20231207 10:34:40.223" endtime="20231207 10:34:40.616"/>
</kw>
<msg timestamp="20231207 10:34:40.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:40.223" endtime="20231207 10:34:40.616"/>
</kw>
<status status="PASS" starttime="20231207 10:34:40.222" endtime="20231207 10:34:40.616"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:40.620" level="INFO">Running command 'aws configure set aws_secret_access_key 5c72168217f00abda87d7eb1fb0fe67b2a8fb157dbc935bd80655334070aaf3d 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:41.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:41.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:40.617" endtime="20231207 10:34:41.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:41.005" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:41.005" endtime="20231207 10:34:41.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:41.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:41.006" endtime="20231207 10:34:41.006"/>
</kw>
<status status="PASS" starttime="20231207 10:34:40.617" endtime="20231207 10:34:41.006"/>
</kw>
<msg timestamp="20231207 10:34:41.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:40.617" endtime="20231207 10:34:41.006"/>
</kw>
<status status="PASS" starttime="20231207 10:34:40.616" endtime="20231207 10:34:41.006"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:41.010" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:41.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:41.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:41.008" endtime="20231207 10:34:41.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:41.402" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:41.401" endtime="20231207 10:34:41.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:41.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:41.402" endtime="20231207 10:34:41.403"/>
</kw>
<status status="PASS" starttime="20231207 10:34:41.007" endtime="20231207 10:34:41.403"/>
</kw>
<msg timestamp="20231207 10:34:41.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:41.007" endtime="20231207 10:34:41.403"/>
</kw>
<status status="PASS" starttime="20231207 10:34:41.007" endtime="20231207 10:34:41.403"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:41.406" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:41.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:41.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:41.405" endtime="20231207 10:34:41.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:41.797" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:41.797" endtime="20231207 10:34:41.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:41.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:41.798" endtime="20231207 10:34:41.798"/>
</kw>
<status status="PASS" starttime="20231207 10:34:41.404" endtime="20231207 10:34:41.798"/>
</kw>
<msg timestamp="20231207 10:34:41.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:41.404" endtime="20231207 10:34:41.798"/>
</kw>
<status status="PASS" starttime="20231207 10:34:41.403" endtime="20231207 10:34:41.799"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.737" endtime="20231207 10:34:41.799"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.737" endtime="20231207 10:34:41.799"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 10:34:41.799" endtime="20231207 10:34:41.799"/>
</kw>
<status status="PASS" starttime="20231207 10:34:32.675" endtime="20231207 10:34:41.799"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:41.803" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:42.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:42.295" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:34:15 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:34:41.801" endtime="20231207 10:34:42.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:42.296" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:34:15 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 10:34:42 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 10:34:42.295" endtime="20231207 10:34:42.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:42.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:42.296" endtime="20231207 10:34:42.297"/>
</kw>
<msg timestamp="20231207 10:34:42.297" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:34:15 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:34:41.800" endtime="20231207 10:34:42.297"/>
</kw>
<msg timestamp="20231207 10:34:42.297" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 10:34:15 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 10:34:41.799" endtime="20231207 10:34:42.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:42.297" endtime="20231207 10:34:42.298"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:42.300" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:42.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:42.302" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:34:42.298" endtime="20231207 10:34:42.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:42.303" level="INFO">new2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:34:42.302" endtime="20231207 10:34:42.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:42.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:42.303" endtime="20231207 10:34:42.303"/>
</kw>
<msg timestamp="20231207 10:34:42.304" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 10:34:42.298" endtime="20231207 10:34:42.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:42.304" endtime="20231207 10:34:42.304"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:42.306" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:42.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:42.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:42.305" endtime="20231207 10:34:42.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:42.308" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:42.308" endtime="20231207 10:34:42.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:42.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:42.309" endtime="20231207 10:34:42.309"/>
</kw>
<status status="PASS" starttime="20231207 10:34:42.304" endtime="20231207 10:34:42.309"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 10:34:32.674" endtime="20231207 10:34:42.309"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 10:34:18.567" endtime="20231207 10:34:42.310"/>
</suite>
<suite id="s1-s26" name="1.3.0-1.4.0-4-finalized-check-finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s26-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:45.711" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:45.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:45.713" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:34:45.709" endtime="20231207 10:34:45.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:45.714" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:34:45.714" endtime="20231207 10:34:45.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:45.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:45.714" endtime="20231207 10:34:45.715"/>
</kw>
<status status="PASS" starttime="20231207 10:34:45.709" endtime="20231207 10:34:45.715"/>
</kw>
<msg timestamp="20231207 10:34:45.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:45.709" endtime="20231207 10:34:45.715"/>
</kw>
<msg timestamp="20231207 10:34:45.715" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:34:45.708" endtime="20231207 10:34:45.715"/>
</kw>
<msg timestamp="20231207 10:34:45.715" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:45.708" endtime="20231207 10:34:45.715"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:34:45.716" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:45.716" endtime="20231207 10:34:45.716"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:45.719" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:45.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:45.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:45.717" endtime="20231207 10:34:45.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:45.737" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:45.737" endtime="20231207 10:34:45.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:45.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:45.738" endtime="20231207 10:34:45.738"/>
</kw>
<status status="PASS" starttime="20231207 10:34:45.717" endtime="20231207 10:34:45.738"/>
</kw>
<msg timestamp="20231207 10:34:45.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:45.717" endtime="20231207 10:34:45.738"/>
</kw>
<status status="PASS" starttime="20231207 10:34:45.716" endtime="20231207 10:34:45.738"/>
</kw>
<status status="PASS" starttime="20231207 10:34:45.716" endtime="20231207 10:34:45.738"/>
</kw>
<status status="PASS" starttime="20231207 10:34:45.707" endtime="20231207 10:34:45.739"/>
</kw>
<status status="PASS" starttime="20231207 10:34:45.707" endtime="20231207 10:34:45.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:45.741" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:45.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:45.743" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 10:34:45.740" endtime="20231207 10:34:45.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:45.744" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 10:34:45.743" endtime="20231207 10:34:45.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:45.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:45.744" endtime="20231207 10:34:45.744"/>
</kw>
<status status="PASS" starttime="20231207 10:34:45.739" endtime="20231207 10:34:45.745"/>
</kw>
<msg timestamp="20231207 10:34:45.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:45.739" endtime="20231207 10:34:45.745"/>
</kw>
<msg timestamp="20231207 10:34:45.745" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 10:34:45.739" endtime="20231207 10:34:45.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:45.745" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 10:34:45.745" endtime="20231207 10:34:45.746"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:34:45.746" endtime="20231207 10:34:45.746"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:45.749" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:48.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:48.354" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:34:45.747" endtime="20231207 10:34:48.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:48.355" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:34:48.354" endtime="20231207 10:34:48.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:48.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:48.355" endtime="20231207 10:34:48.355"/>
</kw>
<status status="PASS" starttime="20231207 10:34:45.747" endtime="20231207 10:34:48.356"/>
</kw>
<msg timestamp="20231207 10:34:48.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:45.746" endtime="20231207 10:34:48.356"/>
</kw>
<msg timestamp="20231207 10:34:48.356" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:34:45.746" endtime="20231207 10:34:48.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:48.356" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:34:48.356" endtime="20231207 10:34:48.356"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:34:48.357" endtime="20231207 10:34:48.357"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:34:45.706" endtime="20231207 10:34:48.357"/>
</test>
<test id="s1-s26-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:48.363" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:48.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:48.365" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 10:34:48.361" endtime="20231207 10:34:48.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:48.366" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 10:34:48.366" endtime="20231207 10:34:48.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:48.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:48.366" endtime="20231207 10:34:48.367"/>
</kw>
<status status="PASS" starttime="20231207 10:34:48.361" endtime="20231207 10:34:48.367"/>
</kw>
<msg timestamp="20231207 10:34:48.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:48.360" endtime="20231207 10:34:48.367"/>
</kw>
<msg timestamp="20231207 10:34:48.367" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 10:34:48.360" endtime="20231207 10:34:48.367"/>
</kw>
<msg timestamp="20231207 10:34:48.367" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:48.360" endtime="20231207 10:34:48.367"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:34:48.368" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 10:34:48.368" endtime="20231207 10:34:48.368"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:48.371" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:48.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:48.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:48.370" endtime="20231207 10:34:48.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:48.386" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:48.385" endtime="20231207 10:34:48.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:48.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:48.386" endtime="20231207 10:34:48.386"/>
</kw>
<status status="PASS" starttime="20231207 10:34:48.369" endtime="20231207 10:34:48.387"/>
</kw>
<msg timestamp="20231207 10:34:48.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:48.369" endtime="20231207 10:34:48.387"/>
</kw>
<status status="PASS" starttime="20231207 10:34:48.368" endtime="20231207 10:34:48.387"/>
</kw>
<status status="PASS" starttime="20231207 10:34:48.368" endtime="20231207 10:34:48.387"/>
</kw>
<status status="PASS" starttime="20231207 10:34:48.359" endtime="20231207 10:34:48.387"/>
</kw>
<status status="PASS" starttime="20231207 10:34:48.359" endtime="20231207 10:34:48.387"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 10:34:48.387" endtime="20231207 10:34:48.387"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:48.390" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:52.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:52.939" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:34:48.389" endtime="20231207 10:34:52.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:52.940" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:34:52.939" endtime="20231207 10:34:52.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:52.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:52.940" endtime="20231207 10:34:52.940"/>
</kw>
<status status="PASS" starttime="20231207 10:34:48.388" endtime="20231207 10:34:52.941"/>
</kw>
<msg timestamp="20231207 10:34:52.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:48.388" endtime="20231207 10:34:52.941"/>
</kw>
<msg timestamp="20231207 10:34:52.941" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:34:48.388" endtime="20231207 10:34:52.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:52.941" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 10:34:52.941" endtime="20231207 10:34:52.941"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 10:34:52.941" endtime="20231207 10:34:52.942"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:34:48.358" endtime="20231207 10:34:52.942"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 10:34:45.662" endtime="20231207 10:34:52.943"/>
</suite>
<suite id="s1-s27" name="1.3.0-1.4.0-4-finalized-snapshot" source="/opt/hadoop/smoketest/snapshot/snapshot-sh.robot">
<test id="s1-s27-t1" name="Snapshot Creation" line="31">
<kw name="Setup volume and bucket" library="snapshot-setup">
<kw name="Create volume" library="snapshot-setup">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:34:56.266" level="INFO">${random} = pkdkk</msg>
<status status="PASS" starttime="20231207 10:34:56.266" endtime="20231207 10:34:56.266"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${volume}</var>
<arg>vol-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:34:56.267" level="INFO">${volume} = vol-pkdkk</msg>
<status status="PASS" starttime="20231207 10:34:56.266" endtime="20231207 10:34:56.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:56.270" level="INFO">Running command 'ozone sh volume create /vol-pkdkk 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:34:59.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:34:59.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:56.268" endtime="20231207 10:34:59.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:34:59.240" level="INFO"/>
<status status="PASS" starttime="20231207 10:34:59.239" endtime="20231207 10:34:59.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:34:59.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:34:59.240" endtime="20231207 10:34:59.240"/>
</kw>
<status status="PASS" starttime="20231207 10:34:56.268" endtime="20231207 10:34:59.241"/>
</kw>
<msg timestamp="20231207 10:34:59.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:56.267" endtime="20231207 10:34:59.241"/>
</kw>
<msg timestamp="20231207 10:34:59.241" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231207 10:34:56.267" endtime="20231207 10:34:59.241"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:34:59.241" endtime="20231207 10:34:59.241"/>
</kw>
<msg timestamp="20231207 10:34:59.241" level="INFO">${volume} = vol-pkdkk</msg>
<status status="PASS" starttime="20231207 10:34:56.265" endtime="20231207 10:34:59.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:34:59.242" level="INFO">${VOLUME} = vol-pkdkk</msg>
<status status="PASS" starttime="20231207 10:34:59.242" endtime="20231207 10:34:59.242"/>
</kw>
<kw name="Create bucket" library="snapshot-setup">
<var>${bucket}</var>
<arg>${VOLUME}</arg>
<arg>FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:34:59.243" level="INFO">${random} = zlqwz</msg>
<status status="PASS" starttime="20231207 10:34:59.243" endtime="20231207 10:34:59.243"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>buc-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:34:59.244" level="INFO">${bucket} = buc-zlqwz</msg>
<status status="PASS" starttime="20231207 10:34:59.243" endtime="20231207 10:34:59.244"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${bucket_layout} /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:34:59.247" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-pkdkk/buc-zlqwz 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:02.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:02.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:34:59.245" endtime="20231207 10:35:02.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:02.118" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:02.118" endtime="20231207 10:35:02.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:02.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:02.119" endtime="20231207 10:35:02.119"/>
</kw>
<status status="PASS" starttime="20231207 10:34:59.244" endtime="20231207 10:35:02.119"/>
</kw>
<msg timestamp="20231207 10:35:02.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:34:59.244" endtime="20231207 10:35:02.119"/>
</kw>
<msg timestamp="20231207 10:35:02.120" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231207 10:34:59.244" endtime="20231207 10:35:02.120"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:02.120" endtime="20231207 10:35:02.120"/>
</kw>
<msg timestamp="20231207 10:35:02.120" level="INFO">${bucket} = buc-zlqwz</msg>
<status status="PASS" starttime="20231207 10:34:59.242" endtime="20231207 10:35:02.120"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${bucket}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:35:02.121" level="INFO">${BUCKET} = buc-zlqwz</msg>
<status status="PASS" starttime="20231207 10:35:02.121" endtime="20231207 10:35:02.121"/>
</kw>
<status status="PASS" starttime="20231207 10:34:56.265" endtime="20231207 10:35:02.121"/>
</kw>
<kw name="Create key" library="snapshot-setup">
<var>${key_one}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/etc/hosts</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:35:02.122" level="INFO">${random} = kjujg</msg>
<status status="PASS" starttime="20231207 10:35:02.122" endtime="20231207 10:35:02.122"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>key-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:35:02.123" level="INFO">${key} = key-kjujg</msg>
<status status="PASS" starttime="20231207 10:35:02.122" endtime="20231207 10:35:02.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:02.126" level="INFO">Running command 'ozone sh key put /vol-pkdkk/buc-zlqwz/key-kjujg /etc/hosts 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:06.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:06.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:02.124" endtime="20231207 10:35:06.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:06.766" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:06.765" endtime="20231207 10:35:06.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:06.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:06.766" endtime="20231207 10:35:06.766"/>
</kw>
<status status="PASS" starttime="20231207 10:35:02.124" endtime="20231207 10:35:06.767"/>
</kw>
<msg timestamp="20231207 10:35:06.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:02.123" endtime="20231207 10:35:06.767"/>
</kw>
<msg timestamp="20231207 10:35:06.767" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231207 10:35:02.123" endtime="20231207 10:35:06.767"/>
</kw>
<msg timestamp="20231207 10:35:06.767" level="INFO">${key_one} = key-kjujg</msg>
<status status="PASS" starttime="20231207 10:35:02.121" endtime="20231207 10:35:06.767"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${KEY_ONE}</arg>
<arg>${key_one}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:35:06.768" level="INFO">${KEY_ONE} = key-kjujg</msg>
<status status="PASS" starttime="20231207 10:35:06.767" endtime="20231207 10:35:06.768"/>
</kw>
<kw name="Create snapshot" library="snapshot-setup">
<var>${snapshot_one}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:35:06.769" level="INFO">${random} = qcjqm</msg>
<status status="PASS" starttime="20231207 10:35:06.768" endtime="20231207 10:35:06.769"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${snapshot}</var>
<arg>snap-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:35:06.769" level="INFO">${snapshot} = snap-qcjqm</msg>
<status status="PASS" starttime="20231207 10:35:06.769" endtime="20231207 10:35:06.769"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:06.773" level="INFO">Running command 'ozone sh snapshot create /vol-pkdkk/buc-zlqwz snap-qcjqm 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:09.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:09.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:06.771" endtime="20231207 10:35:09.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:09.703" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:09.702" endtime="20231207 10:35:09.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:09.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:09.703" endtime="20231207 10:35:09.703"/>
</kw>
<status status="PASS" starttime="20231207 10:35:06.770" endtime="20231207 10:35:09.703"/>
</kw>
<msg timestamp="20231207 10:35:09.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:06.770" endtime="20231207 10:35:09.703"/>
</kw>
<msg timestamp="20231207 10:35:09.704" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231207 10:35:06.769" endtime="20231207 10:35:09.704"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:09.704" endtime="20231207 10:35:09.704"/>
</kw>
<msg timestamp="20231207 10:35:09.704" level="INFO">${snapshot_one} = snap-qcjqm</msg>
<status status="PASS" starttime="20231207 10:35:06.768" endtime="20231207 10:35:09.704"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${SNAPSHOT_ONE}</arg>
<arg>${snapshot_one}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:35:09.705" level="INFO">${SNAPSHOT_ONE} = snap-qcjqm</msg>
<status status="PASS" starttime="20231207 10:35:09.704" endtime="20231207 10:35:09.705"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:34:56.264" endtime="20231207 10:35:09.705"/>
</test>
<test id="s1-s27-t2" name="Snapshot List" line="38">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot ls /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:09.710" level="INFO">Running command 'ozone sh snapshot ls /vol-pkdkk/buc-zlqwz 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:12.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:12.798" level="INFO">${output} = [ {
  "volumeName" : "vol-pkdkk",
  "bucketName" : "buc-zlqwz",
  "name" : "snap-qcjqm",
  "creationTime" : 1701945309532,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "a450465e-4bee-41dc-...</msg>
<status status="PASS" starttime="20231207 10:35:09.707" endtime="20231207 10:35:12.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:12.799" level="INFO">[ {
  "volumeName" : "vol-pkdkk",
  "bucketName" : "buc-zlqwz",
  "name" : "snap-qcjqm",
  "creationTime" : 1701945309532,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "a450465e-4bee-41dc-b496-c4c92cccd305",
  "snapshotPath" : "vol-pkdkk/buc-zlqwz",
  "checkpointDir" : "-a450465e-4bee-41dc-b496-c4c92cccd305",
  "referencedSize" : 174,
  "referencedReplicatedSize" : 522,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]</msg>
<status status="PASS" starttime="20231207 10:35:12.798" endtime="20231207 10:35:12.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:12.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:12.799" endtime="20231207 10:35:12.799"/>
</kw>
<status status="PASS" starttime="20231207 10:35:09.707" endtime="20231207 10:35:12.799"/>
</kw>
<msg timestamp="20231207 10:35:12.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:09.707" endtime="20231207 10:35:12.800"/>
</kw>
<msg timestamp="20231207 10:35:12.800" level="INFO">${result} = [ {
  "volumeName" : "vol-pkdkk",
  "bucketName" : "buc-zlqwz",
  "name" : "snap-qcjqm",
  "creationTime" : 1701945309532,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "a450465e-4bee-41dc-...</msg>
<status status="PASS" starttime="20231207 10:35:09.706" endtime="20231207 10:35:12.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SNAPSHOT_ONE}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:12.800" endtime="20231207 10:35:12.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>SNAPSHOT_ACTIVE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:12.800" endtime="20231207 10:35:12.801"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:35:09.706" endtime="20231207 10:35:12.801"/>
</test>
<test id="s1-s27-t3" name="Snapshot Diff" line="43">
<kw name="Create key" library="snapshot-setup">
<var>${key_two}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/etc/passwd</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:35:12.803" level="INFO">${random} = zrosp</msg>
<status status="PASS" starttime="20231207 10:35:12.803" endtime="20231207 10:35:12.803"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>key-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:35:12.804" level="INFO">${key} = key-zrosp</msg>
<status status="PASS" starttime="20231207 10:35:12.803" endtime="20231207 10:35:12.804"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:12.807" level="INFO">Running command 'ozone sh key put /vol-pkdkk/buc-zlqwz/key-zrosp /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:17.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:17.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:12.805" endtime="20231207 10:35:17.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:17.290" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:17.289" endtime="20231207 10:35:17.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:17.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:17.290" endtime="20231207 10:35:17.290"/>
</kw>
<status status="PASS" starttime="20231207 10:35:12.804" endtime="20231207 10:35:17.290"/>
</kw>
<msg timestamp="20231207 10:35:17.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:12.804" endtime="20231207 10:35:17.291"/>
</kw>
<msg timestamp="20231207 10:35:17.291" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231207 10:35:12.804" endtime="20231207 10:35:17.291"/>
</kw>
<msg timestamp="20231207 10:35:17.291" level="INFO">${key_two} = key-zrosp</msg>
<status status="PASS" starttime="20231207 10:35:12.802" endtime="20231207 10:35:17.291"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${KEY_TWO}</arg>
<arg>${key_two}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:35:17.292" level="INFO">${KEY_TWO} = key-zrosp</msg>
<status status="PASS" starttime="20231207 10:35:17.291" endtime="20231207 10:35:17.292"/>
</kw>
<kw name="Create key" library="snapshot-setup">
<var>${key_three}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/etc/group</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:35:17.293" level="INFO">${random} = rhrys</msg>
<status status="PASS" starttime="20231207 10:35:17.292" endtime="20231207 10:35:17.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>key-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:35:17.293" level="INFO">${key} = key-rhrys</msg>
<status status="PASS" starttime="20231207 10:35:17.293" endtime="20231207 10:35:17.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:17.296" level="INFO">Running command 'ozone sh key put /vol-pkdkk/buc-zlqwz/key-rhrys /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:21.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:21.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:17.294" endtime="20231207 10:35:21.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:21.804" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:21.804" endtime="20231207 10:35:21.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:21.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:21.804" endtime="20231207 10:35:21.805"/>
</kw>
<status status="PASS" starttime="20231207 10:35:17.294" endtime="20231207 10:35:21.805"/>
</kw>
<msg timestamp="20231207 10:35:21.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:17.294" endtime="20231207 10:35:21.805"/>
</kw>
<msg timestamp="20231207 10:35:21.805" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231207 10:35:17.293" endtime="20231207 10:35:21.805"/>
</kw>
<msg timestamp="20231207 10:35:21.806" level="INFO">${key_three} = key-rhrys</msg>
<status status="PASS" starttime="20231207 10:35:17.292" endtime="20231207 10:35:21.806"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${KEY_THREE}</arg>
<arg>${key_three}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:35:21.806" level="INFO">${KEY_THREE} = key-rhrys</msg>
<status status="PASS" starttime="20231207 10:35:21.806" endtime="20231207 10:35:21.806"/>
</kw>
<kw name="Create snapshot" library="snapshot-setup">
<var>${snapshot_two}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:35:21.807" level="INFO">${random} = ziiiu</msg>
<status status="PASS" starttime="20231207 10:35:21.807" endtime="20231207 10:35:21.807"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${snapshot}</var>
<arg>snap-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:35:21.808" level="INFO">${snapshot} = snap-ziiiu</msg>
<status status="PASS" starttime="20231207 10:35:21.807" endtime="20231207 10:35:21.808"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:21.811" level="INFO">Running command 'ozone sh snapshot create /vol-pkdkk/buc-zlqwz snap-ziiiu 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:24.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:24.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:21.809" endtime="20231207 10:35:24.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:24.734" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:24.734" endtime="20231207 10:35:24.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:24.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:24.734" endtime="20231207 10:35:24.735"/>
</kw>
<status status="PASS" starttime="20231207 10:35:21.809" endtime="20231207 10:35:24.735"/>
</kw>
<msg timestamp="20231207 10:35:24.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:21.808" endtime="20231207 10:35:24.735"/>
</kw>
<msg timestamp="20231207 10:35:24.735" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231207 10:35:21.808" endtime="20231207 10:35:24.735"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:24.736" endtime="20231207 10:35:24.736"/>
</kw>
<msg timestamp="20231207 10:35:24.736" level="INFO">${snapshot_two} = snap-ziiiu</msg>
<status status="PASS" starttime="20231207 10:35:21.806" endtime="20231207 10:35:24.736"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${SNAPSHOT_TWO}</arg>
<arg>${snapshot_two}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 10:35:24.737" level="INFO">${SNAPSHOT_TWO} = snap-ziiiu</msg>
<status status="PASS" starttime="20231207 10:35:24.736" endtime="20231207 10:35:24.737"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot diff /${VOLUME}/${BUCKET} ${SNAPSHOT_ONE} ${SNAPSHOT_TWO}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:24.740" level="INFO">Running command 'ozone sh snapshot diff /vol-pkdkk/buc-zlqwz snap-qcjqm snap-ziiiu 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:27.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:27.675" level="INFO">${output} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231207 10:35:24.738" endtime="20231207 10:35:27.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:27.676" level="INFO">Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231207 10:35:27.675" endtime="20231207 10:35:27.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:27.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:27.677" endtime="20231207 10:35:27.678"/>
</kw>
<status status="PASS" starttime="20231207 10:35:24.738" endtime="20231207 10:35:27.678"/>
</kw>
<msg timestamp="20231207 10:35:27.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:24.738" endtime="20231207 10:35:27.678"/>
</kw>
<msg timestamp="20231207 10:35:27.678" level="INFO">${result} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231207 10:35:24.737" endtime="20231207 10:35:27.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Snapshot diff job is IN_PROGRESS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:27.679" endtime="20231207 10:35:27.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot diff /${VOLUME}/${BUCKET} ${SNAPSHOT_ONE} ${SNAPSHOT_TWO}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:27.684" level="INFO">Running command 'ozone sh snapshot diff /vol-pkdkk/buc-zlqwz snap-qcjqm snap-ziiiu 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:30.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:30.613" level="INFO">${output} = Difference between snapshot: snap-qcjqm and snapshot: snap-ziiiu
+	./key-zrosp
+	./key-rhrys
</msg>
<status status="PASS" starttime="20231207 10:35:27.682" endtime="20231207 10:35:30.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:30.614" level="INFO">Difference between snapshot: snap-qcjqm and snapshot: snap-ziiiu
+	./key-zrosp
+	./key-rhrys
</msg>
<status status="PASS" starttime="20231207 10:35:30.614" endtime="20231207 10:35:30.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:30.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:30.615" endtime="20231207 10:35:30.615"/>
</kw>
<status status="PASS" starttime="20231207 10:35:27.681" endtime="20231207 10:35:30.615"/>
</kw>
<msg timestamp="20231207 10:35:30.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:27.680" endtime="20231207 10:35:30.616"/>
</kw>
<msg timestamp="20231207 10:35:30.616" level="INFO">${result} = Difference between snapshot: snap-qcjqm and snapshot: snap-ziiiu
+	./key-zrosp
+	./key-rhrys
</msg>
<status status="PASS" starttime="20231207 10:35:27.679" endtime="20231207 10:35:30.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>+</arg>
<arg>${KEY_TWO}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:30.616" endtime="20231207 10:35:30.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>+</arg>
<arg>${KEY_THREE}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:30.617" endtime="20231207 10:35:30.617"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:35:12.801" endtime="20231207 10:35:30.617"/>
</test>
<test id="s1-s27-t4" name="List Snapshot Diff Jobs" line="56">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot listDiff /${VOLUME}/${BUCKET} --all</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:30.622" level="INFO">Running command 'ozone sh snapshot listDiff /vol-pkdkk/buc-zlqwz --all 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:33.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:33.708" level="INFO">${output} = [ {
  "volumeName" : "vol-pkdkk",
  "bucketName" : "buc-zlqwz",
  "fromSnapshot" : "snap-qcjqm",
  "toSnapshot" : "snap-ziiiu",
  "jobStatus" : "DONE"
} ]</msg>
<status status="PASS" starttime="20231207 10:35:30.620" endtime="20231207 10:35:33.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:33.709" level="INFO">[ {
  "volumeName" : "vol-pkdkk",
  "bucketName" : "buc-zlqwz",
  "fromSnapshot" : "snap-qcjqm",
  "toSnapshot" : "snap-ziiiu",
  "jobStatus" : "DONE"
} ]</msg>
<status status="PASS" starttime="20231207 10:35:33.708" endtime="20231207 10:35:33.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:33.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:33.709" endtime="20231207 10:35:33.710"/>
</kw>
<status status="PASS" starttime="20231207 10:35:30.619" endtime="20231207 10:35:33.710"/>
</kw>
<msg timestamp="20231207 10:35:33.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:30.619" endtime="20231207 10:35:33.710"/>
</kw>
<msg timestamp="20231207 10:35:33.710" level="INFO">${result} = [ {
  "volumeName" : "vol-pkdkk",
  "bucketName" : "buc-zlqwz",
  "fromSnapshot" : "snap-qcjqm",
  "toSnapshot" : "snap-ziiiu",
  "jobStatus" : "DONE"
} ]</msg>
<status status="PASS" starttime="20231207 10:35:30.618" endtime="20231207 10:35:33.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:33.710" endtime="20231207 10:35:33.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:33.711" endtime="20231207 10:35:33.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SNAPSHOT_ONE}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:33.711" endtime="20231207 10:35:33.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SNAPSHOT_TWO}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:33.712" endtime="20231207 10:35:33.712"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:35:30.618" endtime="20231207 10:35:33.712"/>
</test>
<test id="s1-s27-t5" name="Read Snapshot" line="63">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/${BUCKET}/${SNAPSHOT_INDICATOR}/${SNAPSHOT_ONE}/${KEY_ONE}</arg>
<arg>/etc/hosts</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:35:33.715" level="INFO">${postfix} = 13785</msg>
<status status="PASS" starttime="20231207 10:35:33.715" endtime="20231207 10:35:33.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:35:33.716" level="INFO">${tmpfile} = /tmp/tempkey-13785</msg>
<status status="PASS" starttime="20231207 10:35:33.715" endtime="20231207 10:35:33.716"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:33.719" level="INFO">Running command 'ozone sh key get /vol-pkdkk/buc-zlqwz/.snapshot/snap-qcjqm/key-kjujg /tmp/tempkey-13785 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:38.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:38.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:33.717" endtime="20231207 10:35:38.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:38.210" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:38.210" endtime="20231207 10:35:38.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:38.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:38.211" endtime="20231207 10:35:38.211"/>
</kw>
<status status="PASS" starttime="20231207 10:35:33.717" endtime="20231207 10:35:38.211"/>
</kw>
<msg timestamp="20231207 10:35:38.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:33.716" endtime="20231207 10:35:38.211"/>
</kw>
<status status="PASS" starttime="20231207 10:35:33.716" endtime="20231207 10:35:38.212"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231207 10:35:38.214" level="INFO">Running command 'diff -q /etc/hosts /tmp/tempkey-13785 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:38.217" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231207 10:35:38.212" endtime="20231207 10:35:38.217"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:38.220" level="INFO">Running command 'rm -f /tmp/tempkey-13785 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:38.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:38.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:38.218" endtime="20231207 10:35:38.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:38.222" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:38.222" endtime="20231207 10:35:38.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:38.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:38.223" endtime="20231207 10:35:38.223"/>
</kw>
<status status="PASS" starttime="20231207 10:35:38.218" endtime="20231207 10:35:38.223"/>
</kw>
<msg timestamp="20231207 10:35:38.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:38.218" endtime="20231207 10:35:38.223"/>
</kw>
<status status="PASS" starttime="20231207 10:35:38.217" endtime="20231207 10:35:38.223"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231207 10:35:38.224" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231207 10:35:38.224" endtime="20231207 10:35:38.224"/>
</kw>
<msg timestamp="20231207 10:35:38.224" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231207 10:35:33.714" endtime="20231207 10:35:38.224"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231207 10:35:38.224" endtime="20231207 10:35:38.225"/>
</kw>
<status status="PASS" starttime="20231207 10:35:33.713" endtime="20231207 10:35:38.225"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/${BUCKET}/${SNAPSHOT_INDICATOR}/${SNAPSHOT_TWO}/${KEY_TWO}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:35:38.226" level="INFO">${postfix} = 75438</msg>
<status status="PASS" starttime="20231207 10:35:38.226" endtime="20231207 10:35:38.226"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:35:38.227" level="INFO">${tmpfile} = /tmp/tempkey-75438</msg>
<status status="PASS" starttime="20231207 10:35:38.226" endtime="20231207 10:35:38.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:38.229" level="INFO">Running command 'ozone sh key get /vol-pkdkk/buc-zlqwz/.snapshot/snap-ziiiu/key-zrosp /tmp/tempkey-75438 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:42.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:42.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:38.228" endtime="20231207 10:35:42.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:42.472" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:42.471" endtime="20231207 10:35:42.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:42.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:42.472" endtime="20231207 10:35:42.472"/>
</kw>
<status status="PASS" starttime="20231207 10:35:38.228" endtime="20231207 10:35:42.472"/>
</kw>
<msg timestamp="20231207 10:35:42.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:38.227" endtime="20231207 10:35:42.473"/>
</kw>
<status status="PASS" starttime="20231207 10:35:38.227" endtime="20231207 10:35:42.473"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231207 10:35:42.475" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-75438 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:42.477" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231207 10:35:42.473" endtime="20231207 10:35:42.477"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:42.480" level="INFO">Running command 'rm -f /tmp/tempkey-75438 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:42.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:42.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:42.479" endtime="20231207 10:35:42.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:42.483" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:42.482" endtime="20231207 10:35:42.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:42.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:42.483" endtime="20231207 10:35:42.483"/>
</kw>
<status status="PASS" starttime="20231207 10:35:42.478" endtime="20231207 10:35:42.484"/>
</kw>
<msg timestamp="20231207 10:35:42.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:42.478" endtime="20231207 10:35:42.484"/>
</kw>
<status status="PASS" starttime="20231207 10:35:42.477" endtime="20231207 10:35:42.484"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231207 10:35:42.484" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231207 10:35:42.484" endtime="20231207 10:35:42.484"/>
</kw>
<msg timestamp="20231207 10:35:42.485" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231207 10:35:38.226" endtime="20231207 10:35:42.485"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231207 10:35:42.485" endtime="20231207 10:35:42.485"/>
</kw>
<status status="PASS" starttime="20231207 10:35:38.225" endtime="20231207 10:35:42.485"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/${BUCKET}/${SNAPSHOT_INDICATOR}/${SNAPSHOT_TWO}/${KEY_THREE}</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 10:35:42.487" level="INFO">${postfix} = 95898</msg>
<status status="PASS" starttime="20231207 10:35:42.486" endtime="20231207 10:35:42.487"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 10:35:42.487" level="INFO">${tmpfile} = /tmp/tempkey-95898</msg>
<status status="PASS" starttime="20231207 10:35:42.487" endtime="20231207 10:35:42.487"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:42.490" level="INFO">Running command 'ozone sh key get /vol-pkdkk/buc-zlqwz/.snapshot/snap-ziiiu/key-rhrys /tmp/tempkey-95898 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:46.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:46.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:42.488" endtime="20231207 10:35:46.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:46.758" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:46.757" endtime="20231207 10:35:46.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:46.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:46.758" endtime="20231207 10:35:46.759"/>
</kw>
<status status="PASS" starttime="20231207 10:35:42.488" endtime="20231207 10:35:46.759"/>
</kw>
<msg timestamp="20231207 10:35:46.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:42.488" endtime="20231207 10:35:46.759"/>
</kw>
<status status="PASS" starttime="20231207 10:35:42.487" endtime="20231207 10:35:46.759"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231207 10:35:46.761" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-95898 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:46.763" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231207 10:35:46.759" endtime="20231207 10:35:46.763"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:46.766" level="INFO">Running command 'rm -f /tmp/tempkey-95898 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:46.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:46.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:46.765" endtime="20231207 10:35:46.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:46.769" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:46.769" endtime="20231207 10:35:46.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:46.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:46.769" endtime="20231207 10:35:46.770"/>
</kw>
<status status="PASS" starttime="20231207 10:35:46.764" endtime="20231207 10:35:46.770"/>
</kw>
<msg timestamp="20231207 10:35:46.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:46.764" endtime="20231207 10:35:46.770"/>
</kw>
<status status="PASS" starttime="20231207 10:35:46.763" endtime="20231207 10:35:46.770"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231207 10:35:46.771" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231207 10:35:46.770" endtime="20231207 10:35:46.771"/>
</kw>
<msg timestamp="20231207 10:35:46.771" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231207 10:35:42.486" endtime="20231207 10:35:46.771"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231207 10:35:46.771" endtime="20231207 10:35:46.771"/>
</kw>
<status status="PASS" starttime="20231207 10:35:42.485" endtime="20231207 10:35:46.771"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:35:33.713" endtime="20231207 10:35:46.772"/>
</test>
<test id="s1-s27-t6" name="Delete snapshot" line="68">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /${VOLUME}/${BUCKET} ${SNAPSHOT_ONE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:46.775" level="INFO">Running command 'ozone sh snapshot delete /vol-pkdkk/buc-zlqwz snap-qcjqm 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 10:35:49.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:49.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:46.774" endtime="20231207 10:35:49.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:49.643" level="INFO"/>
<status status="PASS" starttime="20231207 10:35:49.643" endtime="20231207 10:35:49.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:49.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:49.643" endtime="20231207 10:35:49.644"/>
</kw>
<status status="PASS" starttime="20231207 10:35:46.774" endtime="20231207 10:35:49.644"/>
</kw>
<msg timestamp="20231207 10:35:49.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:46.773" endtime="20231207 10:35:49.644"/>
</kw>
<msg timestamp="20231207 10:35:49.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 10:35:46.773" endtime="20231207 10:35:49.644"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:49.645" endtime="20231207 10:35:49.645"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /${VOLUME}/${BUCKET} | jq '[.[] | select(.name == "${SNAPSHOT_ONE}") | .snapshotStatus] | if length &gt; 0 then .[] else "SNAPSHOT_DELETED" end'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 10:35:49.648" level="INFO">Running command 'ozone sh snapshot ls /vol-pkdkk/buc-zlqwz | jq '[.[] | select(.name == "snap-qcjqm") | .snapshotStatus] | if length &gt; 0 then .[] else "SNAPSHOT_DELETED" end''.</msg>
<msg timestamp="20231207 10:35:52.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 10:35:52.585" level="INFO">${output} = "SNAPSHOT_DELETED"</msg>
<status status="PASS" starttime="20231207 10:35:49.647" endtime="20231207 10:35:52.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 10:35:52.586" level="INFO">"SNAPSHOT_DELETED"</msg>
<status status="PASS" starttime="20231207 10:35:52.586" endtime="20231207 10:35:52.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 10:35:52.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 10:35:52.587" endtime="20231207 10:35:52.587"/>
</kw>
<status status="PASS" starttime="20231207 10:35:49.646" endtime="20231207 10:35:52.587"/>
</kw>
<msg timestamp="20231207 10:35:52.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 10:35:49.646" endtime="20231207 10:35:52.587"/>
</kw>
<msg timestamp="20231207 10:35:52.588" level="INFO">${output} = "SNAPSHOT_DELETED"</msg>
<status status="PASS" starttime="20231207 10:35:49.645" endtime="20231207 10:35:52.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SNAPSHOT_DELETED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 10:35:52.588" endtime="20231207 10:35:52.588"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 10:35:46.772" endtime="20231207 10:35:52.588"/>
</test>
<doc>Test for using sh commands with snapshots.</doc>
<status status="PASS" starttime="20231207 10:34:56.207" endtime="20231207 10:35:52.590"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="633214"/>
</suite>
<statistics>
<total>
<stat pass="87" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="8" fail="0" skip="0">finalized</stat>
<stat pass="5" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="5" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="87" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization">upgrade.1.3.0-1.4.0-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1">upgrade.1.3.0-1.4.0-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1">upgrade.1.3.0-1.4.0-1-original-validate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="1.3.0-1.4.0-1-original-prepare">upgrade.1.3.0-1.4.0-1-original-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="1.3.0-1.4.0-2-pre-finalized-validate-old1">upgrade.1.3.0-1.4.0-2-pre-finalized-validate-old1</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6" name="1.3.0-1.4.0-2-pre-finalized-generate-old1">upgrade.1.3.0-1.4.0-2-pre-finalized-generate-old1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s7" name="1.3.0-1.4.0-2-pre-finalized-generate-new1">upgrade.1.3.0-1.4.0-2-pre-finalized-generate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="1.3.0-1.4.0-2-pre-finalized-validate-new1">upgrade.1.3.0-1.4.0-2-pre-finalized-validate-new1</stat>
<stat pass="2" fail="0" skip="0" id="s1-s9" name="1.3.0-1.4.0-2-pre-finalized-check-finalization">upgrade.1.3.0-1.4.0-2-pre-finalized-check-finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s10" name="1.3.0-1.4.0-2-pre-finalized-snapshot">upgrade.1.3.0-1.4.0-2-pre-finalized-snapshot</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="1.3.0-1.4.0-2-pre-finalized-prepare">upgrade.1.3.0-1.4.0-2-pre-finalized-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s12" name="1.3.0-1.4.0-3-downgraded-check-finalization">upgrade.1.3.0-1.4.0-3-downgraded-check-finalization</stat>
<stat pass="3" fail="0" skip="0" id="s1-s13" name="1.3.0-1.4.0-3-downgraded-validate-old1">upgrade.1.3.0-1.4.0-3-downgraded-validate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s14" name="1.3.0-1.4.0-3-downgraded-validate-new1">upgrade.1.3.0-1.4.0-3-downgraded-validate-new1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s15" name="1.3.0-1.4.0-3-downgraded-generate-old2">upgrade.1.3.0-1.4.0-3-downgraded-generate-old2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s16" name="1.3.0-1.4.0-3-downgraded-validate-old2">upgrade.1.3.0-1.4.0-3-downgraded-validate-old2</stat>
<stat pass="4" fail="0" skip="0" id="s1-s17" name="1.3.0-1.4.0-3-downgraded-generate-old1">upgrade.1.3.0-1.4.0-3-downgraded-generate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="1.3.0-1.4.0-3-downgraded-prepare">upgrade.1.3.0-1.4.0-3-downgraded-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="1.3.0-1.4.0-4-finalized-finalize">upgrade.1.3.0-1.4.0-4-finalized-finalize</stat>
<stat pass="2" fail="0" skip="0" id="s1-s20" name="1.3.0-1.4.0-4-finalized-check-finalization">upgrade.1.3.0-1.4.0-4-finalized-check-finalization</stat>
<stat pass="3" fail="0" skip="0" id="s1-s21" name="1.3.0-1.4.0-4-finalized-validate-old1">upgrade.1.3.0-1.4.0-4-finalized-validate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s22" name="1.3.0-1.4.0-4-finalized-validate-new1">upgrade.1.3.0-1.4.0-4-finalized-validate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s23" name="1.3.0-1.4.0-4-finalized-validate-old2">upgrade.1.3.0-1.4.0-4-finalized-validate-old2</stat>
<stat pass="6" fail="0" skip="0" id="s1-s24" name="1.3.0-1.4.0-4-finalized-generate-new2">upgrade.1.3.0-1.4.0-4-finalized-generate-new2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s25" name="1.3.0-1.4.0-4-finalized-validate-new2">upgrade.1.3.0-1.4.0-4-finalized-validate-new2</stat>
<stat pass="2" fail="0" skip="0" id="s1-s26" name="1.3.0-1.4.0-4-finalized-check-finalization">upgrade.1.3.0-1.4.0-4-finalized-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s27" name="1.3.0-1.4.0-4-finalized-snapshot">upgrade.1.3.0-1.4.0-4-finalized-snapshot</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
