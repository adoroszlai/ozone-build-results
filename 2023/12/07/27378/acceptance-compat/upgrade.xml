<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231207 16:58:21.893" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:01.058" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:01.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:01.060" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:43:01.055" endtime="20231207 16:43:01.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:01.060" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:43:01.060" endtime="20231207 16:43:01.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:01.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:01.061" endtime="20231207 16:43:01.061"/>
</kw>
<status status="PASS" starttime="20231207 16:43:01.054" endtime="20231207 16:43:01.061"/>
</kw>
<msg timestamp="20231207 16:43:01.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:01.054" endtime="20231207 16:43:01.062"/>
</kw>
<msg timestamp="20231207 16:43:01.062" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:43:01.054" endtime="20231207 16:43:01.062"/>
</kw>
<msg timestamp="20231207 16:43:01.063" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:01.054" endtime="20231207 16:43:01.063"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:43:01.063" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:01.063" endtime="20231207 16:43:01.063"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:01.066" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:01.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:01.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:01.064" endtime="20231207 16:43:01.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:01.122" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:01.122" endtime="20231207 16:43:01.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:01.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:01.122" endtime="20231207 16:43:01.123"/>
</kw>
<status status="PASS" starttime="20231207 16:43:01.064" endtime="20231207 16:43:01.123"/>
</kw>
<msg timestamp="20231207 16:43:01.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:01.064" endtime="20231207 16:43:01.124"/>
</kw>
<status status="PASS" starttime="20231207 16:43:01.064" endtime="20231207 16:43:01.124"/>
</kw>
<status status="PASS" starttime="20231207 16:43:01.063" endtime="20231207 16:43:01.124"/>
</kw>
<status status="PASS" starttime="20231207 16:43:01.053" endtime="20231207 16:43:01.124"/>
</kw>
<status status="PASS" starttime="20231207 16:43:01.053" endtime="20231207 16:43:01.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:01.127" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:01.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:01.128" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 16:43:01.125" endtime="20231207 16:43:01.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:01.129" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 16:43:01.129" endtime="20231207 16:43:01.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:01.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:01.129" endtime="20231207 16:43:01.130"/>
</kw>
<status status="PASS" starttime="20231207 16:43:01.125" endtime="20231207 16:43:01.130"/>
</kw>
<msg timestamp="20231207 16:43:01.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:01.125" endtime="20231207 16:43:01.131"/>
</kw>
<msg timestamp="20231207 16:43:01.131" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 16:43:01.124" endtime="20231207 16:43:01.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:01.131" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 16:43:01.131" endtime="20231207 16:43:01.131"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 16:43:01.132" endtime="20231207 16:43:01.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:01.134" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:03.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:03.373" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 16:43:01.133" endtime="20231207 16:43:03.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:03.374" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 16:43:03.373" endtime="20231207 16:43:03.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:03.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:03.374" endtime="20231207 16:43:03.374"/>
</kw>
<status status="PASS" starttime="20231207 16:43:01.132" endtime="20231207 16:43:03.374"/>
</kw>
<msg timestamp="20231207 16:43:03.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:01.132" endtime="20231207 16:43:03.375"/>
</kw>
<msg timestamp="20231207 16:43:03.375" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 16:43:01.132" endtime="20231207 16:43:03.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:03.375" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 16:43:03.375" endtime="20231207 16:43:03.375"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 16:43:03.375" endtime="20231207 16:43:03.376"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 16:43:01.052" endtime="20231207 16:43:03.376"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:03.381" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:03.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:03.383" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:43:03.379" endtime="20231207 16:43:03.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:03.384" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:43:03.384" endtime="20231207 16:43:03.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:03.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:03.384" endtime="20231207 16:43:03.384"/>
</kw>
<status status="PASS" starttime="20231207 16:43:03.379" endtime="20231207 16:43:03.385"/>
</kw>
<msg timestamp="20231207 16:43:03.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:03.378" endtime="20231207 16:43:03.385"/>
</kw>
<msg timestamp="20231207 16:43:03.385" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:43:03.378" endtime="20231207 16:43:03.385"/>
</kw>
<msg timestamp="20231207 16:43:03.386" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:03.378" endtime="20231207 16:43:03.386"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:43:03.386" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:03.386" endtime="20231207 16:43:03.386"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:03.389" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:03.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:03.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:03.387" endtime="20231207 16:43:03.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:03.504" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:03.503" endtime="20231207 16:43:03.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:03.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:03.504" endtime="20231207 16:43:03.505"/>
</kw>
<status status="PASS" starttime="20231207 16:43:03.387" endtime="20231207 16:43:03.505"/>
</kw>
<msg timestamp="20231207 16:43:03.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:03.387" endtime="20231207 16:43:03.505"/>
</kw>
<status status="PASS" starttime="20231207 16:43:03.386" endtime="20231207 16:43:03.506"/>
</kw>
<status status="PASS" starttime="20231207 16:43:03.386" endtime="20231207 16:43:03.506"/>
</kw>
<status status="PASS" starttime="20231207 16:43:03.377" endtime="20231207 16:43:03.506"/>
</kw>
<status status="PASS" starttime="20231207 16:43:03.377" endtime="20231207 16:43:03.506"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 16:43:03.506" endtime="20231207 16:43:03.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:03.509" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:05.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:05.744" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 16:43:03.507" endtime="20231207 16:43:05.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:05.745" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 16:43:05.744" endtime="20231207 16:43:05.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:05.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:05.745" endtime="20231207 16:43:05.745"/>
</kw>
<status status="PASS" starttime="20231207 16:43:03.507" endtime="20231207 16:43:05.745"/>
</kw>
<msg timestamp="20231207 16:43:05.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:03.507" endtime="20231207 16:43:05.746"/>
</kw>
<msg timestamp="20231207 16:43:05.746" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 16:43:03.506" endtime="20231207 16:43:05.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:05.746" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 16:43:05.746" endtime="20231207 16:43:05.747"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 16:43:05.747" endtime="20231207 16:43:05.747"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 16:43:03.376" endtime="20231207 16:43:05.747"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 16:43:01.013" endtime="20231207 16:43:05.748"/>
</suite>
<suite id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:08.901" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:08.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:08.903" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:43:08.897" endtime="20231207 16:43:08.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:08.904" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:43:08.904" endtime="20231207 16:43:08.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:08.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:08.904" endtime="20231207 16:43:08.904"/>
</kw>
<status status="PASS" starttime="20231207 16:43:08.896" endtime="20231207 16:43:08.905"/>
</kw>
<msg timestamp="20231207 16:43:08.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:08.896" endtime="20231207 16:43:08.906"/>
</kw>
<msg timestamp="20231207 16:43:08.906" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:43:08.896" endtime="20231207 16:43:08.906"/>
</kw>
<msg timestamp="20231207 16:43:08.906" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:08.896" endtime="20231207 16:43:08.906"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:43:08.907" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:08.906" endtime="20231207 16:43:08.907"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:08.909" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:08.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:08.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:08.908" endtime="20231207 16:43:08.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:08.921" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:08.921" endtime="20231207 16:43:08.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:08.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:08.921" endtime="20231207 16:43:08.922"/>
</kw>
<status status="PASS" starttime="20231207 16:43:08.908" endtime="20231207 16:43:08.922"/>
</kw>
<msg timestamp="20231207 16:43:08.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:08.908" endtime="20231207 16:43:08.923"/>
</kw>
<status status="PASS" starttime="20231207 16:43:08.907" endtime="20231207 16:43:08.923"/>
</kw>
<status status="PASS" starttime="20231207 16:43:08.907" endtime="20231207 16:43:08.923"/>
</kw>
<status status="PASS" starttime="20231207 16:43:08.895" endtime="20231207 16:43:08.923"/>
</kw>
<status status="PASS" starttime="20231207 16:43:08.895" endtime="20231207 16:43:08.923"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:08.927" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:11.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:11.232" level="INFO">${output} = 2023-12-07 16:43:11,150 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 16:43:08.925" endtime="20231207 16:43:11.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:11.233" level="INFO">2023-12-07 16:43:11,150 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 16:43:11.232" endtime="20231207 16:43:11.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:11.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:11.233" endtime="20231207 16:43:11.233"/>
</kw>
<status status="PASS" starttime="20231207 16:43:08.925" endtime="20231207 16:43:11.234"/>
</kw>
<msg timestamp="20231207 16:43:11.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:08.925" endtime="20231207 16:43:11.234"/>
</kw>
<msg timestamp="20231207 16:43:11.234" level="INFO">${output} = 2023-12-07 16:43:11,150 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 16:43:08.924" endtime="20231207 16:43:11.234"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:11.234" endtime="20231207 16:43:11.235"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:11.237" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:13.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:13.571" level="INFO">${output} = 2023-12-07 16:43:13,522 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 16:43:11.236" endtime="20231207 16:43:13.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:13.572" level="INFO">2023-12-07 16:43:13,522 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 16:43:13.572" endtime="20231207 16:43:13.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:13.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:13.573" endtime="20231207 16:43:13.573"/>
</kw>
<status status="PASS" starttime="20231207 16:43:11.235" endtime="20231207 16:43:13.573"/>
</kw>
<msg timestamp="20231207 16:43:13.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:11.235" endtime="20231207 16:43:13.574"/>
</kw>
<msg timestamp="20231207 16:43:13.574" level="INFO">${output} = 2023-12-07 16:43:13,522 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 16:43:11.235" endtime="20231207 16:43:13.574"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:13.574" endtime="20231207 16:43:13.574"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:08.923" endtime="20231207 16:43:13.575"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:13.578" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:43:13.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:13.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:13.576" endtime="20231207 16:43:13.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:13.580" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:13.579" endtime="20231207 16:43:13.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:13.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:13.580" endtime="20231207 16:43:13.580"/>
</kw>
<status status="PASS" starttime="20231207 16:43:13.576" endtime="20231207 16:43:13.581"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:13.584" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:18.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:18.288" level="INFO">${output} = 2023-12-07 16:43:16,593 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:43:16,667 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:43:13.582" endtime="20231207 16:43:18.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:18.289" level="INFO">2023-12-07 16:43:16,593 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:43:16,667 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:43:16,667 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 16:43:16,911 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 16:43:18.288" endtime="20231207 16:43:18.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:18.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:18.289" endtime="20231207 16:43:18.289"/>
</kw>
<status status="PASS" starttime="20231207 16:43:13.582" endtime="20231207 16:43:18.290"/>
</kw>
<msg timestamp="20231207 16:43:18.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:13.581" endtime="20231207 16:43:18.290"/>
</kw>
<msg timestamp="20231207 16:43:18.290" level="INFO">${output} = 2023-12-07 16:43:16,593 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:43:16,667 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:43:13.581" endtime="20231207 16:43:18.290"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:18.290" endtime="20231207 16:43:18.291"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:18.293" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:18.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:18.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:18.291" endtime="20231207 16:43:18.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:18.295" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:18.295" endtime="20231207 16:43:18.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:18.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:18.295" endtime="20231207 16:43:18.296"/>
</kw>
<status status="PASS" starttime="20231207 16:43:18.291" endtime="20231207 16:43:18.296"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:13.575" endtime="20231207 16:43:18.296"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:18.299" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:20.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:20.644" level="INFO">${output} = 2023-12-07 16:43:20,605 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 16:43:18.298" endtime="20231207 16:43:20.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:20.645" level="INFO">2023-12-07 16:43:20,605 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 16:43:20.645" endtime="20231207 16:43:20.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:20.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:20.646" endtime="20231207 16:43:20.646"/>
</kw>
<status status="PASS" starttime="20231207 16:43:18.298" endtime="20231207 16:43:20.647"/>
</kw>
<msg timestamp="20231207 16:43:20.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:18.297" endtime="20231207 16:43:20.647"/>
</kw>
<msg timestamp="20231207 16:43:20.647" level="INFO">${output} = 2023-12-07 16:43:20,605 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 16:43:18.297" endtime="20231207 16:43:20.647"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:20.647" endtime="20231207 16:43:20.648"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:18.297" endtime="20231207 16:43:20.648"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:20.651" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:43:20.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:20.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:20.650" endtime="20231207 16:43:20.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:20.653" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:20.653" endtime="20231207 16:43:20.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:20.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:20.654" endtime="20231207 16:43:20.654"/>
</kw>
<status status="PASS" starttime="20231207 16:43:20.649" endtime="20231207 16:43:20.654"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:20.657" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:24.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:24.595" level="INFO">${output} = 2023-12-07 16:43:23,272 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:43:23,343 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:43:20.655" endtime="20231207 16:43:24.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:24.596" level="INFO">2023-12-07 16:43:23,272 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:43:23,343 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:43:23,344 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 16:43:23,528 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 16:43:24.596" endtime="20231207 16:43:24.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:24.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:24.597" endtime="20231207 16:43:24.597"/>
</kw>
<status status="PASS" starttime="20231207 16:43:20.655" endtime="20231207 16:43:24.597"/>
</kw>
<msg timestamp="20231207 16:43:24.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:20.655" endtime="20231207 16:43:24.598"/>
</kw>
<msg timestamp="20231207 16:43:24.598" level="INFO">${output} = 2023-12-07 16:43:23,272 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:43:23,343 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:43:20.654" endtime="20231207 16:43:24.598"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:24.598" endtime="20231207 16:43:24.598"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:24.600" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:24.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:24.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:24.599" endtime="20231207 16:43:24.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:24.605" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:24.604" endtime="20231207 16:43:24.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:24.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:24.605" endtime="20231207 16:43:24.605"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.598" endtime="20231207 16:43:24.606"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:20.648" endtime="20231207 16:43:24.606"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:24.610" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:24.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:24.612" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:43:24.609" endtime="20231207 16:43:24.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:24.613" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:43:24.613" endtime="20231207 16:43:24.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:24.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:24.613" endtime="20231207 16:43:24.614"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.609" endtime="20231207 16:43:24.614"/>
</kw>
<msg timestamp="20231207 16:43:24.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:24.609" endtime="20231207 16:43:24.614"/>
</kw>
<msg timestamp="20231207 16:43:24.615" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:43:24.608" endtime="20231207 16:43:24.615"/>
</kw>
<msg timestamp="20231207 16:43:24.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:24.608" endtime="20231207 16:43:24.615"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:43:24.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:24.615" endtime="20231207 16:43:24.615"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:24.618" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:24.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:24.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:24.617" endtime="20231207 16:43:24.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:24.656" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:24.655" endtime="20231207 16:43:24.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:24.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:24.656" endtime="20231207 16:43:24.657"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.616" endtime="20231207 16:43:24.657"/>
</kw>
<msg timestamp="20231207 16:43:24.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:24.616" endtime="20231207 16:43:24.657"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.616" endtime="20231207 16:43:24.658"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.615" endtime="20231207 16:43:24.658"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.608" endtime="20231207 16:43:24.658"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.607" endtime="20231207 16:43:24.658"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:24.661" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:26.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:26.641" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:24.659" endtime="20231207 16:43:26.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:26.642" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:26.642" endtime="20231207 16:43:26.642"/>
</kw>
<msg timestamp="20231207 16:43:26.643" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:24.659" endtime="20231207 16:43:26.643"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:43:26.647" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:43:26.644" endtime="20231207 16:43:26.648"/>
</kw>
<msg timestamp="20231207 16:43:26.648" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:43:26.643" endtime="20231207 16:43:26.648"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:43:26.649" endtime="20231207 16:43:26.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:43:26.649" endtime="20231207 16:43:26.649"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:43:26.649" endtime="20231207 16:43:26.649"/>
</branch>
<status status="PASS" starttime="20231207 16:43:26.648" endtime="20231207 16:43:26.649"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:43:26.653" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:43:26.650" endtime="20231207 16:43:26.653"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:43:26.657" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:43:26.653" endtime="20231207 16:43:26.657"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:43:26.658" level="INFO">${secret} = ['f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb']</msg>
<status status="PASS" starttime="20231207 16:43:26.657" endtime="20231207 16:43:26.658"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:43:26.660" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:26.658" endtime="20231207 16:43:26.660"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:43:26.661" level="INFO">${secret} = f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:26.660" endtime="20231207 16:43:26.661"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:26.666" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:27.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:27.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:26.663" endtime="20231207 16:43:27.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:27.107" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:27.106" endtime="20231207 16:43:27.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:27.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:27.107" endtime="20231207 16:43:27.107"/>
</kw>
<status status="PASS" starttime="20231207 16:43:26.662" endtime="20231207 16:43:27.108"/>
</kw>
<msg timestamp="20231207 16:43:27.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:26.662" endtime="20231207 16:43:27.108"/>
</kw>
<status status="PASS" starttime="20231207 16:43:26.661" endtime="20231207 16:43:27.108"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:27.111" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:27.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:27.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:27.109" endtime="20231207 16:43:27.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:27.485" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:27.484" endtime="20231207 16:43:27.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:27.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:27.485" endtime="20231207 16:43:27.485"/>
</kw>
<status status="PASS" starttime="20231207 16:43:27.109" endtime="20231207 16:43:27.485"/>
</kw>
<msg timestamp="20231207 16:43:27.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:27.109" endtime="20231207 16:43:27.486"/>
</kw>
<status status="PASS" starttime="20231207 16:43:27.108" endtime="20231207 16:43:27.486"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:27.489" level="INFO">Running command 'aws configure set aws_secret_access_key f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:27.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:27.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:27.487" endtime="20231207 16:43:27.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:27.859" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:27.858" endtime="20231207 16:43:27.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:27.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:27.859" endtime="20231207 16:43:27.860"/>
</kw>
<status status="PASS" starttime="20231207 16:43:27.487" endtime="20231207 16:43:27.862"/>
</kw>
<msg timestamp="20231207 16:43:27.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:27.487" endtime="20231207 16:43:27.862"/>
</kw>
<status status="PASS" starttime="20231207 16:43:27.486" endtime="20231207 16:43:27.863"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:27.865" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:28.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:28.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:27.864" endtime="20231207 16:43:28.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:28.276" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:28.275" endtime="20231207 16:43:28.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:28.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:28.276" endtime="20231207 16:43:28.276"/>
</kw>
<status status="PASS" starttime="20231207 16:43:27.863" endtime="20231207 16:43:28.277"/>
</kw>
<msg timestamp="20231207 16:43:28.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:27.863" endtime="20231207 16:43:28.277"/>
</kw>
<status status="PASS" starttime="20231207 16:43:27.863" endtime="20231207 16:43:28.277"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:28.280" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:28.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:28.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:28.278" endtime="20231207 16:43:28.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:28.650" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:28.650" endtime="20231207 16:43:28.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:28.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:28.650" endtime="20231207 16:43:28.651"/>
</kw>
<status status="PASS" starttime="20231207 16:43:28.278" endtime="20231207 16:43:28.651"/>
</kw>
<msg timestamp="20231207 16:43:28.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:28.278" endtime="20231207 16:43:28.651"/>
</kw>
<status status="PASS" starttime="20231207 16:43:28.277" endtime="20231207 16:43:28.652"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.658" endtime="20231207 16:43:28.652"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.658" endtime="20231207 16:43:28.652"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:43:28.652" endtime="20231207 16:43:28.652"/>
</kw>
<status status="PASS" starttime="20231207 16:43:24.607" endtime="20231207 16:43:28.652"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:43:28.653" level="INFO">${randStr} = 9921755454</msg>
<status status="PASS" starttime="20231207 16:43:28.653" endtime="20231207 16:43:28.653"/>
</kw>
<msg timestamp="20231207 16:43:28.654" level="INFO">${random} = ozone-test-9921755454</msg>
<status status="PASS" starttime="20231207 16:43:28.653" endtime="20231207 16:43:28.654"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:28.657" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-9921755454 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:30.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:30.068" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-9921755454"
}</msg>
<status status="PASS" starttime="20231207 16:43:28.655" endtime="20231207 16:43:30.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:30.069" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-9921755454"
}</msg>
<status status="PASS" starttime="20231207 16:43:30.068" endtime="20231207 16:43:30.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:30.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:30.069" endtime="20231207 16:43:30.070"/>
</kw>
<status status="PASS" starttime="20231207 16:43:28.655" endtime="20231207 16:43:30.070"/>
</kw>
<msg timestamp="20231207 16:43:30.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:28.655" endtime="20231207 16:43:30.071"/>
</kw>
<msg timestamp="20231207 16:43:30.071" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-9921755454"
}</msg>
<status status="PASS" starttime="20231207 16:43:28.654" endtime="20231207 16:43:30.071"/>
</kw>
<msg timestamp="20231207 16:43:30.072" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-9921755454"
}</msg>
<status status="PASS" starttime="20231207 16:43:28.654" endtime="20231207 16:43:30.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:30.072" endtime="20231207 16:43:30.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:30.072" endtime="20231207 16:43:30.073"/>
</kw>
<msg timestamp="20231207 16:43:30.073" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 16:43:28.654" endtime="20231207 16:43:30.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 16:43:30.073" endtime="20231207 16:43:30.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:24.606" endtime="20231207 16:43:30.074"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:30.080" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:43:30.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:30.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:30.077" endtime="20231207 16:43:30.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:30.083" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:30.082" endtime="20231207 16:43:30.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:30.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:30.083" endtime="20231207 16:43:30.084"/>
</kw>
<status status="PASS" starttime="20231207 16:43:30.076" endtime="20231207 16:43:30.084"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:30.088" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:31.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:31.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:30.086" endtime="20231207 16:43:31.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:31.569" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:31.568" endtime="20231207 16:43:31.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:31.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:31.569" endtime="20231207 16:43:31.569"/>
</kw>
<msg timestamp="20231207 16:43:31.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:30.085" endtime="20231207 16:43:31.570"/>
</kw>
<msg timestamp="20231207 16:43:31.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:30.084" endtime="20231207 16:43:31.570"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:31.570" endtime="20231207 16:43:31.570"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:31.572" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:31.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:31.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:31.571" endtime="20231207 16:43:31.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:31.575" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:31.574" endtime="20231207 16:43:31.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:31.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:31.575" endtime="20231207 16:43:31.575"/>
</kw>
<status status="PASS" starttime="20231207 16:43:31.570" endtime="20231207 16:43:31.576"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:30.075" endtime="20231207 16:43:31.576"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 16:43:08.828" endtime="20231207 16:43:31.577"/>
</suite>
<suite id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:34.893" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:34.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:34.898" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:43:34.890" endtime="20231207 16:43:34.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:34.899" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:43:34.898" endtime="20231207 16:43:34.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:34.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:34.899" endtime="20231207 16:43:34.900"/>
</kw>
<status status="PASS" starttime="20231207 16:43:34.888" endtime="20231207 16:43:34.900"/>
</kw>
<msg timestamp="20231207 16:43:34.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:34.888" endtime="20231207 16:43:34.902"/>
</kw>
<msg timestamp="20231207 16:43:34.902" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:43:34.888" endtime="20231207 16:43:34.902"/>
</kw>
<msg timestamp="20231207 16:43:34.903" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:34.887" endtime="20231207 16:43:34.903"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:43:34.903" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:34.903" endtime="20231207 16:43:34.903"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:34.906" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:34.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:34.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:34.904" endtime="20231207 16:43:34.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:34.945" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:34.944" endtime="20231207 16:43:34.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:34.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:34.945" endtime="20231207 16:43:34.946"/>
</kw>
<status status="PASS" starttime="20231207 16:43:34.904" endtime="20231207 16:43:34.951"/>
</kw>
<msg timestamp="20231207 16:43:34.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:34.904" endtime="20231207 16:43:34.952"/>
</kw>
<status status="PASS" starttime="20231207 16:43:34.904" endtime="20231207 16:43:34.952"/>
</kw>
<status status="PASS" starttime="20231207 16:43:34.903" endtime="20231207 16:43:34.952"/>
</kw>
<status status="PASS" starttime="20231207 16:43:34.887" endtime="20231207 16:43:34.953"/>
</kw>
<status status="PASS" starttime="20231207 16:43:34.886" endtime="20231207 16:43:34.953"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:43:34.955" level="INFO">${random} = 63861</msg>
<status status="PASS" starttime="20231207 16:43:34.954" endtime="20231207 16:43:34.955"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:34.959" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-63861 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:39.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:39.036" level="INFO">${output} = 2023-12-07 16:43:37,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:43:37,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:43:34.957" endtime="20231207 16:43:39.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:39.036" level="INFO">2023-12-07 16:43:37,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:43:37,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:43:37,918 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 16:43:39.036" endtime="20231207 16:43:39.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:39.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:39.037" endtime="20231207 16:43:39.037"/>
</kw>
<status status="PASS" starttime="20231207 16:43:34.956" endtime="20231207 16:43:39.037"/>
</kw>
<msg timestamp="20231207 16:43:39.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:34.956" endtime="20231207 16:43:39.038"/>
</kw>
<msg timestamp="20231207 16:43:39.038" level="INFO">${output} = 2023-12-07 16:43:37,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:43:37,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:43:34.955" endtime="20231207 16:43:39.038"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:39.038" endtime="20231207 16:43:39.038"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:39.040" level="INFO">Running command 'cat /tmp/key-63861 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:39.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:39.043" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:43:39.039" endtime="20231207 16:43:39.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:39.044" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:43:39.044" endtime="20231207 16:43:39.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:39.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:39.044" endtime="20231207 16:43:39.045"/>
</kw>
<msg timestamp="20231207 16:43:39.045" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:43:39.038" endtime="20231207 16:43:39.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:39.045" endtime="20231207 16:43:39.046"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:39.047" level="INFO">Running command 'rm /tmp/key-63861 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:39.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:39.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:39.046" endtime="20231207 16:43:39.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:39.049" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:39.049" endtime="20231207 16:43:39.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:39.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:39.049" endtime="20231207 16:43:39.050"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.046" endtime="20231207 16:43:39.050"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:34.953" endtime="20231207 16:43:39.050"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:39.055" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:39.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:39.057" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:43:39.054" endtime="20231207 16:43:39.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:39.058" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:43:39.058" endtime="20231207 16:43:39.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:39.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:39.058" endtime="20231207 16:43:39.059"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.054" endtime="20231207 16:43:39.059"/>
</kw>
<msg timestamp="20231207 16:43:39.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:39.054" endtime="20231207 16:43:39.059"/>
</kw>
<msg timestamp="20231207 16:43:39.059" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:43:39.053" endtime="20231207 16:43:39.059"/>
</kw>
<msg timestamp="20231207 16:43:39.060" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:39.053" endtime="20231207 16:43:39.060"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:43:39.060" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:39.060" endtime="20231207 16:43:39.060"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:39.063" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:39.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:39.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:39.062" endtime="20231207 16:43:39.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:39.097" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:39.097" endtime="20231207 16:43:39.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:39.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:39.097" endtime="20231207 16:43:39.098"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.061" endtime="20231207 16:43:39.098"/>
</kw>
<msg timestamp="20231207 16:43:39.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:39.061" endtime="20231207 16:43:39.099"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.061" endtime="20231207 16:43:39.099"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.060" endtime="20231207 16:43:39.099"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.052" endtime="20231207 16:43:39.099"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.052" endtime="20231207 16:43:39.099"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:39.102" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:40.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:40.898" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:39.100" endtime="20231207 16:43:40.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:40.899" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:40.899" endtime="20231207 16:43:40.899"/>
</kw>
<msg timestamp="20231207 16:43:40.900" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:39.100" endtime="20231207 16:43:40.900"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:43:40.901" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:43:40.900" endtime="20231207 16:43:40.901"/>
</kw>
<msg timestamp="20231207 16:43:40.901" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:43:40.900" endtime="20231207 16:43:40.901"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:43:40.901" endtime="20231207 16:43:40.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:43:40.902" endtime="20231207 16:43:40.902"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:43:40.901" endtime="20231207 16:43:40.902"/>
</branch>
<status status="PASS" starttime="20231207 16:43:40.901" endtime="20231207 16:43:40.902"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:43:40.903" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:43:40.902" endtime="20231207 16:43:40.903"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:43:40.903" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:43:40.903" endtime="20231207 16:43:40.903"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:43:40.904" level="INFO">${secret} = ['f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb']</msg>
<status status="PASS" starttime="20231207 16:43:40.903" endtime="20231207 16:43:40.904"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:43:40.905" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:40.904" endtime="20231207 16:43:40.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:43:40.906" level="INFO">${secret} = f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:40.905" endtime="20231207 16:43:40.906"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:40.908" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:41.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:41.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:40.907" endtime="20231207 16:43:41.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:41.270" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:41.269" endtime="20231207 16:43:41.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:41.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:41.270" endtime="20231207 16:43:41.270"/>
</kw>
<status status="PASS" starttime="20231207 16:43:40.906" endtime="20231207 16:43:41.271"/>
</kw>
<msg timestamp="20231207 16:43:41.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:40.906" endtime="20231207 16:43:41.271"/>
</kw>
<status status="PASS" starttime="20231207 16:43:40.906" endtime="20231207 16:43:41.271"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:41.274" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:41.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:41.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:41.272" endtime="20231207 16:43:41.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:41.647" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:41.646" endtime="20231207 16:43:41.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:41.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:41.647" endtime="20231207 16:43:41.648"/>
</kw>
<status status="PASS" starttime="20231207 16:43:41.272" endtime="20231207 16:43:41.648"/>
</kw>
<msg timestamp="20231207 16:43:41.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:41.272" endtime="20231207 16:43:41.648"/>
</kw>
<status status="PASS" starttime="20231207 16:43:41.271" endtime="20231207 16:43:41.648"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:41.651" level="INFO">Running command 'aws configure set aws_secret_access_key f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:42.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:42.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:41.650" endtime="20231207 16:43:42.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:42.021" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:42.021" endtime="20231207 16:43:42.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:42.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:42.021" endtime="20231207 16:43:42.022"/>
</kw>
<status status="PASS" starttime="20231207 16:43:41.649" endtime="20231207 16:43:42.022"/>
</kw>
<msg timestamp="20231207 16:43:42.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:41.649" endtime="20231207 16:43:42.023"/>
</kw>
<status status="PASS" starttime="20231207 16:43:41.649" endtime="20231207 16:43:42.023"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:42.025" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:42.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:42.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:42.024" endtime="20231207 16:43:42.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:42.383" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:42.382" endtime="20231207 16:43:42.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:42.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:42.383" endtime="20231207 16:43:42.384"/>
</kw>
<status status="PASS" starttime="20231207 16:43:42.024" endtime="20231207 16:43:42.384"/>
</kw>
<msg timestamp="20231207 16:43:42.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:42.023" endtime="20231207 16:43:42.384"/>
</kw>
<status status="PASS" starttime="20231207 16:43:42.023" endtime="20231207 16:43:42.385"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:42.387" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:42.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:42.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:42.386" endtime="20231207 16:43:42.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:42.763" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:42.762" endtime="20231207 16:43:42.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:42.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:42.763" endtime="20231207 16:43:42.764"/>
</kw>
<status status="PASS" starttime="20231207 16:43:42.385" endtime="20231207 16:43:42.764"/>
</kw>
<msg timestamp="20231207 16:43:42.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:42.385" endtime="20231207 16:43:42.764"/>
</kw>
<status status="PASS" starttime="20231207 16:43:42.385" endtime="20231207 16:43:42.764"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.099" endtime="20231207 16:43:42.765"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.099" endtime="20231207 16:43:42.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:43:42.765" endtime="20231207 16:43:42.765"/>
</kw>
<status status="PASS" starttime="20231207 16:43:39.052" endtime="20231207 16:43:42.765"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:42.768" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:43.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:43.363" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:24 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:43:42.766" endtime="20231207 16:43:43.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:43.364" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:24 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:43:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:43:43.363" endtime="20231207 16:43:43.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:43.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:43.364" endtime="20231207 16:43:43.364"/>
</kw>
<msg timestamp="20231207 16:43:43.364" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:24 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:43:42.766" endtime="20231207 16:43:43.364"/>
</kw>
<msg timestamp="20231207 16:43:43.365" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:24 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:43:42.765" endtime="20231207 16:43:43.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:43.365" endtime="20231207 16:43:43.365"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:43.367" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:43.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:43.369" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:43:43.366" endtime="20231207 16:43:43.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:43.369" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:43:43.369" endtime="20231207 16:43:43.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:43.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:43.370" endtime="20231207 16:43:43.370"/>
</kw>
<msg timestamp="20231207 16:43:43.370" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:43:43.365" endtime="20231207 16:43:43.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:43.371" endtime="20231207 16:43:43.371"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:43.372" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:43.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:43.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:43.371" endtime="20231207 16:43:43.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:43.375" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:43.374" endtime="20231207 16:43:43.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:43.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:43.375" endtime="20231207 16:43:43.375"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.371" endtime="20231207 16:43:43.376"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:39.051" endtime="20231207 16:43:43.376"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:43.380" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:43.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:43.382" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:43:43.379" endtime="20231207 16:43:43.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:43.383" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:43:43.382" endtime="20231207 16:43:43.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:43.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:43.383" endtime="20231207 16:43:43.383"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.379" endtime="20231207 16:43:43.384"/>
</kw>
<msg timestamp="20231207 16:43:43.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:43.379" endtime="20231207 16:43:43.384"/>
</kw>
<msg timestamp="20231207 16:43:43.384" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:43:43.378" endtime="20231207 16:43:43.384"/>
</kw>
<msg timestamp="20231207 16:43:43.385" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:43.378" endtime="20231207 16:43:43.385"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:43:43.385" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:43.385" endtime="20231207 16:43:43.385"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:43.388" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:43.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:43.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:43.386" endtime="20231207 16:43:43.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:43.427" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:43.426" endtime="20231207 16:43:43.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:43.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:43.427" endtime="20231207 16:43:43.427"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.386" endtime="20231207 16:43:43.428"/>
</kw>
<msg timestamp="20231207 16:43:43.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:43.386" endtime="20231207 16:43:43.428"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.385" endtime="20231207 16:43:43.428"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.385" endtime="20231207 16:43:43.428"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.378" endtime="20231207 16:43:43.429"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.377" endtime="20231207 16:43:43.429"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:43.431" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:45.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:45.228" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:43.430" endtime="20231207 16:43:45.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:45.229" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:45.228" endtime="20231207 16:43:45.229"/>
</kw>
<msg timestamp="20231207 16:43:45.229" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:43.430" endtime="20231207 16:43:45.229"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:43:45.230" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:43:45.230" endtime="20231207 16:43:45.231"/>
</kw>
<msg timestamp="20231207 16:43:45.231" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:43:45.229" endtime="20231207 16:43:45.231"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:43:45.231" endtime="20231207 16:43:45.231"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:43:45.231" endtime="20231207 16:43:45.231"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:43:45.231" endtime="20231207 16:43:45.231"/>
</branch>
<status status="PASS" starttime="20231207 16:43:45.231" endtime="20231207 16:43:45.231"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:43:45.232" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:43:45.231" endtime="20231207 16:43:45.232"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:43:45.232" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:43:45.232" endtime="20231207 16:43:45.232"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:43:45.232" level="INFO">${secret} = ['f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb']</msg>
<status status="PASS" starttime="20231207 16:43:45.232" endtime="20231207 16:43:45.232"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:43:45.233" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:45.233" endtime="20231207 16:43:45.234"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:43:45.234" level="INFO">${secret} = f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb</msg>
<status status="PASS" starttime="20231207 16:43:45.234" endtime="20231207 16:43:45.235"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:45.237" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:45.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:45.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:45.236" endtime="20231207 16:43:45.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:45.617" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:45.617" endtime="20231207 16:43:45.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:45.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:45.617" endtime="20231207 16:43:45.618"/>
</kw>
<status status="PASS" starttime="20231207 16:43:45.235" endtime="20231207 16:43:45.618"/>
</kw>
<msg timestamp="20231207 16:43:45.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:45.235" endtime="20231207 16:43:45.618"/>
</kw>
<status status="PASS" starttime="20231207 16:43:45.235" endtime="20231207 16:43:45.618"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:45.621" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:45.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:45.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:45.620" endtime="20231207 16:43:45.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:45.991" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:45.991" endtime="20231207 16:43:45.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:45.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:45.992" endtime="20231207 16:43:45.992"/>
</kw>
<status status="PASS" starttime="20231207 16:43:45.619" endtime="20231207 16:43:45.992"/>
</kw>
<msg timestamp="20231207 16:43:45.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:45.619" endtime="20231207 16:43:45.993"/>
</kw>
<status status="PASS" starttime="20231207 16:43:45.619" endtime="20231207 16:43:45.993"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:45.995" level="INFO">Running command 'aws configure set aws_secret_access_key f4574106d0a9a235e649084caa1af89b6dd23a8e8392beb4b2633a49ab4722eb 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:46.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:46.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:45.994" endtime="20231207 16:43:46.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:46.377" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:46.376" endtime="20231207 16:43:46.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:46.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:46.377" endtime="20231207 16:43:46.377"/>
</kw>
<status status="PASS" starttime="20231207 16:43:45.994" endtime="20231207 16:43:46.377"/>
</kw>
<msg timestamp="20231207 16:43:46.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:45.993" endtime="20231207 16:43:46.378"/>
</kw>
<status status="PASS" starttime="20231207 16:43:45.993" endtime="20231207 16:43:46.378"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:46.381" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:46.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:46.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:46.379" endtime="20231207 16:43:46.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:46.769" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:46.768" endtime="20231207 16:43:46.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:46.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:46.769" endtime="20231207 16:43:46.770"/>
</kw>
<status status="PASS" starttime="20231207 16:43:46.379" endtime="20231207 16:43:46.770"/>
</kw>
<msg timestamp="20231207 16:43:46.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:46.379" endtime="20231207 16:43:46.771"/>
</kw>
<status status="PASS" starttime="20231207 16:43:46.378" endtime="20231207 16:43:46.771"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:46.774" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:47.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:47.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:46.772" endtime="20231207 16:43:47.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:47.142" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:47.141" endtime="20231207 16:43:47.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:47.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:47.142" endtime="20231207 16:43:47.142"/>
</kw>
<status status="PASS" starttime="20231207 16:43:46.772" endtime="20231207 16:43:47.143"/>
</kw>
<msg timestamp="20231207 16:43:47.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:46.772" endtime="20231207 16:43:47.143"/>
</kw>
<status status="PASS" starttime="20231207 16:43:46.771" endtime="20231207 16:43:47.143"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.429" endtime="20231207 16:43:47.143"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.429" endtime="20231207 16:43:47.143"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:43:47.144" endtime="20231207 16:43:47.144"/>
</kw>
<status status="PASS" starttime="20231207 16:43:43.377" endtime="20231207 16:43:47.144"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:47.152" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:47.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:47.627" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:31 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:43:47.145" endtime="20231207 16:43:47.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:47.627" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:31 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:43:47 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:43:47.627" endtime="20231207 16:43:47.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:47.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:47.628" endtime="20231207 16:43:47.628"/>
</kw>
<msg timestamp="20231207 16:43:47.628" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:31 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:43:47.145" endtime="20231207 16:43:47.628"/>
</kw>
<msg timestamp="20231207 16:43:47.628" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:31 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:43:47.144" endtime="20231207 16:43:47.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:47.629" endtime="20231207 16:43:47.629"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:47.631" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:47.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:47.633" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:43:47.629" endtime="20231207 16:43:47.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:47.633" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:43:47.633" endtime="20231207 16:43:47.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:47.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:47.634" endtime="20231207 16:43:47.634"/>
</kw>
<msg timestamp="20231207 16:43:47.634" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:43:47.629" endtime="20231207 16:43:47.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:47.634" endtime="20231207 16:43:47.635"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:47.636" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:47.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:47.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:47.635" endtime="20231207 16:43:47.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:47.640" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:47.639" endtime="20231207 16:43:47.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:47.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:47.640" endtime="20231207 16:43:47.641"/>
</kw>
<status status="PASS" starttime="20231207 16:43:47.635" endtime="20231207 16:43:47.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:43.376" endtime="20231207 16:43:47.641"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 16:43:34.820" endtime="20231207 16:43:47.642"/>
</suite>
<suite id="s1-s4" name="1.3.0-1.4.0-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:50.698" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:50.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:50.701" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:43:50.696" endtime="20231207 16:43:50.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:50.701" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:43:50.701" endtime="20231207 16:43:50.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:50.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:50.701" endtime="20231207 16:43:50.702"/>
</kw>
<status status="PASS" starttime="20231207 16:43:50.695" endtime="20231207 16:43:50.702"/>
</kw>
<msg timestamp="20231207 16:43:50.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:50.695" endtime="20231207 16:43:50.703"/>
</kw>
<msg timestamp="20231207 16:43:50.703" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:43:50.695" endtime="20231207 16:43:50.703"/>
</kw>
<msg timestamp="20231207 16:43:50.703" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:50.695" endtime="20231207 16:43:50.703"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:43:50.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:43:50.704" endtime="20231207 16:43:50.704"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:50.708" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:50.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:50.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:43:50.705" endtime="20231207 16:43:50.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:50.737" level="INFO"/>
<status status="PASS" starttime="20231207 16:43:50.736" endtime="20231207 16:43:50.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:50.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:50.737" endtime="20231207 16:43:50.737"/>
</kw>
<status status="PASS" starttime="20231207 16:43:50.705" endtime="20231207 16:43:50.738"/>
</kw>
<msg timestamp="20231207 16:43:50.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:50.705" endtime="20231207 16:43:50.738"/>
</kw>
<status status="PASS" starttime="20231207 16:43:50.704" endtime="20231207 16:43:50.738"/>
</kw>
<status status="PASS" starttime="20231207 16:43:50.704" endtime="20231207 16:43:50.738"/>
</kw>
<status status="PASS" starttime="20231207 16:43:50.694" endtime="20231207 16:43:50.738"/>
</kw>
<status status="PASS" starttime="20231207 16:43:50.694" endtime="20231207 16:43:50.738"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 16:43:50.739" endtime="20231207 16:43:50.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:43:50.741" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:43:58.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:43:58.080" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20231207 16:43:50.740" endtime="20231207 16:43:58.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:43:58.080" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231207 16:43:58.080" endtime="20231207 16:43:58.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:43:58.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:43:58.081" endtime="20231207 16:43:58.081"/>
</kw>
<status status="PASS" starttime="20231207 16:43:50.739" endtime="20231207 16:43:58.081"/>
</kw>
<msg timestamp="20231207 16:43:58.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:43:50.739" endtime="20231207 16:43:58.082"/>
</kw>
<msg timestamp="20231207 16:43:58.082" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20231207 16:43:50.739" endtime="20231207 16:43:58.082"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:43:58.082" endtime="20231207 16:43:58.083"/>
</kw>
<status status="PASS" starttime="20231207 16:43:58.082" endtime="20231207 16:43:58.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:43:50.693" endtime="20231207 16:43:58.083"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20231207 16:43:50.655" endtime="20231207 16:43:58.084"/>
</suite>
<suite id="s1-s5" name="1.3.0-1.4.0-2-pre-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:42.894" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:45:42.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:45:42.896" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:45:42.885" endtime="20231207 16:45:42.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:45:42.896" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:45:42.896" endtime="20231207 16:45:42.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:45:42.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:45:42.897" endtime="20231207 16:45:42.897"/>
</kw>
<status status="PASS" starttime="20231207 16:45:42.885" endtime="20231207 16:45:42.897"/>
</kw>
<msg timestamp="20231207 16:45:42.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:45:42.884" endtime="20231207 16:45:42.897"/>
</kw>
<msg timestamp="20231207 16:45:42.897" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:45:42.884" endtime="20231207 16:45:42.898"/>
</kw>
<msg timestamp="20231207 16:45:42.898" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:45:42.884" endtime="20231207 16:45:42.898"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:45:42.898" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:45:42.898" endtime="20231207 16:45:42.898"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:42.901" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:45:42.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:45:42.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:45:42.900" endtime="20231207 16:45:42.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:45:42.916" level="INFO"/>
<status status="PASS" starttime="20231207 16:45:42.915" endtime="20231207 16:45:42.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:45:42.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:45:42.916" endtime="20231207 16:45:42.917"/>
</kw>
<status status="PASS" starttime="20231207 16:45:42.899" endtime="20231207 16:45:42.917"/>
</kw>
<msg timestamp="20231207 16:45:42.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:45:42.899" endtime="20231207 16:45:42.917"/>
</kw>
<status status="PASS" starttime="20231207 16:45:42.899" endtime="20231207 16:45:42.917"/>
</kw>
<status status="PASS" starttime="20231207 16:45:42.898" endtime="20231207 16:45:42.917"/>
</kw>
<status status="PASS" starttime="20231207 16:45:42.883" endtime="20231207 16:45:42.917"/>
</kw>
<status status="PASS" starttime="20231207 16:45:42.883" endtime="20231207 16:45:42.917"/>
</kw>
<test id="s1-s5-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:45:42.919" level="INFO">${random} = 35659</msg>
<status status="PASS" starttime="20231207 16:45:42.919" endtime="20231207 16:45:42.919"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:42.923" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-35659 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:45:52.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:45:52.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:45:42.921" endtime="20231207 16:45:52.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:45:52.499" level="INFO"/>
<status status="PASS" starttime="20231207 16:45:52.499" endtime="20231207 16:45:52.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:45:52.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:45:52.499" endtime="20231207 16:45:52.500"/>
</kw>
<status status="PASS" starttime="20231207 16:45:42.920" endtime="20231207 16:45:52.500"/>
</kw>
<msg timestamp="20231207 16:45:52.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:45:42.920" endtime="20231207 16:45:52.500"/>
</kw>
<msg timestamp="20231207 16:45:52.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:45:42.920" endtime="20231207 16:45:52.500"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:45:52.501" endtime="20231207 16:45:52.501"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:52.504" level="INFO">Running command 'cat /tmp/key-35659 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:45:52.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:45:52.505" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:45:52.502" endtime="20231207 16:45:52.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:45:52.506" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:45:52.506" endtime="20231207 16:45:52.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:45:52.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:45:52.506" endtime="20231207 16:45:52.507"/>
</kw>
<msg timestamp="20231207 16:45:52.507" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:45:52.501" endtime="20231207 16:45:52.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:45:52.507" endtime="20231207 16:45:52.508"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:52.510" level="INFO">Running command 'rm /tmp/key-35659 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:45:52.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:45:52.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:45:52.508" endtime="20231207 16:45:52.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:45:52.513" level="INFO"/>
<status status="PASS" starttime="20231207 16:45:52.512" endtime="20231207 16:45:52.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:45:52.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:45:52.514" endtime="20231207 16:45:52.515"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.508" endtime="20231207 16:45:52.515"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:45:42.918" endtime="20231207 16:45:52.515"/>
</test>
<test id="s1-s5-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:52.521" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:45:52.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:45:52.523" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:45:52.519" endtime="20231207 16:45:52.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:45:52.524" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:45:52.524" endtime="20231207 16:45:52.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:45:52.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:45:52.524" endtime="20231207 16:45:52.525"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.519" endtime="20231207 16:45:52.525"/>
</kw>
<msg timestamp="20231207 16:45:52.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:45:52.518" endtime="20231207 16:45:52.525"/>
</kw>
<msg timestamp="20231207 16:45:52.525" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:45:52.518" endtime="20231207 16:45:52.526"/>
</kw>
<msg timestamp="20231207 16:45:52.526" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:45:52.518" endtime="20231207 16:45:52.526"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:45:52.526" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:45:52.526" endtime="20231207 16:45:52.526"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:52.530" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:45:52.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:45:52.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:45:52.528" endtime="20231207 16:45:52.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:45:52.548" level="INFO"/>
<status status="PASS" starttime="20231207 16:45:52.547" endtime="20231207 16:45:52.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:45:52.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:45:52.548" endtime="20231207 16:45:52.549"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.528" endtime="20231207 16:45:52.549"/>
</kw>
<msg timestamp="20231207 16:45:52.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:45:52.527" endtime="20231207 16:45:52.549"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.527" endtime="20231207 16:45:52.549"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.526" endtime="20231207 16:45:52.549"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.517" endtime="20231207 16:45:52.549"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.517" endtime="20231207 16:45:52.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:52.553" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:45:55.652" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:45:55.652" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:45:52.551" endtime="20231207 16:45:55.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:45:55.654" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:45:55.653" endtime="20231207 16:45:55.654"/>
</kw>
<msg timestamp="20231207 16:45:55.654" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:45:52.550" endtime="20231207 16:45:55.654"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:45:55.655" endtime="20231207 16:45:55.655"/>
</kw>
<msg timestamp="20231207 16:45:55.655" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 16:45:55.654" endtime="20231207 16:45:55.656"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:55.664" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:45:58.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:45:58.476" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:45:55.658" endtime="20231207 16:45:58.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:45:58.478" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:45:58.477" endtime="20231207 16:45:58.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:45:58.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:45:58.478" endtime="20231207 16:45:58.478"/>
</kw>
<status status="PASS" starttime="20231207 16:45:55.657" endtime="20231207 16:45:58.479"/>
</kw>
<msg timestamp="20231207 16:45:58.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:45:55.657" endtime="20231207 16:45:58.479"/>
</kw>
<status status="PASS" starttime="20231207 16:45:55.656" endtime="20231207 16:45:58.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:45:58.482" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:01.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:01.326" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1015a72f75d6a96e50be1f66ec66a59ceaafb8e31427870dd02d993735948eb5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:45:58.480" endtime="20231207 16:46:01.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:01.327" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1015a72f75d6a96e50be1f66ec66a59ceaafb8e31427870dd02d993735948eb5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:46:01.327" endtime="20231207 16:46:01.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:01.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:01.327" endtime="20231207 16:46:01.328"/>
</kw>
<status status="PASS" starttime="20231207 16:45:58.480" endtime="20231207 16:46:01.328"/>
</kw>
<msg timestamp="20231207 16:46:01.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:45:58.479" endtime="20231207 16:46:01.328"/>
</kw>
<msg timestamp="20231207 16:46:01.328" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1015a72f75d6a96e50be1f66ec66a59ceaafb8e31427870dd02d993735948eb5
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:45:58.479" endtime="20231207 16:46:01.328"/>
</kw>
<status status="PASS" starttime="20231207 16:45:55.656" endtime="20231207 16:46:01.328"/>
</branch>
<status status="PASS" starttime="20231207 16:45:55.656" endtime="20231207 16:46:01.329"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:46:01.329" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:46:01.329" endtime="20231207 16:46:01.329"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:46:01.330" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:46:01.330" endtime="20231207 16:46:01.330"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:46:01.330" level="INFO">${secret} = ['1015a72f75d6a96e50be1f66ec66a59ceaafb8e31427870dd02d993735948eb5']</msg>
<status status="PASS" starttime="20231207 16:46:01.330" endtime="20231207 16:46:01.330"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:46:01.331" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:01.331" endtime="20231207 16:46:01.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:46:01.332" level="INFO">${secret} = 1015a72f75d6a96e50be1f66ec66a59ceaafb8e31427870dd02d993735948eb5</msg>
<status status="PASS" starttime="20231207 16:46:01.332" endtime="20231207 16:46:01.332"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:01.335" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:01.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:01.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:01.334" endtime="20231207 16:46:01.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:01.792" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:01.792" endtime="20231207 16:46:01.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:01.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:01.792" endtime="20231207 16:46:01.793"/>
</kw>
<status status="PASS" starttime="20231207 16:46:01.333" endtime="20231207 16:46:01.793"/>
</kw>
<msg timestamp="20231207 16:46:01.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:01.333" endtime="20231207 16:46:01.793"/>
</kw>
<status status="PASS" starttime="20231207 16:46:01.333" endtime="20231207 16:46:01.793"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:01.796" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:02.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:02.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:01.795" endtime="20231207 16:46:02.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:02.224" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:02.223" endtime="20231207 16:46:02.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:02.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:02.224" endtime="20231207 16:46:02.225"/>
</kw>
<status status="PASS" starttime="20231207 16:46:01.794" endtime="20231207 16:46:02.225"/>
</kw>
<msg timestamp="20231207 16:46:02.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:01.794" endtime="20231207 16:46:02.225"/>
</kw>
<status status="PASS" starttime="20231207 16:46:01.794" endtime="20231207 16:46:02.225"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:02.228" level="INFO">Running command 'aws configure set aws_secret_access_key 1015a72f75d6a96e50be1f66ec66a59ceaafb8e31427870dd02d993735948eb5 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:02.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:02.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:02.226" endtime="20231207 16:46:02.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:02.717" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:02.716" endtime="20231207 16:46:02.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:02.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:02.717" endtime="20231207 16:46:02.717"/>
</kw>
<status status="PASS" starttime="20231207 16:46:02.226" endtime="20231207 16:46:02.718"/>
</kw>
<msg timestamp="20231207 16:46:02.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:02.226" endtime="20231207 16:46:02.718"/>
</kw>
<status status="PASS" starttime="20231207 16:46:02.225" endtime="20231207 16:46:02.718"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:02.721" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:03.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:03.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:02.719" endtime="20231207 16:46:03.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:03.134" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:03.133" endtime="20231207 16:46:03.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:03.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:03.134" endtime="20231207 16:46:03.134"/>
</kw>
<status status="PASS" starttime="20231207 16:46:02.719" endtime="20231207 16:46:03.134"/>
</kw>
<msg timestamp="20231207 16:46:03.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:02.718" endtime="20231207 16:46:03.135"/>
</kw>
<status status="PASS" starttime="20231207 16:46:02.718" endtime="20231207 16:46:03.135"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:03.138" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:03.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:03.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:03.136" endtime="20231207 16:46:03.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:03.569" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:03.568" endtime="20231207 16:46:03.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:03.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:03.569" endtime="20231207 16:46:03.569"/>
</kw>
<status status="PASS" starttime="20231207 16:46:03.135" endtime="20231207 16:46:03.570"/>
</kw>
<msg timestamp="20231207 16:46:03.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:03.135" endtime="20231207 16:46:03.570"/>
</kw>
<status status="PASS" starttime="20231207 16:46:03.135" endtime="20231207 16:46:03.570"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.550" endtime="20231207 16:46:03.570"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.550" endtime="20231207 16:46:03.570"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:46:03.570" endtime="20231207 16:46:03.570"/>
</kw>
<status status="PASS" starttime="20231207 16:45:52.516" endtime="20231207 16:46:03.570"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:03.573" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:06.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:06.150" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:24 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 16:46:03.572" endtime="20231207 16:46:06.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:06.151" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:24 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:46:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:46:06.151" endtime="20231207 16:46:06.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:06.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:06.152" endtime="20231207 16:46:06.152"/>
</kw>
<msg timestamp="20231207 16:46:06.152" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:24 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 16:46:03.571" endtime="20231207 16:46:06.152"/>
</kw>
<msg timestamp="20231207 16:46:06.152" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:24 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 16:46:03.571" endtime="20231207 16:46:06.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:06.153" endtime="20231207 16:46:06.153"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:06.155" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:06.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:06.157" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:46:06.154" endtime="20231207 16:46:06.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:06.158" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:46:06.158" endtime="20231207 16:46:06.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:06.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:06.158" endtime="20231207 16:46:06.159"/>
</kw>
<msg timestamp="20231207 16:46:06.159" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:46:06.153" endtime="20231207 16:46:06.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:06.159" endtime="20231207 16:46:06.159"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:06.161" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:06.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:06.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:06.160" endtime="20231207 16:46:06.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:06.165" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:06.164" endtime="20231207 16:46:06.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:06.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:06.165" endtime="20231207 16:46:06.165"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.159" endtime="20231207 16:46:06.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:45:52.516" endtime="20231207 16:46:06.166"/>
</test>
<test id="s1-s5-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:06.171" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:06.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:06.173" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:46:06.169" endtime="20231207 16:46:06.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:06.174" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:46:06.174" endtime="20231207 16:46:06.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:06.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:06.175" endtime="20231207 16:46:06.175"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.169" endtime="20231207 16:46:06.176"/>
</kw>
<msg timestamp="20231207 16:46:06.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:06.169" endtime="20231207 16:46:06.176"/>
</kw>
<msg timestamp="20231207 16:46:06.176" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:46:06.168" endtime="20231207 16:46:06.176"/>
</kw>
<msg timestamp="20231207 16:46:06.176" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:06.168" endtime="20231207 16:46:06.176"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:46:06.177" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:06.176" endtime="20231207 16:46:06.177"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:06.181" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:06.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:06.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:06.179" endtime="20231207 16:46:06.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:06.199" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:06.198" endtime="20231207 16:46:06.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:06.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:06.199" endtime="20231207 16:46:06.200"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.179" endtime="20231207 16:46:06.201"/>
</kw>
<msg timestamp="20231207 16:46:06.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:06.178" endtime="20231207 16:46:06.201"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.177" endtime="20231207 16:46:06.201"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.177" endtime="20231207 16:46:06.201"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.167" endtime="20231207 16:46:06.201"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.167" endtime="20231207 16:46:06.202"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:06.206" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:09.136" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:46:09.136" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:46:06.204" endtime="20231207 16:46:09.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:09.138" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:46:09.137" endtime="20231207 16:46:09.138"/>
</kw>
<msg timestamp="20231207 16:46:09.138" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:46:06.203" endtime="20231207 16:46:09.138"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:09.139" endtime="20231207 16:46:09.139"/>
</kw>
<msg timestamp="20231207 16:46:09.139" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 16:46:09.139" endtime="20231207 16:46:09.139"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:09.143" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:11.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:11.929" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:46:09.141" endtime="20231207 16:46:11.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:11.930" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:46:11.930" endtime="20231207 16:46:11.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:11.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:11.931" endtime="20231207 16:46:11.931"/>
</kw>
<status status="PASS" starttime="20231207 16:46:09.141" endtime="20231207 16:46:11.931"/>
</kw>
<msg timestamp="20231207 16:46:11.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:09.140" endtime="20231207 16:46:11.931"/>
</kw>
<status status="PASS" starttime="20231207 16:46:09.140" endtime="20231207 16:46:11.932"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:11.935" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:14.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:14.541" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e7a2477bf868fbed7adab57455afc0755a5eba0b91f9d476b993cb1782cee28c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:46:11.933" endtime="20231207 16:46:14.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:14.542" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e7a2477bf868fbed7adab57455afc0755a5eba0b91f9d476b993cb1782cee28c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:46:14.542" endtime="20231207 16:46:14.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:14.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:14.542" endtime="20231207 16:46:14.543"/>
</kw>
<status status="PASS" starttime="20231207 16:46:11.932" endtime="20231207 16:46:14.543"/>
</kw>
<msg timestamp="20231207 16:46:14.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:11.932" endtime="20231207 16:46:14.543"/>
</kw>
<msg timestamp="20231207 16:46:14.543" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e7a2477bf868fbed7adab57455afc0755a5eba0b91f9d476b993cb1782cee28c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:46:11.932" endtime="20231207 16:46:14.543"/>
</kw>
<status status="PASS" starttime="20231207 16:46:09.140" endtime="20231207 16:46:14.543"/>
</branch>
<status status="PASS" starttime="20231207 16:46:09.140" endtime="20231207 16:46:14.544"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:46:14.544" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:46:14.544" endtime="20231207 16:46:14.544"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:46:14.545" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:46:14.544" endtime="20231207 16:46:14.545"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:46:14.545" level="INFO">${secret} = ['e7a2477bf868fbed7adab57455afc0755a5eba0b91f9d476b993cb1782cee28c']</msg>
<status status="PASS" starttime="20231207 16:46:14.545" endtime="20231207 16:46:14.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:46:14.546" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:14.545" endtime="20231207 16:46:14.546"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:46:14.547" level="INFO">${secret} = e7a2477bf868fbed7adab57455afc0755a5eba0b91f9d476b993cb1782cee28c</msg>
<status status="PASS" starttime="20231207 16:46:14.546" endtime="20231207 16:46:14.547"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:14.550" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:14.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:14.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:14.549" endtime="20231207 16:46:14.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:14.985" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:14.984" endtime="20231207 16:46:14.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:14.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:14.985" endtime="20231207 16:46:14.986"/>
</kw>
<status status="PASS" starttime="20231207 16:46:14.548" endtime="20231207 16:46:14.986"/>
</kw>
<msg timestamp="20231207 16:46:14.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:14.548" endtime="20231207 16:46:14.986"/>
</kw>
<status status="PASS" starttime="20231207 16:46:14.547" endtime="20231207 16:46:14.986"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:14.989" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:15.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:15.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:14.987" endtime="20231207 16:46:15.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:15.418" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:15.417" endtime="20231207 16:46:15.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:15.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:15.418" endtime="20231207 16:46:15.418"/>
</kw>
<status status="PASS" starttime="20231207 16:46:14.987" endtime="20231207 16:46:15.418"/>
</kw>
<msg timestamp="20231207 16:46:15.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:14.987" endtime="20231207 16:46:15.419"/>
</kw>
<status status="PASS" starttime="20231207 16:46:14.986" endtime="20231207 16:46:15.419"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:15.423" level="INFO">Running command 'aws configure set aws_secret_access_key e7a2477bf868fbed7adab57455afc0755a5eba0b91f9d476b993cb1782cee28c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:15.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:15.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:15.421" endtime="20231207 16:46:15.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:15.883" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:15.882" endtime="20231207 16:46:15.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:15.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:15.883" endtime="20231207 16:46:15.884"/>
</kw>
<status status="PASS" starttime="20231207 16:46:15.421" endtime="20231207 16:46:15.884"/>
</kw>
<msg timestamp="20231207 16:46:15.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:15.421" endtime="20231207 16:46:15.884"/>
</kw>
<status status="PASS" starttime="20231207 16:46:15.419" endtime="20231207 16:46:15.884"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:15.894" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:16.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:16.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:15.886" endtime="20231207 16:46:16.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:16.343" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:16.343" endtime="20231207 16:46:16.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:16.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:16.344" endtime="20231207 16:46:16.344"/>
</kw>
<status status="PASS" starttime="20231207 16:46:15.885" endtime="20231207 16:46:16.344"/>
</kw>
<msg timestamp="20231207 16:46:16.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:15.885" endtime="20231207 16:46:16.344"/>
</kw>
<status status="PASS" starttime="20231207 16:46:15.884" endtime="20231207 16:46:16.344"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:16.348" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:16.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:16.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:16.346" endtime="20231207 16:46:16.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:16.770" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:16.770" endtime="20231207 16:46:16.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:16.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:16.771" endtime="20231207 16:46:16.771"/>
</kw>
<status status="PASS" starttime="20231207 16:46:16.345" endtime="20231207 16:46:16.771"/>
</kw>
<msg timestamp="20231207 16:46:16.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:16.345" endtime="20231207 16:46:16.771"/>
</kw>
<status status="PASS" starttime="20231207 16:46:16.345" endtime="20231207 16:46:16.772"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.202" endtime="20231207 16:46:16.772"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.202" endtime="20231207 16:46:16.772"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:46:16.772" endtime="20231207 16:46:16.772"/>
</kw>
<status status="PASS" starttime="20231207 16:46:06.167" endtime="20231207 16:46:16.772"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:16.775" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:17.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:17.436" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:31 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 16:46:16.773" endtime="20231207 16:46:17.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:17.438" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:31 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:46:17 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:46:17.437" endtime="20231207 16:46:17.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:17.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:17.438" endtime="20231207 16:46:17.439"/>
</kw>
<msg timestamp="20231207 16:46:17.439" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:31 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 16:46:16.773" endtime="20231207 16:46:17.439"/>
</kw>
<msg timestamp="20231207 16:46:17.439" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:43:31 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 16:46:16.772" endtime="20231207 16:46:17.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:17.439" endtime="20231207 16:46:17.440"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:17.442" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:17.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:17.446" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:46:17.440" endtime="20231207 16:46:17.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:17.447" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:46:17.446" endtime="20231207 16:46:17.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:17.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:17.447" endtime="20231207 16:46:17.447"/>
</kw>
<msg timestamp="20231207 16:46:17.448" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:46:17.440" endtime="20231207 16:46:17.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:17.448" endtime="20231207 16:46:17.448"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:17.451" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:17.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:17.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:17.449" endtime="20231207 16:46:17.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:17.457" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:17.457" endtime="20231207 16:46:17.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:17.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:17.458" endtime="20231207 16:46:17.458"/>
</kw>
<status status="PASS" starttime="20231207 16:46:17.448" endtime="20231207 16:46:17.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:46:06.166" endtime="20231207 16:46:17.458"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 16:45:42.800" endtime="20231207 16:46:17.459"/>
</suite>
<suite id="s1-s6" name="1.3.0-1.4.0-2-pre-finalized-generate-old1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:21.100" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:21.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:21.102" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:46:21.098" endtime="20231207 16:46:21.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:21.103" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:46:21.103" endtime="20231207 16:46:21.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:21.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:21.103" endtime="20231207 16:46:21.103"/>
</kw>
<status status="PASS" starttime="20231207 16:46:21.097" endtime="20231207 16:46:21.104"/>
</kw>
<msg timestamp="20231207 16:46:21.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:21.097" endtime="20231207 16:46:21.104"/>
</kw>
<msg timestamp="20231207 16:46:21.104" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:46:21.096" endtime="20231207 16:46:21.104"/>
</kw>
<msg timestamp="20231207 16:46:21.104" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:21.096" endtime="20231207 16:46:21.104"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:46:21.105" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:21.104" endtime="20231207 16:46:21.105"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:21.109" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:21.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:21.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:21.107" endtime="20231207 16:46:21.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:21.127" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:21.127" endtime="20231207 16:46:21.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:21.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:21.128" endtime="20231207 16:46:21.128"/>
</kw>
<status status="PASS" starttime="20231207 16:46:21.106" endtime="20231207 16:46:21.128"/>
</kw>
<msg timestamp="20231207 16:46:21.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:21.106" endtime="20231207 16:46:21.128"/>
</kw>
<status status="PASS" starttime="20231207 16:46:21.105" endtime="20231207 16:46:21.128"/>
</kw>
<status status="PASS" starttime="20231207 16:46:21.105" endtime="20231207 16:46:21.128"/>
</kw>
<status status="PASS" starttime="20231207 16:46:21.096" endtime="20231207 16:46:21.129"/>
</kw>
<status status="PASS" starttime="20231207 16:46:21.095" endtime="20231207 16:46:21.129"/>
</kw>
<test id="s1-s6-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:21.132" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:46:21.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:21.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:21.130" endtime="20231207 16:46:21.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:21.134" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:21.133" endtime="20231207 16:46:21.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:21.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:21.134" endtime="20231207 16:46:21.134"/>
</kw>
<status status="PASS" starttime="20231207 16:46:21.130" endtime="20231207 16:46:21.134"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:21.140" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:27.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:27.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:21.136" endtime="20231207 16:46:27.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:27.081" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:27.080" endtime="20231207 16:46:27.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:27.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:27.081" endtime="20231207 16:46:27.082"/>
</kw>
<status status="PASS" starttime="20231207 16:46:21.135" endtime="20231207 16:46:27.082"/>
</kw>
<msg timestamp="20231207 16:46:27.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:21.135" endtime="20231207 16:46:27.082"/>
</kw>
<msg timestamp="20231207 16:46:27.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:21.135" endtime="20231207 16:46:27.082"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:27.082" endtime="20231207 16:46:27.082"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:27.085" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:27.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:27.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:27.083" endtime="20231207 16:46:27.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:27.088" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:27.087" endtime="20231207 16:46:27.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:27.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:27.088" endtime="20231207 16:46:27.088"/>
</kw>
<status status="PASS" starttime="20231207 16:46:27.083" endtime="20231207 16:46:27.089"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:46:21.129" endtime="20231207 16:46:27.089"/>
</test>
<test id="s1-s6-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:27.092" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:46:27.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:27.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:27.090" endtime="20231207 16:46:27.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:27.094" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:27.093" endtime="20231207 16:46:27.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:27.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:27.094" endtime="20231207 16:46:27.094"/>
</kw>
<status status="PASS" starttime="20231207 16:46:27.090" endtime="20231207 16:46:27.095"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:27.097" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:32.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:32.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:27.096" endtime="20231207 16:46:32.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:32.879" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:32.878" endtime="20231207 16:46:32.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:32.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:32.879" endtime="20231207 16:46:32.880"/>
</kw>
<status status="PASS" starttime="20231207 16:46:27.095" endtime="20231207 16:46:32.880"/>
</kw>
<msg timestamp="20231207 16:46:32.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:27.095" endtime="20231207 16:46:32.880"/>
</kw>
<msg timestamp="20231207 16:46:32.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:27.095" endtime="20231207 16:46:32.880"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:32.880" endtime="20231207 16:46:32.881"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:32.883" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:32.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:32.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:32.881" endtime="20231207 16:46:32.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:32.886" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:32.885" endtime="20231207 16:46:32.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:32.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:32.886" endtime="20231207 16:46:32.886"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.881" endtime="20231207 16:46:32.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:46:27.089" endtime="20231207 16:46:32.887"/>
</test>
<test id="s1-s6-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:32.892" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:32.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:32.900" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:46:32.891" endtime="20231207 16:46:32.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:32.902" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:46:32.901" endtime="20231207 16:46:32.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:32.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:32.902" endtime="20231207 16:46:32.902"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.890" endtime="20231207 16:46:32.903"/>
</kw>
<msg timestamp="20231207 16:46:32.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:32.890" endtime="20231207 16:46:32.903"/>
</kw>
<msg timestamp="20231207 16:46:32.903" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:46:32.890" endtime="20231207 16:46:32.903"/>
</kw>
<msg timestamp="20231207 16:46:32.903" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:32.889" endtime="20231207 16:46:32.904"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:46:32.904" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:32.904" endtime="20231207 16:46:32.904"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:32.908" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:32.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:32.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:32.907" endtime="20231207 16:46:32.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:32.925" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:32.924" endtime="20231207 16:46:32.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:32.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:32.925" endtime="20231207 16:46:32.926"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.906" endtime="20231207 16:46:32.926"/>
</kw>
<msg timestamp="20231207 16:46:32.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:32.906" endtime="20231207 16:46:32.926"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.905" endtime="20231207 16:46:32.926"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.904" endtime="20231207 16:46:32.926"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.888" endtime="20231207 16:46:32.926"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.888" endtime="20231207 16:46:32.926"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:32.929" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:35.643" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:46:35.643" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:46:32.928" endtime="20231207 16:46:35.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:35.644" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:46:35.643" endtime="20231207 16:46:35.644"/>
</kw>
<msg timestamp="20231207 16:46:35.644" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:46:32.927" endtime="20231207 16:46:35.644"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:35.645" endtime="20231207 16:46:35.645"/>
</kw>
<msg timestamp="20231207 16:46:35.645" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 16:46:35.644" endtime="20231207 16:46:35.645"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:35.649" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:38.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:38.340" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:46:35.647" endtime="20231207 16:46:38.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:38.341" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:46:38.340" endtime="20231207 16:46:38.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:38.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:38.341" endtime="20231207 16:46:38.341"/>
</kw>
<status status="PASS" starttime="20231207 16:46:35.646" endtime="20231207 16:46:38.342"/>
</kw>
<msg timestamp="20231207 16:46:38.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:35.646" endtime="20231207 16:46:38.342"/>
</kw>
<status status="PASS" starttime="20231207 16:46:35.646" endtime="20231207 16:46:38.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:38.345" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:41.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:41.398" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=999d3c2897671095b7f417965f3d2a0c52ab3cbd76141b00b164138e9d78113b
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:46:38.343" endtime="20231207 16:46:41.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:41.399" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=999d3c2897671095b7f417965f3d2a0c52ab3cbd76141b00b164138e9d78113b
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:46:41.399" endtime="20231207 16:46:41.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:41.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:41.400" endtime="20231207 16:46:41.400"/>
</kw>
<status status="PASS" starttime="20231207 16:46:38.343" endtime="20231207 16:46:41.400"/>
</kw>
<msg timestamp="20231207 16:46:41.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:38.342" endtime="20231207 16:46:41.401"/>
</kw>
<msg timestamp="20231207 16:46:41.401" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=999d3c2897671095b7f417965f3d2a0c52ab3cbd76141b00b164138e9d78113b
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:46:38.342" endtime="20231207 16:46:41.401"/>
</kw>
<status status="PASS" starttime="20231207 16:46:35.645" endtime="20231207 16:46:41.401"/>
</branch>
<status status="PASS" starttime="20231207 16:46:35.645" endtime="20231207 16:46:41.401"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:46:41.402" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:46:41.401" endtime="20231207 16:46:41.402"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:46:41.403" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:46:41.402" endtime="20231207 16:46:41.403"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:46:41.404" level="INFO">${secret} = ['999d3c2897671095b7f417965f3d2a0c52ab3cbd76141b00b164138e9d78113b']</msg>
<status status="PASS" starttime="20231207 16:46:41.403" endtime="20231207 16:46:41.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:46:41.405" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:41.404" endtime="20231207 16:46:41.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:46:41.407" level="INFO">${secret} = 999d3c2897671095b7f417965f3d2a0c52ab3cbd76141b00b164138e9d78113b</msg>
<status status="PASS" starttime="20231207 16:46:41.405" endtime="20231207 16:46:41.407"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:41.410" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:41.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:41.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:41.408" endtime="20231207 16:46:41.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:41.854" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:41.854" endtime="20231207 16:46:41.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:41.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:41.855" endtime="20231207 16:46:41.855"/>
</kw>
<status status="PASS" starttime="20231207 16:46:41.408" endtime="20231207 16:46:41.855"/>
</kw>
<msg timestamp="20231207 16:46:41.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:41.407" endtime="20231207 16:46:41.855"/>
</kw>
<status status="PASS" starttime="20231207 16:46:41.407" endtime="20231207 16:46:41.855"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:41.859" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:42.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:42.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:41.857" endtime="20231207 16:46:42.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:42.328" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:42.327" endtime="20231207 16:46:42.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:42.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:42.328" endtime="20231207 16:46:42.328"/>
</kw>
<status status="PASS" starttime="20231207 16:46:41.856" endtime="20231207 16:46:42.328"/>
</kw>
<msg timestamp="20231207 16:46:42.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:41.856" endtime="20231207 16:46:42.329"/>
</kw>
<status status="PASS" starttime="20231207 16:46:41.856" endtime="20231207 16:46:42.329"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:42.333" level="INFO">Running command 'aws configure set aws_secret_access_key 999d3c2897671095b7f417965f3d2a0c52ab3cbd76141b00b164138e9d78113b 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:42.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:42.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:42.330" endtime="20231207 16:46:42.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:42.787" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:42.786" endtime="20231207 16:46:42.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:42.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:42.787" endtime="20231207 16:46:42.787"/>
</kw>
<status status="PASS" starttime="20231207 16:46:42.330" endtime="20231207 16:46:42.787"/>
</kw>
<msg timestamp="20231207 16:46:42.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:42.330" endtime="20231207 16:46:42.787"/>
</kw>
<status status="PASS" starttime="20231207 16:46:42.329" endtime="20231207 16:46:42.788"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:42.790" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:43.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:43.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:42.789" endtime="20231207 16:46:43.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:43.221" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:43.220" endtime="20231207 16:46:43.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:43.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:43.221" endtime="20231207 16:46:43.221"/>
</kw>
<status status="PASS" starttime="20231207 16:46:42.788" endtime="20231207 16:46:43.222"/>
</kw>
<msg timestamp="20231207 16:46:43.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:42.788" endtime="20231207 16:46:43.222"/>
</kw>
<status status="PASS" starttime="20231207 16:46:42.788" endtime="20231207 16:46:43.222"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:43.225" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:43.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:43.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:43.223" endtime="20231207 16:46:43.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:43.649" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:43.649" endtime="20231207 16:46:43.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:43.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:43.650" endtime="20231207 16:46:43.650"/>
</kw>
<status status="PASS" starttime="20231207 16:46:43.223" endtime="20231207 16:46:43.651"/>
</kw>
<msg timestamp="20231207 16:46:43.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:43.223" endtime="20231207 16:46:43.651"/>
</kw>
<status status="PASS" starttime="20231207 16:46:43.222" endtime="20231207 16:46:43.651"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.927" endtime="20231207 16:46:43.651"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.926" endtime="20231207 16:46:43.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:46:43.651" endtime="20231207 16:46:43.652"/>
</kw>
<status status="PASS" starttime="20231207 16:46:32.888" endtime="20231207 16:46:43.652"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:46:43.653" level="INFO">${randStr} = 4868226515</msg>
<status status="PASS" starttime="20231207 16:46:43.652" endtime="20231207 16:46:43.653"/>
</kw>
<msg timestamp="20231207 16:46:43.653" level="INFO">${random} = ozone-test-4868226515</msg>
<status status="PASS" starttime="20231207 16:46:43.652" endtime="20231207 16:46:43.653"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:43.657" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-4868226515 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:44.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:44.277" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4868226515"
}</msg>
<status status="PASS" starttime="20231207 16:46:43.655" endtime="20231207 16:46:44.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:44.278" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4868226515"
}</msg>
<status status="PASS" starttime="20231207 16:46:44.278" endtime="20231207 16:46:44.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:44.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:44.279" endtime="20231207 16:46:44.279"/>
</kw>
<status status="PASS" starttime="20231207 16:46:43.655" endtime="20231207 16:46:44.279"/>
</kw>
<msg timestamp="20231207 16:46:44.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:43.655" endtime="20231207 16:46:44.279"/>
</kw>
<msg timestamp="20231207 16:46:44.279" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4868226515"
}</msg>
<status status="PASS" starttime="20231207 16:46:43.654" endtime="20231207 16:46:44.279"/>
</kw>
<msg timestamp="20231207 16:46:44.280" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4868226515"
}</msg>
<status status="PASS" starttime="20231207 16:46:43.654" endtime="20231207 16:46:44.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:44.280" endtime="20231207 16:46:44.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:44.280" endtime="20231207 16:46:44.281"/>
</kw>
<msg timestamp="20231207 16:46:44.281" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 16:46:43.653" endtime="20231207 16:46:44.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 16:46:44.281" endtime="20231207 16:46:44.281"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:46:32.887" endtime="20231207 16:46:44.282"/>
</test>
<test id="s1-s6-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:44.285" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:46:44.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:44.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:44.283" endtime="20231207 16:46:44.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:44.287" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:44.287" endtime="20231207 16:46:44.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:44.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:44.287" endtime="20231207 16:46:44.288"/>
</kw>
<status status="PASS" starttime="20231207 16:46:44.283" endtime="20231207 16:46:44.288"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:44.290" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:45.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:45.534" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 16:46:44.289" endtime="20231207 16:46:45.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:45.536" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 16:46:45.535" endtime="20231207 16:46:45.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:45.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:45.536" endtime="20231207 16:46:45.537"/>
</kw>
<msg timestamp="20231207 16:46:45.537" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 16:46:44.288" endtime="20231207 16:46:45.537"/>
</kw>
<msg timestamp="20231207 16:46:45.537" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231207 16:46:44.288" endtime="20231207 16:46:45.538"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:45.538" endtime="20231207 16:46:45.538"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:45.541" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:45.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:45.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:45.539" endtime="20231207 16:46:45.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:45.544" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:45.543" endtime="20231207 16:46:45.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:45.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:45.544" endtime="20231207 16:46:45.545"/>
</kw>
<status status="PASS" starttime="20231207 16:46:45.538" endtime="20231207 16:46:45.545"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:46:44.282" endtime="20231207 16:46:45.545"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 16:46:21.021" endtime="20231207 16:46:45.546"/>
</suite>
<suite id="s1-s7" name="1.3.0-1.4.0-2-pre-finalized-generate-new1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:49.223" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:49.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:49.226" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:46:49.220" endtime="20231207 16:46:49.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:49.227" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:46:49.227" endtime="20231207 16:46:49.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:49.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:49.227" endtime="20231207 16:46:49.228"/>
</kw>
<status status="PASS" starttime="20231207 16:46:49.220" endtime="20231207 16:46:49.228"/>
</kw>
<msg timestamp="20231207 16:46:49.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:49.220" endtime="20231207 16:46:49.228"/>
</kw>
<msg timestamp="20231207 16:46:49.228" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:46:49.219" endtime="20231207 16:46:49.228"/>
</kw>
<msg timestamp="20231207 16:46:49.228" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:49.219" endtime="20231207 16:46:49.228"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:46:49.229" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:46:49.228" endtime="20231207 16:46:49.229"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:49.232" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:49.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:49.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:49.230" endtime="20231207 16:46:49.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:49.248" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:49.247" endtime="20231207 16:46:49.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:49.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:49.248" endtime="20231207 16:46:49.248"/>
</kw>
<status status="PASS" starttime="20231207 16:46:49.230" endtime="20231207 16:46:49.248"/>
</kw>
<msg timestamp="20231207 16:46:49.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:49.230" endtime="20231207 16:46:49.249"/>
</kw>
<status status="PASS" starttime="20231207 16:46:49.229" endtime="20231207 16:46:49.249"/>
</kw>
<status status="PASS" starttime="20231207 16:46:49.229" endtime="20231207 16:46:49.249"/>
</kw>
<status status="PASS" starttime="20231207 16:46:49.218" endtime="20231207 16:46:49.249"/>
</kw>
<status status="PASS" starttime="20231207 16:46:49.218" endtime="20231207 16:46:49.249"/>
</kw>
<test id="s1-s7-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:49.253" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:52.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:52.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:49.251" endtime="20231207 16:46:52.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:52.726" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:52.726" endtime="20231207 16:46:52.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:52.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:52.727" endtime="20231207 16:46:52.727"/>
</kw>
<status status="PASS" starttime="20231207 16:46:49.251" endtime="20231207 16:46:52.727"/>
</kw>
<msg timestamp="20231207 16:46:52.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:49.250" endtime="20231207 16:46:52.727"/>
</kw>
<msg timestamp="20231207 16:46:52.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:49.250" endtime="20231207 16:46:52.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:52.728" endtime="20231207 16:46:52.728"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:52.731" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:46:56.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:56.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:52.730" endtime="20231207 16:46:56.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:56.217" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:56.216" endtime="20231207 16:46:56.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:56.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:56.217" endtime="20231207 16:46:56.217"/>
</kw>
<status status="PASS" starttime="20231207 16:46:52.729" endtime="20231207 16:46:56.217"/>
</kw>
<msg timestamp="20231207 16:46:56.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:52.729" endtime="20231207 16:46:56.218"/>
</kw>
<msg timestamp="20231207 16:46:56.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:52.728" endtime="20231207 16:46:56.218"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:46:56.218" endtime="20231207 16:46:56.218"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:46:49.249" endtime="20231207 16:46:56.218"/>
</test>
<test id="s1-s7-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:56.222" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:46:56.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:46:56.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:56.220" endtime="20231207 16:46:56.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:46:56.224" level="INFO"/>
<status status="PASS" starttime="20231207 16:46:56.223" endtime="20231207 16:46:56.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:46:56.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:46:56.224" endtime="20231207 16:46:56.224"/>
</kw>
<status status="PASS" starttime="20231207 16:46:56.219" endtime="20231207 16:46:56.224"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:46:56.227" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:02.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:02.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:56.226" endtime="20231207 16:47:02.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:02.070" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:02.069" endtime="20231207 16:47:02.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:02.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:02.070" endtime="20231207 16:47:02.070"/>
</kw>
<status status="PASS" starttime="20231207 16:46:56.225" endtime="20231207 16:47:02.071"/>
</kw>
<msg timestamp="20231207 16:47:02.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:46:56.225" endtime="20231207 16:47:02.071"/>
</kw>
<msg timestamp="20231207 16:47:02.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:46:56.224" endtime="20231207 16:47:02.071"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:02.071" endtime="20231207 16:47:02.071"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:02.074" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:02.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:02.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:02.072" endtime="20231207 16:47:02.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:02.077" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:02.077" endtime="20231207 16:47:02.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:02.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:02.078" endtime="20231207 16:47:02.078"/>
</kw>
<status status="PASS" starttime="20231207 16:47:02.071" endtime="20231207 16:47:02.078"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:46:56.219" endtime="20231207 16:47:02.078"/>
</test>
<test id="s1-s7-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:02.083" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:05.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:05.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:02.081" endtime="20231207 16:47:05.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:05.701" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:05.701" endtime="20231207 16:47:05.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:05.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:05.702" endtime="20231207 16:47:05.702"/>
</kw>
<status status="PASS" starttime="20231207 16:47:02.080" endtime="20231207 16:47:05.702"/>
</kw>
<msg timestamp="20231207 16:47:05.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:02.080" endtime="20231207 16:47:05.702"/>
</kw>
<msg timestamp="20231207 16:47:05.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:02.080" endtime="20231207 16:47:05.702"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:05.703" endtime="20231207 16:47:05.703"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:47:02.079" endtime="20231207 16:47:05.703"/>
</test>
<test id="s1-s7-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:05.706" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:47:05.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:05.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:05.705" endtime="20231207 16:47:05.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:05.709" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:05.708" endtime="20231207 16:47:05.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:05.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:05.709" endtime="20231207 16:47:05.709"/>
</kw>
<status status="PASS" starttime="20231207 16:47:05.704" endtime="20231207 16:47:05.709"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:05.712" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:11.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:11.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:05.711" endtime="20231207 16:47:11.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:11.038" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:11.037" endtime="20231207 16:47:11.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:11.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:11.038" endtime="20231207 16:47:11.038"/>
</kw>
<status status="PASS" starttime="20231207 16:47:05.710" endtime="20231207 16:47:11.038"/>
</kw>
<msg timestamp="20231207 16:47:11.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:05.710" endtime="20231207 16:47:11.039"/>
</kw>
<msg timestamp="20231207 16:47:11.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:05.710" endtime="20231207 16:47:11.039"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:11.039" endtime="20231207 16:47:11.039"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:11.041" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:11.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:11.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:11.040" endtime="20231207 16:47:11.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:11.045" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:11.045" endtime="20231207 16:47:11.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:11.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:11.046" endtime="20231207 16:47:11.046"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.039" endtime="20231207 16:47:11.046"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:47:05.703" endtime="20231207 16:47:11.046"/>
</test>
<test id="s1-s7-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:11.051" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:11.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:11.054" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:47:11.050" endtime="20231207 16:47:11.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:11.054" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:47:11.054" endtime="20231207 16:47:11.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:11.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:11.055" endtime="20231207 16:47:11.055"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.050" endtime="20231207 16:47:11.055"/>
</kw>
<msg timestamp="20231207 16:47:11.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:11.049" endtime="20231207 16:47:11.055"/>
</kw>
<msg timestamp="20231207 16:47:11.056" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:47:11.049" endtime="20231207 16:47:11.056"/>
</kw>
<msg timestamp="20231207 16:47:11.056" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:11.049" endtime="20231207 16:47:11.056"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:47:11.056" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:11.056" endtime="20231207 16:47:11.056"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:11.059" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:11.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:11.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:11.058" endtime="20231207 16:47:11.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:11.097" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:11.097" endtime="20231207 16:47:11.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:11.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:11.097" endtime="20231207 16:47:11.098"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.058" endtime="20231207 16:47:11.098"/>
</kw>
<msg timestamp="20231207 16:47:11.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:11.057" endtime="20231207 16:47:11.098"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.057" endtime="20231207 16:47:11.098"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.057" endtime="20231207 16:47:11.098"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.048" endtime="20231207 16:47:11.098"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.048" endtime="20231207 16:47:11.098"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:11.101" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:13.980" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:47:13.980" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:47:11.100" endtime="20231207 16:47:13.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:13.981" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:47:13.981" endtime="20231207 16:47:13.981"/>
</kw>
<msg timestamp="20231207 16:47:13.981" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:47:11.099" endtime="20231207 16:47:13.981"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:13.982" endtime="20231207 16:47:13.982"/>
</kw>
<msg timestamp="20231207 16:47:13.982" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 16:47:13.981" endtime="20231207 16:47:13.982"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:13.985" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:16.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:16.996" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:47:13.984" endtime="20231207 16:47:16.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:16.997" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:47:16.997" endtime="20231207 16:47:16.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:16.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:16.998" endtime="20231207 16:47:16.998"/>
</kw>
<status status="PASS" starttime="20231207 16:47:13.983" endtime="20231207 16:47:16.998"/>
</kw>
<msg timestamp="20231207 16:47:16.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:13.983" endtime="20231207 16:47:16.998"/>
</kw>
<status status="PASS" starttime="20231207 16:47:13.983" endtime="20231207 16:47:16.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:17.002" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:19.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:19.857" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ae747727d54f5bb2f81e689be9a5cbadd5b2693541f4f117d81acc695b070c6c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:47:17.000" endtime="20231207 16:47:19.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:19.858" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ae747727d54f5bb2f81e689be9a5cbadd5b2693541f4f117d81acc695b070c6c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:47:19.858" endtime="20231207 16:47:19.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:19.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:19.859" endtime="20231207 16:47:19.859"/>
</kw>
<status status="PASS" starttime="20231207 16:47:16.999" endtime="20231207 16:47:19.859"/>
</kw>
<msg timestamp="20231207 16:47:19.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:16.999" endtime="20231207 16:47:19.859"/>
</kw>
<msg timestamp="20231207 16:47:19.860" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ae747727d54f5bb2f81e689be9a5cbadd5b2693541f4f117d81acc695b070c6c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:47:16.999" endtime="20231207 16:47:19.860"/>
</kw>
<status status="PASS" starttime="20231207 16:47:13.982" endtime="20231207 16:47:19.860"/>
</branch>
<status status="PASS" starttime="20231207 16:47:13.982" endtime="20231207 16:47:19.860"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:47:19.861" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:47:19.860" endtime="20231207 16:47:19.861"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:47:19.861" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:47:19.861" endtime="20231207 16:47:19.861"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:47:19.862" level="INFO">${secret} = ['ae747727d54f5bb2f81e689be9a5cbadd5b2693541f4f117d81acc695b070c6c']</msg>
<status status="PASS" starttime="20231207 16:47:19.861" endtime="20231207 16:47:19.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:47:19.863" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:19.862" endtime="20231207 16:47:19.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:47:19.864" level="INFO">${secret} = ae747727d54f5bb2f81e689be9a5cbadd5b2693541f4f117d81acc695b070c6c</msg>
<status status="PASS" starttime="20231207 16:47:19.863" endtime="20231207 16:47:19.864"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:19.867" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:20.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:20.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:19.865" endtime="20231207 16:47:20.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:20.296" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:20.296" endtime="20231207 16:47:20.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:20.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:20.296" endtime="20231207 16:47:20.297"/>
</kw>
<status status="PASS" starttime="20231207 16:47:19.865" endtime="20231207 16:47:20.297"/>
</kw>
<msg timestamp="20231207 16:47:20.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:19.865" endtime="20231207 16:47:20.297"/>
</kw>
<status status="PASS" starttime="20231207 16:47:19.864" endtime="20231207 16:47:20.297"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:20.301" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:20.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:20.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:20.299" endtime="20231207 16:47:20.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:20.745" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:20.745" endtime="20231207 16:47:20.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:20.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:20.745" endtime="20231207 16:47:20.746"/>
</kw>
<status status="PASS" starttime="20231207 16:47:20.298" endtime="20231207 16:47:20.746"/>
</kw>
<msg timestamp="20231207 16:47:20.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:20.298" endtime="20231207 16:47:20.746"/>
</kw>
<status status="PASS" starttime="20231207 16:47:20.298" endtime="20231207 16:47:20.746"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:20.750" level="INFO">Running command 'aws configure set aws_secret_access_key ae747727d54f5bb2f81e689be9a5cbadd5b2693541f4f117d81acc695b070c6c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:21.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:21.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:20.748" endtime="20231207 16:47:21.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:21.172" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:21.172" endtime="20231207 16:47:21.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:21.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:21.173" endtime="20231207 16:47:21.173"/>
</kw>
<status status="PASS" starttime="20231207 16:47:20.747" endtime="20231207 16:47:21.173"/>
</kw>
<msg timestamp="20231207 16:47:21.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:20.747" endtime="20231207 16:47:21.173"/>
</kw>
<status status="PASS" starttime="20231207 16:47:20.747" endtime="20231207 16:47:21.173"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:21.177" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:21.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:21.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:21.175" endtime="20231207 16:47:21.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:21.603" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:21.602" endtime="20231207 16:47:21.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:21.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:21.603" endtime="20231207 16:47:21.603"/>
</kw>
<status status="PASS" starttime="20231207 16:47:21.174" endtime="20231207 16:47:21.603"/>
</kw>
<msg timestamp="20231207 16:47:21.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:21.174" endtime="20231207 16:47:21.603"/>
</kw>
<status status="PASS" starttime="20231207 16:47:21.174" endtime="20231207 16:47:21.604"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:21.607" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:22.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:22.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:21.605" endtime="20231207 16:47:22.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:22.033" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:22.032" endtime="20231207 16:47:22.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:22.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:22.033" endtime="20231207 16:47:22.034"/>
</kw>
<status status="PASS" starttime="20231207 16:47:21.604" endtime="20231207 16:47:22.034"/>
</kw>
<msg timestamp="20231207 16:47:22.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:21.604" endtime="20231207 16:47:22.034"/>
</kw>
<status status="PASS" starttime="20231207 16:47:21.604" endtime="20231207 16:47:22.034"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.099" endtime="20231207 16:47:22.034"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.098" endtime="20231207 16:47:22.034"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:47:22.034" endtime="20231207 16:47:22.035"/>
</kw>
<status status="PASS" starttime="20231207 16:47:11.047" endtime="20231207 16:47:22.035"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:47:22.036" level="INFO">${randStr} = 5363333084</msg>
<status status="PASS" starttime="20231207 16:47:22.035" endtime="20231207 16:47:22.036"/>
</kw>
<msg timestamp="20231207 16:47:22.036" level="INFO">${random} = ozone-test-5363333084</msg>
<status status="PASS" starttime="20231207 16:47:22.035" endtime="20231207 16:47:22.036"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:22.040" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket-ozone-test-5363333084 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:22.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:22.583" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5363333084"
}</msg>
<status status="PASS" starttime="20231207 16:47:22.038" endtime="20231207 16:47:22.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:22.584" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5363333084"
}</msg>
<status status="PASS" starttime="20231207 16:47:22.583" endtime="20231207 16:47:22.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:22.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:22.584" endtime="20231207 16:47:22.584"/>
</kw>
<status status="PASS" starttime="20231207 16:47:22.038" endtime="20231207 16:47:22.585"/>
</kw>
<msg timestamp="20231207 16:47:22.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:22.037" endtime="20231207 16:47:22.585"/>
</kw>
<msg timestamp="20231207 16:47:22.585" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5363333084"
}</msg>
<status status="PASS" starttime="20231207 16:47:22.037" endtime="20231207 16:47:22.585"/>
</kw>
<msg timestamp="20231207 16:47:22.585" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5363333084"
}</msg>
<status status="PASS" starttime="20231207 16:47:22.037" endtime="20231207 16:47:22.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:22.585" endtime="20231207 16:47:22.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:22.586" endtime="20231207 16:47:22.586"/>
</kw>
<msg timestamp="20231207 16:47:22.586" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 16:47:22.036" endtime="20231207 16:47:22.586"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 16:47:22.586" endtime="20231207 16:47:22.587"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:47:11.047" endtime="20231207 16:47:22.587"/>
</test>
<test id="s1-s7-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:22.590" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:47:22.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:22.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:22.588" endtime="20231207 16:47:22.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:22.592" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:22.592" endtime="20231207 16:47:22.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:22.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:22.592" endtime="20231207 16:47:22.593"/>
</kw>
<status status="PASS" starttime="20231207 16:47:22.588" endtime="20231207 16:47:22.593"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:22.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:23.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:23.274" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 16:47:22.594" endtime="20231207 16:47:23.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:23.275" level="INFO">{
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 16:47:23.274" endtime="20231207 16:47:23.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:23.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:23.275" endtime="20231207 16:47:23.276"/>
</kw>
<msg timestamp="20231207 16:47:23.276" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 16:47:22.593" endtime="20231207 16:47:23.276"/>
</kw>
<msg timestamp="20231207 16:47:23.276" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231207 16:47:22.593" endtime="20231207 16:47:23.276"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:23.276" endtime="20231207 16:47:23.277"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:23.279" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:23.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:23.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:23.277" endtime="20231207 16:47:23.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:23.282" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:23.281" endtime="20231207 16:47:23.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:23.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:23.282" endtime="20231207 16:47:23.282"/>
</kw>
<status status="PASS" starttime="20231207 16:47:23.277" endtime="20231207 16:47:23.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:47:22.587" endtime="20231207 16:47:23.283"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 16:46:49.138" endtime="20231207 16:47:23.284"/>
</suite>
<suite id="s1-s8" name="1.3.0-1.4.0-2-pre-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:26.884" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:26.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:26.886" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:47:26.882" endtime="20231207 16:47:26.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:26.887" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:47:26.886" endtime="20231207 16:47:26.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:26.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:26.887" endtime="20231207 16:47:26.887"/>
</kw>
<status status="PASS" starttime="20231207 16:47:26.881" endtime="20231207 16:47:26.888"/>
</kw>
<msg timestamp="20231207 16:47:26.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:26.881" endtime="20231207 16:47:26.888"/>
</kw>
<msg timestamp="20231207 16:47:26.888" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:47:26.881" endtime="20231207 16:47:26.888"/>
</kw>
<msg timestamp="20231207 16:47:26.888" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:26.880" endtime="20231207 16:47:26.888"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:47:26.889" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:26.888" endtime="20231207 16:47:26.889"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:26.892" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:26.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:26.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:26.890" endtime="20231207 16:47:26.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:26.947" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:26.947" endtime="20231207 16:47:26.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:26.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:26.947" endtime="20231207 16:47:26.948"/>
</kw>
<status status="PASS" starttime="20231207 16:47:26.890" endtime="20231207 16:47:26.948"/>
</kw>
<msg timestamp="20231207 16:47:26.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:26.890" endtime="20231207 16:47:26.948"/>
</kw>
<status status="PASS" starttime="20231207 16:47:26.889" endtime="20231207 16:47:26.948"/>
</kw>
<status status="PASS" starttime="20231207 16:47:26.889" endtime="20231207 16:47:26.948"/>
</kw>
<status status="PASS" starttime="20231207 16:47:26.880" endtime="20231207 16:47:26.948"/>
</kw>
<status status="PASS" starttime="20231207 16:47:26.879" endtime="20231207 16:47:26.948"/>
</kw>
<test id="s1-s8-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:47:26.950" level="INFO">${random} = 06345</msg>
<status status="PASS" starttime="20231207 16:47:26.949" endtime="20231207 16:47:26.950"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:26.953" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-06345 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:32.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:32.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:26.951" endtime="20231207 16:47:32.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:32.042" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:32.041" endtime="20231207 16:47:32.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:32.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:32.042" endtime="20231207 16:47:32.042"/>
</kw>
<status status="PASS" starttime="20231207 16:47:26.951" endtime="20231207 16:47:32.043"/>
</kw>
<msg timestamp="20231207 16:47:32.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:26.950" endtime="20231207 16:47:32.043"/>
</kw>
<msg timestamp="20231207 16:47:32.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:26.950" endtime="20231207 16:47:32.043"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:32.043" endtime="20231207 16:47:32.044"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:32.046" level="INFO">Running command 'cat /tmp/key-06345 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:32.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:32.048" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:47:32.044" endtime="20231207 16:47:32.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:32.049" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:47:32.048" endtime="20231207 16:47:32.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:32.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:32.049" endtime="20231207 16:47:32.049"/>
</kw>
<msg timestamp="20231207 16:47:32.049" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:47:32.044" endtime="20231207 16:47:32.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:32.050" endtime="20231207 16:47:32.050"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:32.052" level="INFO">Running command 'rm /tmp/key-06345 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:32.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:32.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:32.050" endtime="20231207 16:47:32.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:32.054" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:32.054" endtime="20231207 16:47:32.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:32.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:32.054" endtime="20231207 16:47:32.055"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.050" endtime="20231207 16:47:32.055"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:47:26.948" endtime="20231207 16:47:32.055"/>
</test>
<test id="s1-s8-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:32.060" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:32.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:32.062" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:47:32.059" endtime="20231207 16:47:32.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:32.063" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:47:32.062" endtime="20231207 16:47:32.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:32.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:32.063" endtime="20231207 16:47:32.064"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.058" endtime="20231207 16:47:32.064"/>
</kw>
<msg timestamp="20231207 16:47:32.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:32.058" endtime="20231207 16:47:32.064"/>
</kw>
<msg timestamp="20231207 16:47:32.064" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:47:32.058" endtime="20231207 16:47:32.064"/>
</kw>
<msg timestamp="20231207 16:47:32.064" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:32.057" endtime="20231207 16:47:32.064"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:47:32.065" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:32.064" endtime="20231207 16:47:32.065"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:32.068" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:32.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:32.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:32.066" endtime="20231207 16:47:32.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:32.107" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:32.107" endtime="20231207 16:47:32.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:32.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:32.108" endtime="20231207 16:47:32.108"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.066" endtime="20231207 16:47:32.108"/>
</kw>
<msg timestamp="20231207 16:47:32.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:32.066" endtime="20231207 16:47:32.108"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.065" endtime="20231207 16:47:32.108"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.065" endtime="20231207 16:47:32.108"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.057" endtime="20231207 16:47:32.109"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.057" endtime="20231207 16:47:32.109"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:32.112" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:34.506" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:47:34.506" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:47:32.110" endtime="20231207 16:47:34.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:34.507" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:47:34.507" endtime="20231207 16:47:34.507"/>
</kw>
<msg timestamp="20231207 16:47:34.507" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:47:32.110" endtime="20231207 16:47:34.508"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:34.508" endtime="20231207 16:47:34.508"/>
</kw>
<msg timestamp="20231207 16:47:34.508" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 16:47:34.508" endtime="20231207 16:47:34.508"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:34.512" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:37.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:37.138" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:47:34.510" endtime="20231207 16:47:37.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:37.140" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:47:37.139" endtime="20231207 16:47:37.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:37.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:37.140" endtime="20231207 16:47:37.140"/>
</kw>
<status status="PASS" starttime="20231207 16:47:34.510" endtime="20231207 16:47:37.141"/>
</kw>
<msg timestamp="20231207 16:47:37.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:34.509" endtime="20231207 16:47:37.141"/>
</kw>
<status status="PASS" starttime="20231207 16:47:34.509" endtime="20231207 16:47:37.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:37.144" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:39.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:39.787" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3ad1fb2889bf216e2812941410179549c8e605825ad16a465c34e5f70b1af6ba
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:47:37.143" endtime="20231207 16:47:39.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:39.788" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3ad1fb2889bf216e2812941410179549c8e605825ad16a465c34e5f70b1af6ba
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:47:39.788" endtime="20231207 16:47:39.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:39.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:39.788" endtime="20231207 16:47:39.789"/>
</kw>
<status status="PASS" starttime="20231207 16:47:37.142" endtime="20231207 16:47:39.789"/>
</kw>
<msg timestamp="20231207 16:47:39.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:37.142" endtime="20231207 16:47:39.789"/>
</kw>
<msg timestamp="20231207 16:47:39.789" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3ad1fb2889bf216e2812941410179549c8e605825ad16a465c34e5f70b1af6ba
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:47:37.141" endtime="20231207 16:47:39.790"/>
</kw>
<status status="PASS" starttime="20231207 16:47:34.509" endtime="20231207 16:47:39.790"/>
</branch>
<status status="PASS" starttime="20231207 16:47:34.508" endtime="20231207 16:47:39.790"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:47:39.790" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:47:39.790" endtime="20231207 16:47:39.790"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:47:39.791" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:47:39.791" endtime="20231207 16:47:39.791"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:47:39.791" level="INFO">${secret} = ['3ad1fb2889bf216e2812941410179549c8e605825ad16a465c34e5f70b1af6ba']</msg>
<status status="PASS" starttime="20231207 16:47:39.791" endtime="20231207 16:47:39.791"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:47:39.793" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:39.792" endtime="20231207 16:47:39.793"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:47:39.794" level="INFO">${secret} = 3ad1fb2889bf216e2812941410179549c8e605825ad16a465c34e5f70b1af6ba</msg>
<status status="PASS" starttime="20231207 16:47:39.793" endtime="20231207 16:47:39.794"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:39.797" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:40.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:40.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:39.795" endtime="20231207 16:47:40.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:40.213" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:40.212" endtime="20231207 16:47:40.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:40.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:40.213" endtime="20231207 16:47:40.214"/>
</kw>
<status status="PASS" starttime="20231207 16:47:39.794" endtime="20231207 16:47:40.214"/>
</kw>
<msg timestamp="20231207 16:47:40.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:39.794" endtime="20231207 16:47:40.214"/>
</kw>
<status status="PASS" starttime="20231207 16:47:39.794" endtime="20231207 16:47:40.214"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:40.217" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:40.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:40.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:40.215" endtime="20231207 16:47:40.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:40.635" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:40.635" endtime="20231207 16:47:40.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:40.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:40.635" endtime="20231207 16:47:40.636"/>
</kw>
<status status="PASS" starttime="20231207 16:47:40.215" endtime="20231207 16:47:40.636"/>
</kw>
<msg timestamp="20231207 16:47:40.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:40.215" endtime="20231207 16:47:40.636"/>
</kw>
<status status="PASS" starttime="20231207 16:47:40.214" endtime="20231207 16:47:40.636"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:40.639" level="INFO">Running command 'aws configure set aws_secret_access_key 3ad1fb2889bf216e2812941410179549c8e605825ad16a465c34e5f70b1af6ba 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:41.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:41.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:40.638" endtime="20231207 16:47:41.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:41.061" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:41.060" endtime="20231207 16:47:41.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:41.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:41.061" endtime="20231207 16:47:41.062"/>
</kw>
<status status="PASS" starttime="20231207 16:47:40.637" endtime="20231207 16:47:41.062"/>
</kw>
<msg timestamp="20231207 16:47:41.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:40.637" endtime="20231207 16:47:41.062"/>
</kw>
<status status="PASS" starttime="20231207 16:47:40.636" endtime="20231207 16:47:41.062"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:41.065" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:41.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:41.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:41.063" endtime="20231207 16:47:41.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:41.468" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:41.467" endtime="20231207 16:47:41.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:41.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:41.468" endtime="20231207 16:47:41.468"/>
</kw>
<status status="PASS" starttime="20231207 16:47:41.063" endtime="20231207 16:47:41.469"/>
</kw>
<msg timestamp="20231207 16:47:41.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:41.063" endtime="20231207 16:47:41.469"/>
</kw>
<status status="PASS" starttime="20231207 16:47:41.062" endtime="20231207 16:47:41.469"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:41.472" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:41.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:41.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:41.470" endtime="20231207 16:47:41.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:41.882" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:41.881" endtime="20231207 16:47:41.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:41.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:41.882" endtime="20231207 16:47:41.883"/>
</kw>
<status status="PASS" starttime="20231207 16:47:41.470" endtime="20231207 16:47:41.883"/>
</kw>
<msg timestamp="20231207 16:47:41.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:41.470" endtime="20231207 16:47:41.883"/>
</kw>
<status status="PASS" starttime="20231207 16:47:41.469" endtime="20231207 16:47:41.883"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.109" endtime="20231207 16:47:41.883"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.109" endtime="20231207 16:47:41.883"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:47:41.883" endtime="20231207 16:47:41.884"/>
</kw>
<status status="PASS" starttime="20231207 16:47:32.056" endtime="20231207 16:47:41.884"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:41.887" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:42.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:42.522" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:10 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 16:47:41.885" endtime="20231207 16:47:42.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:42.523" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:10 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:47:42 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:47:42.522" endtime="20231207 16:47:42.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:42.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:42.523" endtime="20231207 16:47:42.524"/>
</kw>
<msg timestamp="20231207 16:47:42.524" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:10 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 16:47:41.885" endtime="20231207 16:47:42.524"/>
</kw>
<msg timestamp="20231207 16:47:42.524" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:10 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231207 16:47:41.884" endtime="20231207 16:47:42.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:42.524" endtime="20231207 16:47:42.525"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:42.532" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:42.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:42.534" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:47:42.525" endtime="20231207 16:47:42.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:42.535" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:47:42.535" endtime="20231207 16:47:42.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:42.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:42.535" endtime="20231207 16:47:42.536"/>
</kw>
<msg timestamp="20231207 16:47:42.536" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:47:42.525" endtime="20231207 16:47:42.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:42.536" endtime="20231207 16:47:42.536"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:42.539" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:42.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:42.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:42.537" endtime="20231207 16:47:42.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:42.542" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:42.541" endtime="20231207 16:47:42.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:42.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:42.542" endtime="20231207 16:47:42.542"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.537" endtime="20231207 16:47:42.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:47:32.056" endtime="20231207 16:47:42.543"/>
</test>
<test id="s1-s8-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:42.548" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:42.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:42.551" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:47:42.546" endtime="20231207 16:47:42.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:42.552" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:47:42.551" endtime="20231207 16:47:42.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:42.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:42.552" endtime="20231207 16:47:42.553"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.546" endtime="20231207 16:47:42.553"/>
</kw>
<msg timestamp="20231207 16:47:42.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:42.546" endtime="20231207 16:47:42.553"/>
</kw>
<msg timestamp="20231207 16:47:42.553" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:47:42.545" endtime="20231207 16:47:42.553"/>
</kw>
<msg timestamp="20231207 16:47:42.553" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:42.545" endtime="20231207 16:47:42.553"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:47:42.554" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:42.554" endtime="20231207 16:47:42.554"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:42.562" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:42.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:42.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:42.556" endtime="20231207 16:47:42.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:42.582" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:42.581" endtime="20231207 16:47:42.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:42.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:42.582" endtime="20231207 16:47:42.583"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.555" endtime="20231207 16:47:42.583"/>
</kw>
<msg timestamp="20231207 16:47:42.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:42.555" endtime="20231207 16:47:42.583"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.554" endtime="20231207 16:47:42.583"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.554" endtime="20231207 16:47:42.584"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.545" endtime="20231207 16:47:42.584"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.544" endtime="20231207 16:47:42.584"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:42.587" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:45.107" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:47:45.108" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:47:42.585" endtime="20231207 16:47:45.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:45.109" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:47:45.108" endtime="20231207 16:47:45.109"/>
</kw>
<msg timestamp="20231207 16:47:45.109" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231207 16:47:42.585" endtime="20231207 16:47:45.109"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:45.109" endtime="20231207 16:47:45.110"/>
</kw>
<msg timestamp="20231207 16:47:45.110" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231207 16:47:45.109" endtime="20231207 16:47:45.110"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:45.113" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:47.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:47.859" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:47:45.111" endtime="20231207 16:47:47.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:47.860" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231207 16:47:47.859" endtime="20231207 16:47:47.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:47.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:47.860" endtime="20231207 16:47:47.860"/>
</kw>
<status status="PASS" starttime="20231207 16:47:45.111" endtime="20231207 16:47:47.861"/>
</kw>
<msg timestamp="20231207 16:47:47.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:45.111" endtime="20231207 16:47:47.861"/>
</kw>
<status status="PASS" starttime="20231207 16:47:45.110" endtime="20231207 16:47:47.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:47.865" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:50.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:50.418" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:47:47.862" endtime="20231207 16:47:50.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:50.419" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:47:50.419" endtime="20231207 16:47:50.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:50.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:50.420" endtime="20231207 16:47:50.420"/>
</kw>
<status status="PASS" starttime="20231207 16:47:47.862" endtime="20231207 16:47:50.420"/>
</kw>
<msg timestamp="20231207 16:47:50.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:47.862" endtime="20231207 16:47:50.420"/>
</kw>
<msg timestamp="20231207 16:47:50.421" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231207 16:47:47.861" endtime="20231207 16:47:50.421"/>
</kw>
<status status="PASS" starttime="20231207 16:47:45.110" endtime="20231207 16:47:50.421"/>
</branch>
<status status="PASS" starttime="20231207 16:47:45.110" endtime="20231207 16:47:50.421"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:47:50.421" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:47:50.421" endtime="20231207 16:47:50.421"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:47:50.422" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:47:50.422" endtime="20231207 16:47:50.422"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:47:50.422" level="INFO">${secret} = ['16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c']</msg>
<status status="PASS" starttime="20231207 16:47:50.422" endtime="20231207 16:47:50.422"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:47:50.424" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:50.423" endtime="20231207 16:47:50.424"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:47:50.425" level="INFO">${secret} = 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:47:50.424" endtime="20231207 16:47:50.425"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:50.428" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:50.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:50.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:50.426" endtime="20231207 16:47:50.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:50.856" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:50.856" endtime="20231207 16:47:50.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:50.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:50.856" endtime="20231207 16:47:50.857"/>
</kw>
<status status="PASS" starttime="20231207 16:47:50.426" endtime="20231207 16:47:50.857"/>
</kw>
<msg timestamp="20231207 16:47:50.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:50.425" endtime="20231207 16:47:50.857"/>
</kw>
<status status="PASS" starttime="20231207 16:47:50.425" endtime="20231207 16:47:50.857"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:50.860" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:51.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:51.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:50.859" endtime="20231207 16:47:51.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:51.287" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:51.286" endtime="20231207 16:47:51.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:51.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:51.287" endtime="20231207 16:47:51.287"/>
</kw>
<status status="PASS" starttime="20231207 16:47:50.858" endtime="20231207 16:47:51.288"/>
</kw>
<msg timestamp="20231207 16:47:51.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:50.858" endtime="20231207 16:47:51.288"/>
</kw>
<status status="PASS" starttime="20231207 16:47:50.858" endtime="20231207 16:47:51.288"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:51.291" level="INFO">Running command 'aws configure set aws_secret_access_key 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:51.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:51.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:51.289" endtime="20231207 16:47:51.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:51.717" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:51.716" endtime="20231207 16:47:51.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:51.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:51.717" endtime="20231207 16:47:51.717"/>
</kw>
<status status="PASS" starttime="20231207 16:47:51.289" endtime="20231207 16:47:51.717"/>
</kw>
<msg timestamp="20231207 16:47:51.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:51.289" endtime="20231207 16:47:51.718"/>
</kw>
<status status="PASS" starttime="20231207 16:47:51.288" endtime="20231207 16:47:51.718"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:51.723" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:52.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:52.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:51.721" endtime="20231207 16:47:52.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:52.147" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:52.147" endtime="20231207 16:47:52.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:52.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:52.147" endtime="20231207 16:47:52.148"/>
</kw>
<status status="PASS" starttime="20231207 16:47:51.721" endtime="20231207 16:47:52.148"/>
</kw>
<msg timestamp="20231207 16:47:52.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:51.718" endtime="20231207 16:47:52.148"/>
</kw>
<status status="PASS" starttime="20231207 16:47:51.718" endtime="20231207 16:47:52.148"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:52.152" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:52.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:52.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:52.150" endtime="20231207 16:47:52.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:52.577" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:52.576" endtime="20231207 16:47:52.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:52.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:52.577" endtime="20231207 16:47:52.577"/>
</kw>
<status status="PASS" starttime="20231207 16:47:52.149" endtime="20231207 16:47:52.577"/>
</kw>
<msg timestamp="20231207 16:47:52.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:52.149" endtime="20231207 16:47:52.578"/>
</kw>
<status status="PASS" starttime="20231207 16:47:52.148" endtime="20231207 16:47:52.578"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.584" endtime="20231207 16:47:52.578"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.584" endtime="20231207 16:47:52.578"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:47:52.578" endtime="20231207 16:47:52.578"/>
</kw>
<status status="PASS" starttime="20231207 16:47:42.544" endtime="20231207 16:47:52.578"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:52.581" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:53.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:53.183" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:23 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 16:47:52.580" endtime="20231207 16:47:53.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:53.184" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:23 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:47:53 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:47:53.184" endtime="20231207 16:47:53.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:53.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:53.184" endtime="20231207 16:47:53.185"/>
</kw>
<msg timestamp="20231207 16:47:53.185" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:23 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 16:47:52.579" endtime="20231207 16:47:53.185"/>
</kw>
<msg timestamp="20231207 16:47:53.185" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:23 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231207 16:47:52.579" endtime="20231207 16:47:53.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:53.185" endtime="20231207 16:47:53.186"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:53.188" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:53.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:53.190" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:47:53.186" endtime="20231207 16:47:53.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:53.190" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:47:53.190" endtime="20231207 16:47:53.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:53.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:53.191" endtime="20231207 16:47:53.191"/>
</kw>
<msg timestamp="20231207 16:47:53.191" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:47:53.186" endtime="20231207 16:47:53.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:47:53.192" endtime="20231207 16:47:53.192"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:53.194" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:53.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:53.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:53.193" endtime="20231207 16:47:53.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:53.197" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:53.196" endtime="20231207 16:47:53.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:53.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:53.197" endtime="20231207 16:47:53.197"/>
</kw>
<status status="PASS" starttime="20231207 16:47:53.192" endtime="20231207 16:47:53.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:47:42.543" endtime="20231207 16:47:53.198"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 16:47:26.800" endtime="20231207 16:47:53.199"/>
</suite>
<suite id="s1-s9" name="1.3.0-1.4.0-2-pre-finalized-check-finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s9-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:56.723" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:56.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:56.726" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:47:56.722" endtime="20231207 16:47:56.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:56.727" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:47:56.727" endtime="20231207 16:47:56.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:56.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:56.727" endtime="20231207 16:47:56.728"/>
</kw>
<status status="PASS" starttime="20231207 16:47:56.721" endtime="20231207 16:47:56.728"/>
</kw>
<msg timestamp="20231207 16:47:56.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:56.721" endtime="20231207 16:47:56.728"/>
</kw>
<msg timestamp="20231207 16:47:56.728" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:47:56.720" endtime="20231207 16:47:56.728"/>
</kw>
<msg timestamp="20231207 16:47:56.728" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:56.720" endtime="20231207 16:47:56.728"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:47:56.729" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:56.729" endtime="20231207 16:47:56.729"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:56.732" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:56.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:56.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:56.731" endtime="20231207 16:47:56.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:56.808" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:56.808" endtime="20231207 16:47:56.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:56.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:56.809" endtime="20231207 16:47:56.809"/>
</kw>
<status status="PASS" starttime="20231207 16:47:56.730" endtime="20231207 16:47:56.809"/>
</kw>
<msg timestamp="20231207 16:47:56.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:56.730" endtime="20231207 16:47:56.809"/>
</kw>
<status status="PASS" starttime="20231207 16:47:56.729" endtime="20231207 16:47:56.810"/>
</kw>
<status status="PASS" starttime="20231207 16:47:56.729" endtime="20231207 16:47:56.810"/>
</kw>
<status status="PASS" starttime="20231207 16:47:56.720" endtime="20231207 16:47:56.810"/>
</kw>
<status status="PASS" starttime="20231207 16:47:56.719" endtime="20231207 16:47:56.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:56.813" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:59.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:59.831" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 16:47:56.811" endtime="20231207 16:47:59.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:59.832" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 16:47:59.832" endtime="20231207 16:47:59.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:59.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:59.833" endtime="20231207 16:47:59.833"/>
</kw>
<status status="PASS" starttime="20231207 16:47:56.811" endtime="20231207 16:47:59.834"/>
</kw>
<msg timestamp="20231207 16:47:59.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:56.810" endtime="20231207 16:47:59.834"/>
</kw>
<msg timestamp="20231207 16:47:59.834" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 16:47:56.810" endtime="20231207 16:47:59.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:59.834" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 16:47:59.834" endtime="20231207 16:47:59.834"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 16:47:59.834" endtime="20231207 16:47:59.835"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 16:47:56.718" endtime="20231207 16:47:59.835"/>
</test>
<test id="s1-s9-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:59.840" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:59.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:59.842" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:47:59.838" endtime="20231207 16:47:59.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:59.843" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:47:59.843" endtime="20231207 16:47:59.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:59.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:59.843" endtime="20231207 16:47:59.844"/>
</kw>
<status status="PASS" starttime="20231207 16:47:59.838" endtime="20231207 16:47:59.844"/>
</kw>
<msg timestamp="20231207 16:47:59.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:59.838" endtime="20231207 16:47:59.844"/>
</kw>
<msg timestamp="20231207 16:47:59.844" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:47:59.837" endtime="20231207 16:47:59.844"/>
</kw>
<msg timestamp="20231207 16:47:59.845" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:59.837" endtime="20231207 16:47:59.845"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:47:59.845" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:47:59.845" endtime="20231207 16:47:59.845"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:59.848" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:47:59.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:47:59.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:47:59.847" endtime="20231207 16:47:59.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:47:59.867" level="INFO"/>
<status status="PASS" starttime="20231207 16:47:59.866" endtime="20231207 16:47:59.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:47:59.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:47:59.867" endtime="20231207 16:47:59.868"/>
</kw>
<status status="PASS" starttime="20231207 16:47:59.846" endtime="20231207 16:47:59.868"/>
</kw>
<msg timestamp="20231207 16:47:59.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:59.846" endtime="20231207 16:47:59.868"/>
</kw>
<status status="PASS" starttime="20231207 16:47:59.846" endtime="20231207 16:47:59.868"/>
</kw>
<status status="PASS" starttime="20231207 16:47:59.845" endtime="20231207 16:47:59.868"/>
</kw>
<status status="PASS" starttime="20231207 16:47:59.837" endtime="20231207 16:47:59.868"/>
</kw>
<status status="PASS" starttime="20231207 16:47:59.836" endtime="20231207 16:47:59.868"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:47:59.871" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:04.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:48:04.882" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 16:47:59.870" endtime="20231207 16:48:04.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:04.883" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 16:48:04.883" endtime="20231207 16:48:04.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:04.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:04.884" endtime="20231207 16:48:04.884"/>
</kw>
<status status="PASS" starttime="20231207 16:47:59.869" endtime="20231207 16:48:04.884"/>
</kw>
<msg timestamp="20231207 16:48:04.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:47:59.869" endtime="20231207 16:48:04.884"/>
</kw>
<msg timestamp="20231207 16:48:04.885" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 16:47:59.868" endtime="20231207 16:48:04.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:04.885" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231207 16:48:04.885" endtime="20231207 16:48:04.885"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 16:48:04.885" endtime="20231207 16:48:04.886"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 16:47:59.835" endtime="20231207 16:48:04.886"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 16:47:56.671" endtime="20231207 16:48:04.887"/>
</suite>
<suite id="s1-s10" name="1.3.0-1.4.0-2-pre-finalized-snapshot" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:08.392" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:08.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:48:08.395" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:48:08.390" endtime="20231207 16:48:08.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:08.396" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:48:08.395" endtime="20231207 16:48:08.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:08.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:08.396" endtime="20231207 16:48:08.396"/>
</kw>
<status status="PASS" starttime="20231207 16:48:08.390" endtime="20231207 16:48:08.397"/>
</kw>
<msg timestamp="20231207 16:48:08.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:48:08.389" endtime="20231207 16:48:08.397"/>
</kw>
<msg timestamp="20231207 16:48:08.397" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:48:08.389" endtime="20231207 16:48:08.397"/>
</kw>
<msg timestamp="20231207 16:48:08.397" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:48:08.389" endtime="20231207 16:48:08.397"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:48:08.398" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:48:08.397" endtime="20231207 16:48:08.398"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:08.401" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:08.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:48:08.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:48:08.399" endtime="20231207 16:48:08.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:08.461" level="INFO"/>
<status status="PASS" starttime="20231207 16:48:08.460" endtime="20231207 16:48:08.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:08.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:08.461" endtime="20231207 16:48:08.462"/>
</kw>
<status status="PASS" starttime="20231207 16:48:08.399" endtime="20231207 16:48:08.462"/>
</kw>
<msg timestamp="20231207 16:48:08.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:48:08.399" endtime="20231207 16:48:08.462"/>
</kw>
<status status="PASS" starttime="20231207 16:48:08.398" endtime="20231207 16:48:08.462"/>
</kw>
<status status="PASS" starttime="20231207 16:48:08.398" endtime="20231207 16:48:08.462"/>
</kw>
<status status="PASS" starttime="20231207 16:48:08.388" endtime="20231207 16:48:08.462"/>
</kw>
<status status="PASS" starttime="20231207 16:48:08.388" endtime="20231207 16:48:08.462"/>
</kw>
<test id="s1-s10-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="29">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:08.466" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:11.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:48:11.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:48:08.464" endtime="20231207 16:48:11.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:11.819" level="INFO"/>
<status status="PASS" starttime="20231207 16:48:11.819" endtime="20231207 16:48:11.819"/>
</kw>
<msg timestamp="20231207 16:48:11.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:48:08.464" endtime="20231207 16:48:11.820"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:48:11.820" endtime="20231207 16:48:11.820"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:11.823" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:15.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:48:15.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:48:11.821" endtime="20231207 16:48:15.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:15.183" level="INFO"/>
<status status="PASS" starttime="20231207 16:48:15.182" endtime="20231207 16:48:15.183"/>
</kw>
<msg timestamp="20231207 16:48:15.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:48:11.821" endtime="20231207 16:48:15.183"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:48:15.218" endtime="20231207 16:48:15.219"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:15.235" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:18.504" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:48:18.504" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 16:48:15.222" endtime="20231207 16:48:18.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:18.505" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 16:48:18.504" endtime="20231207 16:48:18.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:18.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:18.505" endtime="20231207 16:48:18.505"/>
</kw>
<msg timestamp="20231207 16:48:18.506" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 16:48:15.219" endtime="20231207 16:48:18.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:48:18.506" endtime="20231207 16:48:18.506"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:48:08.463" endtime="20231207 16:48:18.506"/>
</test>
<test id="s1-s10-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="37">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:18.510" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:21.753" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:48:21.753" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 16:48:18.508" endtime="20231207 16:48:21.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:21.754" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 16:48:21.754" endtime="20231207 16:48:21.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:21.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:21.755" endtime="20231207 16:48:21.755"/>
</kw>
<msg timestamp="20231207 16:48:21.755" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 16:48:18.507" endtime="20231207 16:48:21.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:48:21.755" endtime="20231207 16:48:21.756"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:48:18.507" endtime="20231207 16:48:21.756"/>
</test>
<test id="s1-s10-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="41">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:21.759" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:24.953" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:48:24.953" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 16:48:21.757" endtime="20231207 16:48:24.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:24.954" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 16:48:24.953" endtime="20231207 16:48:24.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:24.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:24.954" endtime="20231207 16:48:24.954"/>
</kw>
<msg timestamp="20231207 16:48:24.955" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231207 16:48:21.757" endtime="20231207 16:48:24.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:48:24.955" endtime="20231207 16:48:24.955"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:48:21.756" endtime="20231207 16:48:24.955"/>
</test>
<test id="s1-s10-t4" name="Attempt to delete when snapshot feature is disabled" line="45">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:24.959" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:28.272" level="INFO">${rc} = 255</msg>
<msg timestamp="20231207 16:48:28.272" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 16:48:24.957" endtime="20231207 16:48:28.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:28.273" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231207 16:48:28.272" endtime="20231207 16:48:28.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:28.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:28.273" endtime="20231207 16:48:28.274"/>
</kw>
<msg timestamp="20231207 16:48:28.274" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231207 16:48:24.957" endtime="20231207 16:48:28.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:48:28.274" endtime="20231207 16:48:28.274"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:48:24.956" endtime="20231207 16:48:28.274"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20231207 16:48:08.339" endtime="20231207 16:48:28.276"/>
</suite>
<suite id="s1-s11" name="1.3.0-1.4.0-2-pre-finalized-prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s11-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:31.797" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:31.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:48:31.799" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:48:31.795" endtime="20231207 16:48:31.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:31.800" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:48:31.800" endtime="20231207 16:48:31.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:31.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:31.800" endtime="20231207 16:48:31.801"/>
</kw>
<status status="PASS" starttime="20231207 16:48:31.795" endtime="20231207 16:48:31.801"/>
</kw>
<msg timestamp="20231207 16:48:31.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:48:31.795" endtime="20231207 16:48:31.801"/>
</kw>
<msg timestamp="20231207 16:48:31.801" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:48:31.794" endtime="20231207 16:48:31.801"/>
</kw>
<msg timestamp="20231207 16:48:31.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:48:31.794" endtime="20231207 16:48:31.802"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:48:31.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:48:31.802" endtime="20231207 16:48:31.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:31.805" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:31.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:48:31.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:48:31.804" endtime="20231207 16:48:31.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:31.819" level="INFO"/>
<status status="PASS" starttime="20231207 16:48:31.819" endtime="20231207 16:48:31.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:31.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:31.820" endtime="20231207 16:48:31.820"/>
</kw>
<status status="PASS" starttime="20231207 16:48:31.803" endtime="20231207 16:48:31.820"/>
</kw>
<msg timestamp="20231207 16:48:31.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:48:31.803" endtime="20231207 16:48:31.820"/>
</kw>
<status status="PASS" starttime="20231207 16:48:31.802" endtime="20231207 16:48:31.820"/>
</kw>
<status status="PASS" starttime="20231207 16:48:31.802" endtime="20231207 16:48:31.820"/>
</kw>
<status status="PASS" starttime="20231207 16:48:31.794" endtime="20231207 16:48:31.821"/>
</kw>
<status status="PASS" starttime="20231207 16:48:31.793" endtime="20231207 16:48:31.821"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 16:48:31.821" endtime="20231207 16:48:31.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:48:31.824" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:48:40.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:48:40.151" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231207 16:48:31.822" endtime="20231207 16:48:40.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:48:40.152" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231207 16:48:40.152" endtime="20231207 16:48:40.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:48:40.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:48:40.153" endtime="20231207 16:48:40.153"/>
</kw>
<status status="PASS" starttime="20231207 16:48:31.822" endtime="20231207 16:48:40.153"/>
</kw>
<msg timestamp="20231207 16:48:40.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:48:31.822" endtime="20231207 16:48:40.153"/>
</kw>
<msg timestamp="20231207 16:48:40.153" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231207 16:48:31.821" endtime="20231207 16:48:40.153"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:48:40.154" endtime="20231207 16:48:40.154"/>
</kw>
<status status="PASS" starttime="20231207 16:48:40.154" endtime="20231207 16:48:40.154"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:48:31.792" endtime="20231207 16:48:40.155"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20231207 16:48:31.749" endtime="20231207 16:48:40.155"/>
</suite>
<suite id="s1-s12" name="1.3.0-1.4.0-3-downgraded-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s12-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:23.268" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:23.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:23.271" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:50:23.266" endtime="20231207 16:50:23.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:23.271" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:50:23.271" endtime="20231207 16:50:23.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:23.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:23.272" endtime="20231207 16:50:23.272"/>
</kw>
<status status="PASS" starttime="20231207 16:50:23.265" endtime="20231207 16:50:23.272"/>
</kw>
<msg timestamp="20231207 16:50:23.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:23.265" endtime="20231207 16:50:23.274"/>
</kw>
<msg timestamp="20231207 16:50:23.274" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:50:23.265" endtime="20231207 16:50:23.274"/>
</kw>
<msg timestamp="20231207 16:50:23.274" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:23.264" endtime="20231207 16:50:23.274"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:50:23.275" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:23.275" endtime="20231207 16:50:23.275"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:23.279" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:23.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:23.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:23.277" endtime="20231207 16:50:23.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:23.318" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:23.317" endtime="20231207 16:50:23.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:23.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:23.318" endtime="20231207 16:50:23.318"/>
</kw>
<status status="PASS" starttime="20231207 16:50:23.277" endtime="20231207 16:50:23.319"/>
</kw>
<msg timestamp="20231207 16:50:23.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:23.276" endtime="20231207 16:50:23.319"/>
</kw>
<status status="PASS" starttime="20231207 16:50:23.276" endtime="20231207 16:50:23.319"/>
</kw>
<status status="PASS" starttime="20231207 16:50:23.275" endtime="20231207 16:50:23.319"/>
</kw>
<status status="PASS" starttime="20231207 16:50:23.264" endtime="20231207 16:50:23.319"/>
</kw>
<status status="PASS" starttime="20231207 16:50:23.263" endtime="20231207 16:50:23.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:23.322" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:23.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:23.324" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 16:50:23.320" endtime="20231207 16:50:23.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:23.324" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 16:50:23.324" endtime="20231207 16:50:23.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:23.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:23.324" endtime="20231207 16:50:23.325"/>
</kw>
<status status="PASS" starttime="20231207 16:50:23.320" endtime="20231207 16:50:23.325"/>
</kw>
<msg timestamp="20231207 16:50:23.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:23.320" endtime="20231207 16:50:23.325"/>
</kw>
<msg timestamp="20231207 16:50:23.326" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231207 16:50:23.320" endtime="20231207 16:50:23.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:23.326" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231207 16:50:23.326" endtime="20231207 16:50:23.326"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 16:50:23.327" endtime="20231207 16:50:23.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:23.331" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:25.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:25.551" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 16:50:23.328" endtime="20231207 16:50:25.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:25.552" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 16:50:25.551" endtime="20231207 16:50:25.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:25.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:25.552" endtime="20231207 16:50:25.552"/>
</kw>
<status status="PASS" starttime="20231207 16:50:23.328" endtime="20231207 16:50:25.553"/>
</kw>
<msg timestamp="20231207 16:50:25.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:23.327" endtime="20231207 16:50:25.553"/>
</kw>
<msg timestamp="20231207 16:50:25.553" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 16:50:23.327" endtime="20231207 16:50:25.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:25.554" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231207 16:50:25.553" endtime="20231207 16:50:25.554"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 16:50:25.554" endtime="20231207 16:50:25.554"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 16:50:23.263" endtime="20231207 16:50:25.554"/>
</test>
<test id="s1-s12-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:25.559" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:25.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:25.561" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:50:25.557" endtime="20231207 16:50:25.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:25.561" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:50:25.561" endtime="20231207 16:50:25.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:25.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:25.561" endtime="20231207 16:50:25.562"/>
</kw>
<status status="PASS" starttime="20231207 16:50:25.557" endtime="20231207 16:50:25.562"/>
</kw>
<msg timestamp="20231207 16:50:25.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:25.557" endtime="20231207 16:50:25.562"/>
</kw>
<msg timestamp="20231207 16:50:25.563" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:50:25.556" endtime="20231207 16:50:25.563"/>
</kw>
<msg timestamp="20231207 16:50:25.563" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:25.556" endtime="20231207 16:50:25.563"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:50:25.563" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:25.563" endtime="20231207 16:50:25.563"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:25.566" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:25.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:25.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:25.565" endtime="20231207 16:50:25.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:25.578" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:25.578" endtime="20231207 16:50:25.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:25.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:25.579" endtime="20231207 16:50:25.579"/>
</kw>
<status status="PASS" starttime="20231207 16:50:25.564" endtime="20231207 16:50:25.579"/>
</kw>
<msg timestamp="20231207 16:50:25.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:25.564" endtime="20231207 16:50:25.580"/>
</kw>
<status status="PASS" starttime="20231207 16:50:25.564" endtime="20231207 16:50:25.580"/>
</kw>
<status status="PASS" starttime="20231207 16:50:25.563" endtime="20231207 16:50:25.580"/>
</kw>
<status status="PASS" starttime="20231207 16:50:25.556" endtime="20231207 16:50:25.580"/>
</kw>
<status status="PASS" starttime="20231207 16:50:25.555" endtime="20231207 16:50:25.580"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 16:50:25.580" endtime="20231207 16:50:25.580"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:25.583" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:27.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:27.820" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 16:50:25.581" endtime="20231207 16:50:27.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:27.820" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 16:50:27.820" endtime="20231207 16:50:27.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:27.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:27.821" endtime="20231207 16:50:27.821"/>
</kw>
<status status="PASS" starttime="20231207 16:50:25.581" endtime="20231207 16:50:27.821"/>
</kw>
<msg timestamp="20231207 16:50:27.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:25.581" endtime="20231207 16:50:27.822"/>
</kw>
<msg timestamp="20231207 16:50:27.822" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 16:50:25.581" endtime="20231207 16:50:27.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:27.822" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231207 16:50:27.822" endtime="20231207 16:50:27.822"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231207 16:50:27.822" endtime="20231207 16:50:27.823"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231207 16:50:25.555" endtime="20231207 16:50:27.823"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231207 16:50:23.207" endtime="20231207 16:50:27.824"/>
</suite>
<suite id="s1-s13" name="1.3.0-1.4.0-3-downgraded-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:30.962" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:30.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:30.964" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:50:30.960" endtime="20231207 16:50:30.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:30.965" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:50:30.965" endtime="20231207 16:50:30.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:30.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:30.965" endtime="20231207 16:50:30.966"/>
</kw>
<status status="PASS" starttime="20231207 16:50:30.959" endtime="20231207 16:50:30.966"/>
</kw>
<msg timestamp="20231207 16:50:30.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:30.959" endtime="20231207 16:50:30.967"/>
</kw>
<msg timestamp="20231207 16:50:30.967" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:50:30.959" endtime="20231207 16:50:30.967"/>
</kw>
<msg timestamp="20231207 16:50:30.967" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:30.959" endtime="20231207 16:50:30.967"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:50:30.968" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:30.967" endtime="20231207 16:50:30.968"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:30.971" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:30.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:30.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:30.970" endtime="20231207 16:50:30.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:30.994" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:30.993" endtime="20231207 16:50:30.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:30.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:30.994" endtime="20231207 16:50:30.994"/>
</kw>
<status status="PASS" starttime="20231207 16:50:30.969" endtime="20231207 16:50:30.995"/>
</kw>
<msg timestamp="20231207 16:50:30.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:30.968" endtime="20231207 16:50:30.995"/>
</kw>
<status status="PASS" starttime="20231207 16:50:30.968" endtime="20231207 16:50:30.995"/>
</kw>
<status status="PASS" starttime="20231207 16:50:30.968" endtime="20231207 16:50:30.995"/>
</kw>
<status status="PASS" starttime="20231207 16:50:30.958" endtime="20231207 16:50:30.995"/>
</kw>
<status status="PASS" starttime="20231207 16:50:30.958" endtime="20231207 16:50:30.995"/>
</kw>
<test id="s1-s13-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:50:30.997" level="INFO">${random} = 97873</msg>
<status status="PASS" starttime="20231207 16:50:30.997" endtime="20231207 16:50:30.997"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:31.000" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-97873 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:34.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:34.899" level="INFO">${output} = 2023-12-07 16:50:33,748 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:50:33,820 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:50:30.998" endtime="20231207 16:50:34.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:34.899" level="INFO">2023-12-07 16:50:33,748 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:50:33,820 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:50:33,820 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 16:50:34.899" endtime="20231207 16:50:34.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:34.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:34.900" endtime="20231207 16:50:34.900"/>
</kw>
<status status="PASS" starttime="20231207 16:50:30.998" endtime="20231207 16:50:34.900"/>
</kw>
<msg timestamp="20231207 16:50:34.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:30.998" endtime="20231207 16:50:34.901"/>
</kw>
<msg timestamp="20231207 16:50:34.901" level="INFO">${output} = 2023-12-07 16:50:33,748 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:50:33,820 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:50:30.997" endtime="20231207 16:50:34.901"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:34.901" endtime="20231207 16:50:34.901"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:34.903" level="INFO">Running command 'cat /tmp/key-97873 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:34.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:34.905" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:34.902" endtime="20231207 16:50:34.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:34.905" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:34.905" endtime="20231207 16:50:34.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:34.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:34.906" endtime="20231207 16:50:34.906"/>
</kw>
<msg timestamp="20231207 16:50:34.906" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:34.901" endtime="20231207 16:50:34.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:34.906" endtime="20231207 16:50:34.907"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:34.908" level="INFO">Running command 'rm /tmp/key-97873 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:34.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:34.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:34.907" endtime="20231207 16:50:34.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:34.910" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:34.910" endtime="20231207 16:50:34.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:34.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:34.911" endtime="20231207 16:50:34.911"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.907" endtime="20231207 16:50:34.911"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:50:30.996" endtime="20231207 16:50:34.911"/>
</test>
<test id="s1-s13-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:34.916" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:34.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:34.918" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:50:34.915" endtime="20231207 16:50:34.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:34.918" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:50:34.918" endtime="20231207 16:50:34.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:34.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:34.919" endtime="20231207 16:50:34.919"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.914" endtime="20231207 16:50:34.919"/>
</kw>
<msg timestamp="20231207 16:50:34.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:34.914" endtime="20231207 16:50:34.920"/>
</kw>
<msg timestamp="20231207 16:50:34.920" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:50:34.914" endtime="20231207 16:50:34.920"/>
</kw>
<msg timestamp="20231207 16:50:34.920" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:34.913" endtime="20231207 16:50:34.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:50:34.920" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:34.920" endtime="20231207 16:50:34.920"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:34.923" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:34.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:34.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:34.922" endtime="20231207 16:50:34.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:34.937" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:34.937" endtime="20231207 16:50:34.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:34.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:34.938" endtime="20231207 16:50:34.938"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.922" endtime="20231207 16:50:34.938"/>
</kw>
<msg timestamp="20231207 16:50:34.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:34.921" endtime="20231207 16:50:34.939"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.921" endtime="20231207 16:50:34.939"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.921" endtime="20231207 16:50:34.939"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.913" endtime="20231207 16:50:34.939"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.913" endtime="20231207 16:50:34.939"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:34.941" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:36.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:36.964" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:34.940" endtime="20231207 16:50:36.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:36.965" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:36.964" endtime="20231207 16:50:36.965"/>
</kw>
<msg timestamp="20231207 16:50:36.965" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:34.940" endtime="20231207 16:50:36.966"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:50:36.967" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:50:36.966" endtime="20231207 16:50:36.967"/>
</kw>
<msg timestamp="20231207 16:50:36.967" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:50:36.966" endtime="20231207 16:50:36.967"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:50:36.967" endtime="20231207 16:50:36.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:50:36.967" endtime="20231207 16:50:36.967"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:50:36.967" endtime="20231207 16:50:36.968"/>
</branch>
<status status="PASS" starttime="20231207 16:50:36.967" endtime="20231207 16:50:36.968"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:50:36.969" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:50:36.968" endtime="20231207 16:50:36.969"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:50:36.970" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:50:36.969" endtime="20231207 16:50:36.970"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:50:36.970" level="INFO">${secret} = ['16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c']</msg>
<status status="PASS" starttime="20231207 16:50:36.970" endtime="20231207 16:50:36.970"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:50:36.976" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:36.971" endtime="20231207 16:50:36.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:50:36.978" level="INFO">${secret} = 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:36.977" endtime="20231207 16:50:36.978"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:36.985" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:37.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:37.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:36.980" endtime="20231207 16:50:37.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:37.404" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:37.403" endtime="20231207 16:50:37.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:37.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:37.404" endtime="20231207 16:50:37.404"/>
</kw>
<status status="PASS" starttime="20231207 16:50:36.979" endtime="20231207 16:50:37.405"/>
</kw>
<msg timestamp="20231207 16:50:37.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:36.979" endtime="20231207 16:50:37.405"/>
</kw>
<status status="PASS" starttime="20231207 16:50:36.978" endtime="20231207 16:50:37.405"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:37.408" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:37.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:37.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:37.406" endtime="20231207 16:50:37.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:37.778" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:37.778" endtime="20231207 16:50:37.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:37.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:37.778" endtime="20231207 16:50:37.779"/>
</kw>
<status status="PASS" starttime="20231207 16:50:37.406" endtime="20231207 16:50:37.779"/>
</kw>
<msg timestamp="20231207 16:50:37.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:37.406" endtime="20231207 16:50:37.779"/>
</kw>
<status status="PASS" starttime="20231207 16:50:37.405" endtime="20231207 16:50:37.780"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:37.782" level="INFO">Running command 'aws configure set aws_secret_access_key 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:38.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:38.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:37.781" endtime="20231207 16:50:38.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:38.159" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:38.159" endtime="20231207 16:50:38.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:38.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:38.159" endtime="20231207 16:50:38.160"/>
</kw>
<status status="PASS" starttime="20231207 16:50:37.780" endtime="20231207 16:50:38.160"/>
</kw>
<msg timestamp="20231207 16:50:38.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:37.780" endtime="20231207 16:50:38.161"/>
</kw>
<status status="PASS" starttime="20231207 16:50:37.780" endtime="20231207 16:50:38.161"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:38.163" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:38.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:38.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:38.162" endtime="20231207 16:50:38.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:38.527" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:38.526" endtime="20231207 16:50:38.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:38.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:38.527" endtime="20231207 16:50:38.528"/>
</kw>
<status status="PASS" starttime="20231207 16:50:38.161" endtime="20231207 16:50:38.528"/>
</kw>
<msg timestamp="20231207 16:50:38.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:38.161" endtime="20231207 16:50:38.528"/>
</kw>
<status status="PASS" starttime="20231207 16:50:38.161" endtime="20231207 16:50:38.529"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:38.531" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:38.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:38.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:38.530" endtime="20231207 16:50:38.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:38.902" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:38.902" endtime="20231207 16:50:38.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:38.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:38.902" endtime="20231207 16:50:38.903"/>
</kw>
<status status="PASS" starttime="20231207 16:50:38.529" endtime="20231207 16:50:38.903"/>
</kw>
<msg timestamp="20231207 16:50:38.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:38.529" endtime="20231207 16:50:38.903"/>
</kw>
<status status="PASS" starttime="20231207 16:50:38.529" endtime="20231207 16:50:38.904"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.939" endtime="20231207 16:50:38.904"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.939" endtime="20231207 16:50:38.904"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:50:38.904" endtime="20231207 16:50:38.904"/>
</kw>
<status status="PASS" starttime="20231207 16:50:34.912" endtime="20231207 16:50:38.904"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:38.906" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:41.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:41.197" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:46:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:50:38.905" endtime="20231207 16:50:41.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:41.198" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:46:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:50:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:50:41.197" endtime="20231207 16:50:41.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:41.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:41.198" endtime="20231207 16:50:41.198"/>
</kw>
<msg timestamp="20231207 16:50:41.199" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:46:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:50:38.905" endtime="20231207 16:50:41.199"/>
</kw>
<msg timestamp="20231207 16:50:41.199" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:46:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:50:38.904" endtime="20231207 16:50:41.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:41.199" endtime="20231207 16:50:41.199"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:41.201" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:41.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:41.203" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:41.200" endtime="20231207 16:50:41.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:41.204" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:41.203" endtime="20231207 16:50:41.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:41.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:41.204" endtime="20231207 16:50:41.204"/>
</kw>
<msg timestamp="20231207 16:50:41.204" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:41.199" endtime="20231207 16:50:41.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:41.205" endtime="20231207 16:50:41.205"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:41.206" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:41.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:41.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:41.205" endtime="20231207 16:50:41.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:41.209" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:41.208" endtime="20231207 16:50:41.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:41.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:41.209" endtime="20231207 16:50:41.209"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.205" endtime="20231207 16:50:41.209"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:50:34.912" endtime="20231207 16:50:41.210"/>
</test>
<test id="s1-s13-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:41.214" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:41.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:41.216" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:50:41.213" endtime="20231207 16:50:41.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:41.217" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:50:41.216" endtime="20231207 16:50:41.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:41.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:41.217" endtime="20231207 16:50:41.217"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.212" endtime="20231207 16:50:41.217"/>
</kw>
<msg timestamp="20231207 16:50:41.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:41.212" endtime="20231207 16:50:41.218"/>
</kw>
<msg timestamp="20231207 16:50:41.218" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:50:41.212" endtime="20231207 16:50:41.218"/>
</kw>
<msg timestamp="20231207 16:50:41.218" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:41.212" endtime="20231207 16:50:41.218"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:50:41.219" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:41.219" endtime="20231207 16:50:41.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:41.221" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:41.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:41.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:41.220" endtime="20231207 16:50:41.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:41.258" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:41.258" endtime="20231207 16:50:41.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:41.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:41.259" endtime="20231207 16:50:41.259"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.220" endtime="20231207 16:50:41.259"/>
</kw>
<msg timestamp="20231207 16:50:41.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:41.220" endtime="20231207 16:50:41.260"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.219" endtime="20231207 16:50:41.260"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.219" endtime="20231207 16:50:41.260"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.211" endtime="20231207 16:50:41.260"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.211" endtime="20231207 16:50:41.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:41.263" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:43.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:43.120" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:41.261" endtime="20231207 16:50:43.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:43.121" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:43.121" endtime="20231207 16:50:43.121"/>
</kw>
<msg timestamp="20231207 16:50:43.122" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:41.261" endtime="20231207 16:50:43.122"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:50:43.123" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:50:43.122" endtime="20231207 16:50:43.123"/>
</kw>
<msg timestamp="20231207 16:50:43.123" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:50:43.122" endtime="20231207 16:50:43.123"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:50:43.123" endtime="20231207 16:50:43.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:50:43.123" endtime="20231207 16:50:43.123"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:50:43.123" endtime="20231207 16:50:43.123"/>
</branch>
<status status="PASS" starttime="20231207 16:50:43.123" endtime="20231207 16:50:43.124"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:50:43.124" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:50:43.124" endtime="20231207 16:50:43.124"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:50:43.124" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:50:43.124" endtime="20231207 16:50:43.124"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:50:43.125" level="INFO">${secret} = ['16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c']</msg>
<status status="PASS" starttime="20231207 16:50:43.125" endtime="20231207 16:50:43.125"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:50:43.126" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:43.125" endtime="20231207 16:50:43.126"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:50:43.127" level="INFO">${secret} = 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:43.126" endtime="20231207 16:50:43.127"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:43.129" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:43.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:43.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:43.128" endtime="20231207 16:50:43.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:43.511" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:43.510" endtime="20231207 16:50:43.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:43.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:43.511" endtime="20231207 16:50:43.511"/>
</kw>
<status status="PASS" starttime="20231207 16:50:43.127" endtime="20231207 16:50:43.512"/>
</kw>
<msg timestamp="20231207 16:50:43.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:43.127" endtime="20231207 16:50:43.512"/>
</kw>
<status status="PASS" starttime="20231207 16:50:43.127" endtime="20231207 16:50:43.512"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:43.515" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:43.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:43.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:43.513" endtime="20231207 16:50:43.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:43.892" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:43.892" endtime="20231207 16:50:43.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:43.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:43.892" endtime="20231207 16:50:43.893"/>
</kw>
<status status="PASS" starttime="20231207 16:50:43.513" endtime="20231207 16:50:43.893"/>
</kw>
<msg timestamp="20231207 16:50:43.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:43.513" endtime="20231207 16:50:43.893"/>
</kw>
<status status="PASS" starttime="20231207 16:50:43.512" endtime="20231207 16:50:43.894"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:43.896" level="INFO">Running command 'aws configure set aws_secret_access_key 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:44.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:44.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:43.895" endtime="20231207 16:50:44.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:44.272" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:44.271" endtime="20231207 16:50:44.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:44.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:44.272" endtime="20231207 16:50:44.272"/>
</kw>
<status status="PASS" starttime="20231207 16:50:43.894" endtime="20231207 16:50:44.273"/>
</kw>
<msg timestamp="20231207 16:50:44.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:43.894" endtime="20231207 16:50:44.273"/>
</kw>
<status status="PASS" starttime="20231207 16:50:43.894" endtime="20231207 16:50:44.273"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:44.276" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:44.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:44.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:44.274" endtime="20231207 16:50:44.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:44.630" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:44.629" endtime="20231207 16:50:44.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:44.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:44.630" endtime="20231207 16:50:44.630"/>
</kw>
<status status="PASS" starttime="20231207 16:50:44.274" endtime="20231207 16:50:44.630"/>
</kw>
<msg timestamp="20231207 16:50:44.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:44.274" endtime="20231207 16:50:44.631"/>
</kw>
<status status="PASS" starttime="20231207 16:50:44.273" endtime="20231207 16:50:44.631"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:44.633" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:44.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:44.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:44.632" endtime="20231207 16:50:44.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:44.995" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:44.994" endtime="20231207 16:50:44.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:44.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:44.995" endtime="20231207 16:50:44.995"/>
</kw>
<status status="PASS" starttime="20231207 16:50:44.632" endtime="20231207 16:50:44.996"/>
</kw>
<msg timestamp="20231207 16:50:44.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:44.632" endtime="20231207 16:50:44.996"/>
</kw>
<status status="PASS" starttime="20231207 16:50:44.631" endtime="20231207 16:50:44.996"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.261" endtime="20231207 16:50:44.996"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.260" endtime="20231207 16:50:44.996"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:50:44.997" endtime="20231207 16:50:44.997"/>
</kw>
<status status="PASS" starttime="20231207 16:50:41.211" endtime="20231207 16:50:44.997"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:45.000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:45.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:45.470" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:46:45 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:50:44.998" endtime="20231207 16:50:45.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:45.471" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:46:45 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:50:45 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:50:45.470" endtime="20231207 16:50:45.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:45.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:45.471" endtime="20231207 16:50:45.472"/>
</kw>
<msg timestamp="20231207 16:50:45.472" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:46:45 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:50:44.998" endtime="20231207 16:50:45.472"/>
</kw>
<msg timestamp="20231207 16:50:45.472" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:46:45 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:50:44.997" endtime="20231207 16:50:45.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:45.472" endtime="20231207 16:50:45.473"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:45.474" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:45.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:45.476" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:50:45.473" endtime="20231207 16:50:45.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:45.477" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:50:45.476" endtime="20231207 16:50:45.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:45.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:45.477" endtime="20231207 16:50:45.477"/>
</kw>
<msg timestamp="20231207 16:50:45.477" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:50:45.473" endtime="20231207 16:50:45.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:45.478" endtime="20231207 16:50:45.478"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:45.479" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:45.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:45.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:45.478" endtime="20231207 16:50:45.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:45.482" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:45.481" endtime="20231207 16:50:45.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:45.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:45.482" endtime="20231207 16:50:45.482"/>
</kw>
<status status="PASS" starttime="20231207 16:50:45.478" endtime="20231207 16:50:45.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:50:41.210" endtime="20231207 16:50:45.483"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 16:50:30.894" endtime="20231207 16:50:45.483"/>
</suite>
<suite id="s1-s14" name="1.3.0-1.4.0-3-downgraded-validate-new1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:48.521" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:48.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:48.523" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:50:48.517" endtime="20231207 16:50:48.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:48.524" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:50:48.523" endtime="20231207 16:50:48.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:48.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:48.524" endtime="20231207 16:50:48.524"/>
</kw>
<status status="PASS" starttime="20231207 16:50:48.516" endtime="20231207 16:50:48.525"/>
</kw>
<msg timestamp="20231207 16:50:48.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:48.516" endtime="20231207 16:50:48.526"/>
</kw>
<msg timestamp="20231207 16:50:48.526" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:50:48.515" endtime="20231207 16:50:48.526"/>
</kw>
<msg timestamp="20231207 16:50:48.526" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:48.515" endtime="20231207 16:50:48.526"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:50:48.527" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:48.526" endtime="20231207 16:50:48.527"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:48.529" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:48.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:48.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:48.528" endtime="20231207 16:50:48.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:48.551" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:48.551" endtime="20231207 16:50:48.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:48.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:48.552" endtime="20231207 16:50:48.552"/>
</kw>
<status status="PASS" starttime="20231207 16:50:48.528" endtime="20231207 16:50:48.552"/>
</kw>
<msg timestamp="20231207 16:50:48.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:48.527" endtime="20231207 16:50:48.552"/>
</kw>
<status status="PASS" starttime="20231207 16:50:48.527" endtime="20231207 16:50:48.553"/>
</kw>
<status status="PASS" starttime="20231207 16:50:48.527" endtime="20231207 16:50:48.553"/>
</kw>
<status status="PASS" starttime="20231207 16:50:48.514" endtime="20231207 16:50:48.553"/>
</kw>
<status status="PASS" starttime="20231207 16:50:48.514" endtime="20231207 16:50:48.553"/>
</kw>
<test id="s1-s14-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:50:48.555" level="INFO">${random} = 36880</msg>
<status status="PASS" starttime="20231207 16:50:48.554" endtime="20231207 16:50:48.555"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:48.558" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-36880 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:52.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:52.292" level="INFO">${output} = 2023-12-07 16:50:51,117 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:50:51,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:50:48.556" endtime="20231207 16:50:52.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:52.293" level="INFO">2023-12-07 16:50:51,117 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:50:51,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:50:51,188 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 16:50:52.292" endtime="20231207 16:50:52.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:52.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:52.293" endtime="20231207 16:50:52.293"/>
</kw>
<status status="PASS" starttime="20231207 16:50:48.556" endtime="20231207 16:50:52.294"/>
</kw>
<msg timestamp="20231207 16:50:52.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:48.555" endtime="20231207 16:50:52.294"/>
</kw>
<msg timestamp="20231207 16:50:52.294" level="INFO">${output} = 2023-12-07 16:50:51,117 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:50:51,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:50:48.555" endtime="20231207 16:50:52.294"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:52.295" endtime="20231207 16:50:52.295"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:52.297" level="INFO">Running command 'cat /tmp/key-36880 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:52.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:52.299" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:52.295" endtime="20231207 16:50:52.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:52.299" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:52.299" endtime="20231207 16:50:52.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:52.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:52.300" endtime="20231207 16:50:52.300"/>
</kw>
<msg timestamp="20231207 16:50:52.300" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:52.295" endtime="20231207 16:50:52.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:52.300" endtime="20231207 16:50:52.301"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:52.302" level="INFO">Running command 'rm /tmp/key-36880 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:52.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:52.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:52.301" endtime="20231207 16:50:52.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:52.305" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:52.304" endtime="20231207 16:50:52.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:52.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:52.305" endtime="20231207 16:50:52.306"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.301" endtime="20231207 16:50:52.306"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:50:48.553" endtime="20231207 16:50:52.306"/>
</test>
<test id="s1-s14-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:52.312" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:52.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:52.315" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:50:52.310" endtime="20231207 16:50:52.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:52.315" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:50:52.315" endtime="20231207 16:50:52.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:52.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:52.315" endtime="20231207 16:50:52.316"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.309" endtime="20231207 16:50:52.316"/>
</kw>
<msg timestamp="20231207 16:50:52.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:52.309" endtime="20231207 16:50:52.316"/>
</kw>
<msg timestamp="20231207 16:50:52.317" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:50:52.309" endtime="20231207 16:50:52.317"/>
</kw>
<msg timestamp="20231207 16:50:52.317" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:52.308" endtime="20231207 16:50:52.317"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:50:52.317" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:52.317" endtime="20231207 16:50:52.317"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:52.320" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:52.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:52.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:52.319" endtime="20231207 16:50:52.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:52.333" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:52.332" endtime="20231207 16:50:52.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:52.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:52.333" endtime="20231207 16:50:52.333"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.319" endtime="20231207 16:50:52.333"/>
</kw>
<msg timestamp="20231207 16:50:52.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:52.318" endtime="20231207 16:50:52.334"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.318" endtime="20231207 16:50:52.334"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.318" endtime="20231207 16:50:52.334"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.308" endtime="20231207 16:50:52.334"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.307" endtime="20231207 16:50:52.334"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:52.337" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:54.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:54.188" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:52.335" endtime="20231207 16:50:54.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:54.189" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:54.189" endtime="20231207 16:50:54.189"/>
</kw>
<msg timestamp="20231207 16:50:54.190" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:52.335" endtime="20231207 16:50:54.190"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:50:54.191" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:50:54.190" endtime="20231207 16:50:54.191"/>
</kw>
<msg timestamp="20231207 16:50:54.191" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:50:54.190" endtime="20231207 16:50:54.191"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:50:54.191" endtime="20231207 16:50:54.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:50:54.191" endtime="20231207 16:50:54.191"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:50:54.191" endtime="20231207 16:50:54.191"/>
</branch>
<status status="PASS" starttime="20231207 16:50:54.191" endtime="20231207 16:50:54.192"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:50:54.193" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:50:54.192" endtime="20231207 16:50:54.193"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:50:54.193" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:50:54.193" endtime="20231207 16:50:54.193"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:50:54.194" level="INFO">${secret} = ['16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c']</msg>
<status status="PASS" starttime="20231207 16:50:54.193" endtime="20231207 16:50:54.194"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:50:54.195" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:54.194" endtime="20231207 16:50:54.195"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:50:54.196" level="INFO">${secret} = 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:54.195" endtime="20231207 16:50:54.196"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:54.199" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:54.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:54.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:54.197" endtime="20231207 16:50:54.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:54.575" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:54.575" endtime="20231207 16:50:54.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:54.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:54.575" endtime="20231207 16:50:54.576"/>
</kw>
<status status="PASS" starttime="20231207 16:50:54.196" endtime="20231207 16:50:54.576"/>
</kw>
<msg timestamp="20231207 16:50:54.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:54.196" endtime="20231207 16:50:54.577"/>
</kw>
<status status="PASS" starttime="20231207 16:50:54.196" endtime="20231207 16:50:54.577"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:54.581" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:54.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:54.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:54.579" endtime="20231207 16:50:54.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:54.951" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:54.951" endtime="20231207 16:50:54.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:54.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:54.951" endtime="20231207 16:50:54.952"/>
</kw>
<status status="PASS" starttime="20231207 16:50:54.578" endtime="20231207 16:50:54.952"/>
</kw>
<msg timestamp="20231207 16:50:54.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:54.577" endtime="20231207 16:50:54.952"/>
</kw>
<status status="PASS" starttime="20231207 16:50:54.577" endtime="20231207 16:50:54.953"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:54.955" level="INFO">Running command 'aws configure set aws_secret_access_key 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:55.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:55.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:54.954" endtime="20231207 16:50:55.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:55.321" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:55.321" endtime="20231207 16:50:55.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:55.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:55.321" endtime="20231207 16:50:55.322"/>
</kw>
<status status="PASS" starttime="20231207 16:50:54.953" endtime="20231207 16:50:55.322"/>
</kw>
<msg timestamp="20231207 16:50:55.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:54.953" endtime="20231207 16:50:55.322"/>
</kw>
<status status="PASS" starttime="20231207 16:50:54.953" endtime="20231207 16:50:55.323"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:55.325" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:55.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:55.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:55.324" endtime="20231207 16:50:55.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:55.686" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:55.685" endtime="20231207 16:50:55.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:55.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:55.686" endtime="20231207 16:50:55.687"/>
</kw>
<status status="PASS" starttime="20231207 16:50:55.323" endtime="20231207 16:50:55.687"/>
</kw>
<msg timestamp="20231207 16:50:55.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:55.323" endtime="20231207 16:50:55.687"/>
</kw>
<status status="PASS" starttime="20231207 16:50:55.323" endtime="20231207 16:50:55.687"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:55.690" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:56.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:56.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:55.689" endtime="20231207 16:50:56.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:56.073" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:56.073" endtime="20231207 16:50:56.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:56.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:56.073" endtime="20231207 16:50:56.074"/>
</kw>
<status status="PASS" starttime="20231207 16:50:55.688" endtime="20231207 16:50:56.074"/>
</kw>
<msg timestamp="20231207 16:50:56.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:55.688" endtime="20231207 16:50:56.074"/>
</kw>
<status status="PASS" starttime="20231207 16:50:55.688" endtime="20231207 16:50:56.074"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.335" endtime="20231207 16:50:56.075"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.334" endtime="20231207 16:50:56.075"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:50:56.075" endtime="20231207 16:50:56.075"/>
</kw>
<status status="PASS" starttime="20231207 16:50:52.307" endtime="20231207 16:50:56.075"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:56.078" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:56.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:56.595" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:10 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:50:56.076" endtime="20231207 16:50:56.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:56.596" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:10 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:50:56 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:50:56.596" endtime="20231207 16:50:56.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:56.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:56.596" endtime="20231207 16:50:56.597"/>
</kw>
<msg timestamp="20231207 16:50:56.597" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:10 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:50:56.076" endtime="20231207 16:50:56.597"/>
</kw>
<msg timestamp="20231207 16:50:56.597" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:10 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:50:56.075" endtime="20231207 16:50:56.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:56.598" endtime="20231207 16:50:56.598"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:56.600" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:56.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:56.601" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:56.598" endtime="20231207 16:50:56.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:56.602" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:56.602" endtime="20231207 16:50:56.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:56.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:56.602" endtime="20231207 16:50:56.603"/>
</kw>
<msg timestamp="20231207 16:50:56.603" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:50:56.598" endtime="20231207 16:50:56.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:50:56.603" endtime="20231207 16:50:56.603"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:56.605" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:56.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:56.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:56.604" endtime="20231207 16:50:56.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:56.607" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:56.607" endtime="20231207 16:50:56.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:56.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:56.607" endtime="20231207 16:50:56.608"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.603" endtime="20231207 16:50:56.608"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:50:52.307" endtime="20231207 16:50:56.608"/>
</test>
<test id="s1-s14-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:56.613" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:56.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:56.615" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:50:56.612" endtime="20231207 16:50:56.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:56.616" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:50:56.615" endtime="20231207 16:50:56.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:56.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:56.616" endtime="20231207 16:50:56.616"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.611" endtime="20231207 16:50:56.616"/>
</kw>
<msg timestamp="20231207 16:50:56.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:56.611" endtime="20231207 16:50:56.617"/>
</kw>
<msg timestamp="20231207 16:50:56.617" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:50:56.611" endtime="20231207 16:50:56.617"/>
</kw>
<msg timestamp="20231207 16:50:56.617" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:56.610" endtime="20231207 16:50:56.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:50:56.618" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:56.618" endtime="20231207 16:50:56.618"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:56.620" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:56.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:56.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:56.619" endtime="20231207 16:50:56.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:56.636" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:56.635" endtime="20231207 16:50:56.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:56.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:56.636" endtime="20231207 16:50:56.636"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.619" endtime="20231207 16:50:56.637"/>
</kw>
<msg timestamp="20231207 16:50:56.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:56.619" endtime="20231207 16:50:56.637"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.618" endtime="20231207 16:50:56.637"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.618" endtime="20231207 16:50:56.637"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.610" endtime="20231207 16:50:56.638"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.610" endtime="20231207 16:50:56.638"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:56.640" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:58.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:58.507" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:56.639" endtime="20231207 16:50:58.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:58.508" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:58.508" endtime="20231207 16:50:58.508"/>
</kw>
<msg timestamp="20231207 16:50:58.509" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:56.638" endtime="20231207 16:50:58.509"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:50:58.510" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:50:58.509" endtime="20231207 16:50:58.510"/>
</kw>
<msg timestamp="20231207 16:50:58.510" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:50:58.509" endtime="20231207 16:50:58.510"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:50:58.510" endtime="20231207 16:50:58.510"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:50:58.510" endtime="20231207 16:50:58.510"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:50:58.510" endtime="20231207 16:50:58.510"/>
</branch>
<status status="PASS" starttime="20231207 16:50:58.510" endtime="20231207 16:50:58.510"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:50:58.511" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:50:58.510" endtime="20231207 16:50:58.511"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:50:58.511" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:50:58.511" endtime="20231207 16:50:58.511"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:50:58.512" level="INFO">${secret} = ['16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c']</msg>
<status status="PASS" starttime="20231207 16:50:58.511" endtime="20231207 16:50:58.512"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:50:58.513" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:50:58.512" endtime="20231207 16:50:58.513"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:50:58.513" level="INFO">${secret} = 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:50:58.513" endtime="20231207 16:50:58.513"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:58.516" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:58.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:58.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:58.515" endtime="20231207 16:50:58.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:58.902" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:58.901" endtime="20231207 16:50:58.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:58.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:58.902" endtime="20231207 16:50:58.903"/>
</kw>
<status status="PASS" starttime="20231207 16:50:58.514" endtime="20231207 16:50:58.903"/>
</kw>
<msg timestamp="20231207 16:50:58.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:58.514" endtime="20231207 16:50:58.903"/>
</kw>
<status status="PASS" starttime="20231207 16:50:58.514" endtime="20231207 16:50:58.903"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:58.906" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:59.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:59.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:58.904" endtime="20231207 16:50:59.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:59.293" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:59.292" endtime="20231207 16:50:59.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:59.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:59.293" endtime="20231207 16:50:59.293"/>
</kw>
<status status="PASS" starttime="20231207 16:50:58.904" endtime="20231207 16:50:59.293"/>
</kw>
<msg timestamp="20231207 16:50:59.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:58.904" endtime="20231207 16:50:59.294"/>
</kw>
<status status="PASS" starttime="20231207 16:50:58.903" endtime="20231207 16:50:59.294"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:59.297" level="INFO">Running command 'aws configure set aws_secret_access_key 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:50:59.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:50:59.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:59.295" endtime="20231207 16:50:59.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:50:59.694" level="INFO"/>
<status status="PASS" starttime="20231207 16:50:59.693" endtime="20231207 16:50:59.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:50:59.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:50:59.694" endtime="20231207 16:50:59.695"/>
</kw>
<status status="PASS" starttime="20231207 16:50:59.295" endtime="20231207 16:50:59.695"/>
</kw>
<msg timestamp="20231207 16:50:59.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:59.295" endtime="20231207 16:50:59.696"/>
</kw>
<status status="PASS" starttime="20231207 16:50:59.294" endtime="20231207 16:50:59.696"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:50:59.700" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:00.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:00.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:50:59.698" endtime="20231207 16:51:00.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:00.082" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:00.082" endtime="20231207 16:51:00.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:00.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:00.083" endtime="20231207 16:51:00.083"/>
</kw>
<status status="PASS" starttime="20231207 16:50:59.697" endtime="20231207 16:51:00.083"/>
</kw>
<msg timestamp="20231207 16:51:00.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:50:59.697" endtime="20231207 16:51:00.084"/>
</kw>
<status status="PASS" starttime="20231207 16:50:59.696" endtime="20231207 16:51:00.084"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:00.087" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:00.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:00.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:00.085" endtime="20231207 16:51:00.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:00.460" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:00.459" endtime="20231207 16:51:00.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:00.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:00.460" endtime="20231207 16:51:00.460"/>
</kw>
<status status="PASS" starttime="20231207 16:51:00.085" endtime="20231207 16:51:00.460"/>
</kw>
<msg timestamp="20231207 16:51:00.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:00.085" endtime="20231207 16:51:00.461"/>
</kw>
<status status="PASS" starttime="20231207 16:51:00.084" endtime="20231207 16:51:00.461"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.638" endtime="20231207 16:51:00.461"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.638" endtime="20231207 16:51:00.461"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:51:00.462" endtime="20231207 16:51:00.462"/>
</kw>
<status status="PASS" starttime="20231207 16:50:56.609" endtime="20231207 16:51:00.462"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:00.466" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:00.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:00.952" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:23 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:51:00.463" endtime="20231207 16:51:00.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:00.953" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:23 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:51:00 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:51:00.953" endtime="20231207 16:51:00.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:00.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:00.954" endtime="20231207 16:51:00.954"/>
</kw>
<msg timestamp="20231207 16:51:00.954" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:23 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:51:00.463" endtime="20231207 16:51:00.954"/>
</kw>
<msg timestamp="20231207 16:51:00.955" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:47:23 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:51:00.462" endtime="20231207 16:51:00.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:00.955" endtime="20231207 16:51:00.955"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:00.957" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:00.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:00.959" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:51:00.956" endtime="20231207 16:51:00.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:00.960" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:51:00.959" endtime="20231207 16:51:00.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:00.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:00.960" endtime="20231207 16:51:00.960"/>
</kw>
<msg timestamp="20231207 16:51:00.960" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:51:00.955" endtime="20231207 16:51:00.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:00.960" endtime="20231207 16:51:00.961"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:00.964" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:00.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:00.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:00.961" endtime="20231207 16:51:00.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:00.966" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:00.966" endtime="20231207 16:51:00.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:00.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:00.966" endtime="20231207 16:51:00.967"/>
</kw>
<status status="PASS" starttime="20231207 16:51:00.961" endtime="20231207 16:51:00.967"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:50:56.609" endtime="20231207 16:51:00.967"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 16:50:48.443" endtime="20231207 16:51:00.968"/>
</suite>
<suite id="s1-s15" name="1.3.0-1.4.0-3-downgraded-generate-old2" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:04.143" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:04.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:04.145" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:51:04.141" endtime="20231207 16:51:04.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:04.146" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:51:04.146" endtime="20231207 16:51:04.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:04.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:04.146" endtime="20231207 16:51:04.146"/>
</kw>
<status status="PASS" starttime="20231207 16:51:04.140" endtime="20231207 16:51:04.147"/>
</kw>
<msg timestamp="20231207 16:51:04.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:04.140" endtime="20231207 16:51:04.148"/>
</kw>
<msg timestamp="20231207 16:51:04.148" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:51:04.140" endtime="20231207 16:51:04.148"/>
</kw>
<msg timestamp="20231207 16:51:04.148" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:04.139" endtime="20231207 16:51:04.148"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:51:04.149" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:04.148" endtime="20231207 16:51:04.149"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:04.152" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:04.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:04.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:04.150" endtime="20231207 16:51:04.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:04.165" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:04.165" endtime="20231207 16:51:04.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:04.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:04.166" endtime="20231207 16:51:04.166"/>
</kw>
<status status="PASS" starttime="20231207 16:51:04.150" endtime="20231207 16:51:04.166"/>
</kw>
<msg timestamp="20231207 16:51:04.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:04.149" endtime="20231207 16:51:04.167"/>
</kw>
<status status="PASS" starttime="20231207 16:51:04.149" endtime="20231207 16:51:04.167"/>
</kw>
<status status="PASS" starttime="20231207 16:51:04.149" endtime="20231207 16:51:04.167"/>
</kw>
<status status="PASS" starttime="20231207 16:51:04.139" endtime="20231207 16:51:04.167"/>
</kw>
<status status="PASS" starttime="20231207 16:51:04.139" endtime="20231207 16:51:04.167"/>
</kw>
<test id="s1-s15-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:04.171" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:06.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:06.371" level="INFO">${output} = 2023-12-07 16:51:06,325 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 16:51:04.169" endtime="20231207 16:51:06.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:06.372" level="INFO">2023-12-07 16:51:06,325 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 16:51:06.372" endtime="20231207 16:51:06.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:06.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:06.372" endtime="20231207 16:51:06.373"/>
</kw>
<status status="PASS" starttime="20231207 16:51:04.169" endtime="20231207 16:51:06.373"/>
</kw>
<msg timestamp="20231207 16:51:06.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:04.169" endtime="20231207 16:51:06.374"/>
</kw>
<msg timestamp="20231207 16:51:06.374" level="INFO">${output} = 2023-12-07 16:51:06,325 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231207 16:51:04.168" endtime="20231207 16:51:06.374"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:06.374" endtime="20231207 16:51:06.374"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:06.377" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:08.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:08.686" level="INFO">${output} = 2023-12-07 16:51:08,645 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 16:51:06.375" endtime="20231207 16:51:08.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:08.687" level="INFO">2023-12-07 16:51:08,645 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 16:51:08.687" endtime="20231207 16:51:08.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:08.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:08.688" endtime="20231207 16:51:08.688"/>
</kw>
<status status="PASS" starttime="20231207 16:51:06.375" endtime="20231207 16:51:08.688"/>
</kw>
<msg timestamp="20231207 16:51:08.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:06.375" endtime="20231207 16:51:08.691"/>
</kw>
<msg timestamp="20231207 16:51:08.691" level="INFO">${output} = 2023-12-07 16:51:08,645 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231207 16:51:06.374" endtime="20231207 16:51:08.691"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:08.692" endtime="20231207 16:51:08.692"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:04.168" endtime="20231207 16:51:08.692"/>
</test>
<test id="s1-s15-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:08.696" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:51:08.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:08.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:08.694" endtime="20231207 16:51:08.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:08.698" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:08.697" endtime="20231207 16:51:08.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:08.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:08.698" endtime="20231207 16:51:08.699"/>
</kw>
<status status="PASS" starttime="20231207 16:51:08.693" endtime="20231207 16:51:08.699"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:08.702" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:12.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:12.978" level="INFO">${output} = 2023-12-07 16:51:11,523 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:11,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:08.700" endtime="20231207 16:51:12.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:12.979" level="INFO">2023-12-07 16:51:11,523 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:11,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:51:11,591 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 16:51:11,847 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 16:51:12.979" endtime="20231207 16:51:12.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:12.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:12.979" endtime="20231207 16:51:12.980"/>
</kw>
<status status="PASS" starttime="20231207 16:51:08.700" endtime="20231207 16:51:12.980"/>
</kw>
<msg timestamp="20231207 16:51:12.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:08.699" endtime="20231207 16:51:12.980"/>
</kw>
<msg timestamp="20231207 16:51:12.980" level="INFO">${output} = 2023-12-07 16:51:11,523 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:11,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:08.699" endtime="20231207 16:51:12.980"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:12.981" endtime="20231207 16:51:12.981"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:12.983" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:12.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:12.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:12.981" endtime="20231207 16:51:12.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:12.985" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:12.985" endtime="20231207 16:51:12.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:12.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:12.985" endtime="20231207 16:51:12.986"/>
</kw>
<status status="PASS" starttime="20231207 16:51:12.981" endtime="20231207 16:51:12.986"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:08.693" endtime="20231207 16:51:12.986"/>
</test>
<test id="s1-s15-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:12.991" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:15.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:15.263" level="INFO">${output} = 2023-12-07 16:51:15,224 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 16:51:12.988" endtime="20231207 16:51:15.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:15.264" level="INFO">2023-12-07 16:51:15,224 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231207 16:51:15.263" endtime="20231207 16:51:15.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:15.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:15.264" endtime="20231207 16:51:15.264"/>
</kw>
<status status="PASS" starttime="20231207 16:51:12.988" endtime="20231207 16:51:15.264"/>
</kw>
<msg timestamp="20231207 16:51:15.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:12.988" endtime="20231207 16:51:15.265"/>
</kw>
<msg timestamp="20231207 16:51:15.265" level="INFO">${output} = 2023-12-07 16:51:15,224 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231207 16:51:12.987" endtime="20231207 16:51:15.265"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:15.265" endtime="20231207 16:51:15.266"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:12.987" endtime="20231207 16:51:15.266"/>
</test>
<test id="s1-s15-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:15.269" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:51:15.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:15.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:15.267" endtime="20231207 16:51:15.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:15.270" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:15.270" endtime="20231207 16:51:15.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:15.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:15.271" endtime="20231207 16:51:15.271"/>
</kw>
<status status="PASS" starttime="20231207 16:51:15.267" endtime="20231207 16:51:15.271"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:15.273" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:19.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:19.206" level="INFO">${output} = 2023-12-07 16:51:17,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:17,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:15.272" endtime="20231207 16:51:19.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:19.207" level="INFO">2023-12-07 16:51:17,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:17,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:51:17,924 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 16:51:18,156 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 16:51:19.206" endtime="20231207 16:51:19.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:19.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:19.207" endtime="20231207 16:51:19.207"/>
</kw>
<status status="PASS" starttime="20231207 16:51:15.272" endtime="20231207 16:51:19.208"/>
</kw>
<msg timestamp="20231207 16:51:19.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:15.272" endtime="20231207 16:51:19.208"/>
</kw>
<msg timestamp="20231207 16:51:19.208" level="INFO">${output} = 2023-12-07 16:51:17,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:17,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:15.271" endtime="20231207 16:51:19.208"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:19.209" endtime="20231207 16:51:19.209"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:19.211" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:19.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:19.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:19.209" endtime="20231207 16:51:19.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:19.213" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:19.213" endtime="20231207 16:51:19.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:19.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:19.213" endtime="20231207 16:51:19.214"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.209" endtime="20231207 16:51:19.214"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:15.266" endtime="20231207 16:51:19.214"/>
</test>
<test id="s1-s15-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:19.218" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:19.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:19.220" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:51:19.217" endtime="20231207 16:51:19.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:19.221" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:51:19.221" endtime="20231207 16:51:19.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:19.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:19.221" endtime="20231207 16:51:19.222"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.217" endtime="20231207 16:51:19.222"/>
</kw>
<msg timestamp="20231207 16:51:19.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:19.217" endtime="20231207 16:51:19.222"/>
</kw>
<msg timestamp="20231207 16:51:19.222" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:51:19.216" endtime="20231207 16:51:19.222"/>
</kw>
<msg timestamp="20231207 16:51:19.223" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:19.216" endtime="20231207 16:51:19.223"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:51:19.223" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:19.223" endtime="20231207 16:51:19.223"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:19.226" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:19.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:19.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:19.225" endtime="20231207 16:51:19.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:19.252" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:19.251" endtime="20231207 16:51:19.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:19.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:19.252" endtime="20231207 16:51:19.252"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.224" endtime="20231207 16:51:19.252"/>
</kw>
<msg timestamp="20231207 16:51:19.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:19.224" endtime="20231207 16:51:19.253"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.224" endtime="20231207 16:51:19.253"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.223" endtime="20231207 16:51:19.253"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.216" endtime="20231207 16:51:19.253"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.216" endtime="20231207 16:51:19.253"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:19.256" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:21.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:21.195" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:19.254" endtime="20231207 16:51:21.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:21.196" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:21.196" endtime="20231207 16:51:21.196"/>
</kw>
<msg timestamp="20231207 16:51:21.196" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:19.254" endtime="20231207 16:51:21.196"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:51:21.198" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:51:21.197" endtime="20231207 16:51:21.198"/>
</kw>
<msg timestamp="20231207 16:51:21.198" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:51:21.197" endtime="20231207 16:51:21.198"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:51:21.198" endtime="20231207 16:51:21.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:51:21.198" endtime="20231207 16:51:21.198"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:51:21.198" endtime="20231207 16:51:21.198"/>
</branch>
<status status="PASS" starttime="20231207 16:51:21.198" endtime="20231207 16:51:21.198"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:51:21.199" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:51:21.198" endtime="20231207 16:51:21.199"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:51:21.199" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:51:21.199" endtime="20231207 16:51:21.199"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:51:21.200" level="INFO">${secret} = ['16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c']</msg>
<status status="PASS" starttime="20231207 16:51:21.199" endtime="20231207 16:51:21.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:51:21.201" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:21.200" endtime="20231207 16:51:21.201"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:51:21.202" level="INFO">${secret} = 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:21.201" endtime="20231207 16:51:21.202"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:21.205" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:21.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:21.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:21.203" endtime="20231207 16:51:21.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:21.591" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:21.590" endtime="20231207 16:51:21.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:21.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:21.591" endtime="20231207 16:51:21.592"/>
</kw>
<status status="PASS" starttime="20231207 16:51:21.202" endtime="20231207 16:51:21.592"/>
</kw>
<msg timestamp="20231207 16:51:21.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:21.202" endtime="20231207 16:51:21.592"/>
</kw>
<status status="PASS" starttime="20231207 16:51:21.202" endtime="20231207 16:51:21.592"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:21.596" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:21.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:21.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:21.595" endtime="20231207 16:51:21.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:21.989" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:21.989" endtime="20231207 16:51:21.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:21.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:21.989" endtime="20231207 16:51:21.990"/>
</kw>
<status status="PASS" starttime="20231207 16:51:21.594" endtime="20231207 16:51:21.990"/>
</kw>
<msg timestamp="20231207 16:51:21.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:21.594" endtime="20231207 16:51:21.990"/>
</kw>
<status status="PASS" starttime="20231207 16:51:21.593" endtime="20231207 16:51:21.991"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:21.993" level="INFO">Running command 'aws configure set aws_secret_access_key 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:22.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:22.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:21.992" endtime="20231207 16:51:22.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:22.358" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:22.358" endtime="20231207 16:51:22.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:22.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:22.358" endtime="20231207 16:51:22.359"/>
</kw>
<status status="PASS" starttime="20231207 16:51:21.991" endtime="20231207 16:51:22.359"/>
</kw>
<msg timestamp="20231207 16:51:22.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:21.991" endtime="20231207 16:51:22.360"/>
</kw>
<status status="PASS" starttime="20231207 16:51:21.991" endtime="20231207 16:51:22.360"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:22.363" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:22.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:22.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:22.361" endtime="20231207 16:51:22.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:22.728" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:22.727" endtime="20231207 16:51:22.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:22.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:22.728" endtime="20231207 16:51:22.728"/>
</kw>
<status status="PASS" starttime="20231207 16:51:22.361" endtime="20231207 16:51:22.728"/>
</kw>
<msg timestamp="20231207 16:51:22.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:22.360" endtime="20231207 16:51:22.729"/>
</kw>
<status status="PASS" starttime="20231207 16:51:22.360" endtime="20231207 16:51:22.729"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:22.732" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:23.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:23.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:22.730" endtime="20231207 16:51:23.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:23.101" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:23.101" endtime="20231207 16:51:23.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:23.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:23.102" endtime="20231207 16:51:23.102"/>
</kw>
<status status="PASS" starttime="20231207 16:51:22.730" endtime="20231207 16:51:23.102"/>
</kw>
<msg timestamp="20231207 16:51:23.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:22.730" endtime="20231207 16:51:23.103"/>
</kw>
<status status="PASS" starttime="20231207 16:51:22.729" endtime="20231207 16:51:23.103"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.254" endtime="20231207 16:51:23.103"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.254" endtime="20231207 16:51:23.103"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:51:23.103" endtime="20231207 16:51:23.103"/>
</kw>
<status status="PASS" starttime="20231207 16:51:19.215" endtime="20231207 16:51:23.104"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:51:23.105" level="INFO">${randStr} = 6860428796</msg>
<status status="PASS" starttime="20231207 16:51:23.104" endtime="20231207 16:51:23.105"/>
</kw>
<msg timestamp="20231207 16:51:23.105" level="INFO">${random} = ozone-test-6860428796</msg>
<status status="PASS" starttime="20231207 16:51:23.104" endtime="20231207 16:51:23.105"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:23.108" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket-ozone-test-6860428796 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:23.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:23.620" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-6860428796"
}</msg>
<status status="PASS" starttime="20231207 16:51:23.107" endtime="20231207 16:51:23.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:23.621" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket-ozone-test-6860428796"
}</msg>
<status status="PASS" starttime="20231207 16:51:23.621" endtime="20231207 16:51:23.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:23.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:23.622" endtime="20231207 16:51:23.622"/>
</kw>
<status status="PASS" starttime="20231207 16:51:23.106" endtime="20231207 16:51:23.622"/>
</kw>
<msg timestamp="20231207 16:51:23.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:23.106" endtime="20231207 16:51:23.628"/>
</kw>
<msg timestamp="20231207 16:51:23.629" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-6860428796"
}</msg>
<status status="PASS" starttime="20231207 16:51:23.106" endtime="20231207 16:51:23.629"/>
</kw>
<msg timestamp="20231207 16:51:23.629" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-6860428796"
}</msg>
<status status="PASS" starttime="20231207 16:51:23.105" endtime="20231207 16:51:23.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:23.629" endtime="20231207 16:51:23.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:23.630" endtime="20231207 16:51:23.630"/>
</kw>
<msg timestamp="20231207 16:51:23.630" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 16:51:23.105" endtime="20231207 16:51:23.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 16:51:23.630" endtime="20231207 16:51:23.630"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:19.215" endtime="20231207 16:51:23.631"/>
</test>
<test id="s1-s15-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:23.634" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:51:23.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:23.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:23.632" endtime="20231207 16:51:23.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:23.636" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:23.636" endtime="20231207 16:51:23.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:23.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:23.636" endtime="20231207 16:51:23.637"/>
</kw>
<status status="PASS" starttime="20231207 16:51:23.632" endtime="20231207 16:51:23.637"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:23.639" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:24.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:24.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:23.638" endtime="20231207 16:51:24.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:24.428" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:24.427" endtime="20231207 16:51:24.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:24.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:24.428" endtime="20231207 16:51:24.428"/>
</kw>
<msg timestamp="20231207 16:51:24.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:23.637" endtime="20231207 16:51:24.429"/>
</kw>
<msg timestamp="20231207 16:51:24.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:23.637" endtime="20231207 16:51:24.429"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:24.429" endtime="20231207 16:51:24.429"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:24.431" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:24.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:24.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:24.430" endtime="20231207 16:51:24.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:24.433" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:24.433" endtime="20231207 16:51:24.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:24.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:24.434" endtime="20231207 16:51:24.434"/>
</kw>
<status status="PASS" starttime="20231207 16:51:24.429" endtime="20231207 16:51:24.434"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:23.631" endtime="20231207 16:51:24.434"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 16:51:04.077" endtime="20231207 16:51:24.435"/>
</suite>
<suite id="s1-s16" name="1.3.0-1.4.0-3-downgraded-validate-old2" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:27.541" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:27.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:27.543" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:51:27.538" endtime="20231207 16:51:27.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:27.544" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:51:27.543" endtime="20231207 16:51:27.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:27.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:27.544" endtime="20231207 16:51:27.544"/>
</kw>
<status status="PASS" starttime="20231207 16:51:27.538" endtime="20231207 16:51:27.544"/>
</kw>
<msg timestamp="20231207 16:51:27.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:27.537" endtime="20231207 16:51:27.545"/>
</kw>
<msg timestamp="20231207 16:51:27.546" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:51:27.537" endtime="20231207 16:51:27.546"/>
</kw>
<msg timestamp="20231207 16:51:27.546" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:27.537" endtime="20231207 16:51:27.546"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:51:27.546" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:27.546" endtime="20231207 16:51:27.546"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:27.549" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:27.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:27.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:27.548" endtime="20231207 16:51:27.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:27.567" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:27.567" endtime="20231207 16:51:27.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:27.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:27.567" endtime="20231207 16:51:27.567"/>
</kw>
<status status="PASS" starttime="20231207 16:51:27.547" endtime="20231207 16:51:27.568"/>
</kw>
<msg timestamp="20231207 16:51:27.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:27.547" endtime="20231207 16:51:27.568"/>
</kw>
<status status="PASS" starttime="20231207 16:51:27.547" endtime="20231207 16:51:27.568"/>
</kw>
<status status="PASS" starttime="20231207 16:51:27.546" endtime="20231207 16:51:27.568"/>
</kw>
<status status="PASS" starttime="20231207 16:51:27.537" endtime="20231207 16:51:27.568"/>
</kw>
<status status="PASS" starttime="20231207 16:51:27.536" endtime="20231207 16:51:27.568"/>
</kw>
<test id="s1-s16-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:51:27.570" level="INFO">${random} = 56325</msg>
<status status="PASS" starttime="20231207 16:51:27.570" endtime="20231207 16:51:27.570"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:27.573" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-56325 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:31.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:31.535" level="INFO">${output} = 2023-12-07 16:51:30,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:30,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:27.571" endtime="20231207 16:51:31.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:31.536" level="INFO">2023-12-07 16:51:30,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:30,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:51:30,452 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231207 16:51:31.535" endtime="20231207 16:51:31.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:31.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:31.536" endtime="20231207 16:51:31.537"/>
</kw>
<status status="PASS" starttime="20231207 16:51:27.571" endtime="20231207 16:51:31.537"/>
</kw>
<msg timestamp="20231207 16:51:31.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:27.571" endtime="20231207 16:51:31.537"/>
</kw>
<msg timestamp="20231207 16:51:31.537" level="INFO">${output} = 2023-12-07 16:51:30,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:30,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:27.570" endtime="20231207 16:51:31.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:31.538" endtime="20231207 16:51:31.538"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:31.540" level="INFO">Running command 'cat /tmp/key-56325 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:31.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:31.542" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:51:31.538" endtime="20231207 16:51:31.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:31.542" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:51:31.542" endtime="20231207 16:51:31.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:31.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:31.542" endtime="20231207 16:51:31.543"/>
</kw>
<msg timestamp="20231207 16:51:31.543" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:51:31.538" endtime="20231207 16:51:31.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:31.543" endtime="20231207 16:51:31.543"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:31.545" level="INFO">Running command 'rm /tmp/key-56325 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:31.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:31.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:31.544" endtime="20231207 16:51:31.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:31.548" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:31.547" endtime="20231207 16:51:31.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:31.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:31.548" endtime="20231207 16:51:31.548"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.544" endtime="20231207 16:51:31.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:27.569" endtime="20231207 16:51:31.549"/>
</test>
<test id="s1-s16-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:31.554" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:31.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:31.557" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:51:31.552" endtime="20231207 16:51:31.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:31.558" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:51:31.557" endtime="20231207 16:51:31.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:31.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:31.558" endtime="20231207 16:51:31.558"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.552" endtime="20231207 16:51:31.558"/>
</kw>
<msg timestamp="20231207 16:51:31.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:31.552" endtime="20231207 16:51:31.559"/>
</kw>
<msg timestamp="20231207 16:51:31.559" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:51:31.552" endtime="20231207 16:51:31.559"/>
</kw>
<msg timestamp="20231207 16:51:31.559" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:31.551" endtime="20231207 16:51:31.559"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:51:31.560" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:31.559" endtime="20231207 16:51:31.560"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:31.562" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:31.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:31.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:31.561" endtime="20231207 16:51:31.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:31.579" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:31.578" endtime="20231207 16:51:31.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:31.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:31.579" endtime="20231207 16:51:31.579"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.561" endtime="20231207 16:51:31.579"/>
</kw>
<msg timestamp="20231207 16:51:31.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:31.561" endtime="20231207 16:51:31.580"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.560" endtime="20231207 16:51:31.580"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.560" endtime="20231207 16:51:31.580"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.551" endtime="20231207 16:51:31.580"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.550" endtime="20231207 16:51:31.580"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:31.583" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:33.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:33.679" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:31.582" endtime="20231207 16:51:33.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:33.680" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:33.679" endtime="20231207 16:51:33.680"/>
</kw>
<msg timestamp="20231207 16:51:33.680" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:31.581" endtime="20231207 16:51:33.680"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:51:33.681" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:51:33.680" endtime="20231207 16:51:33.681"/>
</kw>
<msg timestamp="20231207 16:51:33.681" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:51:33.680" endtime="20231207 16:51:33.681"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:51:33.682" endtime="20231207 16:51:33.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:51:33.682" endtime="20231207 16:51:33.682"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:51:33.682" endtime="20231207 16:51:33.682"/>
</branch>
<status status="PASS" starttime="20231207 16:51:33.681" endtime="20231207 16:51:33.682"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:51:33.683" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:51:33.682" endtime="20231207 16:51:33.683"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:51:33.683" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:51:33.683" endtime="20231207 16:51:33.683"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:51:33.684" level="INFO">${secret} = ['16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c']</msg>
<status status="PASS" starttime="20231207 16:51:33.683" endtime="20231207 16:51:33.684"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:51:33.685" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:33.684" endtime="20231207 16:51:33.685"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:51:33.686" level="INFO">${secret} = 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:33.685" endtime="20231207 16:51:33.686"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:33.688" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:34.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:34.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:33.686" endtime="20231207 16:51:34.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:34.065" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:34.064" endtime="20231207 16:51:34.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:34.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:34.065" endtime="20231207 16:51:34.065"/>
</kw>
<status status="PASS" starttime="20231207 16:51:33.686" endtime="20231207 16:51:34.066"/>
</kw>
<msg timestamp="20231207 16:51:34.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:33.686" endtime="20231207 16:51:34.066"/>
</kw>
<status status="PASS" starttime="20231207 16:51:33.686" endtime="20231207 16:51:34.066"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:34.069" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:34.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:34.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:34.068" endtime="20231207 16:51:34.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:34.446" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:34.445" endtime="20231207 16:51:34.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:34.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:34.446" endtime="20231207 16:51:34.446"/>
</kw>
<status status="PASS" starttime="20231207 16:51:34.067" endtime="20231207 16:51:34.447"/>
</kw>
<msg timestamp="20231207 16:51:34.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:34.067" endtime="20231207 16:51:34.447"/>
</kw>
<status status="PASS" starttime="20231207 16:51:34.066" endtime="20231207 16:51:34.447"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:34.450" level="INFO">Running command 'aws configure set aws_secret_access_key 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:34.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:34.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:34.448" endtime="20231207 16:51:34.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:34.836" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:34.835" endtime="20231207 16:51:34.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:34.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:34.836" endtime="20231207 16:51:34.836"/>
</kw>
<status status="PASS" starttime="20231207 16:51:34.448" endtime="20231207 16:51:34.837"/>
</kw>
<msg timestamp="20231207 16:51:34.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:34.448" endtime="20231207 16:51:34.837"/>
</kw>
<status status="PASS" starttime="20231207 16:51:34.447" endtime="20231207 16:51:34.837"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:34.840" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:35.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:35.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:34.839" endtime="20231207 16:51:35.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:35.218" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:35.218" endtime="20231207 16:51:35.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:35.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:35.218" endtime="20231207 16:51:35.219"/>
</kw>
<status status="PASS" starttime="20231207 16:51:34.838" endtime="20231207 16:51:35.219"/>
</kw>
<msg timestamp="20231207 16:51:35.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:34.838" endtime="20231207 16:51:35.220"/>
</kw>
<status status="PASS" starttime="20231207 16:51:34.838" endtime="20231207 16:51:35.220"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:35.222" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:35.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:35.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:35.221" endtime="20231207 16:51:35.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:35.593" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:35.593" endtime="20231207 16:51:35.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:35.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:35.593" endtime="20231207 16:51:35.594"/>
</kw>
<status status="PASS" starttime="20231207 16:51:35.220" endtime="20231207 16:51:35.594"/>
</kw>
<msg timestamp="20231207 16:51:35.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:35.220" endtime="20231207 16:51:35.595"/>
</kw>
<status status="PASS" starttime="20231207 16:51:35.220" endtime="20231207 16:51:35.595"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.581" endtime="20231207 16:51:35.595"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.580" endtime="20231207 16:51:35.595"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:51:35.595" endtime="20231207 16:51:35.595"/>
</kw>
<status status="PASS" starttime="20231207 16:51:31.550" endtime="20231207 16:51:35.595"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:35.599" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:36.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:36.146" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:51:18 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:51:35.596" endtime="20231207 16:51:36.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:36.146" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:51:18 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:51:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:51:36.146" endtime="20231207 16:51:36.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:36.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:36.147" endtime="20231207 16:51:36.147"/>
</kw>
<msg timestamp="20231207 16:51:36.147" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:51:18 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:51:35.596" endtime="20231207 16:51:36.147"/>
</kw>
<msg timestamp="20231207 16:51:36.148" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:51:18 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:51:35.596" endtime="20231207 16:51:36.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:36.148" endtime="20231207 16:51:36.148"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:36.150" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:36.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:36.152" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:51:36.149" endtime="20231207 16:51:36.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:36.152" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:51:36.152" endtime="20231207 16:51:36.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:36.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:36.153" endtime="20231207 16:51:36.153"/>
</kw>
<msg timestamp="20231207 16:51:36.153" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231207 16:51:36.148" endtime="20231207 16:51:36.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:36.153" endtime="20231207 16:51:36.154"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:36.156" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:36.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:36.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:36.154" endtime="20231207 16:51:36.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:36.159" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:36.158" endtime="20231207 16:51:36.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:36.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:36.159" endtime="20231207 16:51:36.159"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.154" endtime="20231207 16:51:36.160"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:31.549" endtime="20231207 16:51:36.160"/>
</test>
<test id="s1-s16-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:36.166" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:36.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:36.169" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:51:36.165" endtime="20231207 16:51:36.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:36.169" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:51:36.169" endtime="20231207 16:51:36.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:36.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:36.169" endtime="20231207 16:51:36.170"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.164" endtime="20231207 16:51:36.170"/>
</kw>
<msg timestamp="20231207 16:51:36.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:36.164" endtime="20231207 16:51:36.171"/>
</kw>
<msg timestamp="20231207 16:51:36.171" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:51:36.164" endtime="20231207 16:51:36.171"/>
</kw>
<msg timestamp="20231207 16:51:36.171" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:36.163" endtime="20231207 16:51:36.171"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:51:36.172" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:36.171" endtime="20231207 16:51:36.172"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:36.174" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:36.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:36.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:36.173" endtime="20231207 16:51:36.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:36.199" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:36.199" endtime="20231207 16:51:36.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:36.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:36.199" endtime="20231207 16:51:36.200"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.173" endtime="20231207 16:51:36.200"/>
</kw>
<msg timestamp="20231207 16:51:36.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:36.172" endtime="20231207 16:51:36.201"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.172" endtime="20231207 16:51:36.201"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.172" endtime="20231207 16:51:36.201"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.163" endtime="20231207 16:51:36.201"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.162" endtime="20231207 16:51:36.201"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:36.204" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:38.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:38.039" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:36.202" endtime="20231207 16:51:38.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:38.040" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:38.039" endtime="20231207 16:51:38.040"/>
</kw>
<msg timestamp="20231207 16:51:38.040" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:36.202" endtime="20231207 16:51:38.040"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:51:38.041" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:51:38.041" endtime="20231207 16:51:38.041"/>
</kw>
<msg timestamp="20231207 16:51:38.042" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:51:38.040" endtime="20231207 16:51:38.042"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:51:38.042" endtime="20231207 16:51:38.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:51:38.042" endtime="20231207 16:51:38.042"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:51:38.042" endtime="20231207 16:51:38.042"/>
</branch>
<status status="PASS" starttime="20231207 16:51:38.042" endtime="20231207 16:51:38.042"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:51:38.043" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:51:38.042" endtime="20231207 16:51:38.043"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:51:38.043" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:51:38.043" endtime="20231207 16:51:38.043"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:51:38.043" level="INFO">${secret} = ['16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c']</msg>
<status status="PASS" starttime="20231207 16:51:38.043" endtime="20231207 16:51:38.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:51:38.044" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:38.044" endtime="20231207 16:51:38.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:51:38.045" level="INFO">${secret} = 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:38.044" endtime="20231207 16:51:38.045"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:38.048" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:38.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:38.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:38.046" endtime="20231207 16:51:38.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:38.414" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:38.414" endtime="20231207 16:51:38.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:38.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:38.415" endtime="20231207 16:51:38.415"/>
</kw>
<status status="PASS" starttime="20231207 16:51:38.046" endtime="20231207 16:51:38.415"/>
</kw>
<msg timestamp="20231207 16:51:38.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:38.046" endtime="20231207 16:51:38.416"/>
</kw>
<status status="PASS" starttime="20231207 16:51:38.045" endtime="20231207 16:51:38.416"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:38.419" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:38.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:38.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:38.417" endtime="20231207 16:51:38.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:38.809" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:38.809" endtime="20231207 16:51:38.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:38.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:38.810" endtime="20231207 16:51:38.810"/>
</kw>
<status status="PASS" starttime="20231207 16:51:38.417" endtime="20231207 16:51:38.810"/>
</kw>
<msg timestamp="20231207 16:51:38.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:38.416" endtime="20231207 16:51:38.811"/>
</kw>
<status status="PASS" starttime="20231207 16:51:38.416" endtime="20231207 16:51:38.811"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:38.814" level="INFO">Running command 'aws configure set aws_secret_access_key 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:39.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:39.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:38.812" endtime="20231207 16:51:39.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:39.226" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:39.226" endtime="20231207 16:51:39.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:39.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:39.226" endtime="20231207 16:51:39.227"/>
</kw>
<status status="PASS" starttime="20231207 16:51:38.812" endtime="20231207 16:51:39.227"/>
</kw>
<msg timestamp="20231207 16:51:39.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:38.812" endtime="20231207 16:51:39.227"/>
</kw>
<status status="PASS" starttime="20231207 16:51:38.811" endtime="20231207 16:51:39.228"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:39.230" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:39.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:39.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:39.229" endtime="20231207 16:51:39.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:39.591" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:39.591" endtime="20231207 16:51:39.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:39.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:39.591" endtime="20231207 16:51:39.592"/>
</kw>
<status status="PASS" starttime="20231207 16:51:39.228" endtime="20231207 16:51:39.592"/>
</kw>
<msg timestamp="20231207 16:51:39.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:39.228" endtime="20231207 16:51:39.592"/>
</kw>
<status status="PASS" starttime="20231207 16:51:39.228" endtime="20231207 16:51:39.593"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:39.595" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:40.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:40.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:39.594" endtime="20231207 16:51:40.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:40.017" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:40.017" endtime="20231207 16:51:40.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:40.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:40.017" endtime="20231207 16:51:40.018"/>
</kw>
<status status="PASS" starttime="20231207 16:51:39.593" endtime="20231207 16:51:40.018"/>
</kw>
<msg timestamp="20231207 16:51:40.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:39.593" endtime="20231207 16:51:40.019"/>
</kw>
<status status="PASS" starttime="20231207 16:51:39.593" endtime="20231207 16:51:40.019"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.202" endtime="20231207 16:51:40.019"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.201" endtime="20231207 16:51:40.019"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:51:40.019" endtime="20231207 16:51:40.019"/>
</kw>
<status status="PASS" starttime="20231207 16:51:36.162" endtime="20231207 16:51:40.020"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:40.022" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:40.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:40.505" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:51:24 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:51:40.021" endtime="20231207 16:51:40.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:40.505" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:51:24 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 07 Dec 2023 16:51:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231207 16:51:40.505" endtime="20231207 16:51:40.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:40.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:40.506" endtime="20231207 16:51:40.506"/>
</kw>
<msg timestamp="20231207 16:51:40.506" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:51:24 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:51:40.020" endtime="20231207 16:51:40.506"/>
</kw>
<msg timestamp="20231207 16:51:40.507" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 07 Dec 2023 16:51:24 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231207 16:51:40.020" endtime="20231207 16:51:40.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:40.507" endtime="20231207 16:51:40.507"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:40.509" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:40.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:40.511" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:51:40.508" endtime="20231207 16:51:40.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:40.511" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:51:40.511" endtime="20231207 16:51:40.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:40.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:40.512" endtime="20231207 16:51:40.512"/>
</kw>
<msg timestamp="20231207 16:51:40.512" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231207 16:51:40.507" endtime="20231207 16:51:40.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:40.512" endtime="20231207 16:51:40.513"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:40.514" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:40.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:40.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:40.513" endtime="20231207 16:51:40.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:40.517" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:40.517" endtime="20231207 16:51:40.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:40.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:40.518" endtime="20231207 16:51:40.518"/>
</kw>
<status status="PASS" starttime="20231207 16:51:40.513" endtime="20231207 16:51:40.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:36.161" endtime="20231207 16:51:40.518"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231207 16:51:27.472" endtime="20231207 16:51:40.519"/>
</suite>
<suite id="s1-s17" name="1.3.0-1.4.0-3-downgraded-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:43.643" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:43.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:43.645" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:51:43.640" endtime="20231207 16:51:43.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:43.645" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:51:43.645" endtime="20231207 16:51:43.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:43.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:43.645" endtime="20231207 16:51:43.646"/>
</kw>
<status status="PASS" starttime="20231207 16:51:43.639" endtime="20231207 16:51:43.646"/>
</kw>
<msg timestamp="20231207 16:51:43.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:43.639" endtime="20231207 16:51:43.647"/>
</kw>
<msg timestamp="20231207 16:51:43.647" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:51:43.638" endtime="20231207 16:51:43.647"/>
</kw>
<msg timestamp="20231207 16:51:43.647" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:43.638" endtime="20231207 16:51:43.647"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:51:43.648" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:43.648" endtime="20231207 16:51:43.648"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:43.650" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:43.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:43.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:43.649" endtime="20231207 16:51:43.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:43.668" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:43.668" endtime="20231207 16:51:43.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:43.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:43.668" endtime="20231207 16:51:43.669"/>
</kw>
<status status="PASS" starttime="20231207 16:51:43.649" endtime="20231207 16:51:43.669"/>
</kw>
<msg timestamp="20231207 16:51:43.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:43.649" endtime="20231207 16:51:43.669"/>
</kw>
<status status="PASS" starttime="20231207 16:51:43.648" endtime="20231207 16:51:43.669"/>
</kw>
<status status="PASS" starttime="20231207 16:51:43.648" endtime="20231207 16:51:43.669"/>
</kw>
<status status="PASS" starttime="20231207 16:51:43.638" endtime="20231207 16:51:43.670"/>
</kw>
<status status="PASS" starttime="20231207 16:51:43.637" endtime="20231207 16:51:43.670"/>
</kw>
<test id="s1-s17-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:43.674" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:51:43.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:43.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:43.672" endtime="20231207 16:51:43.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:43.676" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:43.675" endtime="20231207 16:51:43.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:43.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:43.676" endtime="20231207 16:51:43.677"/>
</kw>
<status status="PASS" starttime="20231207 16:51:43.671" endtime="20231207 16:51:43.677"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:43.680" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:47.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:47.658" level="INFO">${output} = 2023-12-07 16:51:46,358 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:46,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:43.679" endtime="20231207 16:51:47.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:47.659" level="INFO">2023-12-07 16:51:46,358 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:46,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:51:46,431 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 16:51:46,676 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 16:51:47.659" endtime="20231207 16:51:47.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:47.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:47.659" endtime="20231207 16:51:47.660"/>
</kw>
<status status="PASS" starttime="20231207 16:51:43.678" endtime="20231207 16:51:47.660"/>
</kw>
<msg timestamp="20231207 16:51:47.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:43.678" endtime="20231207 16:51:47.660"/>
</kw>
<msg timestamp="20231207 16:51:47.661" level="INFO">${output} = 2023-12-07 16:51:46,358 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:46,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:43.677" endtime="20231207 16:51:47.661"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:47.661" endtime="20231207 16:51:47.661"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:47.664" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:47.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:47.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:47.662" endtime="20231207 16:51:47.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:47.667" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:47.667" endtime="20231207 16:51:47.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:47.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:47.667" endtime="20231207 16:51:47.668"/>
</kw>
<status status="PASS" starttime="20231207 16:51:47.661" endtime="20231207 16:51:47.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:43.670" endtime="20231207 16:51:47.668"/>
</test>
<test id="s1-s17-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:47.671" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:51:47.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:47.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:47.670" endtime="20231207 16:51:47.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:47.674" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:47.673" endtime="20231207 16:51:47.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:47.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:47.674" endtime="20231207 16:51:47.674"/>
</kw>
<status status="PASS" starttime="20231207 16:51:47.669" endtime="20231207 16:51:47.674"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:47.677" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:51.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:51.675" level="INFO">${output} = 2023-12-07 16:51:50,404 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:50,471 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:47.675" endtime="20231207 16:51:51.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:51.676" level="INFO">2023-12-07 16:51:50,404 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:50,471 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-07 16:51:50,471 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-07 16:51:50,645 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231207 16:51:51.676" endtime="20231207 16:51:51.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:51.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:51.677" endtime="20231207 16:51:51.677"/>
</kw>
<status status="PASS" starttime="20231207 16:51:47.675" endtime="20231207 16:51:51.677"/>
</kw>
<msg timestamp="20231207 16:51:51.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:47.675" endtime="20231207 16:51:51.678"/>
</kw>
<msg timestamp="20231207 16:51:51.678" level="INFO">${output} = 2023-12-07 16:51:50,404 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-07 16:51:50,471 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231207 16:51:47.674" endtime="20231207 16:51:51.678"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:51.678" endtime="20231207 16:51:51.678"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:51.681" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:51.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:51.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:51.679" endtime="20231207 16:51:51.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:51.683" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:51.682" endtime="20231207 16:51:51.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:51.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:51.683" endtime="20231207 16:51:51.683"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.678" endtime="20231207 16:51:51.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:47.669" endtime="20231207 16:51:51.683"/>
</test>
<test id="s1-s17-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:51.688" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:51.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:51.690" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:51:51.687" endtime="20231207 16:51:51.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:51.691" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:51:51.690" endtime="20231207 16:51:51.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:51.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:51.691" endtime="20231207 16:51:51.691"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.686" endtime="20231207 16:51:51.691"/>
</kw>
<msg timestamp="20231207 16:51:51.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:51.686" endtime="20231207 16:51:51.692"/>
</kw>
<msg timestamp="20231207 16:51:51.692" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:51:51.686" endtime="20231207 16:51:51.692"/>
</kw>
<msg timestamp="20231207 16:51:51.693" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:51.686" endtime="20231207 16:51:51.693"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:51:51.693" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:51.693" endtime="20231207 16:51:51.693"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:51.695" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:51.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:51.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:51.694" endtime="20231207 16:51:51.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:51.711" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:51.710" endtime="20231207 16:51:51.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:51.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:51.711" endtime="20231207 16:51:51.711"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.694" endtime="20231207 16:51:51.712"/>
</kw>
<msg timestamp="20231207 16:51:51.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:51.694" endtime="20231207 16:51:51.712"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.693" endtime="20231207 16:51:51.712"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.693" endtime="20231207 16:51:51.712"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.685" endtime="20231207 16:51:51.712"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.685" endtime="20231207 16:51:51.713"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:51.715" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:53.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:53.550" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:51.714" endtime="20231207 16:51:53.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:53.551" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:53.550" endtime="20231207 16:51:53.551"/>
</kw>
<msg timestamp="20231207 16:51:53.551" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:51.713" endtime="20231207 16:51:53.551"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231207 16:51:53.552" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231207 16:51:53.552" endtime="20231207 16:51:53.552"/>
</kw>
<msg timestamp="20231207 16:51:53.552" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231207 16:51:53.551" endtime="20231207 16:51:53.552"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:51:53.553" endtime="20231207 16:51:53.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231207 16:51:53.553" endtime="20231207 16:51:53.553"/>
</kw>
<status status="NOT RUN" starttime="20231207 16:51:53.553" endtime="20231207 16:51:53.553"/>
</branch>
<status status="PASS" starttime="20231207 16:51:53.553" endtime="20231207 16:51:53.553"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:51:53.554" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:51:53.553" endtime="20231207 16:51:53.554"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231207 16:51:53.554" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231207 16:51:53.554" endtime="20231207 16:51:53.554"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231207 16:51:53.555" level="INFO">${secret} = ['16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c']</msg>
<status status="PASS" starttime="20231207 16:51:53.554" endtime="20231207 16:51:53.555"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:51:53.556" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:53.555" endtime="20231207 16:51:53.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231207 16:51:53.557" level="INFO">${secret} = 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c</msg>
<status status="PASS" starttime="20231207 16:51:53.556" endtime="20231207 16:51:53.557"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:53.559" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:53.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:53.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:53.558" endtime="20231207 16:51:53.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:53.950" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:53.950" endtime="20231207 16:51:53.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:53.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:53.951" endtime="20231207 16:51:53.951"/>
</kw>
<status status="PASS" starttime="20231207 16:51:53.557" endtime="20231207 16:51:53.951"/>
</kw>
<msg timestamp="20231207 16:51:53.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:53.557" endtime="20231207 16:51:53.952"/>
</kw>
<status status="PASS" starttime="20231207 16:51:53.557" endtime="20231207 16:51:53.952"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:53.955" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:54.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:54.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:53.953" endtime="20231207 16:51:54.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:54.315" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:54.315" endtime="20231207 16:51:54.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:54.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:54.316" endtime="20231207 16:51:54.316"/>
</kw>
<status status="PASS" starttime="20231207 16:51:53.953" endtime="20231207 16:51:54.316"/>
</kw>
<msg timestamp="20231207 16:51:54.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:53.953" endtime="20231207 16:51:54.317"/>
</kw>
<status status="PASS" starttime="20231207 16:51:53.952" endtime="20231207 16:51:54.317"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:54.320" level="INFO">Running command 'aws configure set aws_secret_access_key 16d896586997d0f1980f0e16e2f70cfea5c4b3cafd78a4222cd47cef112fbe3c 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:54.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:54.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:54.318" endtime="20231207 16:51:54.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:54.681" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:54.681" endtime="20231207 16:51:54.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:54.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:54.681" endtime="20231207 16:51:54.682"/>
</kw>
<status status="PASS" starttime="20231207 16:51:54.317" endtime="20231207 16:51:54.682"/>
</kw>
<msg timestamp="20231207 16:51:54.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:54.317" endtime="20231207 16:51:54.683"/>
</kw>
<status status="PASS" starttime="20231207 16:51:54.317" endtime="20231207 16:51:54.683"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:54.685" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:55.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:55.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:54.684" endtime="20231207 16:51:55.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:55.063" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:55.063" endtime="20231207 16:51:55.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:55.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:55.063" endtime="20231207 16:51:55.064"/>
</kw>
<status status="PASS" starttime="20231207 16:51:54.683" endtime="20231207 16:51:55.064"/>
</kw>
<msg timestamp="20231207 16:51:55.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:54.683" endtime="20231207 16:51:55.065"/>
</kw>
<status status="PASS" starttime="20231207 16:51:54.683" endtime="20231207 16:51:55.065"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:55.068" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:55.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:55.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:55.066" endtime="20231207 16:51:55.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:55.436" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:55.436" endtime="20231207 16:51:55.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:55.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:55.436" endtime="20231207 16:51:55.437"/>
</kw>
<status status="PASS" starttime="20231207 16:51:55.065" endtime="20231207 16:51:55.437"/>
</kw>
<msg timestamp="20231207 16:51:55.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:55.065" endtime="20231207 16:51:55.437"/>
</kw>
<status status="PASS" starttime="20231207 16:51:55.065" endtime="20231207 16:51:55.438"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.713" endtime="20231207 16:51:55.438"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.713" endtime="20231207 16:51:55.438"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231207 16:51:55.438" endtime="20231207 16:51:55.438"/>
</kw>
<status status="PASS" starttime="20231207 16:51:51.685" endtime="20231207 16:51:55.438"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231207 16:51:55.439" level="INFO">${randStr} = 3311631975</msg>
<status status="PASS" starttime="20231207 16:51:55.439" endtime="20231207 16:51:55.439"/>
</kw>
<msg timestamp="20231207 16:51:55.439" level="INFO">${random} = ozone-test-3311631975</msg>
<status status="PASS" starttime="20231207 16:51:55.438" endtime="20231207 16:51:55.439"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:55.443" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-3311631975 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:55.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:55.916" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3311631975"
}</msg>
<status status="PASS" starttime="20231207 16:51:55.442" endtime="20231207 16:51:55.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:55.917" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3311631975"
}</msg>
<status status="PASS" starttime="20231207 16:51:55.916" endtime="20231207 16:51:55.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:55.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:55.917" endtime="20231207 16:51:55.918"/>
</kw>
<status status="PASS" starttime="20231207 16:51:55.441" endtime="20231207 16:51:55.918"/>
</kw>
<msg timestamp="20231207 16:51:55.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:55.441" endtime="20231207 16:51:55.918"/>
</kw>
<msg timestamp="20231207 16:51:55.918" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3311631975"
}</msg>
<status status="PASS" starttime="20231207 16:51:55.440" endtime="20231207 16:51:55.918"/>
</kw>
<msg timestamp="20231207 16:51:55.919" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3311631975"
}</msg>
<status status="PASS" starttime="20231207 16:51:55.440" endtime="20231207 16:51:55.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:55.919" endtime="20231207 16:51:55.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:55.919" endtime="20231207 16:51:55.920"/>
</kw>
<msg timestamp="20231207 16:51:55.920" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231207 16:51:55.439" endtime="20231207 16:51:55.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231207 16:51:55.920" endtime="20231207 16:51:55.920"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:51.684" endtime="20231207 16:51:55.920"/>
</test>
<test id="s1-s17-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:55.924" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231207 16:51:55.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:55.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:55.922" endtime="20231207 16:51:55.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:55.926" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:55.926" endtime="20231207 16:51:55.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:55.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:55.926" endtime="20231207 16:51:55.927"/>
</kw>
<status status="PASS" starttime="20231207 16:51:55.922" endtime="20231207 16:51:55.927"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:55.929" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:56.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:56.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:55.928" endtime="20231207 16:51:56.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:56.495" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:56.495" endtime="20231207 16:51:56.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:56.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:56.495" endtime="20231207 16:51:56.496"/>
</kw>
<msg timestamp="20231207 16:51:56.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:55.927" endtime="20231207 16:51:56.496"/>
</kw>
<msg timestamp="20231207 16:51:56.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:55.927" endtime="20231207 16:51:56.496"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231207 16:51:56.496" endtime="20231207 16:51:56.497"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:56.499" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:56.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:56.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:56.497" endtime="20231207 16:51:56.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:56.502" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:56.502" endtime="20231207 16:51:56.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:56.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:56.503" endtime="20231207 16:51:56.503"/>
</kw>
<status status="PASS" starttime="20231207 16:51:56.497" endtime="20231207 16:51:56.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231207 16:51:55.921" endtime="20231207 16:51:56.503"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231207 16:51:43.571" endtime="20231207 16:51:56.504"/>
</suite>
<suite id="s1-s18" name="1.3.0-1.4.0-3-downgraded-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s18-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:59.688" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:59.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:59.690" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231207 16:51:59.685" endtime="20231207 16:51:59.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:59.691" level="INFO">scm</msg>
<status status="PASS" starttime="20231207 16:51:59.690" endtime="20231207 16:51:59.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:59.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:59.691" endtime="20231207 16:51:59.691"/>
</kw>
<status status="PASS" starttime="20231207 16:51:59.685" endtime="20231207 16:51:59.691"/>
</kw>
<msg timestamp="20231207 16:51:59.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:59.684" endtime="20231207 16:51:59.692"/>
</kw>
<msg timestamp="20231207 16:51:59.692" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231207 16:51:59.684" endtime="20231207 16:51:59.692"/>
</kw>
<msg timestamp="20231207 16:51:59.693" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:59.684" endtime="20231207 16:51:59.693"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231207 16:51:59.693" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231207 16:51:59.693" endtime="20231207 16:51:59.693"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:59.696" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:51:59.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20231207 16:51:59.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231207 16:51:59.695" endtime="20231207 16:51:59.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231207 16:51:59.723" level="INFO"/>
<status status="PASS" starttime="20231207 16:51:59.722" endtime="20231207 16:51:59.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231207 16:51:59.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231207 16:51:59.723" endtime="20231207 16:51:59.724"/>
</kw>
<status status="PASS" starttime="20231207 16:51:59.694" endtime="20231207 16:51:59.724"/>
</kw>
<msg timestamp="20231207 16:51:59.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231207 16:51:59.694" endtime="20231207 16:51:59.724"/>
</kw>
<status status="PASS" starttime="20231207 16:51:59.694" endtime="20231207 16:51:59.725"/>
</kw>
<status status="PASS" starttime="20231207 16:51:59.693" endtime="20231207 16:51:59.725"/>
</kw>
<status status="PASS" starttime="20231207 16:51:59.684" endtime="20231207 16:51:59.725"/>
</kw>
<status status="PASS" starttime="20231207 16:51:59.683" endtime="20231207 16:51:59.725"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231207 16:51:59.725" endtime="20231207 16:51:59.725"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231207 16:51:59.728" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231207 16:56:59.683" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231207 16:51:59.726" endtime="20231207 16:56:59.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231207 16:56:59.684" endtime="20231207 16:56:59.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231207 16:56:59.684" endtime="20231207 16:56:59.684"/>
</kw>
<status status="FAIL" starttime="20231207 16:51:59.726" endtime="20231207 16:56:59.685"/>
</kw>
<msg timestamp="20231207 16:56:59.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231207 16:51:59.726" endtime="20231207 16:56:59.685"/>
</kw>
<status status="FAIL" starttime="20231207 16:51:59.725" endtime="20231207 16:56:59.686"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20231207 16:56:59.686" endtime="20231207 16:56:59.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231207 16:51:59.682" endtime="20231207 16:56:59.687">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20231207 16:51:59.642" endtime="20231207 16:56:59.689"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="582139"/>
</suite>
<statistics>
<total>
<stat pass="56" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="4" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="3" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="56" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization">upgrade.1.3.0-1.4.0-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1">upgrade.1.3.0-1.4.0-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1">upgrade.1.3.0-1.4.0-1-original-validate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="1.3.0-1.4.0-1-original-prepare">upgrade.1.3.0-1.4.0-1-original-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="1.3.0-1.4.0-2-pre-finalized-validate-old1">upgrade.1.3.0-1.4.0-2-pre-finalized-validate-old1</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6" name="1.3.0-1.4.0-2-pre-finalized-generate-old1">upgrade.1.3.0-1.4.0-2-pre-finalized-generate-old1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s7" name="1.3.0-1.4.0-2-pre-finalized-generate-new1">upgrade.1.3.0-1.4.0-2-pre-finalized-generate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="1.3.0-1.4.0-2-pre-finalized-validate-new1">upgrade.1.3.0-1.4.0-2-pre-finalized-validate-new1</stat>
<stat pass="2" fail="0" skip="0" id="s1-s9" name="1.3.0-1.4.0-2-pre-finalized-check-finalization">upgrade.1.3.0-1.4.0-2-pre-finalized-check-finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s10" name="1.3.0-1.4.0-2-pre-finalized-snapshot">upgrade.1.3.0-1.4.0-2-pre-finalized-snapshot</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="1.3.0-1.4.0-2-pre-finalized-prepare">upgrade.1.3.0-1.4.0-2-pre-finalized-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s12" name="1.3.0-1.4.0-3-downgraded-check-finalization">upgrade.1.3.0-1.4.0-3-downgraded-check-finalization</stat>
<stat pass="3" fail="0" skip="0" id="s1-s13" name="1.3.0-1.4.0-3-downgraded-validate-old1">upgrade.1.3.0-1.4.0-3-downgraded-validate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s14" name="1.3.0-1.4.0-3-downgraded-validate-new1">upgrade.1.3.0-1.4.0-3-downgraded-validate-new1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s15" name="1.3.0-1.4.0-3-downgraded-generate-old2">upgrade.1.3.0-1.4.0-3-downgraded-generate-old2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s16" name="1.3.0-1.4.0-3-downgraded-validate-old2">upgrade.1.3.0-1.4.0-3-downgraded-validate-old2</stat>
<stat pass="4" fail="0" skip="0" id="s1-s17" name="1.3.0-1.4.0-3-downgraded-generate-old1">upgrade.1.3.0-1.4.0-3-downgraded-generate-old1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s18" name="1.3.0-1.4.0-3-downgraded-prepare">upgrade.1.3.0-1.4.0-3-downgraded-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
