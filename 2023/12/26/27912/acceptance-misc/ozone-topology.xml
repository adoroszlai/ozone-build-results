<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231226 12:01:02.231" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:57:08.633" endtime="20231226 11:57:08.634"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:08.662" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:08.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:08.736" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 26 Dec 2023 11:57:08 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 26 Dec 2023 11:28:26 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20231226 11:57:08.647" endtime="20231226 11:57:08.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:08.738" level="INFO">HTTP/1.1 200 OK
Date: Tue, 26 Dec 2023 11:57:08 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 26 Dec 2023 11:28:26 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20231226 11:57:08.737" endtime="20231226 11:57:08.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:08.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:08.738" endtime="20231226 11:57:08.738"/>
</kw>
<status status="PASS" starttime="20231226 11:57:08.646" endtime="20231226 11:57:08.739"/>
</kw>
<msg timestamp="20231226 11:57:08.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:08.646" endtime="20231226 11:57:08.739"/>
</kw>
<msg timestamp="20231226 11:57:08.739" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 26 Dec 2023 11:57:08 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 26 Dec 2023 11:28:26 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20231226 11:57:08.634" endtime="20231226 11:57:08.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:08.739" endtime="20231226 11:57:08.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:57:08.632" endtime="20231226 11:57:08.740"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:57:08.742" endtime="20231226 11:57:08.742"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 11:57:08.743" level="INFO">${random} = MVOnXwwlNb</msg>
<status status="PASS" starttime="20231226 11:57:08.742" endtime="20231226 11:57:08.743"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:08.749" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p MVOnXwwlNb  2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:18.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:18.050" level="INFO">${output} = 2023-12-26 11:57:10,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:57:11,123 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:57:08.746" endtime="20231226 11:57:18.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:18.050" level="INFO">2023-12-26 11:57:10,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:57:11,123 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-26 11:57:11,125 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-26 11:57:11,220 [main] INFO freon.BaseFreonGenerator: Executing test with prefix MVOnXwwlNb and number-of-tests 1
2023-12-26 11:57:11,255 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-26 11:57:11,379 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2023-12-26 11:57:12,256 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-26 11:57:13,256 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-26 11:57:14,257 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-26 11:57:14,490 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-12-26 11:57:14,605 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-12-26 11:57:15,257 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-26 11:57:15,300 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-26 11:57:15,573 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-26 11:57:16,258 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-26 11:57:17,258 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-26 11:57:17,710 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2189.5256, max=2189.5256, mean=2189.5256, stddev=0.0, median=2189.5256, p75=2189.5256, p95=2189.5256, p98=2189.5256, p99=2189.5256, p999=2189.5256, mean_rate=0.3267974898543628, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-26 11:57:17,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-12-26 11:57:17,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-26 11:57:17,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231226 11:57:18.050" endtime="20231226 11:57:18.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:18.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:18.051" endtime="20231226 11:57:18.051"/>
</kw>
<status status="PASS" starttime="20231226 11:57:08.746" endtime="20231226 11:57:18.051"/>
</kw>
<msg timestamp="20231226 11:57:18.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:08.745" endtime="20231226 11:57:18.051"/>
</kw>
<msg timestamp="20231226 11:57:18.052" level="INFO">${result} = 2023-12-26 11:57:10,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:57:11,123 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:57:08.745" endtime="20231226 11:57:18.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:18.052" endtime="20231226 11:57:18.052"/>
</kw>
<status status="PASS" starttime="20231226 11:57:08.743" endtime="20231226 11:57:18.052"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:18.056" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p MVOnXwwlNb  2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:24.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:24.041" level="INFO">${output} = 2023-12-26 11:57:20,021 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:57:20,124 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:57:18.054" endtime="20231226 11:57:24.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:24.042" level="INFO">2023-12-26 11:57:20,021 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:57:20,124 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-26 11:57:20,125 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-26 11:57:20,204 [main] INFO freon.BaseFreonGenerator: Executing test with prefix MVOnXwwlNb and number-of-tests 1
2023-12-26 11:57:20,251 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-26 11:57:20,373 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2023-12-26 11:57:21,253 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-26 11:57:21,852 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-26 11:57:22,254 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-26 11:57:23,254 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-26 11:57:23,693 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=85.558916, max=85.558916, mean=85.558916, stddev=0.0, median=85.558916, p75=85.558916, p95=85.558916, p98=85.558916, p99=85.558916, p999=85.558916, mean_rate=0.9489964253193162, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-26 11:57:23,700 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-26 11:57:23,700 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-26 11:57:23,700 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231226 11:57:24.042" endtime="20231226 11:57:24.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:24.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:24.042" endtime="20231226 11:57:24.043"/>
</kw>
<status status="PASS" starttime="20231226 11:57:18.054" endtime="20231226 11:57:24.043"/>
</kw>
<msg timestamp="20231226 11:57:24.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:18.054" endtime="20231226 11:57:24.043"/>
</kw>
<msg timestamp="20231226 11:57:24.043" level="INFO">${result} = 2023-12-26 11:57:20,021 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:57:20,124 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:57:18.053" endtime="20231226 11:57:24.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:24.043" endtime="20231226 11:57:24.044"/>
</kw>
<status status="PASS" starttime="20231226 11:57:18.052" endtime="20231226 11:57:24.044"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:57:08.741" endtime="20231226 11:57:24.044"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231226 11:57:08.579" endtime="20231226 11:57:24.045"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:26.152" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:29.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:29.182" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231226 11:57:26.151" endtime="20231226 11:57:29.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:29.183" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20231226 11:57:29.183" endtime="20231226 11:57:29.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:29.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:29.183" endtime="20231226 11:57:29.184"/>
</kw>
<status status="PASS" starttime="20231226 11:57:26.150" endtime="20231226 11:57:29.184"/>
</kw>
<msg timestamp="20231226 11:57:29.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:26.150" endtime="20231226 11:57:29.184"/>
</kw>
<msg timestamp="20231226 11:57:29.184" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231226 11:57:26.150" endtime="20231226 11:57:29.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:29.184" endtime="20231226 11:57:29.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:57:26.149" endtime="20231226 11:57:29.185"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:29.188" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:32.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:32.057" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20231226 11:57:29.187" endtime="20231226 11:57:32.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:32.058" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20231226 11:57:32.057" endtime="20231226 11:57:32.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:32.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:32.058" endtime="20231226 11:57:32.058"/>
</kw>
<status status="PASS" starttime="20231226 11:57:29.187" endtime="20231226 11:57:32.058"/>
</kw>
<msg timestamp="20231226 11:57:32.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:29.186" endtime="20231226 11:57:32.059"/>
</kw>
<msg timestamp="20231226 11:57:32.059" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20231226 11:57:29.186" endtime="20231226 11:57:32.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:32.059" endtime="20231226 11:57:32.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:32.059" endtime="20231226 11:57:32.060"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:57:29.185" endtime="20231226 11:57:32.060"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:32.063" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:34.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:34.994" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231226 11:57:32.062" endtime="20231226 11:57:34.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:34.995" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20231226 11:57:34.995" endtime="20231226 11:57:34.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:34.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:34.995" endtime="20231226 11:57:34.996"/>
</kw>
<status status="PASS" starttime="20231226 11:57:32.061" endtime="20231226 11:57:34.996"/>
</kw>
<msg timestamp="20231226 11:57:34.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:32.061" endtime="20231226 11:57:34.996"/>
</kw>
<msg timestamp="20231226 11:57:34.996" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231226 11:57:32.061" endtime="20231226 11:57:34.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:34.996" endtime="20231226 11:57:34.997"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:57:32.060" endtime="20231226 11:57:34.997"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:35.000" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:37.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:37.990" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231226 11:57:34.999" endtime="20231226 11:57:37.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:37.991" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20231226 11:57:37.990" endtime="20231226 11:57:37.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:37.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:37.991" endtime="20231226 11:57:37.991"/>
</kw>
<status status="PASS" starttime="20231226 11:57:34.998" endtime="20231226 11:57:37.992"/>
</kw>
<msg timestamp="20231226 11:57:37.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:34.998" endtime="20231226 11:57:37.992"/>
</kw>
<msg timestamp="20231226 11:57:37.992" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231226 11:57:34.998" endtime="20231226 11:57:37.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:37.992" endtime="20231226 11:57:37.992"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:57:34.997" endtime="20231226 11:57:37.993"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231226 11:57:26.109" endtime="20231226 11:57:37.994"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:40.141" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:43.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:43.424" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:57:40.139" endtime="20231226 11:57:43.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:43.425" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:57:43.424" endtime="20231226 11:57:43.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:43.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:43.425" endtime="20231226 11:57:43.425"/>
</kw>
<status status="PASS" starttime="20231226 11:57:40.139" endtime="20231226 11:57:43.425"/>
</kw>
<msg timestamp="20231226 11:57:43.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:40.138" endtime="20231226 11:57:43.426"/>
</kw>
<status status="PASS" starttime="20231226 11:57:40.138" endtime="20231226 11:57:43.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:43.429" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:46.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:46.681" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:57:43.427" endtime="20231226 11:57:46.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:46.682" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:57:46.682" endtime="20231226 11:57:46.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:46.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:46.682" endtime="20231226 11:57:46.683"/>
</kw>
<status status="PASS" starttime="20231226 11:57:43.426" endtime="20231226 11:57:46.683"/>
</kw>
<msg timestamp="20231226 11:57:46.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:43.426" endtime="20231226 11:57:46.683"/>
</kw>
<status status="PASS" starttime="20231226 11:57:43.426" endtime="20231226 11:57:46.683"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:46.688" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:54.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:54.381" level="INFO">${output} = 2023-12-26 11:57:48,708 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:57:48,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:57:46.685" endtime="20231226 11:57:54.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:54.382" level="INFO">2023-12-26 11:57:48,708 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:57:48,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-26 11:57:48,797 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-26 11:57:48,880 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-12-26 11:57:48,951 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-26 11:57:49,093 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2023-12-26 11:57:49,960 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-26 11:57:50,783 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-26 11:57:50,962 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-26 11:57:51,297 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-26 11:57:51,962 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-26 11:57:52,965 [Thread-5] INFO freon.ProgressBar: Progress: 80.00 % (8 out of 10)
2023-12-26 11:57:53,966 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-12-26 11:57:54,035 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=49.955574, max=2312.596756, mean=295.5025184487899, stddev=671.8421445565812, median=58.350317, p75=86.894135, p95=2312.596756, p98=2312.596756, p99=2312.596756, p999=2312.596756, mean_rate=2.530510768152314, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-26 11:57:54,035 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-12-26 11:57:54,035 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-26 11:57:54,036 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231226 11:57:54.381" endtime="20231226 11:57:54.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:54.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:54.382" endtime="20231226 11:57:54.383"/>
</kw>
<status status="PASS" starttime="20231226 11:57:46.685" endtime="20231226 11:57:54.383"/>
</kw>
<msg timestamp="20231226 11:57:54.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:46.685" endtime="20231226 11:57:54.383"/>
</kw>
<msg timestamp="20231226 11:57:54.383" level="INFO">${result} = 2023-12-26 11:57:48,708 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:57:48,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:57:46.684" endtime="20231226 11:57:54.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:54.383" endtime="20231226 11:57:54.384"/>
</kw>
<status status="PASS" starttime="20231226 11:57:46.683" endtime="20231226 11:57:54.384"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:57:54.385" endtime="20231226 11:57:54.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:54.388" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:54.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:54.530" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:57:54.386" endtime="20231226 11:57:54.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:54.531" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231226 11:57:54.530" endtime="20231226 11:57:54.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:54.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:54.531" endtime="20231226 11:57:54.531"/>
</kw>
<status status="PASS" starttime="20231226 11:57:54.386" endtime="20231226 11:57:54.531"/>
</kw>
<msg timestamp="20231226 11:57:54.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:54.385" endtime="20231226 11:57:54.532"/>
</kw>
<msg timestamp="20231226 11:57:54.532" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:57:54.385" endtime="20231226 11:57:54.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:57:54.532" endtime="20231226 11:57:54.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:57:54.535" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:57:54.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:57:54.557" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:57:54.534" endtime="20231226 11:57:54.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:57:54.558" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:57:54.558" endtime="20231226 11:57:54.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:57:54.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:57:54.558" endtime="20231226 11:57:54.559"/>
</kw>
<status status="PASS" starttime="20231226 11:57:54.533" endtime="20231226 11:57:54.559"/>
</kw>
<msg timestamp="20231226 11:57:54.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:57:54.533" endtime="20231226 11:57:54.559"/>
</kw>
<msg timestamp="20231226 11:57:54.560" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:57:54.532" endtime="20231226 11:57:54.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:57:54.560" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231226 11:57:54.560" endtime="20231226 11:57:54.560"/>
</kw>
<status status="FAIL" starttime="20231226 11:57:54.384" endtime="20231226 11:57:54.561"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:04.562" endtime="20231226 11:58:04.562"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:04.565" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:04.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:04.583" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:04.563" endtime="20231226 11:58:04.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:04.584" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231226 11:58:04.584" endtime="20231226 11:58:04.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:04.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:04.584" endtime="20231226 11:58:04.585"/>
</kw>
<status status="PASS" starttime="20231226 11:58:04.563" endtime="20231226 11:58:04.585"/>
</kw>
<msg timestamp="20231226 11:58:04.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:04.563" endtime="20231226 11:58:04.585"/>
</kw>
<msg timestamp="20231226 11:58:04.585" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:04.562" endtime="20231226 11:58:04.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:04.586" endtime="20231226 11:58:04.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:04.589" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:04.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:04.601" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:04.587" endtime="20231226 11:58:04.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:04.602" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:04.601" endtime="20231226 11:58:04.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:04.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:04.602" endtime="20231226 11:58:04.602"/>
</kw>
<status status="PASS" starttime="20231226 11:58:04.587" endtime="20231226 11:58:04.603"/>
</kw>
<msg timestamp="20231226 11:58:04.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:04.586" endtime="20231226 11:58:04.603"/>
</kw>
<msg timestamp="20231226 11:58:04.603" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:04.586" endtime="20231226 11:58:04.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:58:04.603" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231226 11:58:04.603" endtime="20231226 11:58:04.603"/>
</kw>
<status status="FAIL" starttime="20231226 11:58:04.561" endtime="20231226 11:58:04.604"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:14.605" endtime="20231226 11:58:14.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:14.609" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:14.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:14.621" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:14.607" endtime="20231226 11:58:14.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:14.622" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231226 11:58:14.622" endtime="20231226 11:58:14.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:14.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:14.622" endtime="20231226 11:58:14.623"/>
</kw>
<status status="PASS" starttime="20231226 11:58:14.606" endtime="20231226 11:58:14.623"/>
</kw>
<msg timestamp="20231226 11:58:14.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:14.606" endtime="20231226 11:58:14.623"/>
</kw>
<msg timestamp="20231226 11:58:14.624" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:14.605" endtime="20231226 11:58:14.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:14.624" endtime="20231226 11:58:14.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:14.627" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:14.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:14.640" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:14.625" endtime="20231226 11:58:14.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:14.641" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:14.640" endtime="20231226 11:58:14.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:14.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:14.641" endtime="20231226 11:58:14.641"/>
</kw>
<status status="PASS" starttime="20231226 11:58:14.625" endtime="20231226 11:58:14.641"/>
</kw>
<msg timestamp="20231226 11:58:14.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:14.625" endtime="20231226 11:58:14.641"/>
</kw>
<msg timestamp="20231226 11:58:14.642" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:14.624" endtime="20231226 11:58:14.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:58:14.642" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231226 11:58:14.642" endtime="20231226 11:58:14.642"/>
</kw>
<status status="FAIL" starttime="20231226 11:58:14.604" endtime="20231226 11:58:14.642"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:24.643" endtime="20231226 11:58:24.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:24.647" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:24.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:24.658" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:24.645" endtime="20231226 11:58:24.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:24.659" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231226 11:58:24.659" endtime="20231226 11:58:24.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:24.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:24.659" endtime="20231226 11:58:24.660"/>
</kw>
<status status="PASS" starttime="20231226 11:58:24.644" endtime="20231226 11:58:24.660"/>
</kw>
<msg timestamp="20231226 11:58:24.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:24.644" endtime="20231226 11:58:24.660"/>
</kw>
<msg timestamp="20231226 11:58:24.660" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:24.644" endtime="20231226 11:58:24.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:24.660" endtime="20231226 11:58:24.661"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:24.664" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:24.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:24.676" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:24.662" endtime="20231226 11:58:24.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:24.678" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:24.677" endtime="20231226 11:58:24.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:24.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:24.678" endtime="20231226 11:58:24.678"/>
</kw>
<status status="PASS" starttime="20231226 11:58:24.662" endtime="20231226 11:58:24.679"/>
</kw>
<msg timestamp="20231226 11:58:24.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:24.661" endtime="20231226 11:58:24.679"/>
</kw>
<msg timestamp="20231226 11:58:24.679" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:24.661" endtime="20231226 11:58:24.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:58:24.679" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231226 11:58:24.679" endtime="20231226 11:58:24.680"/>
</kw>
<status status="FAIL" starttime="20231226 11:58:24.643" endtime="20231226 11:58:24.680"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:34.681" endtime="20231226 11:58:34.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:34.684" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:34.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:34.697" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:34.682" endtime="20231226 11:58:34.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:34.698" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231226 11:58:34.697" endtime="20231226 11:58:34.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:34.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:34.698" endtime="20231226 11:58:34.698"/>
</kw>
<status status="PASS" starttime="20231226 11:58:34.682" endtime="20231226 11:58:34.698"/>
</kw>
<msg timestamp="20231226 11:58:34.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:34.682" endtime="20231226 11:58:34.699"/>
</kw>
<msg timestamp="20231226 11:58:34.699" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:34.681" endtime="20231226 11:58:34.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:34.699" endtime="20231226 11:58:34.699"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:34.702" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:34.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:34.714" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:34.701" endtime="20231226 11:58:34.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:34.715" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:34.715" endtime="20231226 11:58:34.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:34.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:34.716" endtime="20231226 11:58:34.716"/>
</kw>
<status status="PASS" starttime="20231226 11:58:34.700" endtime="20231226 11:58:34.716"/>
</kw>
<msg timestamp="20231226 11:58:34.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:34.700" endtime="20231226 11:58:34.716"/>
</kw>
<msg timestamp="20231226 11:58:34.716" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:34.699" endtime="20231226 11:58:34.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:58:34.717" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231226 11:58:34.717" endtime="20231226 11:58:34.717"/>
</kw>
<status status="FAIL" starttime="20231226 11:58:34.680" endtime="20231226 11:58:34.717"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:44.718" endtime="20231226 11:58:44.719"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:44.722" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:44.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:44.734" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:44.720" endtime="20231226 11:58:44.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:44.735" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231226 11:58:44.734" endtime="20231226 11:58:44.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:44.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:44.735" endtime="20231226 11:58:44.735"/>
</kw>
<status status="PASS" starttime="20231226 11:58:44.720" endtime="20231226 11:58:44.735"/>
</kw>
<msg timestamp="20231226 11:58:44.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:44.719" endtime="20231226 11:58:44.736"/>
</kw>
<msg timestamp="20231226 11:58:44.736" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:44.719" endtime="20231226 11:58:44.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:44.736" endtime="20231226 11:58:44.736"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:44.739" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:44.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:44.751" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:44.737" endtime="20231226 11:58:44.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:44.751" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:44.751" endtime="20231226 11:58:44.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:44.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:44.752" endtime="20231226 11:58:44.752"/>
</kw>
<status status="PASS" starttime="20231226 11:58:44.737" endtime="20231226 11:58:44.752"/>
</kw>
<msg timestamp="20231226 11:58:44.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:44.737" endtime="20231226 11:58:44.752"/>
</kw>
<msg timestamp="20231226 11:58:44.752" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231226 11:58:44.736" endtime="20231226 11:58:44.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:58:44.753" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231226 11:58:44.753" endtime="20231226 11:58:44.753"/>
</kw>
<status status="FAIL" starttime="20231226 11:58:44.718" endtime="20231226 11:58:44.753"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:54.754" endtime="20231226 11:58:54.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.758" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.769" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:54.756" endtime="20231226 11:58:54.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.770" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231226 11:58:54.770" endtime="20231226 11:58:54.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.771" endtime="20231226 11:58:54.771"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.755" endtime="20231226 11:58:54.771"/>
</kw>
<msg timestamp="20231226 11:58:54.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.755" endtime="20231226 11:58:54.771"/>
</kw>
<msg timestamp="20231226 11:58:54.772" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231226 11:58:54.755" endtime="20231226 11:58:54.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.772" endtime="20231226 11:58:54.772"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.775" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.787" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20231226 11:58:54.773" endtime="20231226 11:58:54.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.788" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20231226 11:58:54.787" endtime="20231226 11:58:54.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.788" endtime="20231226 11:58:54.788"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.773" endtime="20231226 11:58:54.789"/>
</kw>
<msg timestamp="20231226 11:58:54.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.773" endtime="20231226 11:58:54.789"/>
</kw>
<msg timestamp="20231226 11:58:54.789" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20231226 11:58:54.772" endtime="20231226 11:58:54.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.789" endtime="20231226 11:58:54.789"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.754" endtime="20231226 11:58:54.790"/>
</kw>
<status status="PASS" starttime="20231226 11:57:54.384" endtime="20231226 11:58:54.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:57:40.138" endtime="20231226 11:58:54.790"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.794" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.822" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1703591...</msg>
<status status="PASS" starttime="20231226 11:58:54.792" endtime="20231226 11:58:54.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.823" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1703591932482,"storageReport":{"capacity":89297309696,"used":22536,"remaining":21614166016,"committed":536852472},"pipelines":[{"pipelineID":"64731ad2-a5fb-4e6a-8c8a-de54eddee4b1","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"d2b73d67-d277-4f3b-bd1e-01a41ae81de6","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"7dd7756f-fbea-4733-b0c1-6ed9c6414773","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1703591777714,"revision":"41f284af94206f1c4196a957ddbb9421407782b6","buildDate":"2023-12-26T11:28Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"944b4165-a1c1-4682-b221-3012dfa2d4ea","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1703591932070,"storageReport":{"capacity":89297309696,"used":6146,"remaining":21614166016,"committed":268433406},"pipelines":[{"pipelineID":"acb1f16e-4a83-4a2a-bf60-fe41588156b4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"d240bddc-6118-416d-886c-ed7f018e7d0b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1703591777582,"revision":"41f284af94206f1c4196a957ddbb9421407782b6","buildDate":"2023-12-26T11:28Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1703591932490,"storageReport":{"capacity":89297309696,"used":11271,"remaining":21614166016,"committed":536863737},"pipelines":[{"pipelineID":"acb1f16e-4a83-4a2a-bf60-fe41588156b4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"0304caca-65a9-4326-b5f1-040f15c0cb58","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"7dd7756f-fbea-4733-b0c1-6ed9c6414773","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1703591778929,"revision":"41f284af94206f1c4196a957ddbb9421407782b6","buildDate":"2023-12-26T11:28Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"6cefca64-ee72-4149-b4bb-c8d039bfac58","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1703591915413,"storageReport":{"capacity":89297309696,"used":4096,"remaining":21914697728,"committed":0},"pipelines":[{"pipelineID":"33bd29c7-203c-49bd-8e81-af9ad2f7d86c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":0,"openContainers":0,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1703591777649,"revision":"41f284af94206f1c4196a957ddbb9421407782b6","buildDate":"2023-12-26T11:28Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"be23b306-6135-4ba7-9f9b-2f62806c6ece","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1703591932503,"storageReport":{"capacity":89297309696,"used":22536,"remaining":21614166016,"committed":536852472},"pipelines":[{"pipelineID":"d2b73d67-d277-4f3b-bd1e-01a41ae81de6","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"7dd7756f-fbea-4733-b0c1-6ed9c6414773","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"5e189135-3365-48a3-8ee4-ef997f82fefa","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1703591776889,"revision":"41f284af94206f1c4196a957ddbb9421407782b6","buildDate":"2023-12-26T11:28Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"593006c7-2382-4152-8469-4a5b7f70d28a","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1703591931976,"storageReport":{"capacity":89297309696,"used":23557,"remaining":21614166016,"committed":536855547},"pipelines":[{"pipelineID":"acb1f16e-4a83-4a2a-bf60-fe41588156b4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"d2b73d67-d277-4f3b-bd1e-01a41ae81de6","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"4965e658-8904-4438-a70f-00413ac46b47","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1703591778885,"revision":"41f284af94206f1c4196a957ddbb9421407782b6","buildDate":"2023-12-26T11:28Z","layoutVersion":7,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20231226 11:58:54.822" endtime="20231226 11:58:54.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.823" endtime="20231226 11:58:54.823"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.792" endtime="20231226 11:58:54.824"/>
</kw>
<msg timestamp="20231226 11:58:54.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.792" endtime="20231226 11:58:54.824"/>
</kw>
<msg timestamp="20231226 11:58:54.824" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1703591...</msg>
<status status="PASS" starttime="20231226 11:58:54.791" endtime="20231226 11:58:54.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.824" endtime="20231226 11:58:54.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.824" endtime="20231226 11:58:54.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.825" endtime="20231226 11:58:54.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.825" endtime="20231226 11:58:54.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.828" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.859" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"64731ad2-a5fb-4e6a-8c8a-de54eddee4b1","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20231226 11:58:54.826" endtime="20231226 11:58:54.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.860" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"64731ad2-a5fb-4e6a-8c8a-de54eddee4b1","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","uuidString":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1846219792,"decommissioned":false,"maintenance":false,"networkName":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","networkLocation":"/rack2","networkFullPath":"/rack2/3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","numOfLeaves":1}],"lastLeaderElection":0,"duration":118818,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"acb1f16e-4a83-4a2a-bf60-fe41588156b4","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"944b4165-a1c1-4682-b221-3012dfa2d4ea","uuidString":"944b4165-a1c1-4682-b221-3012dfa2d4ea","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":945137275,"decommissioned":false,"maintenance":false,"networkName":"944b4165-a1c1-4682-b221-3012dfa2d4ea","networkLocation":"/rack2","networkFullPath":"/rack2/944b4165-a1c1-4682-b221-3012dfa2d4ea","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"593006c7-2382-4152-8469-4a5b7f70d28a","uuidString":"593006c7-2382-4152-8469-4a5b7f70d28a","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1345344737,"decommissioned":false,"maintenance":false,"networkName":"593006c7-2382-4152-8469-4a5b7f70d28a","networkLocation":"/rack1","networkFullPath":"/rack1/593006c7-2382-4152-8469-4a5b7f70d28a","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","uuidString":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1125750647,"decommissioned":false,"maintenance":false,"networkName":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","networkLocation":"/rack2","networkFullPath":"/rack2/3070148f-4fde-41c2-a2c0-776bb8a8e78a","numOfLeaves":1}],"lastLeaderElection":0,"duration":118553,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"0304caca-65a9-4326-b5f1-040f15c0cb58","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","uuidString":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1125750647,"decommissioned":false,"maintenance":false,"networkName":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","networkLocation":"/rack2","networkFullPath":"/rack2/3070148f-4fde-41c2-a2c0-776bb8a8e78a","numOfLeaves":1}],"lastLeaderElection":0,"duration":119097,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"d2b73d67-d277-4f3b-bd1e-01a41ae81de6","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"593006c7-2382-4152-8469-4a5b7f70d28a","uuidString":"593006c7-2382-4152-8469-4a5b7f70d28a","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1345344737,"decommissioned":false,"maintenance":false,"networkName":"593006c7-2382-4152-8469-4a5b7f70d28a","networkLocation":"/rack1","networkFullPath":"/rack1/593006c7-2382-4152-8469-4a5b7f70d28a","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","uuidString":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1846219792,"decommissioned":false,"maintenance":false,"networkName":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","networkLocation":"/rack2","networkFullPath":"/rack2/3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"be23b306-6135-4ba7-9f9b-2f62806c6ece","uuidString":"be23b306-6135-4ba7-9f9b-2f62806c6ece","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":678400728,"decommissioned":false,"maintenance":false,"networkName":"be23b306-6135-4ba7-9f9b-2f62806c6ece","networkLocation":"/rack1","networkFullPath":"/rack1/be23b306-6135-4ba7-9f9b-2f62806c6ece","numOfLeaves":1}],"lastLeaderElection":0,"duration":118785,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"7dd7756f-fbea-4733-b0c1-6ed9c6414773","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","uuidString":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1846219792,"decommissioned":false,"maintenance":false,"networkName":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","networkLocation":"/rack2","networkFullPath":"/rack2/3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"be23b306-6135-4ba7-9f9b-2f62806c6ece","uuidString":"be23b306-6135-4ba7-9f9b-2f62806c6ece","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":678400728,"decommissioned":false,"maintenance":false,"networkName":"be23b306-6135-4ba7-9f9b-2f62806c6ece","networkLocation":"/rack1","networkFullPath":"/rack1/be23b306-6135-4ba7-9f9b-2f62806c6ece","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","uuidString":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1125750647,"decommissioned":false,"maintenance":false,"networkName":"3070148f-4fde-41c2-a2c0-776bb8a8e78a","networkLocation":"/rack2","networkFullPath":"/rack2/3070148f-4fde-41c2-a2c0-776bb8a8e78a","numOfLeaves":1}],"lastLeaderElection":0,"duration":118799,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"33bd29c7-203c-49bd-8e81-af9ad2f7d86c","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"6cefca64-ee72-4149-b4bb-c8d039bfac58","uuidString":"6cefca64-ee72-4149-b4bb-c8d039bfac58","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1252040027,"decommissioned":false,"maintenance":false,"networkName":"6cefca64-ee72-4149-b4bb-c8d039bfac58","networkLocation":"/rack1","networkFullPath":"/rack1/6cefca64-ee72-4149-b4bb-c8d039bfac58","numOfLeaves":1}],"lastLeaderElection":0,"duration":118496,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"4965e658-8904-4438-a70f-00413ac46b47","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"593006c7-2382-4152-8469-4a5b7f70d28a","uuidString":"593006c7-2382-4152-8469-4a5b7f70d28a","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1345344737,"decommissioned":false,"maintenance":false,"networkName":"593006c7-2382-4152-8469-4a5b7f70d28a","networkLocation":"/rack1","networkFullPath":"/rack1/593006c7-2382-4152-8469-4a5b7f70d28a","numOfLeaves":1}],"lastLeaderElection":0,"duration":119386,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"5e189135-3365-48a3-8ee4-ef997f82fefa","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"be23b306-6135-4ba7-9f9b-2f62806c6ece","uuidString":"be23b306-6135-4ba7-9f9b-2f62806c6ece","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":678400728,"decommissioned":false,"maintenance":false,"networkName":"be23b306-6135-4ba7-9f9b-2f62806c6ece","networkLocation":"/rack1","networkFullPath":"/rack1/be23b306-6135-4ba7-9f9b-2f62806c6ece","numOfLeaves":1}],"lastLeaderElection":0,"duration":119178,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"d240bddc-6118-416d-886c-ed7f018e7d0b","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"944b4165-a1c1-4682-b221-3012dfa2d4ea","uuidString":"944b4165-a1c1-4682-b221-3012dfa2d4ea","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":945137275,"decommissioned":false,"maintenance":false,"networkName":"944b4165-a1c1-4682-b221-3012dfa2d4ea","networkLocation":"/rack2","networkFullPath":"/rack2/944b4165-a1c1-4682-b221-3012dfa2d4ea","numOfLeaves":1}],"lastLeaderElection":0,"duration":118585,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20231226 11:58:54.859" endtime="20231226 11:58:54.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.860" endtime="20231226 11:58:54.860"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.826" endtime="20231226 11:58:54.860"/>
</kw>
<msg timestamp="20231226 11:58:54.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.826" endtime="20231226 11:58:54.861"/>
</kw>
<msg timestamp="20231226 11:58:54.861" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"64731ad2-a5fb-4e6a-8c8a-de54eddee4b1","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20231226 11:58:54.825" endtime="20231226 11:58:54.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.861" endtime="20231226 11:58:54.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.862" endtime="20231226 11:58:54.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.862" endtime="20231226 11:58:54.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.862" endtime="20231226 11:58:54.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.863" endtime="20231226 11:58:54.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.863" endtime="20231226 11:58:54.863"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.866" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.902" level="INFO">${output} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":129985527808,"committed":2415857634},"containers":3,"missingCon...</msg>
<status status="PASS" starttime="20231226 11:58:54.865" endtime="20231226 11:58:54.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.903" level="INFO">{"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":129985527808,"committed":2415857634},"containers":3,"missingContainers":0,"openContainers":3,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20231226 11:58:54.903" endtime="20231226 11:58:54.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.904" endtime="20231226 11:58:54.904"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.864" endtime="20231226 11:58:54.904"/>
</kw>
<msg timestamp="20231226 11:58:54.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.864" endtime="20231226 11:58:54.904"/>
</kw>
<msg timestamp="20231226 11:58:54.905" level="INFO">${result} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":129985527808,"committed":2415857634},"containers":3,"missingCon...</msg>
<status status="PASS" starttime="20231226 11:58:54.864" endtime="20231226 11:58:54.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.905" endtime="20231226 11:58:54.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.905" endtime="20231226 11:58:54.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.906" endtime="20231226 11:58:54.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.910" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.926" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1703591836500,"lastSeenTime":1703591836500,"stat...</msg>
<status status="PASS" starttime="20231226 11:58:54.908" endtime="20231226 11:58:54.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.927" level="INFO">[{"containerId":1,"datanodeUuid":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1703591836500,"lastSeenTime":1703591836500,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"be23b306-6135-4ba7-9f9b-2f62806c6ece","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1703591836303,"lastSeenTime":1703591836303,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"593006c7-2382-4152-8469-4a5b7f70d28a","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1703591836489,"lastSeenTime":1703591836489,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20231226 11:58:54.926" endtime="20231226 11:58:54.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.927" endtime="20231226 11:58:54.927"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.907" endtime="20231226 11:58:54.928"/>
</kw>
<msg timestamp="20231226 11:58:54.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.907" endtime="20231226 11:58:54.928"/>
</kw>
<msg timestamp="20231226 11:58:54.928" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"3f4e8c95-6ab7-4b0b-84ce-d760e8bfaf73","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1703591836500,"lastSeenTime":1703591836500,"stat...</msg>
<status status="PASS" starttime="20231226 11:58:54.907" endtime="20231226 11:58:54.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.928" endtime="20231226 11:58:54.928"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:58:54.790" endtime="20231226 11:58:54.929"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:54.930" endtime="20231226 11:58:54.930"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.933" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.947" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20231226 11:58:54.931" endtime="20231226 11:58:54.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.948" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.221a50ab.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.46b339d9.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.387adff4.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.584ef185.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.947" endtime="20231226 11:58:54.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.948" endtime="20231226 11:58:54.948"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.931" endtime="20231226 11:58:54.948"/>
</kw>
<msg timestamp="20231226 11:58:54.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.931" endtime="20231226 11:58:54.949"/>
</kw>
<msg timestamp="20231226 11:58:54.949" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20231226 11:58:54.930" endtime="20231226 11:58:54.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.949" endtime="20231226 11:58:54.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:58:54.929" endtime="20231226 11:58:54.950"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.953" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.955" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:54.952" endtime="20231226 11:58:54.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.956" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:54.956" endtime="20231226 11:58:54.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.956" endtime="20231226 11:58:54.957"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.951" endtime="20231226 11:58:54.957"/>
</kw>
<msg timestamp="20231226 11:58:54.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.951" endtime="20231226 11:58:54.957"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.951" endtime="20231226 11:58:54.957"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.960" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.971" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:54.959" endtime="20231226 11:58:54.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.972" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:54.971" endtime="20231226 11:58:54.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.972" endtime="20231226 11:58:54.972"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.958" endtime="20231226 11:58:54.973"/>
</kw>
<msg timestamp="20231226 11:58:54.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.958" endtime="20231226 11:58:54.973"/>
</kw>
<msg timestamp="20231226 11:58:54.973" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:54.958" endtime="20231226 11:58:54.973"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:54.973" endtime="20231226 11:58:54.973"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:54.973" endtime="20231226 11:58:54.973"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.974" endtime="20231226 11:58:54.974"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.973" endtime="20231226 11:58:54.974"/>
</branch>
<status status="PASS" starttime="20231226 11:58:54.973" endtime="20231226 11:58:54.974"/>
</if>
<status status="PASS" starttime="20231226 11:58:54.957" endtime="20231226 11:58:54.974"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:54.975" endtime="20231226 11:58:54.975"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.974" endtime="20231226 11:58:54.975"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.978" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.988" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:54.976" endtime="20231226 11:58:54.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.989" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:54.988" endtime="20231226 11:58:54.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.989" endtime="20231226 11:58:54.990"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.976" endtime="20231226 11:58:54.990"/>
</kw>
<msg timestamp="20231226 11:58:54.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.976" endtime="20231226 11:58:54.990"/>
</kw>
<msg timestamp="20231226 11:58:54.990" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:54.975" endtime="20231226 11:58:54.990"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:54.990" endtime="20231226 11:58:54.990"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:54.990" endtime="20231226 11:58:54.990"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:54.991" endtime="20231226 11:58:54.991"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.991" endtime="20231226 11:58:54.991"/>
</branch>
<status status="PASS" starttime="20231226 11:58:54.990" endtime="20231226 11:58:54.991"/>
</if>
<status status="PASS" starttime="20231226 11:58:54.975" endtime="20231226 11:58:54.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:58:54.950" endtime="20231226 11:58:54.991"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:54.995" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:54.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:54.997" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:54.994" endtime="20231226 11:58:54.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:54.998" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:54.998" endtime="20231226 11:58:54.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:54.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:54.998" endtime="20231226 11:58:54.999"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.993" endtime="20231226 11:58:54.999"/>
</kw>
<msg timestamp="20231226 11:58:54.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:54.993" endtime="20231226 11:58:54.999"/>
</kw>
<status status="PASS" starttime="20231226 11:58:54.993" endtime="20231226 11:58:54.999"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.002" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.013" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.000" endtime="20231226 11:58:55.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.013" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.013" endtime="20231226 11:58:55.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.014" endtime="20231226 11:58:55.014"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.000" endtime="20231226 11:58:55.014"/>
</kw>
<msg timestamp="20231226 11:58:55.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.000" endtime="20231226 11:58:55.014"/>
</kw>
<msg timestamp="20231226 11:58:55.014" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:54.999" endtime="20231226 11:58:55.014"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.015" endtime="20231226 11:58:55.015"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.015" endtime="20231226 11:58:55.015"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.015" endtime="20231226 11:58:55.015"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.015" endtime="20231226 11:58:55.015"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.015" endtime="20231226 11:58:55.015"/>
</if>
<status status="PASS" starttime="20231226 11:58:54.999" endtime="20231226 11:58:55.016"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:55.016" endtime="20231226 11:58:55.016"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.016" endtime="20231226 11:58:55.016"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.019" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.030" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.018" endtime="20231226 11:58:55.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.030" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.030" endtime="20231226 11:58:55.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.031" endtime="20231226 11:58:55.031"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.017" endtime="20231226 11:58:55.031"/>
</kw>
<msg timestamp="20231226 11:58:55.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.017" endtime="20231226 11:58:55.031"/>
</kw>
<msg timestamp="20231226 11:58:55.031" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.017" endtime="20231226 11:58:55.031"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.032" endtime="20231226 11:58:55.032"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.032" endtime="20231226 11:58:55.032"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.032" endtime="20231226 11:58:55.033"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.032" endtime="20231226 11:58:55.033"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.032" endtime="20231226 11:58:55.033"/>
</if>
<status status="PASS" starttime="20231226 11:58:55.016" endtime="20231226 11:58:55.033"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:55.033" endtime="20231226 11:58:55.033"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.033" endtime="20231226 11:58:55.034"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.036" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.046" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.035" endtime="20231226 11:58:55.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.047" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.047" endtime="20231226 11:58:55.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.047" endtime="20231226 11:58:55.048"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.035" endtime="20231226 11:58:55.048"/>
</kw>
<msg timestamp="20231226 11:58:55.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.034" endtime="20231226 11:58:55.048"/>
</kw>
<msg timestamp="20231226 11:58:55.048" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.034" endtime="20231226 11:58:55.048"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.049" endtime="20231226 11:58:55.049"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.048" endtime="20231226 11:58:55.049"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.049" endtime="20231226 11:58:55.049"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.049" endtime="20231226 11:58:55.049"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.048" endtime="20231226 11:58:55.049"/>
</if>
<status status="PASS" starttime="20231226 11:58:55.034" endtime="20231226 11:58:55.049"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:55.050" endtime="20231226 11:58:55.050"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.049" endtime="20231226 11:58:55.050"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.053" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.064" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.052" endtime="20231226 11:58:55.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.064" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.064" endtime="20231226 11:58:55.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.065" endtime="20231226 11:58:55.065"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.051" endtime="20231226 11:58:55.065"/>
</kw>
<msg timestamp="20231226 11:58:55.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.051" endtime="20231226 11:58:55.065"/>
</kw>
<msg timestamp="20231226 11:58:55.066" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.051" endtime="20231226 11:58:55.066"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.066" endtime="20231226 11:58:55.066"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.066" endtime="20231226 11:58:55.066"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.066" endtime="20231226 11:58:55.067"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.066" endtime="20231226 11:58:55.067"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.066" endtime="20231226 11:58:55.067"/>
</if>
<status status="PASS" starttime="20231226 11:58:55.050" endtime="20231226 11:58:55.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:58:54.992" endtime="20231226 11:58:55.067"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.071" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.073" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:55.069" endtime="20231226 11:58:55.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.074" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:55.073" endtime="20231226 11:58:55.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.074" endtime="20231226 11:58:55.074"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.069" endtime="20231226 11:58:55.074"/>
</kw>
<msg timestamp="20231226 11:58:55.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.068" endtime="20231226 11:58:55.074"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.068" endtime="20231226 11:58:55.075"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.077" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.109" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.076" endtime="20231226 11:58:55.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.110" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.109" endtime="20231226 11:58:55.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.110" endtime="20231226 11:58:55.111"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.076" endtime="20231226 11:58:55.111"/>
</kw>
<msg timestamp="20231226 11:58:55.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.076" endtime="20231226 11:58:55.111"/>
</kw>
<msg timestamp="20231226 11:58:55.112" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.075" endtime="20231226 11:58:55.112"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.112" endtime="20231226 11:58:55.112"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.112" endtime="20231226 11:58:55.112"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.112" endtime="20231226 11:58:55.113"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.112" endtime="20231226 11:58:55.113"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.112" endtime="20231226 11:58:55.113"/>
</if>
<status status="PASS" starttime="20231226 11:58:55.075" endtime="20231226 11:58:55.113"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:55.113" endtime="20231226 11:58:55.114"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.113" endtime="20231226 11:58:55.114"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.117" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.130" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.115" endtime="20231226 11:58:55.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.131" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.131" endtime="20231226 11:58:55.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.131" endtime="20231226 11:58:55.132"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.115" endtime="20231226 11:58:55.132"/>
</kw>
<msg timestamp="20231226 11:58:55.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.115" endtime="20231226 11:58:55.132"/>
</kw>
<msg timestamp="20231226 11:58:55.132" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.114" endtime="20231226 11:58:55.132"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.133" endtime="20231226 11:58:55.133"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.132" endtime="20231226 11:58:55.133"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.133" endtime="20231226 11:58:55.133"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.133" endtime="20231226 11:58:55.133"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.132" endtime="20231226 11:58:55.133"/>
</if>
<status status="PASS" starttime="20231226 11:58:55.114" endtime="20231226 11:58:55.133"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:55.134" endtime="20231226 11:58:55.134"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.134" endtime="20231226 11:58:55.134"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.137" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.149" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.136" endtime="20231226 11:58:55.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.150" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.149" endtime="20231226 11:58:55.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.150" endtime="20231226 11:58:55.151"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.135" endtime="20231226 11:58:55.151"/>
</kw>
<msg timestamp="20231226 11:58:55.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.135" endtime="20231226 11:58:55.151"/>
</kw>
<msg timestamp="20231226 11:58:55.151" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.135" endtime="20231226 11:58:55.151"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.152" endtime="20231226 11:58:55.152"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.151" endtime="20231226 11:58:55.152"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.152" endtime="20231226 11:58:55.152"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.152" endtime="20231226 11:58:55.152"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.151" endtime="20231226 11:58:55.152"/>
</if>
<status status="PASS" starttime="20231226 11:58:55.134" endtime="20231226 11:58:55.152"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:55.153" endtime="20231226 11:58:55.153"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.152" endtime="20231226 11:58:55.153"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.156" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.168" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.155" endtime="20231226 11:58:55.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.169" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.169" endtime="20231226 11:58:55.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.169" endtime="20231226 11:58:55.170"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.154" endtime="20231226 11:58:55.170"/>
</kw>
<msg timestamp="20231226 11:58:55.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.154" endtime="20231226 11:58:55.170"/>
</kw>
<msg timestamp="20231226 11:58:55.170" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.154" endtime="20231226 11:58:55.170"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.171" endtime="20231226 11:58:55.171"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.170" endtime="20231226 11:58:55.171"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.171" endtime="20231226 11:58:55.171"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.171" endtime="20231226 11:58:55.171"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.170" endtime="20231226 11:58:55.171"/>
</if>
<status status="PASS" starttime="20231226 11:58:55.153" endtime="20231226 11:58:55.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:58:55.068" endtime="20231226 11:58:55.172"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.175" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.178" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:55.174" endtime="20231226 11:58:55.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.178" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:55.178" endtime="20231226 11:58:55.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.178" endtime="20231226 11:58:55.179"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.173" endtime="20231226 11:58:55.179"/>
</kw>
<msg timestamp="20231226 11:58:55.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.173" endtime="20231226 11:58:55.179"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.173" endtime="20231226 11:58:55.179"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.182" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.198" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.181" endtime="20231226 11:58:55.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.199" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.198" endtime="20231226 11:58:55.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.199" endtime="20231226 11:58:55.199"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.180" endtime="20231226 11:58:55.200"/>
</kw>
<msg timestamp="20231226 11:58:55.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.180" endtime="20231226 11:58:55.200"/>
</kw>
<msg timestamp="20231226 11:58:55.200" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.180" endtime="20231226 11:58:55.200"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.200" endtime="20231226 11:58:55.201"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.200" endtime="20231226 11:58:55.201"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.201" endtime="20231226 11:58:55.201"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.201" endtime="20231226 11:58:55.201"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.200" endtime="20231226 11:58:55.201"/>
</if>
<status status="PASS" starttime="20231226 11:58:55.179" endtime="20231226 11:58:55.201"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:55.202" endtime="20231226 11:58:55.202"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.201" endtime="20231226 11:58:55.202"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.205" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.222" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.204" endtime="20231226 11:58:55.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.223" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:58:55.222" endtime="20231226 11:58:55.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.223" endtime="20231226 11:58:55.224"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.203" endtime="20231226 11:58:55.224"/>
</kw>
<msg timestamp="20231226 11:58:55.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.203" endtime="20231226 11:58:55.224"/>
</kw>
<msg timestamp="20231226 11:58:55.224" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:58:55.203" endtime="20231226 11:58:55.224"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:58:55.225" endtime="20231226 11:58:55.225"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:58:55.224" endtime="20231226 11:58:55.225"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:55.225" endtime="20231226 11:58:55.226"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.225" endtime="20231226 11:58:55.226"/>
</branch>
<status status="PASS" starttime="20231226 11:58:55.224" endtime="20231226 11:58:55.226"/>
</if>
<status status="PASS" starttime="20231226 11:58:55.202" endtime="20231226 11:58:55.226"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:58:55.172" endtime="20231226 11:58:55.226"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20231226 11:57:40.108" endtime="20231226 11:58:55.227"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.242" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:55.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:55.244" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:55.240" endtime="20231226 11:58:55.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:55.245" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:58:55.245" endtime="20231226 11:58:55.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:55.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:55.245" endtime="20231226 11:58:55.245"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.239" endtime="20231226 11:58:55.246"/>
</kw>
<msg timestamp="20231226 11:58:55.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.239" endtime="20231226 11:58:55.246"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.239" endtime="20231226 11:58:55.246"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:58:55.246" endtime="20231226 11:58:55.247"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.246" endtime="20231226 11:58:55.247"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 11:58:55.247" level="INFO">${random} = nkpvx</msg>
<status status="PASS" starttime="20231226 11:58:55.247" endtime="20231226 11:58:55.247"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:58:55.248" level="INFO">${VOLUME} = vol-nkpvx</msg>
<status status="PASS" starttime="20231226 11:58:55.247" endtime="20231226 11:58:55.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:55.259" level="INFO">Running command 'ozone sh volume create /vol-nkpvx 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:58:58.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:58:58.517" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:58:55.258" endtime="20231226 11:58:58.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:58:58.518" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:58:58.518" endtime="20231226 11:58:58.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:58:58.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:58:58.518" endtime="20231226 11:58:58.519"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.257" endtime="20231226 11:58:58.519"/>
</kw>
<msg timestamp="20231226 11:58:58.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:55.257" endtime="20231226 11:58:58.519"/>
</kw>
<msg timestamp="20231226 11:58:58.519" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:58:55.248" endtime="20231226 11:58:58.519"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:58:58.519" endtime="20231226 11:58:58.520"/>
</kw>
<status status="PASS" starttime="20231226 11:58:55.247" endtime="20231226 11:58:58.520"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:58:55.238" endtime="20231226 11:58:58.520"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 11:58:58.522" level="INFO">${random} = qdcql</msg>
<status status="PASS" starttime="20231226 11:58:58.522" endtime="20231226 11:58:58.522"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:58:58.522" level="INFO">${BUCKET} = buc-qdcql</msg>
<status status="PASS" starttime="20231226 11:58:58.522" endtime="20231226 11:58:58.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:58:58.525" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-nkpvx/buc-qdcql 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:01.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:01.519" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:58:58.524" endtime="20231226 11:59:01.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:01.520" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:01.520" endtime="20231226 11:59:01.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:01.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:01.520" endtime="20231226 11:59:01.521"/>
</kw>
<status status="PASS" starttime="20231226 11:58:58.523" endtime="20231226 11:59:01.521"/>
</kw>
<msg timestamp="20231226 11:59:01.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:58:58.523" endtime="20231226 11:59:01.521"/>
</kw>
<msg timestamp="20231226 11:59:01.521" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:58:58.523" endtime="20231226 11:59:01.521"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:01.521" endtime="20231226 11:59:01.522"/>
</kw>
<status status="PASS" starttime="20231226 11:58:58.521" endtime="20231226 11:59:01.522"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:58:58.521" endtime="20231226 11:59:01.522"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:01.526" level="INFO">Running command 'ozone sh key put /vol-nkpvx/buc-qdcql/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:06.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:06.258" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:01.525" endtime="20231226 11:59:06.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:06.259" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:06.258" endtime="20231226 11:59:06.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:06.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:06.259" endtime="20231226 11:59:06.259"/>
</kw>
<status status="PASS" starttime="20231226 11:59:01.524" endtime="20231226 11:59:06.259"/>
</kw>
<msg timestamp="20231226 11:59:06.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:01.524" endtime="20231226 11:59:06.260"/>
</kw>
<msg timestamp="20231226 11:59:06.260" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:01.523" endtime="20231226 11:59:06.260"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:06.260" endtime="20231226 11:59:06.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:06.264" level="INFO">Running command 'ozone sh key put /vol-nkpvx/buc-qdcql/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.316" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:06.262" endtime="20231226 11:59:11.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.317" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:11.317" endtime="20231226 11:59:11.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.317" endtime="20231226 11:59:11.318"/>
</kw>
<status status="PASS" starttime="20231226 11:59:06.261" endtime="20231226 11:59:11.318"/>
</kw>
<msg timestamp="20231226 11:59:11.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:06.261" endtime="20231226 11:59:11.318"/>
</kw>
<msg timestamp="20231226 11:59:11.318" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:06.260" endtime="20231226 11:59:11.318"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.319" endtime="20231226 11:59:11.319"/>
</kw>
<status status="PASS" starttime="20231226 11:59:01.523" endtime="20231226 11:59:11.319"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:01.523" endtime="20231226 11:59:11.319"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.323" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.326" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:59:11.322" endtime="20231226 11:59:11.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.326" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:59:11.326" endtime="20231226 11:59:11.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.326" endtime="20231226 11:59:11.327"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.321" endtime="20231226 11:59:11.327"/>
</kw>
<msg timestamp="20231226 11:59:11.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.321" endtime="20231226 11:59:11.327"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.321" endtime="20231226 11:59:11.327"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.330" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.358" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.329" endtime="20231226 11:59:11.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.359" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.359" endtime="20231226 11:59:11.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.359" endtime="20231226 11:59:11.360"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.328" endtime="20231226 11:59:11.360"/>
</kw>
<msg timestamp="20231226 11:59:11.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.328" endtime="20231226 11:59:11.360"/>
</kw>
<msg timestamp="20231226 11:59:11.360" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.328" endtime="20231226 11:59:11.360"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.361" endtime="20231226 11:59:11.361"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.361" endtime="20231226 11:59:11.361"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.361" endtime="20231226 11:59:11.361"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.361" endtime="20231226 11:59:11.361"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.360" endtime="20231226 11:59:11.362"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.327" endtime="20231226 11:59:11.362"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.362" endtime="20231226 11:59:11.362"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.362" endtime="20231226 11:59:11.362"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.365" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.378" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.364" endtime="20231226 11:59:11.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.379" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.378" endtime="20231226 11:59:11.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.379" endtime="20231226 11:59:11.380"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.363" endtime="20231226 11:59:11.380"/>
</kw>
<msg timestamp="20231226 11:59:11.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.363" endtime="20231226 11:59:11.380"/>
</kw>
<msg timestamp="20231226 11:59:11.380" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.363" endtime="20231226 11:59:11.380"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.381" endtime="20231226 11:59:11.381"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.381" endtime="20231226 11:59:11.381"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.381" endtime="20231226 11:59:11.382"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.381" endtime="20231226 11:59:11.382"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.380" endtime="20231226 11:59:11.382"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.363" endtime="20231226 11:59:11.382"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.382" endtime="20231226 11:59:11.383"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.382" endtime="20231226 11:59:11.383"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.386" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.398" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.385" endtime="20231226 11:59:11.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.398" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.398" endtime="20231226 11:59:11.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.399" endtime="20231226 11:59:11.399"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.384" endtime="20231226 11:59:11.399"/>
</kw>
<msg timestamp="20231226 11:59:11.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.384" endtime="20231226 11:59:11.399"/>
</kw>
<msg timestamp="20231226 11:59:11.400" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.383" endtime="20231226 11:59:11.400"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.400" endtime="20231226 11:59:11.400"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.400" endtime="20231226 11:59:11.400"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.400" endtime="20231226 11:59:11.400"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.400" endtime="20231226 11:59:11.401"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.400" endtime="20231226 11:59:11.401"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.383" endtime="20231226 11:59:11.401"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.401" endtime="20231226 11:59:11.401"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.401" endtime="20231226 11:59:11.401"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.404" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.417" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.403" endtime="20231226 11:59:11.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.418" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.417" endtime="20231226 11:59:11.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.418" endtime="20231226 11:59:11.418"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.403" endtime="20231226 11:59:11.418"/>
</kw>
<msg timestamp="20231226 11:59:11.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.403" endtime="20231226 11:59:11.419"/>
</kw>
<msg timestamp="20231226 11:59:11.419" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.402" endtime="20231226 11:59:11.419"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.419" endtime="20231226 11:59:11.419"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.419" endtime="20231226 11:59:11.419"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.419" endtime="20231226 11:59:11.420"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.419" endtime="20231226 11:59:11.420"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.419" endtime="20231226 11:59:11.420"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.402" endtime="20231226 11:59:11.420"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.320" endtime="20231226 11:59:11.420"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:11.320" endtime="20231226 11:59:11.420"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.424" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.427" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:59:11.423" endtime="20231226 11:59:11.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.427" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:59:11.427" endtime="20231226 11:59:11.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.427" endtime="20231226 11:59:11.428"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.422" endtime="20231226 11:59:11.428"/>
</kw>
<msg timestamp="20231226 11:59:11.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.422" endtime="20231226 11:59:11.428"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.422" endtime="20231226 11:59:11.428"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.431" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.452" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.430" endtime="20231226 11:59:11.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.453" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.452" endtime="20231226 11:59:11.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.453" endtime="20231226 11:59:11.453"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.429" endtime="20231226 11:59:11.453"/>
</kw>
<msg timestamp="20231226 11:59:11.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.429" endtime="20231226 11:59:11.453"/>
</kw>
<msg timestamp="20231226 11:59:11.454" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.429" endtime="20231226 11:59:11.454"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.454" endtime="20231226 11:59:11.454"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.454" endtime="20231226 11:59:11.454"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.454" endtime="20231226 11:59:11.455"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.454" endtime="20231226 11:59:11.455"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.454" endtime="20231226 11:59:11.455"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.428" endtime="20231226 11:59:11.455"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.455" endtime="20231226 11:59:11.456"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.455" endtime="20231226 11:59:11.456"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.459" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.471" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.457" endtime="20231226 11:59:11.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.472" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.472" endtime="20231226 11:59:11.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.473" endtime="20231226 11:59:11.473"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.457" endtime="20231226 11:59:11.473"/>
</kw>
<msg timestamp="20231226 11:59:11.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.457" endtime="20231226 11:59:11.473"/>
</kw>
<msg timestamp="20231226 11:59:11.473" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.456" endtime="20231226 11:59:11.473"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.474" endtime="20231226 11:59:11.474"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.474" endtime="20231226 11:59:11.474"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.474" endtime="20231226 11:59:11.474"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.474" endtime="20231226 11:59:11.474"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.473" endtime="20231226 11:59:11.474"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.456" endtime="20231226 11:59:11.474"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.475" endtime="20231226 11:59:11.475"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.475" endtime="20231226 11:59:11.475"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.478" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.490" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.477" endtime="20231226 11:59:11.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.491" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.490" endtime="20231226 11:59:11.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.491" endtime="20231226 11:59:11.491"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.476" endtime="20231226 11:59:11.492"/>
</kw>
<msg timestamp="20231226 11:59:11.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.476" endtime="20231226 11:59:11.492"/>
</kw>
<msg timestamp="20231226 11:59:11.492" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.476" endtime="20231226 11:59:11.492"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.492" endtime="20231226 11:59:11.492"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.492" endtime="20231226 11:59:11.492"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.492" endtime="20231226 11:59:11.493"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.492" endtime="20231226 11:59:11.493"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.492" endtime="20231226 11:59:11.493"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.475" endtime="20231226 11:59:11.493"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.493" endtime="20231226 11:59:11.494"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.493" endtime="20231226 11:59:11.494"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.496" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.508" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.495" endtime="20231226 11:59:11.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.509" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.508" endtime="20231226 11:59:11.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.509" endtime="20231226 11:59:11.509"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.495" endtime="20231226 11:59:11.510"/>
</kw>
<msg timestamp="20231226 11:59:11.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.495" endtime="20231226 11:59:11.510"/>
</kw>
<msg timestamp="20231226 11:59:11.510" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.494" endtime="20231226 11:59:11.510"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.510" endtime="20231226 11:59:11.510"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.510" endtime="20231226 11:59:11.510"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.511" endtime="20231226 11:59:11.511"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.510" endtime="20231226 11:59:11.511"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.510" endtime="20231226 11:59:11.511"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.494" endtime="20231226 11:59:11.511"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.421" endtime="20231226 11:59:11.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:11.421" endtime="20231226 11:59:11.511"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.515" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.517" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:59:11.514" endtime="20231226 11:59:11.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.518" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:59:11.518" endtime="20231226 11:59:11.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.518" endtime="20231226 11:59:11.519"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.514" endtime="20231226 11:59:11.519"/>
</kw>
<msg timestamp="20231226 11:59:11.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.513" endtime="20231226 11:59:11.519"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.513" endtime="20231226 11:59:11.519"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.522" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.541" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.521" endtime="20231226 11:59:11.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.542" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.541" endtime="20231226 11:59:11.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.542" endtime="20231226 11:59:11.542"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.520" endtime="20231226 11:59:11.543"/>
</kw>
<msg timestamp="20231226 11:59:11.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.520" endtime="20231226 11:59:11.543"/>
</kw>
<msg timestamp="20231226 11:59:11.543" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.520" endtime="20231226 11:59:11.543"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.543" endtime="20231226 11:59:11.543"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.543" endtime="20231226 11:59:11.543"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.544" endtime="20231226 11:59:11.544"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.543" endtime="20231226 11:59:11.544"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.543" endtime="20231226 11:59:11.544"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.519" endtime="20231226 11:59:11.544"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.544" endtime="20231226 11:59:11.545"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.544" endtime="20231226 11:59:11.545"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.548" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.562" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.546" endtime="20231226 11:59:11.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.563" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.562" endtime="20231226 11:59:11.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.563" endtime="20231226 11:59:11.563"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.546" endtime="20231226 11:59:11.564"/>
</kw>
<msg timestamp="20231226 11:59:11.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.546" endtime="20231226 11:59:11.564"/>
</kw>
<msg timestamp="20231226 11:59:11.564" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.545" endtime="20231226 11:59:11.564"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.564" endtime="20231226 11:59:11.564"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.564" endtime="20231226 11:59:11.564"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.565" endtime="20231226 11:59:11.565"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.564" endtime="20231226 11:59:11.565"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.564" endtime="20231226 11:59:11.565"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.545" endtime="20231226 11:59:11.565"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.565" endtime="20231226 11:59:11.566"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.565" endtime="20231226 11:59:11.566"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.569" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.583" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.567" endtime="20231226 11:59:11.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.584" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.583" endtime="20231226 11:59:11.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.584" endtime="20231226 11:59:11.584"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.567" endtime="20231226 11:59:11.584"/>
</kw>
<msg timestamp="20231226 11:59:11.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.567" endtime="20231226 11:59:11.585"/>
</kw>
<msg timestamp="20231226 11:59:11.585" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.566" endtime="20231226 11:59:11.585"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.585" endtime="20231226 11:59:11.585"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.585" endtime="20231226 11:59:11.585"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.585" endtime="20231226 11:59:11.586"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.585" endtime="20231226 11:59:11.586"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.585" endtime="20231226 11:59:11.586"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.566" endtime="20231226 11:59:11.586"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.586" endtime="20231226 11:59:11.587"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.586" endtime="20231226 11:59:11.587"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.590" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.603" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.588" endtime="20231226 11:59:11.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.604" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.604" endtime="20231226 11:59:11.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.604" endtime="20231226 11:59:11.605"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.588" endtime="20231226 11:59:11.605"/>
</kw>
<msg timestamp="20231226 11:59:11.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.588" endtime="20231226 11:59:11.605"/>
</kw>
<msg timestamp="20231226 11:59:11.605" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.587" endtime="20231226 11:59:11.605"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.606" endtime="20231226 11:59:11.606"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.605" endtime="20231226 11:59:11.606"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.606" endtime="20231226 11:59:11.606"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.606" endtime="20231226 11:59:11.606"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.605" endtime="20231226 11:59:11.606"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.587" endtime="20231226 11:59:11.606"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.512" endtime="20231226 11:59:11.606"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:11.512" endtime="20231226 11:59:11.607"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.611" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.613" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:59:11.609" endtime="20231226 11:59:11.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.614" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231226 11:59:11.613" endtime="20231226 11:59:11.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.614" endtime="20231226 11:59:11.614"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.609" endtime="20231226 11:59:11.614"/>
</kw>
<msg timestamp="20231226 11:59:11.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.608" endtime="20231226 11:59:11.614"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.608" endtime="20231226 11:59:11.615"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.618" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.633" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.616" endtime="20231226 11:59:11.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.634" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.633" endtime="20231226 11:59:11.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.634" endtime="20231226 11:59:11.634"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.616" endtime="20231226 11:59:11.634"/>
</kw>
<msg timestamp="20231226 11:59:11.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.616" endtime="20231226 11:59:11.635"/>
</kw>
<msg timestamp="20231226 11:59:11.635" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.615" endtime="20231226 11:59:11.635"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.635" endtime="20231226 11:59:11.635"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.635" endtime="20231226 11:59:11.635"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.635" endtime="20231226 11:59:11.636"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.635" endtime="20231226 11:59:11.636"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.635" endtime="20231226 11:59:11.636"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.615" endtime="20231226 11:59:11.636"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.636" endtime="20231226 11:59:11.637"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.636" endtime="20231226 11:59:11.637"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.639" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.650" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.638" endtime="20231226 11:59:11.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.650" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.650" endtime="20231226 11:59:11.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.650" endtime="20231226 11:59:11.651"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.638" endtime="20231226 11:59:11.651"/>
</kw>
<msg timestamp="20231226 11:59:11.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.637" endtime="20231226 11:59:11.651"/>
</kw>
<msg timestamp="20231226 11:59:11.651" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.637" endtime="20231226 11:59:11.651"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.652" endtime="20231226 11:59:11.652"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.651" endtime="20231226 11:59:11.652"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.652" endtime="20231226 11:59:11.652"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.652" endtime="20231226 11:59:11.652"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.651" endtime="20231226 11:59:11.652"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.637" endtime="20231226 11:59:11.652"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.653" endtime="20231226 11:59:11.653"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.652" endtime="20231226 11:59:11.653"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.656" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.666" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.654" endtime="20231226 11:59:11.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.666" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.666" endtime="20231226 11:59:11.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.666" endtime="20231226 11:59:11.667"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.654" endtime="20231226 11:59:11.667"/>
</kw>
<msg timestamp="20231226 11:59:11.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.654" endtime="20231226 11:59:11.667"/>
</kw>
<msg timestamp="20231226 11:59:11.667" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.654" endtime="20231226 11:59:11.667"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.668" endtime="20231226 11:59:11.668"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.667" endtime="20231226 11:59:11.668"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.668" endtime="20231226 11:59:11.668"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.668" endtime="20231226 11:59:11.669"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.667" endtime="20231226 11:59:11.669"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.653" endtime="20231226 11:59:11.669"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:11.669" endtime="20231226 11:59:11.669"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.669" endtime="20231226 11:59:11.669"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.672" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.682" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.671" endtime="20231226 11:59:11.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.683" level="INFO">200</msg>
<status status="PASS" starttime="20231226 11:59:11.683" endtime="20231226 11:59:11.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.683" endtime="20231226 11:59:11.684"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.671" endtime="20231226 11:59:11.684"/>
</kw>
<msg timestamp="20231226 11:59:11.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.670" endtime="20231226 11:59:11.684"/>
</kw>
<msg timestamp="20231226 11:59:11.684" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231226 11:59:11.670" endtime="20231226 11:59:11.684"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.685" endtime="20231226 11:59:11.685"/>
</kw>
<status status="NOT RUN" starttime="20231226 11:59:11.684" endtime="20231226 11:59:11.685"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.685" endtime="20231226 11:59:11.685"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.685" endtime="20231226 11:59:11.685"/>
</branch>
<status status="PASS" starttime="20231226 11:59:11.684" endtime="20231226 11:59:11.685"/>
</if>
<status status="PASS" starttime="20231226 11:59:11.670" endtime="20231226 11:59:11.685"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.608" endtime="20231226 11:59:11.685"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:11.607" endtime="20231226 11:59:11.685"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.690" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.700" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20231226 11:59:11.688" endtime="20231226 11:59:11.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.701" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:11.700" endtime="20231226 11:59:11.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.701" endtime="20231226 11:59:11.701"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.688" endtime="20231226 11:59:11.702"/>
</kw>
<msg timestamp="20231226 11:59:11.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.688" endtime="20231226 11:59:11.702"/>
</kw>
<msg timestamp="20231226 11:59:11.702" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20231226 11:59:11.688" endtime="20231226 11:59:11.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.702" endtime="20231226 11:59:11.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:11.702" endtime="20231226 11:59:11.703"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.687" endtime="20231226 11:59:11.703"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.687" endtime="20231226 11:59:11.703"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.686" endtime="20231226 11:59:11.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:11.686" endtime="20231226 11:59:11.703"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:11.708" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nkpvx 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:11.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:11.718" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:11.707" endtime="20231226 11:59:11.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:11.718" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:11.718" endtime="20231226 11:59:11.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:11.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:11.719" endtime="20231226 11:59:11.719"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.706" endtime="20231226 11:59:11.719"/>
</kw>
<msg timestamp="20231226 11:59:11.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:11.706" endtime="20231226 11:59:11.719"/>
</kw>
<msg timestamp="20231226 11:59:11.719" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:11.706" endtime="20231226 11:59:11.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:59:11.720" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231226 11:59:11.720" endtime="20231226 11:59:11.720"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:11.720" endtime="20231226 11:59:11.720"/>
</kw>
<status status="FAIL" starttime="20231226 11:59:11.705" endtime="20231226 11:59:11.720"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:21.724" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nkpvx 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:21.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:21.735" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:21.723" endtime="20231226 11:59:21.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:21.736" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:21.736" endtime="20231226 11:59:21.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:21.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:21.736" endtime="20231226 11:59:21.737"/>
</kw>
<status status="PASS" starttime="20231226 11:59:21.722" endtime="20231226 11:59:21.737"/>
</kw>
<msg timestamp="20231226 11:59:21.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:21.722" endtime="20231226 11:59:21.737"/>
</kw>
<msg timestamp="20231226 11:59:21.737" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:21.722" endtime="20231226 11:59:21.737"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:59:21.738" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231226 11:59:21.737" endtime="20231226 11:59:21.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:21.738" endtime="20231226 11:59:21.738"/>
</kw>
<status status="FAIL" starttime="20231226 11:59:21.721" endtime="20231226 11:59:21.738"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:31.743" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nkpvx 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:31.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:31.754" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:31.740" endtime="20231226 11:59:31.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:31.755" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:31.754" endtime="20231226 11:59:31.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:31.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:31.755" endtime="20231226 11:59:31.755"/>
</kw>
<status status="PASS" starttime="20231226 11:59:31.740" endtime="20231226 11:59:31.755"/>
</kw>
<msg timestamp="20231226 11:59:31.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:31.740" endtime="20231226 11:59:31.756"/>
</kw>
<msg timestamp="20231226 11:59:31.756" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:31.739" endtime="20231226 11:59:31.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:59:31.756" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231226 11:59:31.756" endtime="20231226 11:59:31.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:31.756" endtime="20231226 11:59:31.756"/>
</kw>
<status status="FAIL" starttime="20231226 11:59:31.739" endtime="20231226 11:59:31.757"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:41.761" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nkpvx 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:41.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:41.772" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:41.759" endtime="20231226 11:59:41.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:41.772" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:41.772" endtime="20231226 11:59:41.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:41.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:41.772" endtime="20231226 11:59:41.773"/>
</kw>
<status status="PASS" starttime="20231226 11:59:41.758" endtime="20231226 11:59:41.773"/>
</kw>
<msg timestamp="20231226 11:59:41.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:41.758" endtime="20231226 11:59:41.773"/>
</kw>
<msg timestamp="20231226 11:59:41.773" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231226 11:59:41.758" endtime="20231226 11:59:41.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 11:59:41.774" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231226 11:59:41.773" endtime="20231226 11:59:41.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231226 11:59:41.774" endtime="20231226 11:59:41.774"/>
</kw>
<status status="FAIL" starttime="20231226 11:59:41.757" endtime="20231226 11:59:41.774"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:51.779" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nkpvx 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:51.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:51.800" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-nkpvx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20231226 11:59:51.777" endtime="20231226 11:59:51.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:51.801" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-nkpvx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1703591938361,"modificationTime":1703591938361,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-nkpvx"},"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.800" endtime="20231226 11:59:51.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:51.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:51.801" endtime="20231226 11:59:51.801"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.776" endtime="20231226 11:59:51.802"/>
</kw>
<msg timestamp="20231226 11:59:51.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:51.776" endtime="20231226 11:59:51.802"/>
</kw>
<msg timestamp="20231226 11:59:51.802" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-nkpvx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20231226 11:59:51.776" endtime="20231226 11:59:51.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.802" endtime="20231226 11:59:51.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.803" endtime="20231226 11:59:51.803"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.775" endtime="20231226 11:59:51.803"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.705" endtime="20231226 11:59:51.803"/>
</kw>
<status status="PASS" starttime="20231226 11:59:11.704" endtime="20231226 11:59:51.803"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:11.704" endtime="20231226 11:59:51.803"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:51.811" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nkpvx/buc-qdcql 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:51.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:51.832" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-qdcql","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20231226 11:59:51.809" endtime="20231226 11:59:51.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:51.833" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-qdcql","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1703591941450,"modificationTime":1703591941450,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-nkpvx","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.832" endtime="20231226 11:59:51.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:51.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:51.833" endtime="20231226 11:59:51.834"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.809" endtime="20231226 11:59:51.834"/>
</kw>
<msg timestamp="20231226 11:59:51.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:51.809" endtime="20231226 11:59:51.834"/>
</kw>
<msg timestamp="20231226 11:59:51.834" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-qdcql","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20231226 11:59:51.808" endtime="20231226 11:59:51.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.834" endtime="20231226 11:59:51.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.835" endtime="20231226 11:59:51.835"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.807" endtime="20231226 11:59:51.835"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.807" endtime="20231226 11:59:51.835"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.806" endtime="20231226 11:59:51.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:51.805" endtime="20231226 11:59:51.836"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:51.840" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nkpvx/buc-qdcql/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:51.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:51.873" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20231226 11:59:51.839" endtime="20231226 11:59:51.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:51.874" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1703591944345,"modificationTime":1703591945861,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-nkpvx","bucketName":"buc-qdcql","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012}]},"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012}]],"locationListCount":1,"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200012},"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":18,"containerID":1,"localID":111677748019200012}]}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.874" endtime="20231226 11:59:51.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:51.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:51.874" endtime="20231226 11:59:51.875"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.838" endtime="20231226 11:59:51.875"/>
</kw>
<msg timestamp="20231226 11:59:51.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:51.838" endtime="20231226 11:59:51.875"/>
</kw>
<msg timestamp="20231226 11:59:51.875" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20231226 11:59:51.838" endtime="20231226 11:59:51.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.875" endtime="20231226 11:59:51.876"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.876" endtime="20231226 11:59:51.876"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.837" endtime="20231226 11:59:51.876"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.837" endtime="20231226 11:59:51.876"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.836" endtime="20231226 11:59:51.876"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:51.836" endtime="20231226 11:59:51.877"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:59:51.878" endtime="20231226 11:59:51.878"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:51.883" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nkpvx/buc-qdcql/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:51.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:51.897" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20231226 11:59:51.881" endtime="20231226 11:59:51.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:51.897" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1703591949472,"modificationTime":1703591949472,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.897" endtime="20231226 11:59:51.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:51.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:51.898" endtime="20231226 11:59:51.898"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.881" endtime="20231226 11:59:51.898"/>
</kw>
<msg timestamp="20231226 11:59:51.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:51.881" endtime="20231226 11:59:51.898"/>
</kw>
<msg timestamp="20231226 11:59:51.898" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20231226 11:59:51.880" endtime="20231226 11:59:51.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.899" endtime="20231226 11:59:51.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.899" endtime="20231226 11:59:51.899"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.879" endtime="20231226 11:59:51.899"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.879" endtime="20231226 11:59:51.899"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.878" endtime="20231226 11:59:51.899"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.878" endtime="20231226 11:59:51.900"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:51.877" endtime="20231226 11:59:51.900"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:51.904" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-nkpvx/buc-qdcql&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:51.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:51.915" level="INFO">${output} = {"status":"OK","path":"/vol-nkpvx/buc-qdcql","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nkpvx/buc-qdcql/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20231226 11:59:51.903" endtime="20231226 11:59:51.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:51.916" level="INFO">{"status":"OK","path":"/vol-nkpvx/buc-qdcql","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nkpvx/buc-qdcql/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20231226 11:59:51.915" endtime="20231226 11:59:51.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:51.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:51.916" endtime="20231226 11:59:51.917"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.903" endtime="20231226 11:59:51.917"/>
</kw>
<msg timestamp="20231226 11:59:51.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:51.903" endtime="20231226 11:59:51.917"/>
</kw>
<msg timestamp="20231226 11:59:51.917" level="INFO">${result} = {"status":"OK","path":"/vol-nkpvx/buc-qdcql","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nkpvx/buc-qdcql/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20231226 11:59:51.902" endtime="20231226 11:59:51.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.918" endtime="20231226 11:59:51.918"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.918" endtime="20231226 11:59:51.918"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.902" endtime="20231226 11:59:51.918"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.901" endtime="20231226 11:59:51.918"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.901" endtime="20231226 11:59:51.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:51.900" endtime="20231226 11:59:51.919"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:51.923" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-nkpvx 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:51.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:51.934" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.922" endtime="20231226 11:59:51.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:51.934" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.934" endtime="20231226 11:59:51.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:51.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:51.935" endtime="20231226 11:59:51.935"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.921" endtime="20231226 11:59:51.935"/>
</kw>
<msg timestamp="20231226 11:59:51.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:51.921" endtime="20231226 11:59:51.935"/>
</kw>
<msg timestamp="20231226 11:59:51.935" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.921" endtime="20231226 11:59:51.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.936" endtime="20231226 11:59:51.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.936" endtime="20231226 11:59:51.936"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.920" endtime="20231226 11:59:51.936"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.920" endtime="20231226 11:59:51.936"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.920" endtime="20231226 11:59:51.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:51.919" endtime="20231226 11:59:51.937"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:51.941" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-nkpvx/buc-qdcql 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:51.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:51.951" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.940" endtime="20231226 11:59:51.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:51.952" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.952" endtime="20231226 11:59:51.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:51.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:51.952" endtime="20231226 11:59:51.953"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.940" endtime="20231226 11:59:51.953"/>
</kw>
<msg timestamp="20231226 11:59:51.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:51.939" endtime="20231226 11:59:51.953"/>
</kw>
<msg timestamp="20231226 11:59:51.953" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.939" endtime="20231226 11:59:51.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.953" endtime="20231226 11:59:51.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.954" endtime="20231226 11:59:51.954"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.939" endtime="20231226 11:59:51.954"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.938" endtime="20231226 11:59:51.954"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.938" endtime="20231226 11:59:51.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:51.937" endtime="20231226 11:59:51.954"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:51.958" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:51.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:51.968" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.957" endtime="20231226 11:59:51.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:51.969" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.969" endtime="20231226 11:59:51.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:51.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:51.969" endtime="20231226 11:59:51.970"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.957" endtime="20231226 11:59:51.970"/>
</kw>
<msg timestamp="20231226 11:59:51.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:51.957" endtime="20231226 11:59:51.970"/>
</kw>
<msg timestamp="20231226 11:59:51.970" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231226 11:59:51.956" endtime="20231226 11:59:51.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.970" endtime="20231226 11:59:51.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:51.971" endtime="20231226 11:59:51.971"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.956" endtime="20231226 11:59:51.971"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.955" endtime="20231226 11:59:51.971"/>
</kw>
<status status="PASS" starttime="20231226 11:59:51.955" endtime="20231226 11:59:51.971"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:51.955" endtime="20231226 11:59:51.972"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20231226 11:58:55.229" endtime="20231226 11:59:51.972"/>
</suite>
<status status="PASS" starttime="20231226 11:57:40.087" endtime="20231226 11:59:51.976"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:54.024" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:59:56.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:59:56.826" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:54.022" endtime="20231226 11:59:56.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:59:56.826" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:56.826" endtime="20231226 11:59:56.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:59:56.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:59:56.827" endtime="20231226 11:59:56.827"/>
</kw>
<status status="PASS" starttime="20231226 11:59:54.022" endtime="20231226 11:59:56.827"/>
</kw>
<msg timestamp="20231226 11:59:56.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:54.022" endtime="20231226 11:59:56.827"/>
</kw>
<msg timestamp="20231226 11:59:56.827" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:54.021" endtime="20231226 11:59:56.828"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:59:56.828" endtime="20231226 11:59:56.828"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:59:56.830" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 12:00:00.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 12:00:00.033" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:56.829" endtime="20231226 12:00:00.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 12:00:00.034" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:00.034" endtime="20231226 12:00:00.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 12:00:00.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 12:00:00.035" endtime="20231226 12:00:00.035"/>
</kw>
<status status="PASS" starttime="20231226 11:59:56.829" endtime="20231226 12:00:00.035"/>
</kw>
<msg timestamp="20231226 12:00:00.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:59:56.828" endtime="20231226 12:00:00.035"/>
</kw>
<msg timestamp="20231226 12:00:00.035" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 11:59:56.828" endtime="20231226 12:00:00.035"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 12:00:00.036" endtime="20231226 12:00:00.036"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 12:00:00.038" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 12:00:04.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 12:00:04.882" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:00.037" endtime="20231226 12:00:04.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 12:00:04.883" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:04.883" endtime="20231226 12:00:04.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 12:00:04.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 12:00:04.883" endtime="20231226 12:00:04.884"/>
</kw>
<status status="PASS" starttime="20231226 12:00:00.037" endtime="20231226 12:00:04.884"/>
</kw>
<msg timestamp="20231226 12:00:04.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 12:00:00.036" endtime="20231226 12:00:04.884"/>
</kw>
<msg timestamp="20231226 12:00:04.884" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:00.036" endtime="20231226 12:00:04.884"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 12:00:04.885" endtime="20231226 12:00:04.885"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:59:54.021" endtime="20231226 12:00:04.885"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231226 11:59:53.980" endtime="20231226 12:00:04.886"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 12:00:11.184" level="INFO">${random} = 59300</msg>
<status status="PASS" starttime="20231226 12:00:11.184" endtime="20231226 12:00:11.184"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 12:00:11.187" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-59300 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 12:00:15.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 12:00:15.771" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:11.185" endtime="20231226 12:00:15.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 12:00:15.772" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:15.771" endtime="20231226 12:00:15.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 12:00:15.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 12:00:15.772" endtime="20231226 12:00:15.773"/>
</kw>
<status status="PASS" starttime="20231226 12:00:11.185" endtime="20231226 12:00:15.773"/>
</kw>
<msg timestamp="20231226 12:00:15.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 12:00:11.185" endtime="20231226 12:00:15.773"/>
</kw>
<msg timestamp="20231226 12:00:15.773" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:11.184" endtime="20231226 12:00:15.773"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 12:00:15.773" endtime="20231226 12:00:15.774"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 12:00:11.183" endtime="20231226 12:00:15.774"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231226 12:00:11.142" endtime="20231226 12:00:15.775"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 12:00:42.913" level="INFO">${random} = 93343</msg>
<status status="PASS" starttime="20231226 12:00:42.913" endtime="20231226 12:00:42.913"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 12:00:42.916" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-93343 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 12:00:48.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 12:00:48.662" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:42.915" endtime="20231226 12:00:48.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 12:00:48.663" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:48.662" endtime="20231226 12:00:48.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 12:00:48.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 12:00:48.663" endtime="20231226 12:00:48.663"/>
</kw>
<status status="PASS" starttime="20231226 12:00:42.914" endtime="20231226 12:00:48.664"/>
</kw>
<msg timestamp="20231226 12:00:48.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 12:00:42.914" endtime="20231226 12:00:48.664"/>
</kw>
<msg timestamp="20231226 12:00:48.664" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231226 12:00:42.914" endtime="20231226 12:00:48.664"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 12:00:48.664" endtime="20231226 12:00:48.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 12:00:42.912" endtime="20231226 12:00:48.665"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231226 12:00:42.870" endtime="20231226 12:00:48.665"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="180574"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
