<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231226 11:56:04.753" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:51:57.131" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:07.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:07.438" level="INFO">${output} = 2023-12-26 11:51:58,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:51:58,981 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:51:57.129" endtime="20231226 11:52:07.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:07.438" level="INFO">2023-12-26 11:51:58,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:51:58,981 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-26 11:51:58,981 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-26 11:51:59,045 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-12-26 11:51:59,068 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-26 11:51:59,188 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2023-12-26 11:51:59,650 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-12-26 11:51:59,746 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-12-26 11:52:00,069 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-26 11:52:00,499 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-26 11:52:00,751 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-26 11:52:01,069 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-26 11:52:02,070 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2023-12-26 11:52:03,070 [Thread-3] INFO freon.ProgressBar: Progress: 22.00 % (22 out of 100)
2023-12-26 11:52:04,071 [Thread-3] INFO freon.ProgressBar: Progress: 44.00 % (44 out of 100)
2023-12-26 11:52:05,072 [Thread-3] INFO freon.ProgressBar: Progress: 68.00 % (68 out of 100)
2023-12-26 11:52:06,072 [Thread-3] INFO freon.ProgressBar: Progress: 95.00 % (95 out of 100)
2023-12-26 11:52:07,073 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-26 11:52:07,102 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=24.667507, max=1627.847086, mean=62.971538430173574, stddev=156.70769815954517, median=42.85477, p75=49.972077, p95=74.919563, p98=214.879657, p99=257.862142, p999=1627.847086, mean_rate=13.756418436870826, m1=12.4, m5=12.4, m15=12.4, rate_unit=events/second, duration_unit=milliseconds
2023-12-26 11:52:07,102 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-12-26 11:52:07,102 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-26 11:52:07,102 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231226 11:52:07.438" endtime="20231226 11:52:07.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:07.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:07.438" endtime="20231226 11:52:07.439"/>
</kw>
<status status="PASS" starttime="20231226 11:51:57.129" endtime="20231226 11:52:07.439"/>
</kw>
<msg timestamp="20231226 11:52:07.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:51:57.129" endtime="20231226 11:52:07.439"/>
</kw>
<msg timestamp="20231226 11:52:07.439" level="INFO">${result} = 2023-12-26 11:51:58,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:51:58,981 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:51:57.128" endtime="20231226 11:52:07.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:52:07.440" endtime="20231226 11:52:07.440"/>
</kw>
<status status="PASS" starttime="20231226 11:51:57.127" endtime="20231226 11:52:07.440"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 11:52:07.440" level="INFO">${random} = 56051</msg>
<status status="PASS" starttime="20231226 11:52:07.440" endtime="20231226 11:52:07.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:52:07.442" level="INFO">${volume_name} = 56051-volume-for-prepare</msg>
<status status="PASS" starttime="20231226 11:52:07.441" endtime="20231226 11:52:07.442"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:52:07.443" level="INFO">${bucket_name} = 56051-bucket-for-prepare</msg>
<status status="PASS" starttime="20231226 11:52:07.442" endtime="20231226 11:52:07.443"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:07.445" level="INFO">Running command 'ozone sh volume create /56051-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:09.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:09.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:52:07.444" endtime="20231226 11:52:09.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:09.639" level="INFO"/>
<status status="PASS" starttime="20231226 11:52:09.639" endtime="20231226 11:52:09.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:09.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:09.639" endtime="20231226 11:52:09.639"/>
</kw>
<status status="PASS" starttime="20231226 11:52:07.443" endtime="20231226 11:52:09.640"/>
</kw>
<msg timestamp="20231226 11:52:09.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:07.443" endtime="20231226 11:52:09.640"/>
</kw>
<status status="PASS" starttime="20231226 11:52:07.443" endtime="20231226 11:52:09.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:09.642" level="INFO">Running command 'ozone sh bucket create /56051-volume-for-prepare/56051-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:11.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:11.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:52:09.641" endtime="20231226 11:52:11.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:11.694" level="INFO"/>
<status status="PASS" starttime="20231226 11:52:11.694" endtime="20231226 11:52:11.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:11.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:11.694" endtime="20231226 11:52:11.695"/>
</kw>
<status status="PASS" starttime="20231226 11:52:09.641" endtime="20231226 11:52:11.695"/>
</kw>
<msg timestamp="20231226 11:52:11.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:09.640" endtime="20231226 11:52:11.695"/>
</kw>
<status status="PASS" starttime="20231226 11:52:09.640" endtime="20231226 11:52:11.695"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:11.697" level="INFO">Running command 'ozone sh key put /56051-volume-for-prepare/56051-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:15.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:15.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:52:11.696" endtime="20231226 11:52:15.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:15.276" level="INFO"/>
<status status="PASS" starttime="20231226 11:52:15.276" endtime="20231226 11:52:15.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:15.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:15.276" endtime="20231226 11:52:15.276"/>
</kw>
<status status="PASS" starttime="20231226 11:52:11.696" endtime="20231226 11:52:15.277"/>
</kw>
<msg timestamp="20231226 11:52:15.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:11.696" endtime="20231226 11:52:15.277"/>
</kw>
<status status="PASS" starttime="20231226 11:52:11.695" endtime="20231226 11:52:15.277"/>
</kw>
<status status="PASS" starttime="20231226 11:51:57.127" endtime="20231226 11:52:15.277"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:52:15.278" endtime="20231226 11:52:15.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:15.281" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:22.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:22.663" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231226 11:52:15.279" endtime="20231226 11:52:22.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:22.664" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231226 11:52:22.664" endtime="20231226 11:52:22.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:22.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:22.664" endtime="20231226 11:52:22.665"/>
</kw>
<status status="PASS" starttime="20231226 11:52:15.279" endtime="20231226 11:52:22.665"/>
</kw>
<msg timestamp="20231226 11:52:22.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:15.279" endtime="20231226 11:52:22.665"/>
</kw>
<msg timestamp="20231226 11:52:22.665" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231226 11:52:15.278" endtime="20231226 11:52:22.665"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:52:22.666" endtime="20231226 11:52:22.666"/>
</kw>
<status status="PASS" starttime="20231226 11:52:22.666" endtime="20231226 11:52:22.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:52:15.277" endtime="20231226 11:52:22.666"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:52:22.667" endtime="20231226 11:52:22.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:22.670" level="INFO">Running command 'ozone sh key info /56051-volume-for-prepare/56051-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:25.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:25.060" level="INFO">${output} = {
  "volumeName" : "56051-volume-for-prepare",
  "bucketName" : "56051-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-26T11:52:13.786Z",
  "modificati...</msg>
<status status="PASS" starttime="20231226 11:52:22.669" endtime="20231226 11:52:25.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:25.061" level="INFO">{
  "volumeName" : "56051-volume-for-prepare",
  "bucketName" : "56051-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-26T11:52:13.786Z",
  "modificationTime" : "2023-12-26T11:52:14.922Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231226 11:52:25.061" endtime="20231226 11:52:25.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:25.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:25.061" endtime="20231226 11:52:25.062"/>
</kw>
<status status="PASS" starttime="20231226 11:52:22.668" endtime="20231226 11:52:25.062"/>
</kw>
<msg timestamp="20231226 11:52:25.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:22.668" endtime="20231226 11:52:25.062"/>
</kw>
<msg timestamp="20231226 11:52:25.062" level="INFO">${result} = {
  "volumeName" : "56051-volume-for-prepare",
  "bucketName" : "56051-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-26T11:52:13.786Z",
  "modificati...</msg>
<status status="PASS" starttime="20231226 11:52:22.668" endtime="20231226 11:52:25.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:52:25.062" endtime="20231226 11:52:25.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:52:22.667" endtime="20231226 11:52:25.063"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:52:25.064" endtime="20231226 11:52:25.064"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:25.066" level="INFO">Running command 'ozone sh key put /56051-volume-for-prepare/56051-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:27.091" level="INFO">${rc} = 255</msg>
<msg timestamp="20231226 11:52:27.091" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:52:25.065" endtime="20231226 11:52:27.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:27.092" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:52:27.092" endtime="20231226 11:52:27.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:27.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:27.092" endtime="20231226 11:52:27.093"/>
</kw>
<msg timestamp="20231226 11:52:27.093" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:52:25.064" endtime="20231226 11:52:27.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:52:27.093" endtime="20231226 11:52:27.093"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:27.095" level="INFO">Running command 'ozone sh key info /56051-volume-for-prepare/56051-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:29.079" level="INFO">${rc} = 255</msg>
<msg timestamp="20231226 11:52:29.079" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231226 11:52:27.094" endtime="20231226 11:52:29.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:29.080" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231226 11:52:29.079" endtime="20231226 11:52:29.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:29.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:29.080" endtime="20231226 11:52:29.080"/>
</kw>
<status status="PASS" starttime="20231226 11:52:27.094" endtime="20231226 11:52:29.081"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:52:25.063" endtime="20231226 11:52:29.081"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20231226 11:51:57.077" endtime="20231226 11:52:29.082"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 11:52:30.907" level="INFO">${random} = 67857</msg>
<status status="PASS" starttime="20231226 11:52:30.907" endtime="20231226 11:52:30.907"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:52:30.909" level="INFO">${volume_name} = 67857-volume-for-cancel</msg>
<status status="PASS" starttime="20231226 11:52:30.908" endtime="20231226 11:52:30.909"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:52:30.910" level="INFO">${bucket_name} = 67857-bucket-for-cancel</msg>
<status status="PASS" starttime="20231226 11:52:30.909" endtime="20231226 11:52:30.910"/>
</kw>
<status status="PASS" starttime="20231226 11:52:30.907" endtime="20231226 11:52:30.910"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:52:30.910" endtime="20231226 11:52:30.911"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:30.913" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:33.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:33.206" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20231226 11:52:30.912" endtime="20231226 11:52:33.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:33.207" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20231226 11:52:33.206" endtime="20231226 11:52:33.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:33.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:33.207" endtime="20231226 11:52:33.207"/>
</kw>
<status status="PASS" starttime="20231226 11:52:30.911" endtime="20231226 11:52:33.207"/>
</kw>
<msg timestamp="20231226 11:52:33.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:30.911" endtime="20231226 11:52:33.207"/>
</kw>
<msg timestamp="20231226 11:52:33.208" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20231226 11:52:30.911" endtime="20231226 11:52:33.208"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:52:33.208" endtime="20231226 11:52:33.208"/>
</kw>
<status status="PASS" starttime="20231226 11:52:33.208" endtime="20231226 11:52:33.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:52:30.910" endtime="20231226 11:52:33.209"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:52:33.210" endtime="20231226 11:52:33.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:33.212" level="INFO">Running command 'ozone sh volume create /67857-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:35.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:35.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:52:33.211" endtime="20231226 11:52:35.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:35.227" level="INFO"/>
<status status="PASS" starttime="20231226 11:52:35.226" endtime="20231226 11:52:35.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:35.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:35.227" endtime="20231226 11:52:35.227"/>
</kw>
<status status="PASS" starttime="20231226 11:52:33.211" endtime="20231226 11:52:35.228"/>
</kw>
<msg timestamp="20231226 11:52:35.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:33.210" endtime="20231226 11:52:35.228"/>
</kw>
<status status="PASS" starttime="20231226 11:52:33.210" endtime="20231226 11:52:35.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:35.231" level="INFO">Running command 'ozone sh bucket create /67857-volume-for-cancel/67857-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:37.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:37.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:52:35.229" endtime="20231226 11:52:37.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:37.322" level="INFO"/>
<status status="PASS" starttime="20231226 11:52:37.321" endtime="20231226 11:52:37.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:37.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:37.322" endtime="20231226 11:52:37.322"/>
</kw>
<status status="PASS" starttime="20231226 11:52:35.229" endtime="20231226 11:52:37.323"/>
</kw>
<msg timestamp="20231226 11:52:37.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:35.228" endtime="20231226 11:52:37.323"/>
</kw>
<status status="PASS" starttime="20231226 11:52:35.228" endtime="20231226 11:52:37.323"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:37.326" level="INFO">Running command 'ozone sh key put /67857-volume-for-cancel/67857-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:40.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:40.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:52:37.324" endtime="20231226 11:52:40.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:40.896" level="INFO"/>
<status status="PASS" starttime="20231226 11:52:40.895" endtime="20231226 11:52:40.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:40.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:40.896" endtime="20231226 11:52:40.896"/>
</kw>
<status status="PASS" starttime="20231226 11:52:37.324" endtime="20231226 11:52:40.896"/>
</kw>
<msg timestamp="20231226 11:52:40.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:37.323" endtime="20231226 11:52:40.897"/>
</kw>
<msg timestamp="20231226 11:52:40.897" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231226 11:52:37.323" endtime="20231226 11:52:40.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:40.899" level="INFO">Running command 'ozone sh key info /67857-volume-for-cancel/67857-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:43.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:43.199" level="INFO">${output} = {
  "volumeName" : "67857-volume-for-cancel",
  "bucketName" : "67857-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-26T11:52:39.436Z",
  "modificationT...</msg>
<status status="PASS" starttime="20231226 11:52:40.898" endtime="20231226 11:52:43.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:43.200" level="INFO">{
  "volumeName" : "67857-volume-for-cancel",
  "bucketName" : "67857-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-26T11:52:39.436Z",
  "modificationTime" : "2023-12-26T11:52:40.549Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231226 11:52:43.199" endtime="20231226 11:52:43.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:43.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:43.200" endtime="20231226 11:52:43.200"/>
</kw>
<status status="PASS" starttime="20231226 11:52:40.898" endtime="20231226 11:52:43.200"/>
</kw>
<msg timestamp="20231226 11:52:43.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:40.897" endtime="20231226 11:52:43.201"/>
</kw>
<msg timestamp="20231226 11:52:43.201" level="INFO">${result} = {
  "volumeName" : "67857-volume-for-cancel",
  "bucketName" : "67857-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-26T11:52:39.436Z",
  "modificationT...</msg>
<status status="PASS" starttime="20231226 11:52:40.897" endtime="20231226 11:52:43.201"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:52:43.201" endtime="20231226 11:52:43.201"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:52:33.209" endtime="20231226 11:52:43.201"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20231226 11:52:30.867" endtime="20231226 11:52:43.202"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:45.049" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:52.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:52.891" level="INFO">${output} = 2023-12-26 11:52:46,337 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:52:46,430 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:52:45.047" endtime="20231226 11:52:52.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:52.891" level="INFO">2023-12-26 11:52:46,337 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:52:46,430 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-26 11:52:46,430 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-26 11:52:46,485 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-12-26 11:52:46,509 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-26 11:52:46,597 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2023-12-26 11:52:47,470 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-26 11:52:47,509 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-26 11:52:47,647 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-26 11:52:48,510 [Thread-3] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2023-12-26 11:52:49,511 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2023-12-26 11:52:50,514 [Thread-3] INFO freon.ProgressBar: Progress: 66.00 % (66 out of 100)
2023-12-26 11:52:51,515 [Thread-3] INFO freon.ProgressBar: Progress: 99.00 % (99 out of 100)
2023-12-26 11:52:52,515 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-26 11:52:52,546 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=19.003058, max=1105.033715, mean=44.884572953607474, stddev=105.85385280833756, median=31.81447, p75=38.753888, p95=54.095866, p98=78.372332, p99=81.020831, p999=1105.033715, mean_rate=17.958785723197224, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-26 11:52:52,546 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-12-26 11:52:52,546 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-26 11:52:52,546 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231226 11:52:52.891" endtime="20231226 11:52:52.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:52.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:52.891" endtime="20231226 11:52:52.892"/>
</kw>
<status status="PASS" starttime="20231226 11:52:45.047" endtime="20231226 11:52:52.892"/>
</kw>
<msg timestamp="20231226 11:52:52.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:45.047" endtime="20231226 11:52:52.892"/>
</kw>
<msg timestamp="20231226 11:52:52.892" level="INFO">${result} = 2023-12-26 11:52:46,337 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 11:52:46,430 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 11:52:45.046" endtime="20231226 11:52:52.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:52:52.892" endtime="20231226 11:52:52.893"/>
</kw>
<status status="PASS" starttime="20231226 11:52:45.045" endtime="20231226 11:52:52.893"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 11:52:52.893" level="INFO">${random} = 55734</msg>
<status status="PASS" starttime="20231226 11:52:52.893" endtime="20231226 11:52:52.893"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:52:52.894" level="INFO">${volume_name} = 55734-volume-for-prepare</msg>
<status status="PASS" starttime="20231226 11:52:52.893" endtime="20231226 11:52:52.894"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:52:52.895" level="INFO">${bucket_name} = 55734-bucket-for-prepare</msg>
<status status="PASS" starttime="20231226 11:52:52.895" endtime="20231226 11:52:52.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:52.898" level="INFO">Running command 'ozone sh volume create /55734-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:54.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:54.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:52:52.896" endtime="20231226 11:52:54.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:54.943" level="INFO"/>
<status status="PASS" starttime="20231226 11:52:54.942" endtime="20231226 11:52:54.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:54.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:54.943" endtime="20231226 11:52:54.943"/>
</kw>
<status status="PASS" starttime="20231226 11:52:52.896" endtime="20231226 11:52:54.944"/>
</kw>
<msg timestamp="20231226 11:52:54.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:52.896" endtime="20231226 11:52:54.944"/>
</kw>
<status status="PASS" starttime="20231226 11:52:52.896" endtime="20231226 11:52:54.944"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:54.946" level="INFO">Running command 'ozone sh bucket create /55734-volume-for-prepare/55734-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:52:56.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:52:56.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:52:54.945" endtime="20231226 11:52:56.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:52:56.968" level="INFO"/>
<status status="PASS" starttime="20231226 11:52:56.968" endtime="20231226 11:52:56.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:52:56.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:52:56.969" endtime="20231226 11:52:56.969"/>
</kw>
<status status="PASS" starttime="20231226 11:52:54.944" endtime="20231226 11:52:56.969"/>
</kw>
<msg timestamp="20231226 11:52:56.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:54.944" endtime="20231226 11:52:56.969"/>
</kw>
<status status="PASS" starttime="20231226 11:52:54.944" endtime="20231226 11:52:56.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:52:56.972" level="INFO">Running command 'ozone sh key put /55734-volume-for-prepare/55734-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:53:00.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:53:00.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:52:56.970" endtime="20231226 11:53:00.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:53:00.527" level="INFO"/>
<status status="PASS" starttime="20231226 11:53:00.526" endtime="20231226 11:53:00.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:53:00.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:53:00.527" endtime="20231226 11:53:00.527"/>
</kw>
<status status="PASS" starttime="20231226 11:52:56.970" endtime="20231226 11:53:00.528"/>
</kw>
<msg timestamp="20231226 11:53:00.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:52:56.970" endtime="20231226 11:53:00.528"/>
</kw>
<status status="PASS" starttime="20231226 11:52:56.969" endtime="20231226 11:53:00.528"/>
</kw>
<status status="PASS" starttime="20231226 11:52:45.045" endtime="20231226 11:53:00.528"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:53:00.529" endtime="20231226 11:53:00.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:53:00.532" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:53:07.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:53:07.859" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231226 11:53:00.530" endtime="20231226 11:53:07.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:53:07.860" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231226 11:53:07.859" endtime="20231226 11:53:07.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:53:07.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:53:07.860" endtime="20231226 11:53:07.860"/>
</kw>
<status status="PASS" starttime="20231226 11:53:00.530" endtime="20231226 11:53:07.861"/>
</kw>
<msg timestamp="20231226 11:53:07.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:53:00.529" endtime="20231226 11:53:07.861"/>
</kw>
<msg timestamp="20231226 11:53:07.861" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231226 11:53:00.529" endtime="20231226 11:53:07.861"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:53:07.862" endtime="20231226 11:53:07.862"/>
</kw>
<status status="PASS" starttime="20231226 11:53:07.861" endtime="20231226 11:53:07.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:53:00.528" endtime="20231226 11:53:07.862"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:53:07.863" endtime="20231226 11:53:07.863"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:53:07.866" level="INFO">Running command 'ozone sh key info /55734-volume-for-prepare/55734-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:53:10.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:53:10.164" level="INFO">${output} = {
  "volumeName" : "55734-volume-for-prepare",
  "bucketName" : "55734-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-26T11:52:59.053Z",
  "modificati...</msg>
<status status="PASS" starttime="20231226 11:53:07.864" endtime="20231226 11:53:10.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:53:10.165" level="INFO">{
  "volumeName" : "55734-volume-for-prepare",
  "bucketName" : "55734-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-26T11:52:59.053Z",
  "modificationTime" : "2023-12-26T11:53:00.175Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231226 11:53:10.165" endtime="20231226 11:53:10.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:53:10.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:53:10.165" endtime="20231226 11:53:10.166"/>
</kw>
<status status="PASS" starttime="20231226 11:53:07.864" endtime="20231226 11:53:10.166"/>
</kw>
<msg timestamp="20231226 11:53:10.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:53:07.864" endtime="20231226 11:53:10.166"/>
</kw>
<msg timestamp="20231226 11:53:10.166" level="INFO">${result} = {
  "volumeName" : "55734-volume-for-prepare",
  "bucketName" : "55734-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-26T11:52:59.053Z",
  "modificati...</msg>
<status status="PASS" starttime="20231226 11:53:07.863" endtime="20231226 11:53:10.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:53:10.166" endtime="20231226 11:53:10.167"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:53:07.862" endtime="20231226 11:53:10.167"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:53:10.168" endtime="20231226 11:53:10.168"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:53:10.170" level="INFO">Running command 'ozone sh key put /55734-volume-for-prepare/55734-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:53:12.190" level="INFO">${rc} = 255</msg>
<msg timestamp="20231226 11:53:12.191" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:53:10.169" endtime="20231226 11:53:12.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:53:12.191" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:53:12.191" endtime="20231226 11:53:12.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:53:12.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:53:12.192" endtime="20231226 11:53:12.192"/>
</kw>
<msg timestamp="20231226 11:53:12.192" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:53:10.168" endtime="20231226 11:53:12.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:53:12.192" endtime="20231226 11:53:12.193"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:53:12.195" level="INFO">Running command 'ozone sh key info /55734-volume-for-prepare/55734-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:53:14.227" level="INFO">${rc} = 255</msg>
<msg timestamp="20231226 11:53:14.227" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231226 11:53:12.193" endtime="20231226 11:53:14.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:53:14.228" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231226 11:53:14.228" endtime="20231226 11:53:14.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:53:14.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:53:14.228" endtime="20231226 11:53:14.229"/>
</kw>
<status status="PASS" starttime="20231226 11:53:12.193" endtime="20231226 11:53:14.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:53:10.167" endtime="20231226 11:53:14.229"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20231226 11:52:44.999" endtime="20231226 11:53:14.230"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:53:16.113" endtime="20231226 11:53:16.114"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 11:53:16.114" level="INFO">${random} = 23768</msg>
<status status="PASS" starttime="20231226 11:53:16.114" endtime="20231226 11:53:16.114"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:53:16.115" level="INFO">${volume_name} = 23768-volume-for-prepare</msg>
<status status="PASS" starttime="20231226 11:53:16.114" endtime="20231226 11:53:16.115"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:53:16.118" level="INFO">Running command 'ozone sh volume create /23768-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:53:18.277" level="INFO">${rc} = 255</msg>
<msg timestamp="20231226 11:53:18.277" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:53:16.116" endtime="20231226 11:53:18.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:53:18.278" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:53:18.277" endtime="20231226 11:53:18.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:53:18.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:53:18.278" endtime="20231226 11:53:18.278"/>
</kw>
<msg timestamp="20231226 11:53:18.279" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:53:16.116" endtime="20231226 11:53:18.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:53:18.279" endtime="20231226 11:53:18.279"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:53:18.281" level="INFO">Running command 'ozone sh volume info /23768-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:53:20.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20231226 11:53:20.351" level="INFO">${output} = VOLUME_NOT_FOUND Volume 23768-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231226 11:53:18.280" endtime="20231226 11:53:20.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:53:20.352" level="INFO">VOLUME_NOT_FOUND Volume 23768-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231226 11:53:20.351" endtime="20231226 11:53:20.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:53:20.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:53:20.352" endtime="20231226 11:53:20.352"/>
</kw>
<msg timestamp="20231226 11:53:20.353" level="INFO">${result} = VOLUME_NOT_FOUND Volume 23768-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231226 11:53:18.279" endtime="20231226 11:53:20.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:53:20.353" endtime="20231226 11:53:20.353"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:53:16.113" endtime="20231226 11:53:20.353"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:53:20.354" endtime="20231226 11:53:20.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:53:20.357" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:53:22.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:53:22.726" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "67857-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20231226 11:53:20.356" endtime="20231226 11:53:22.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:53:22.727" level="INFO">[ {
  "metadata" : { },
  "name" : "67857-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-26T11:52:35.196Z",
  "modificationTime" : "2023-12-26T11:52:35.196Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "56051-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-26T11:52:09.616Z",
  "modificationTime" : "2023-12-26T11:52:09.616Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-12-26T11:51:39.275Z",
  "modificationTime" : "2023-12-26T11:51:39.275Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-26T11:51:59.657Z",
  "modificationTime" : "2023-12-26T11:51:59.657Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "55734-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-26T11:52:54.915Z",
  "modificationTime" : "2023-12-26T11:52:54.915Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20231226 11:53:22.727" endtime="20231226 11:53:22.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:53:22.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:53:22.727" endtime="20231226 11:53:22.728"/>
</kw>
<status status="PASS" starttime="20231226 11:53:20.355" endtime="20231226 11:53:22.728"/>
</kw>
<msg timestamp="20231226 11:53:22.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:53:20.355" endtime="20231226 11:53:22.728"/>
</kw>
<msg timestamp="20231226 11:53:22.728" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "67857-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20231226 11:53:20.355" endtime="20231226 11:53:22.728"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:53:20.354" endtime="20231226 11:53:22.729"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20231226 11:53:16.071" endtime="20231226 11:53:22.729"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:54:24.539" endtime="20231226 11:54:24.540"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 11:54:24.540" level="INFO">${random} = 01107</msg>
<status status="PASS" starttime="20231226 11:54:24.540" endtime="20231226 11:54:24.541"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 11:54:24.542" level="INFO">${volume_name} = 01107-volume-for-prepare</msg>
<status status="PASS" starttime="20231226 11:54:24.541" endtime="20231226 11:54:24.542"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:54:24.545" level="INFO">Running command 'ozone sh volume create /01107-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:54:26.989" level="INFO">${rc} = 255</msg>
<msg timestamp="20231226 11:54:26.989" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:54:24.543" endtime="20231226 11:54:26.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:54:26.990" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:54:26.990" endtime="20231226 11:54:26.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:54:26.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:54:26.990" endtime="20231226 11:54:26.991"/>
</kw>
<msg timestamp="20231226 11:54:26.991" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231226 11:54:24.542" endtime="20231226 11:54:26.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:54:26.991" endtime="20231226 11:54:26.992"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:54:26.994" level="INFO">Running command 'ozone sh volume info /01107-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:54:29.294" level="INFO">${rc} = 255</msg>
<msg timestamp="20231226 11:54:29.294" level="INFO">${output} = VOLUME_NOT_FOUND Volume 01107-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231226 11:54:26.992" endtime="20231226 11:54:29.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:54:29.295" level="INFO">VOLUME_NOT_FOUND Volume 01107-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231226 11:54:29.295" endtime="20231226 11:54:29.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:54:29.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:54:29.295" endtime="20231226 11:54:29.296"/>
</kw>
<msg timestamp="20231226 11:54:29.296" level="INFO">${result} = VOLUME_NOT_FOUND Volume 01107-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231226 11:54:26.992" endtime="20231226 11:54:29.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:54:29.296" endtime="20231226 11:54:29.296"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:54:24.538" endtime="20231226 11:54:29.296"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 11:54:29.298" endtime="20231226 11:54:29.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:54:29.300" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:54:31.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:54:31.861" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "67857-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20231226 11:54:29.299" endtime="20231226 11:54:31.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:54:31.862" level="INFO">[ {
  "metadata" : { },
  "name" : "67857-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-26T11:52:35.196Z",
  "modificationTime" : "2023-12-26T11:52:35.196Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "56051-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-26T11:52:09.616Z",
  "modificationTime" : "2023-12-26T11:52:09.616Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-12-26T11:51:39.275Z",
  "modificationTime" : "2023-12-26T11:51:39.275Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-26T11:51:59.657Z",
  "modificationTime" : "2023-12-26T11:51:59.657Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "55734-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-26T11:52:54.915Z",
  "modificationTime" : "2023-12-26T11:52:54.915Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20231226 11:54:31.861" endtime="20231226 11:54:31.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:54:31.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:54:31.862" endtime="20231226 11:54:31.862"/>
</kw>
<status status="PASS" starttime="20231226 11:54:29.299" endtime="20231226 11:54:31.863"/>
</kw>
<msg timestamp="20231226 11:54:31.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:54:29.298" endtime="20231226 11:54:31.863"/>
</kw>
<msg timestamp="20231226 11:54:31.863" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "67857-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20231226 11:54:29.298" endtime="20231226 11:54:31.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:54:29.297" endtime="20231226 11:54:31.863"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20231226 11:54:24.495" endtime="20231226 11:54:31.864"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:55:36.553" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:55:39.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:55:39.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:55:36.551" endtime="20231226 11:55:39.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:55:39.145" level="INFO"/>
<status status="PASS" starttime="20231226 11:55:39.144" endtime="20231226 11:55:39.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:55:39.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:55:39.145" endtime="20231226 11:55:39.146"/>
</kw>
<status status="PASS" starttime="20231226 11:55:36.551" endtime="20231226 11:55:39.146"/>
</kw>
<msg timestamp="20231226 11:55:39.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:55:36.551" endtime="20231226 11:55:39.146"/>
</kw>
<msg timestamp="20231226 11:55:39.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:55:36.550" endtime="20231226 11:55:39.146"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:55:39.147" endtime="20231226 11:55:39.147"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:55:39.157" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:55:41.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:55:41.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:55:39.150" endtime="20231226 11:55:41.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:55:41.635" level="INFO"/>
<status status="PASS" starttime="20231226 11:55:41.635" endtime="20231226 11:55:41.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:55:41.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:55:41.635" endtime="20231226 11:55:41.636"/>
</kw>
<status status="PASS" starttime="20231226 11:55:39.148" endtime="20231226 11:55:41.636"/>
</kw>
<msg timestamp="20231226 11:55:41.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:55:39.148" endtime="20231226 11:55:41.636"/>
</kw>
<msg timestamp="20231226 11:55:41.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:55:39.147" endtime="20231226 11:55:41.636"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:55:41.636" endtime="20231226 11:55:41.636"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:55:41.639" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:55:46.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:55:46.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:55:41.638" endtime="20231226 11:55:46.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:55:46.176" level="INFO"/>
<status status="PASS" starttime="20231226 11:55:46.176" endtime="20231226 11:55:46.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:55:46.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:55:46.176" endtime="20231226 11:55:46.177"/>
</kw>
<status status="PASS" starttime="20231226 11:55:41.637" endtime="20231226 11:55:46.177"/>
</kw>
<msg timestamp="20231226 11:55:46.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:55:41.637" endtime="20231226 11:55:46.177"/>
</kw>
<msg timestamp="20231226 11:55:46.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:55:41.637" endtime="20231226 11:55:46.177"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:55:46.177" endtime="20231226 11:55:46.178"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:55:36.550" endtime="20231226 11:55:46.178"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231226 11:55:36.510" endtime="20231226 11:55:46.179"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 11:55:48.105" level="INFO">${random} = 69892</msg>
<status status="PASS" starttime="20231226 11:55:48.105" endtime="20231226 11:55:48.105"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 11:55:48.107" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-69892 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 11:55:51.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 11:55:51.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:55:48.106" endtime="20231226 11:55:51.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 11:55:51.645" level="INFO"/>
<status status="PASS" starttime="20231226 11:55:51.644" endtime="20231226 11:55:51.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 11:55:51.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 11:55:51.645" endtime="20231226 11:55:51.646"/>
</kw>
<status status="PASS" starttime="20231226 11:55:48.106" endtime="20231226 11:55:51.646"/>
</kw>
<msg timestamp="20231226 11:55:51.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 11:55:48.106" endtime="20231226 11:55:51.646"/>
</kw>
<msg timestamp="20231226 11:55:51.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 11:55:48.105" endtime="20231226 11:55:51.646"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 11:55:51.647" endtime="20231226 11:55:51.647"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 11:55:48.104" endtime="20231226 11:55:51.647"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231226 11:55:48.064" endtime="20231226 11:55:51.648"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="100851"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
