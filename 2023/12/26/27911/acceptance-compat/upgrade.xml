<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231226 10:30:36.387" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:25.648" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:25.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:25.650" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231226 10:23:25.645" endtime="20231226 10:23:25.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:25.650" level="INFO">scm</msg>
<status status="PASS" starttime="20231226 10:23:25.650" endtime="20231226 10:23:25.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:25.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:25.650" endtime="20231226 10:23:25.651"/>
</kw>
<status status="PASS" starttime="20231226 10:23:25.645" endtime="20231226 10:23:25.651"/>
</kw>
<msg timestamp="20231226 10:23:25.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:25.645" endtime="20231226 10:23:25.652"/>
</kw>
<msg timestamp="20231226 10:23:25.652" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231226 10:23:25.644" endtime="20231226 10:23:25.652"/>
</kw>
<msg timestamp="20231226 10:23:25.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:25.644" endtime="20231226 10:23:25.652"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 10:23:25.653" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:25.652" endtime="20231226 10:23:25.653"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:25.655" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:25.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:25.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:25.654" endtime="20231226 10:23:25.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:25.732" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:25.731" endtime="20231226 10:23:25.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:25.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:25.732" endtime="20231226 10:23:25.732"/>
</kw>
<status status="PASS" starttime="20231226 10:23:25.654" endtime="20231226 10:23:25.733"/>
</kw>
<msg timestamp="20231226 10:23:25.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:25.653" endtime="20231226 10:23:25.733"/>
</kw>
<status status="PASS" starttime="20231226 10:23:25.653" endtime="20231226 10:23:25.733"/>
</kw>
<status status="PASS" starttime="20231226 10:23:25.653" endtime="20231226 10:23:25.733"/>
</kw>
<status status="PASS" starttime="20231226 10:23:25.644" endtime="20231226 10:23:25.733"/>
</kw>
<status status="PASS" starttime="20231226 10:23:25.643" endtime="20231226 10:23:25.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:25.735" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:25.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:25.737" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231226 10:23:25.734" endtime="20231226 10:23:25.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:25.738" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231226 10:23:25.737" endtime="20231226 10:23:25.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:25.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:25.738" endtime="20231226 10:23:25.738"/>
</kw>
<status status="PASS" starttime="20231226 10:23:25.734" endtime="20231226 10:23:25.738"/>
</kw>
<msg timestamp="20231226 10:23:25.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:25.734" endtime="20231226 10:23:25.739"/>
</kw>
<msg timestamp="20231226 10:23:25.739" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231226 10:23:25.733" endtime="20231226 10:23:25.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:25.740" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231226 10:23:25.739" endtime="20231226 10:23:25.740"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231226 10:23:25.740" endtime="20231226 10:23:25.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:25.742" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:27.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:27.894" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231226 10:23:25.741" endtime="20231226 10:23:27.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:27.894" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231226 10:23:27.894" endtime="20231226 10:23:27.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:27.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:27.895" endtime="20231226 10:23:27.895"/>
</kw>
<status status="PASS" starttime="20231226 10:23:25.741" endtime="20231226 10:23:27.895"/>
</kw>
<msg timestamp="20231226 10:23:27.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:25.741" endtime="20231226 10:23:27.895"/>
</kw>
<msg timestamp="20231226 10:23:27.896" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231226 10:23:25.740" endtime="20231226 10:23:27.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:27.896" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231226 10:23:27.896" endtime="20231226 10:23:27.896"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231226 10:23:27.896" endtime="20231226 10:23:27.896"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231226 10:23:25.642" endtime="20231226 10:23:27.897"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:27.901" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:27.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:27.903" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231226 10:23:27.900" endtime="20231226 10:23:27.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:27.903" level="INFO">scm</msg>
<status status="PASS" starttime="20231226 10:23:27.903" endtime="20231226 10:23:27.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:27.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:27.904" endtime="20231226 10:23:27.904"/>
</kw>
<status status="PASS" starttime="20231226 10:23:27.899" endtime="20231226 10:23:27.904"/>
</kw>
<msg timestamp="20231226 10:23:27.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:27.899" endtime="20231226 10:23:27.905"/>
</kw>
<msg timestamp="20231226 10:23:27.905" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231226 10:23:27.899" endtime="20231226 10:23:27.905"/>
</kw>
<msg timestamp="20231226 10:23:27.905" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:27.898" endtime="20231226 10:23:27.905"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 10:23:27.905" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:27.905" endtime="20231226 10:23:27.905"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:27.908" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:28.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:28.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:27.907" endtime="20231226 10:23:28.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:28.017" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:28.017" endtime="20231226 10:23:28.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:28.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:28.017" endtime="20231226 10:23:28.018"/>
</kw>
<status status="PASS" starttime="20231226 10:23:27.906" endtime="20231226 10:23:28.018"/>
</kw>
<msg timestamp="20231226 10:23:28.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:27.906" endtime="20231226 10:23:28.018"/>
</kw>
<status status="PASS" starttime="20231226 10:23:27.906" endtime="20231226 10:23:28.019"/>
</kw>
<status status="PASS" starttime="20231226 10:23:27.906" endtime="20231226 10:23:28.019"/>
</kw>
<status status="PASS" starttime="20231226 10:23:27.898" endtime="20231226 10:23:28.019"/>
</kw>
<status status="PASS" starttime="20231226 10:23:27.898" endtime="20231226 10:23:28.019"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231226 10:23:28.019" endtime="20231226 10:23:28.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:28.021" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:30.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:30.086" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231226 10:23:28.020" endtime="20231226 10:23:30.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:30.087" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231226 10:23:30.087" endtime="20231226 10:23:30.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:30.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:30.087" endtime="20231226 10:23:30.088"/>
</kw>
<status status="PASS" starttime="20231226 10:23:28.020" endtime="20231226 10:23:30.088"/>
</kw>
<msg timestamp="20231226 10:23:30.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:28.020" endtime="20231226 10:23:30.088"/>
</kw>
<msg timestamp="20231226 10:23:30.089" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231226 10:23:28.019" endtime="20231226 10:23:30.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:30.089" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231226 10:23:30.089" endtime="20231226 10:23:30.089"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231226 10:23:30.089" endtime="20231226 10:23:30.089"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231226 10:23:27.897" endtime="20231226 10:23:30.090"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231226 10:23:25.605" endtime="20231226 10:23:30.091"/>
</suite>
<suite id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:33.042" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:33.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:33.044" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231226 10:23:33.040" endtime="20231226 10:23:33.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:33.045" level="INFO">scm</msg>
<status status="PASS" starttime="20231226 10:23:33.044" endtime="20231226 10:23:33.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:33.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:33.045" endtime="20231226 10:23:33.045"/>
</kw>
<status status="PASS" starttime="20231226 10:23:33.039" endtime="20231226 10:23:33.045"/>
</kw>
<msg timestamp="20231226 10:23:33.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:33.039" endtime="20231226 10:23:33.046"/>
</kw>
<msg timestamp="20231226 10:23:33.047" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231226 10:23:33.039" endtime="20231226 10:23:33.047"/>
</kw>
<msg timestamp="20231226 10:23:33.047" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:33.038" endtime="20231226 10:23:33.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 10:23:33.047" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:33.047" endtime="20231226 10:23:33.047"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:33.050" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:33.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:33.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:33.049" endtime="20231226 10:23:33.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:33.066" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:33.066" endtime="20231226 10:23:33.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:33.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:33.066" endtime="20231226 10:23:33.066"/>
</kw>
<status status="PASS" starttime="20231226 10:23:33.048" endtime="20231226 10:23:33.067"/>
</kw>
<msg timestamp="20231226 10:23:33.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:33.048" endtime="20231226 10:23:33.067"/>
</kw>
<status status="PASS" starttime="20231226 10:23:33.048" endtime="20231226 10:23:33.067"/>
</kw>
<status status="PASS" starttime="20231226 10:23:33.047" endtime="20231226 10:23:33.067"/>
</kw>
<status status="PASS" starttime="20231226 10:23:33.038" endtime="20231226 10:23:33.067"/>
</kw>
<status status="PASS" starttime="20231226 10:23:33.038" endtime="20231226 10:23:33.067"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:33.071" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:35.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:35.307" level="INFO">${output} = 2023-12-26 10:23:35,221 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231226 10:23:33.070" endtime="20231226 10:23:35.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:35.308" level="INFO">2023-12-26 10:23:35,221 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231226 10:23:35.307" endtime="20231226 10:23:35.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:35.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:35.308" endtime="20231226 10:23:35.309"/>
</kw>
<status status="PASS" starttime="20231226 10:23:33.069" endtime="20231226 10:23:35.309"/>
</kw>
<msg timestamp="20231226 10:23:35.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:33.069" endtime="20231226 10:23:35.310"/>
</kw>
<msg timestamp="20231226 10:23:35.310" level="INFO">${output} = 2023-12-26 10:23:35,221 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231226 10:23:33.069" endtime="20231226 10:23:35.310"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:23:35.311" endtime="20231226 10:23:35.311"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:35.315" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:37.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:37.610" level="INFO">${output} = 2023-12-26 10:23:37,565 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231226 10:23:35.313" endtime="20231226 10:23:37.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:37.610" level="INFO">2023-12-26 10:23:37,565 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231226 10:23:37.610" endtime="20231226 10:23:37.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:37.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:37.611" endtime="20231226 10:23:37.611"/>
</kw>
<status status="PASS" starttime="20231226 10:23:35.312" endtime="20231226 10:23:37.611"/>
</kw>
<msg timestamp="20231226 10:23:37.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:35.312" endtime="20231226 10:23:37.612"/>
</kw>
<msg timestamp="20231226 10:23:37.612" level="INFO">${output} = 2023-12-26 10:23:37,565 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231226 10:23:35.311" endtime="20231226 10:23:37.612"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:23:37.612" endtime="20231226 10:23:37.612"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 10:23:33.068" endtime="20231226 10:23:37.612"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:37.615" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231226 10:23:37.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:37.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:37.614" endtime="20231226 10:23:37.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:37.617" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:37.617" endtime="20231226 10:23:37.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:37.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:37.617" endtime="20231226 10:23:37.617"/>
</kw>
<status status="PASS" starttime="20231226 10:23:37.613" endtime="20231226 10:23:37.618"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:37.620" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:41.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:41.941" level="INFO">${output} = 2023-12-26 10:23:40,301 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 10:23:40,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 10:23:37.619" endtime="20231226 10:23:41.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:41.942" level="INFO">2023-12-26 10:23:40,301 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 10:23:40,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-26 10:23:40,368 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-26 10:23:40,578 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231226 10:23:41.942" endtime="20231226 10:23:41.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:41.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:41.942" endtime="20231226 10:23:41.943"/>
</kw>
<status status="PASS" starttime="20231226 10:23:37.618" endtime="20231226 10:23:41.943"/>
</kw>
<msg timestamp="20231226 10:23:41.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:37.618" endtime="20231226 10:23:41.943"/>
</kw>
<msg timestamp="20231226 10:23:41.944" level="INFO">${output} = 2023-12-26 10:23:40,301 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 10:23:40,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 10:23:37.618" endtime="20231226 10:23:41.944"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:23:41.944" endtime="20231226 10:23:41.944"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:41.946" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:41.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:41.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:41.945" endtime="20231226 10:23:41.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:41.948" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:41.948" endtime="20231226 10:23:41.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:41.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:41.948" endtime="20231226 10:23:41.949"/>
</kw>
<status status="PASS" starttime="20231226 10:23:41.944" endtime="20231226 10:23:41.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 10:23:37.613" endtime="20231226 10:23:41.949"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:41.952" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:44.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:44.103" level="INFO">${output} = 2023-12-26 10:23:44,067 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231226 10:23:41.951" endtime="20231226 10:23:44.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:44.104" level="INFO">2023-12-26 10:23:44,067 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231226 10:23:44.104" endtime="20231226 10:23:44.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:44.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:44.104" endtime="20231226 10:23:44.105"/>
</kw>
<status status="PASS" starttime="20231226 10:23:41.951" endtime="20231226 10:23:44.105"/>
</kw>
<msg timestamp="20231226 10:23:44.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:41.951" endtime="20231226 10:23:44.105"/>
</kw>
<msg timestamp="20231226 10:23:44.106" level="INFO">${output} = 2023-12-26 10:23:44,067 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231226 10:23:41.950" endtime="20231226 10:23:44.106"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:23:44.106" endtime="20231226 10:23:44.106"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 10:23:41.950" endtime="20231226 10:23:44.106"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:44.109" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231226 10:23:44.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:44.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:44.108" endtime="20231226 10:23:44.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:44.111" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:44.110" endtime="20231226 10:23:44.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:44.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:44.111" endtime="20231226 10:23:44.111"/>
</kw>
<status status="PASS" starttime="20231226 10:23:44.107" endtime="20231226 10:23:44.111"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:44.114" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:48.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:48.087" level="INFO">${output} = 2023-12-26 10:23:46,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 10:23:46,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 10:23:44.112" endtime="20231226 10:23:48.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:48.088" level="INFO">2023-12-26 10:23:46,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 10:23:46,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-26 10:23:46,797 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-26 10:23:46,997 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231226 10:23:48.088" endtime="20231226 10:23:48.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:48.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:48.088" endtime="20231226 10:23:48.089"/>
</kw>
<status status="PASS" starttime="20231226 10:23:44.112" endtime="20231226 10:23:48.089"/>
</kw>
<msg timestamp="20231226 10:23:48.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:44.112" endtime="20231226 10:23:48.090"/>
</kw>
<msg timestamp="20231226 10:23:48.090" level="INFO">${output} = 2023-12-26 10:23:46,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 10:23:46,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 10:23:44.111" endtime="20231226 10:23:48.090"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:23:48.090" endtime="20231226 10:23:48.090"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:48.092" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:48.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:48.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:48.091" endtime="20231226 10:23:48.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:48.095" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:48.094" endtime="20231226 10:23:48.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:48.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:48.095" endtime="20231226 10:23:48.095"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.090" endtime="20231226 10:23:48.096"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 10:23:44.107" endtime="20231226 10:23:48.096"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:48.100" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:48.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:48.102" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231226 10:23:48.099" endtime="20231226 10:23:48.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:48.103" level="INFO">scm</msg>
<status status="PASS" starttime="20231226 10:23:48.102" endtime="20231226 10:23:48.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:48.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:48.103" endtime="20231226 10:23:48.103"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.099" endtime="20231226 10:23:48.103"/>
</kw>
<msg timestamp="20231226 10:23:48.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:48.098" endtime="20231226 10:23:48.104"/>
</kw>
<msg timestamp="20231226 10:23:48.104" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231226 10:23:48.098" endtime="20231226 10:23:48.104"/>
</kw>
<msg timestamp="20231226 10:23:48.104" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:48.098" endtime="20231226 10:23:48.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 10:23:48.105" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:48.105" endtime="20231226 10:23:48.105"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:48.107" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:48.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:48.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:48.106" endtime="20231226 10:23:48.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:48.125" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:48.125" endtime="20231226 10:23:48.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:48.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:48.126" endtime="20231226 10:23:48.126"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.106" endtime="20231226 10:23:48.126"/>
</kw>
<msg timestamp="20231226 10:23:48.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:48.106" endtime="20231226 10:23:48.127"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.105" endtime="20231226 10:23:48.127"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.105" endtime="20231226 10:23:48.127"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.097" endtime="20231226 10:23:48.127"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.097" endtime="20231226 10:23:48.127"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:48.130" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:49.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:49.911" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:23:48.128" endtime="20231226 10:23:49.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:49.912" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:23:49.912" endtime="20231226 10:23:49.912"/>
</kw>
<msg timestamp="20231226 10:23:49.913" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:23:48.128" endtime="20231226 10:23:49.913"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 10:23:49.914" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231226 10:23:49.913" endtime="20231226 10:23:49.914"/>
</kw>
<msg timestamp="20231226 10:23:49.914" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231226 10:23:49.913" endtime="20231226 10:23:49.914"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231226 10:23:49.915" endtime="20231226 10:23:49.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231226 10:23:49.915" endtime="20231226 10:23:49.915"/>
</kw>
<status status="NOT RUN" starttime="20231226 10:23:49.915" endtime="20231226 10:23:49.915"/>
</branch>
<status status="PASS" starttime="20231226 10:23:49.914" endtime="20231226 10:23:49.915"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 10:23:49.916" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231226 10:23:49.915" endtime="20231226 10:23:49.916"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231226 10:23:49.917" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231226 10:23:49.916" endtime="20231226 10:23:49.917"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 10:23:49.919" level="INFO">${secret} = ['0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c']</msg>
<status status="PASS" starttime="20231226 10:23:49.917" endtime="20231226 10:23:49.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 10:23:49.921" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:49.919" endtime="20231226 10:23:49.921"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 10:23:49.922" level="INFO">${secret} = 0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:23:49.921" endtime="20231226 10:23:49.922"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:49.924" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:50.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:50.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:49.923" endtime="20231226 10:23:50.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:50.303" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:50.303" endtime="20231226 10:23:50.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:50.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:50.303" endtime="20231226 10:23:50.304"/>
</kw>
<status status="PASS" starttime="20231226 10:23:49.923" endtime="20231226 10:23:50.304"/>
</kw>
<msg timestamp="20231226 10:23:50.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:49.922" endtime="20231226 10:23:50.305"/>
</kw>
<status status="PASS" starttime="20231226 10:23:49.922" endtime="20231226 10:23:50.305"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:50.307" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:50.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:50.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:50.306" endtime="20231226 10:23:50.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:50.659" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:50.659" endtime="20231226 10:23:50.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:50.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:50.660" endtime="20231226 10:23:50.660"/>
</kw>
<status status="PASS" starttime="20231226 10:23:50.306" endtime="20231226 10:23:50.661"/>
</kw>
<msg timestamp="20231226 10:23:50.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:50.305" endtime="20231226 10:23:50.661"/>
</kw>
<status status="PASS" starttime="20231226 10:23:50.305" endtime="20231226 10:23:50.662"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:50.664" level="INFO">Running command 'aws configure set aws_secret_access_key 0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:51.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:51.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:50.663" endtime="20231226 10:23:51.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:51.006" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:51.005" endtime="20231226 10:23:51.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:51.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:51.006" endtime="20231226 10:23:51.006"/>
</kw>
<status status="PASS" starttime="20231226 10:23:50.662" endtime="20231226 10:23:51.006"/>
</kw>
<msg timestamp="20231226 10:23:51.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:50.662" endtime="20231226 10:23:51.007"/>
</kw>
<status status="PASS" starttime="20231226 10:23:50.662" endtime="20231226 10:23:51.007"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:51.009" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:51.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:51.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:51.008" endtime="20231226 10:23:51.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:51.357" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:51.356" endtime="20231226 10:23:51.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:51.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:51.357" endtime="20231226 10:23:51.357"/>
</kw>
<status status="PASS" starttime="20231226 10:23:51.008" endtime="20231226 10:23:51.358"/>
</kw>
<msg timestamp="20231226 10:23:51.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:51.007" endtime="20231226 10:23:51.358"/>
</kw>
<status status="PASS" starttime="20231226 10:23:51.007" endtime="20231226 10:23:51.358"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:51.361" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:51.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:51.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:51.359" endtime="20231226 10:23:51.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:51.703" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:51.702" endtime="20231226 10:23:51.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:51.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:51.703" endtime="20231226 10:23:51.703"/>
</kw>
<status status="PASS" starttime="20231226 10:23:51.359" endtime="20231226 10:23:51.704"/>
</kw>
<msg timestamp="20231226 10:23:51.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:51.359" endtime="20231226 10:23:51.704"/>
</kw>
<status status="PASS" starttime="20231226 10:23:51.358" endtime="20231226 10:23:51.704"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.128" endtime="20231226 10:23:51.704"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.127" endtime="20231226 10:23:51.704"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 10:23:51.705" endtime="20231226 10:23:51.705"/>
</kw>
<status status="PASS" starttime="20231226 10:23:48.097" endtime="20231226 10:23:51.705"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 10:23:51.706" level="INFO">${randStr} = 5544370275</msg>
<status status="PASS" starttime="20231226 10:23:51.706" endtime="20231226 10:23:51.706"/>
</kw>
<msg timestamp="20231226 10:23:51.706" level="INFO">${random} = ozone-test-5544370275</msg>
<status status="PASS" starttime="20231226 10:23:51.705" endtime="20231226 10:23:51.706"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:51.709" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-5544370275 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:53.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:53.170" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5544370275"
}</msg>
<status status="PASS" starttime="20231226 10:23:51.708" endtime="20231226 10:23:53.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:53.171" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5544370275"
}</msg>
<status status="PASS" starttime="20231226 10:23:53.170" endtime="20231226 10:23:53.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:53.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:53.171" endtime="20231226 10:23:53.172"/>
</kw>
<status status="PASS" starttime="20231226 10:23:51.708" endtime="20231226 10:23:53.172"/>
</kw>
<msg timestamp="20231226 10:23:53.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:51.707" endtime="20231226 10:23:53.172"/>
</kw>
<msg timestamp="20231226 10:23:53.172" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5544370275"
}</msg>
<status status="PASS" starttime="20231226 10:23:51.707" endtime="20231226 10:23:53.173"/>
</kw>
<msg timestamp="20231226 10:23:53.173" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5544370275"
}</msg>
<status status="PASS" starttime="20231226 10:23:51.707" endtime="20231226 10:23:53.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:23:53.173" endtime="20231226 10:23:53.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:23:53.173" endtime="20231226 10:23:53.174"/>
</kw>
<msg timestamp="20231226 10:23:53.174" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231226 10:23:51.706" endtime="20231226 10:23:53.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231226 10:23:53.174" endtime="20231226 10:23:53.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 10:23:48.096" endtime="20231226 10:23:53.174"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:53.177" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231226 10:23:53.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:53.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:53.176" endtime="20231226 10:23:53.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:53.179" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:53.179" endtime="20231226 10:23:53.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:53.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:53.179" endtime="20231226 10:23:53.180"/>
</kw>
<status status="PASS" starttime="20231226 10:23:53.175" endtime="20231226 10:23:53.180"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:53.182" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:54.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:54.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:53.181" endtime="20231226 10:23:54.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:54.508" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:54.507" endtime="20231226 10:23:54.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:54.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:54.508" endtime="20231226 10:23:54.508"/>
</kw>
<msg timestamp="20231226 10:23:54.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:53.181" endtime="20231226 10:23:54.508"/>
</kw>
<msg timestamp="20231226 10:23:54.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:53.180" endtime="20231226 10:23:54.509"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:23:54.509" endtime="20231226 10:23:54.509"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:54.511" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:54.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:54.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:54.510" endtime="20231226 10:23:54.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:54.513" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:54.513" endtime="20231226 10:23:54.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:54.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:54.513" endtime="20231226 10:23:54.514"/>
</kw>
<status status="PASS" starttime="20231226 10:23:54.509" endtime="20231226 10:23:54.514"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 10:23:53.175" endtime="20231226 10:23:54.514"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231226 10:23:32.977" endtime="20231226 10:23:54.515"/>
</suite>
<suite id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:57.472" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:57.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:57.474" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231226 10:23:57.469" endtime="20231226 10:23:57.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:57.474" level="INFO">scm</msg>
<status status="PASS" starttime="20231226 10:23:57.474" endtime="20231226 10:23:57.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:57.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:57.474" endtime="20231226 10:23:57.474"/>
</kw>
<status status="PASS" starttime="20231226 10:23:57.469" endtime="20231226 10:23:57.475"/>
</kw>
<msg timestamp="20231226 10:23:57.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:57.469" endtime="20231226 10:23:57.476"/>
</kw>
<msg timestamp="20231226 10:23:57.476" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231226 10:23:57.468" endtime="20231226 10:23:57.476"/>
</kw>
<msg timestamp="20231226 10:23:57.476" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:57.468" endtime="20231226 10:23:57.476"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 10:23:57.476" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:23:57.476" endtime="20231226 10:23:57.476"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:57.479" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:23:57.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:23:57.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:23:57.478" endtime="20231226 10:23:57.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:23:57.515" level="INFO"/>
<status status="PASS" starttime="20231226 10:23:57.514" endtime="20231226 10:23:57.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:23:57.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:23:57.515" endtime="20231226 10:23:57.515"/>
</kw>
<status status="PASS" starttime="20231226 10:23:57.477" endtime="20231226 10:23:57.515"/>
</kw>
<msg timestamp="20231226 10:23:57.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:57.477" endtime="20231226 10:23:57.516"/>
</kw>
<status status="PASS" starttime="20231226 10:23:57.477" endtime="20231226 10:23:57.516"/>
</kw>
<status status="PASS" starttime="20231226 10:23:57.477" endtime="20231226 10:23:57.516"/>
</kw>
<status status="PASS" starttime="20231226 10:23:57.468" endtime="20231226 10:23:57.516"/>
</kw>
<status status="PASS" starttime="20231226 10:23:57.467" endtime="20231226 10:23:57.516"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231226 10:23:57.518" level="INFO">${random} = 65823</msg>
<status status="PASS" starttime="20231226 10:23:57.518" endtime="20231226 10:23:57.518"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:23:57.520" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-65823 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:01.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:01.241" level="INFO">${output} = 2023-12-26 10:24:00,116 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 10:24:00,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 10:23:57.519" endtime="20231226 10:24:01.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:01.242" level="INFO">2023-12-26 10:24:00,116 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 10:24:00,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-26 10:24:00,188 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231226 10:24:01.242" endtime="20231226 10:24:01.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:01.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:01.243" endtime="20231226 10:24:01.243"/>
</kw>
<status status="PASS" starttime="20231226 10:23:57.519" endtime="20231226 10:24:01.243"/>
</kw>
<msg timestamp="20231226 10:24:01.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:23:57.519" endtime="20231226 10:24:01.244"/>
</kw>
<msg timestamp="20231226 10:24:01.244" level="INFO">${output} = 2023-12-26 10:24:00,116 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-26 10:24:00,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231226 10:23:57.518" endtime="20231226 10:24:01.244"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:24:01.244" endtime="20231226 10:24:01.244"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:01.246" level="INFO">Running command 'cat /tmp/key-65823 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:01.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:01.248" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231226 10:24:01.245" endtime="20231226 10:24:01.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:01.248" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231226 10:24:01.248" endtime="20231226 10:24:01.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:01.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:01.249" endtime="20231226 10:24:01.249"/>
</kw>
<msg timestamp="20231226 10:24:01.249" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231226 10:24:01.244" endtime="20231226 10:24:01.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:24:01.249" endtime="20231226 10:24:01.250"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:01.251" level="INFO">Running command 'rm /tmp/key-65823 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:01.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:01.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:01.250" endtime="20231226 10:24:01.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:01.253" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:01.253" endtime="20231226 10:24:01.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:01.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:01.254" endtime="20231226 10:24:01.254"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.250" endtime="20231226 10:24:01.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 10:23:57.517" endtime="20231226 10:24:01.254"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:01.259" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:01.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:01.261" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231226 10:24:01.258" endtime="20231226 10:24:01.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:01.262" level="INFO">scm</msg>
<status status="PASS" starttime="20231226 10:24:01.261" endtime="20231226 10:24:01.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:01.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:01.262" endtime="20231226 10:24:01.262"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.257" endtime="20231226 10:24:01.262"/>
</kw>
<msg timestamp="20231226 10:24:01.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:01.257" endtime="20231226 10:24:01.263"/>
</kw>
<msg timestamp="20231226 10:24:01.263" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231226 10:24:01.257" endtime="20231226 10:24:01.263"/>
</kw>
<msg timestamp="20231226 10:24:01.263" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:24:01.257" endtime="20231226 10:24:01.263"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 10:24:01.264" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:24:01.263" endtime="20231226 10:24:01.264"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:01.266" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:01.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:01.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:01.265" endtime="20231226 10:24:01.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:01.302" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:01.302" endtime="20231226 10:24:01.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:01.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:01.302" endtime="20231226 10:24:01.303"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.265" endtime="20231226 10:24:01.303"/>
</kw>
<msg timestamp="20231226 10:24:01.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:01.265" endtime="20231226 10:24:01.303"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.264" endtime="20231226 10:24:01.304"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.264" endtime="20231226 10:24:01.304"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.256" endtime="20231226 10:24:01.304"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.256" endtime="20231226 10:24:01.304"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:01.306" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:02.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:02.995" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:24:01.305" endtime="20231226 10:24:02.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:02.996" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:24:02.995" endtime="20231226 10:24:02.996"/>
</kw>
<msg timestamp="20231226 10:24:02.996" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:24:01.305" endtime="20231226 10:24:02.996"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 10:24:02.997" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231226 10:24:02.997" endtime="20231226 10:24:02.998"/>
</kw>
<msg timestamp="20231226 10:24:02.998" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231226 10:24:02.997" endtime="20231226 10:24:02.998"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231226 10:24:02.998" endtime="20231226 10:24:02.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231226 10:24:02.998" endtime="20231226 10:24:02.998"/>
</kw>
<status status="NOT RUN" starttime="20231226 10:24:02.998" endtime="20231226 10:24:02.998"/>
</branch>
<status status="PASS" starttime="20231226 10:24:02.998" endtime="20231226 10:24:02.998"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 10:24:02.999" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231226 10:24:02.998" endtime="20231226 10:24:02.999"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231226 10:24:02.999" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231226 10:24:02.999" endtime="20231226 10:24:02.999"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 10:24:03.000" level="INFO">${secret} = ['0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c']</msg>
<status status="PASS" starttime="20231226 10:24:03.000" endtime="20231226 10:24:03.000"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 10:24:03.001" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:24:03.000" endtime="20231226 10:24:03.001"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 10:24:03.002" level="INFO">${secret} = 0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:24:03.001" endtime="20231226 10:24:03.002"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:03.004" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:03.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:03.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:03.003" endtime="20231226 10:24:03.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:03.362" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:03.361" endtime="20231226 10:24:03.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:03.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:03.362" endtime="20231226 10:24:03.363"/>
</kw>
<status status="PASS" starttime="20231226 10:24:03.003" endtime="20231226 10:24:03.363"/>
</kw>
<msg timestamp="20231226 10:24:03.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:03.002" endtime="20231226 10:24:03.364"/>
</kw>
<status status="PASS" starttime="20231226 10:24:03.002" endtime="20231226 10:24:03.364"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:03.367" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:03.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:03.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:03.366" endtime="20231226 10:24:03.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:03.720" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:03.719" endtime="20231226 10:24:03.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:03.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:03.720" endtime="20231226 10:24:03.721"/>
</kw>
<status status="PASS" starttime="20231226 10:24:03.365" endtime="20231226 10:24:03.721"/>
</kw>
<msg timestamp="20231226 10:24:03.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:03.365" endtime="20231226 10:24:03.721"/>
</kw>
<status status="PASS" starttime="20231226 10:24:03.364" endtime="20231226 10:24:03.722"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:03.724" level="INFO">Running command 'aws configure set aws_secret_access_key 0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:04.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:04.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:03.723" endtime="20231226 10:24:04.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:04.075" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:04.074" endtime="20231226 10:24:04.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:04.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:04.075" endtime="20231226 10:24:04.075"/>
</kw>
<status status="PASS" starttime="20231226 10:24:03.722" endtime="20231226 10:24:04.075"/>
</kw>
<msg timestamp="20231226 10:24:04.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:03.722" endtime="20231226 10:24:04.076"/>
</kw>
<status status="PASS" starttime="20231226 10:24:03.722" endtime="20231226 10:24:04.076"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:04.078" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:04.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:04.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:04.077" endtime="20231226 10:24:04.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:04.434" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:04.433" endtime="20231226 10:24:04.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:04.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:04.434" endtime="20231226 10:24:04.435"/>
</kw>
<status status="PASS" starttime="20231226 10:24:04.077" endtime="20231226 10:24:04.435"/>
</kw>
<msg timestamp="20231226 10:24:04.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:04.077" endtime="20231226 10:24:04.435"/>
</kw>
<status status="PASS" starttime="20231226 10:24:04.076" endtime="20231226 10:24:04.435"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:04.438" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:04.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:04.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:04.436" endtime="20231226 10:24:04.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:04.794" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:04.794" endtime="20231226 10:24:04.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:04.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:04.794" endtime="20231226 10:24:04.795"/>
</kw>
<status status="PASS" starttime="20231226 10:24:04.436" endtime="20231226 10:24:04.795"/>
</kw>
<msg timestamp="20231226 10:24:04.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:04.436" endtime="20231226 10:24:04.795"/>
</kw>
<status status="PASS" starttime="20231226 10:24:04.435" endtime="20231226 10:24:04.795"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.304" endtime="20231226 10:24:04.796"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.304" endtime="20231226 10:24:04.796"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 10:24:04.796" endtime="20231226 10:24:04.796"/>
</kw>
<status status="PASS" starttime="20231226 10:24:01.255" endtime="20231226 10:24:04.796"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:04.799" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:05.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:05.372" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 26 Dec 2023 10:23:47 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231226 10:24:04.797" endtime="20231226 10:24:05.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:05.373" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 26 Dec 2023 10:23:47 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 26 Dec 2023 10:24:05 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231226 10:24:05.372" endtime="20231226 10:24:05.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:05.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:05.373" endtime="20231226 10:24:05.374"/>
</kw>
<msg timestamp="20231226 10:24:05.374" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 26 Dec 2023 10:23:47 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231226 10:24:04.797" endtime="20231226 10:24:05.375"/>
</kw>
<msg timestamp="20231226 10:24:05.375" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 26 Dec 2023 10:23:47 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231226 10:24:04.796" endtime="20231226 10:24:05.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:24:05.375" endtime="20231226 10:24:05.376"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:05.378" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:05.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:05.380" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231226 10:24:05.376" endtime="20231226 10:24:05.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:05.380" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231226 10:24:05.380" endtime="20231226 10:24:05.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:05.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:05.381" endtime="20231226 10:24:05.381"/>
</kw>
<msg timestamp="20231226 10:24:05.381" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231226 10:24:05.376" endtime="20231226 10:24:05.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:24:05.381" endtime="20231226 10:24:05.382"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:05.383" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:05.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:05.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:05.382" endtime="20231226 10:24:05.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:05.385" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:05.385" endtime="20231226 10:24:05.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:05.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:05.386" endtime="20231226 10:24:05.386"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.382" endtime="20231226 10:24:05.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 10:24:01.255" endtime="20231226 10:24:05.386"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:05.391" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:05.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:05.393" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231226 10:24:05.390" endtime="20231226 10:24:05.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:05.394" level="INFO">scm</msg>
<status status="PASS" starttime="20231226 10:24:05.393" endtime="20231226 10:24:05.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:05.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:05.394" endtime="20231226 10:24:05.394"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.389" endtime="20231226 10:24:05.394"/>
</kw>
<msg timestamp="20231226 10:24:05.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:05.389" endtime="20231226 10:24:05.395"/>
</kw>
<msg timestamp="20231226 10:24:05.395" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231226 10:24:05.389" endtime="20231226 10:24:05.395"/>
</kw>
<msg timestamp="20231226 10:24:05.396" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:24:05.389" endtime="20231226 10:24:05.396"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 10:24:05.396" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:24:05.396" endtime="20231226 10:24:05.396"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:05.398" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:05.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:05.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:05.397" endtime="20231226 10:24:05.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:05.414" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:05.414" endtime="20231226 10:24:05.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:05.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:05.414" endtime="20231226 10:24:05.415"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.397" endtime="20231226 10:24:05.415"/>
</kw>
<msg timestamp="20231226 10:24:05.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:05.397" endtime="20231226 10:24:05.415"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.396" endtime="20231226 10:24:05.415"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.396" endtime="20231226 10:24:05.415"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.388" endtime="20231226 10:24:05.416"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.388" endtime="20231226 10:24:05.416"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:05.418" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:07.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:07.216" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:24:05.417" endtime="20231226 10:24:07.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:07.217" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:24:07.216" endtime="20231226 10:24:07.217"/>
</kw>
<msg timestamp="20231226 10:24:07.217" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:24:05.416" endtime="20231226 10:24:07.217"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231226 10:24:07.218" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231226 10:24:07.218" endtime="20231226 10:24:07.218"/>
</kw>
<msg timestamp="20231226 10:24:07.218" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231226 10:24:07.217" endtime="20231226 10:24:07.218"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231226 10:24:07.219" endtime="20231226 10:24:07.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231226 10:24:07.219" endtime="20231226 10:24:07.219"/>
</kw>
<status status="NOT RUN" starttime="20231226 10:24:07.219" endtime="20231226 10:24:07.219"/>
</branch>
<status status="PASS" starttime="20231226 10:24:07.219" endtime="20231226 10:24:07.219"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 10:24:07.219" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231226 10:24:07.219" endtime="20231226 10:24:07.219"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231226 10:24:07.220" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231226 10:24:07.220" endtime="20231226 10:24:07.220"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 10:24:07.220" level="INFO">${secret} = ['0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c']</msg>
<status status="PASS" starttime="20231226 10:24:07.220" endtime="20231226 10:24:07.220"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 10:24:07.221" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:24:07.220" endtime="20231226 10:24:07.221"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 10:24:07.222" level="INFO">${secret} = 0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c</msg>
<status status="PASS" starttime="20231226 10:24:07.221" endtime="20231226 10:24:07.222"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:07.225" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:07.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:07.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:07.223" endtime="20231226 10:24:07.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:07.577" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:07.576" endtime="20231226 10:24:07.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:07.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:07.577" endtime="20231226 10:24:07.578"/>
</kw>
<status status="PASS" starttime="20231226 10:24:07.223" endtime="20231226 10:24:07.578"/>
</kw>
<msg timestamp="20231226 10:24:07.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:07.223" endtime="20231226 10:24:07.578"/>
</kw>
<status status="PASS" starttime="20231226 10:24:07.222" endtime="20231226 10:24:07.578"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:07.581" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:07.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:07.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:07.580" endtime="20231226 10:24:07.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:07.933" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:07.933" endtime="20231226 10:24:07.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:07.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:07.933" endtime="20231226 10:24:07.934"/>
</kw>
<status status="PASS" starttime="20231226 10:24:07.579" endtime="20231226 10:24:07.934"/>
</kw>
<msg timestamp="20231226 10:24:07.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:07.579" endtime="20231226 10:24:07.935"/>
</kw>
<status status="PASS" starttime="20231226 10:24:07.579" endtime="20231226 10:24:07.935"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:07.937" level="INFO">Running command 'aws configure set aws_secret_access_key 0e68a5fa8f7a3cd53110894e6fe052d9ac6acec340ff5f479a1dc7286676135c 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:08.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:08.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:07.936" endtime="20231226 10:24:08.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:08.280" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:08.279" endtime="20231226 10:24:08.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:08.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:08.280" endtime="20231226 10:24:08.280"/>
</kw>
<status status="PASS" starttime="20231226 10:24:07.935" endtime="20231226 10:24:08.281"/>
</kw>
<msg timestamp="20231226 10:24:08.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:07.935" endtime="20231226 10:24:08.281"/>
</kw>
<status status="PASS" starttime="20231226 10:24:07.935" endtime="20231226 10:24:08.281"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:08.284" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:08.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:08.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:08.282" endtime="20231226 10:24:08.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:08.645" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:08.644" endtime="20231226 10:24:08.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:08.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:08.645" endtime="20231226 10:24:08.645"/>
</kw>
<status status="PASS" starttime="20231226 10:24:08.282" endtime="20231226 10:24:08.646"/>
</kw>
<msg timestamp="20231226 10:24:08.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:08.282" endtime="20231226 10:24:08.646"/>
</kw>
<status status="PASS" starttime="20231226 10:24:08.281" endtime="20231226 10:24:08.646"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:08.649" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:08.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:08.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:08.647" endtime="20231226 10:24:08.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:09.000" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:09.000" endtime="20231226 10:24:09.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:09.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:09.000" endtime="20231226 10:24:09.001"/>
</kw>
<status status="PASS" starttime="20231226 10:24:08.647" endtime="20231226 10:24:09.001"/>
</kw>
<msg timestamp="20231226 10:24:09.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:08.647" endtime="20231226 10:24:09.001"/>
</kw>
<status status="PASS" starttime="20231226 10:24:08.646" endtime="20231226 10:24:09.002"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.416" endtime="20231226 10:24:09.002"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.416" endtime="20231226 10:24:09.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231226 10:24:09.002" endtime="20231226 10:24:09.002"/>
</kw>
<status status="PASS" starttime="20231226 10:24:05.388" endtime="20231226 10:24:09.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:09.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:09.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:09.471" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 26 Dec 2023 10:23:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231226 10:24:09.003" endtime="20231226 10:24:09.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:09.472" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 26 Dec 2023 10:23:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 26 Dec 2023 10:24:09 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231226 10:24:09.472" endtime="20231226 10:24:09.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:09.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:09.472" endtime="20231226 10:24:09.473"/>
</kw>
<msg timestamp="20231226 10:24:09.473" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 26 Dec 2023 10:23:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231226 10:24:09.003" endtime="20231226 10:24:09.473"/>
</kw>
<msg timestamp="20231226 10:24:09.473" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 26 Dec 2023 10:23:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231226 10:24:09.002" endtime="20231226 10:24:09.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:24:09.473" endtime="20231226 10:24:09.474"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:09.475" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:09.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:09.477" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231226 10:24:09.474" endtime="20231226 10:24:09.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:09.478" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231226 10:24:09.477" endtime="20231226 10:24:09.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:09.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:09.478" endtime="20231226 10:24:09.478"/>
</kw>
<msg timestamp="20231226 10:24:09.479" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231226 10:24:09.474" endtime="20231226 10:24:09.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 10:24:09.479" endtime="20231226 10:24:09.479"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:09.481" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:09.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:09.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:09.479" endtime="20231226 10:24:09.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:09.483" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:09.483" endtime="20231226 10:24:09.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:09.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:09.483" endtime="20231226 10:24:09.483"/>
</kw>
<status status="PASS" starttime="20231226 10:24:09.479" endtime="20231226 10:24:09.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231226 10:24:05.387" endtime="20231226 10:24:09.484"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231226 10:23:57.408" endtime="20231226 10:24:09.485"/>
</suite>
<suite id="s1-s4" name="1.3.0-1.4.0-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:12.375" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:12.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:12.377" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231226 10:24:12.373" endtime="20231226 10:24:12.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:12.378" level="INFO">scm</msg>
<status status="PASS" starttime="20231226 10:24:12.378" endtime="20231226 10:24:12.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:12.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:12.378" endtime="20231226 10:24:12.378"/>
</kw>
<status status="PASS" starttime="20231226 10:24:12.372" endtime="20231226 10:24:12.379"/>
</kw>
<msg timestamp="20231226 10:24:12.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:12.372" endtime="20231226 10:24:12.380"/>
</kw>
<msg timestamp="20231226 10:24:12.380" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231226 10:24:12.372" endtime="20231226 10:24:12.380"/>
</kw>
<msg timestamp="20231226 10:24:12.380" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:24:12.372" endtime="20231226 10:24:12.380"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231226 10:24:12.381" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231226 10:24:12.380" endtime="20231226 10:24:12.381"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:12.383" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:24:12.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20231226 10:24:12.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231226 10:24:12.382" endtime="20231226 10:24:12.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231226 10:24:12.399" level="INFO"/>
<status status="PASS" starttime="20231226 10:24:12.398" endtime="20231226 10:24:12.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231226 10:24:12.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231226 10:24:12.399" endtime="20231226 10:24:12.399"/>
</kw>
<status status="PASS" starttime="20231226 10:24:12.382" endtime="20231226 10:24:12.400"/>
</kw>
<msg timestamp="20231226 10:24:12.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231226 10:24:12.381" endtime="20231226 10:24:12.400"/>
</kw>
<status status="PASS" starttime="20231226 10:24:12.381" endtime="20231226 10:24:12.400"/>
</kw>
<status status="PASS" starttime="20231226 10:24:12.381" endtime="20231226 10:24:12.400"/>
</kw>
<status status="PASS" starttime="20231226 10:24:12.371" endtime="20231226 10:24:12.400"/>
</kw>
<status status="PASS" starttime="20231226 10:24:12.371" endtime="20231226 10:24:12.400"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231226 10:24:12.401" endtime="20231226 10:24:12.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231226 10:24:12.403" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231226 10:29:12.373" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231226 10:24:12.402" endtime="20231226 10:29:12.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231226 10:29:12.373" endtime="20231226 10:29:12.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231226 10:29:12.373" endtime="20231226 10:29:12.373"/>
</kw>
<status status="FAIL" starttime="20231226 10:24:12.401" endtime="20231226 10:29:12.374"/>
</kw>
<msg timestamp="20231226 10:29:12.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231226 10:24:12.401" endtime="20231226 10:29:12.374"/>
</kw>
<status status="FAIL" starttime="20231226 10:24:12.401" endtime="20231226 10:29:12.374"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20231226 10:29:12.374" endtime="20231226 10:29:12.374"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231226 10:24:12.370" endtime="20231226 10:29:12.375">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20231226 10:24:12.331" endtime="20231226 10:29:12.376"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="338146"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="11" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization">upgrade.1.3.0-1.4.0-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1">upgrade.1.3.0-1.4.0-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1">upgrade.1.3.0-1.4.0-1-original-validate-old1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="1.3.0-1.4.0-1-original-prepare">upgrade.1.3.0-1.4.0-1-original-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
