<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231018 18:28:51.556" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231018 18:25:02.831" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231018 18:25:02.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20231018 18:25:02.877" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231018 18:25:02.809" endtime="20231018 18:25:02.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:02.880" level="INFO">scm</msg>
<status status="PASS" starttime="20231018 18:25:02.878" endtime="20231018 18:25:02.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231018 18:25:02.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231018 18:25:02.880" endtime="20231018 18:25:02.881"/>
</kw>
<status status="PASS" starttime="20231018 18:25:02.807" endtime="20231018 18:25:02.882"/>
</kw>
<msg timestamp="20231018 18:25:02.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231018 18:25:02.804" endtime="20231018 18:25:02.882"/>
</kw>
<msg timestamp="20231018 18:25:02.882" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231018 18:25:02.803" endtime="20231018 18:25:02.882"/>
</kw>
<msg timestamp="20231018 18:25:02.883" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231018 18:25:02.800" endtime="20231018 18:25:02.883"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231018 18:25:02.884" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231018 18:25:02.883" endtime="20231018 18:25:02.884"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231018 18:25:02.913" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231018 18:25:03.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20231018 18:25:03.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231018 18:25:02.896" endtime="20231018 18:25:03.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:03.081" level="INFO"/>
<status status="PASS" starttime="20231018 18:25:03.077" endtime="20231018 18:25:03.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231018 18:25:03.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231018 18:25:03.081" endtime="20231018 18:25:03.084"/>
</kw>
<status status="PASS" starttime="20231018 18:25:02.891" endtime="20231018 18:25:03.084"/>
</kw>
<msg timestamp="20231018 18:25:03.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231018 18:25:02.890" endtime="20231018 18:25:03.084"/>
</kw>
<status status="PASS" starttime="20231018 18:25:02.888" endtime="20231018 18:25:03.085"/>
</kw>
<status status="PASS" starttime="20231018 18:25:02.887" endtime="20231018 18:25:03.085"/>
</kw>
<status status="PASS" starttime="20231018 18:25:02.792" endtime="20231018 18:25:03.085"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231018 18:25:02.772" endtime="20231018 18:25:03.085"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231018 18:25:02.632" endtime="20231018 18:25:03.087"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231018 18:25:16.935" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231018 18:25:23.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20231018 18:25:23.440" level="INFO">${output} = scm2.org:9894:FOLLOWER:0c5ee622-a63c-45f9-95b0-7b7a044dff01:172.25.0.117
scm4.org:9894:FOLLOWER:92217807-bbc5-459b-a439-727dfe9ebf69:172.25.0.120
scm1.org:9894:LEADER:61c02367-a336-4c88-b235-97b4a65bf...</msg>
<status status="PASS" starttime="20231018 18:25:16.932" endtime="20231018 18:25:23.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:23.442" level="INFO">scm2.org:9894:FOLLOWER:0c5ee622-a63c-45f9-95b0-7b7a044dff01:172.25.0.117
scm4.org:9894:FOLLOWER:92217807-bbc5-459b-a439-727dfe9ebf69:172.25.0.120
scm1.org:9894:LEADER:61c02367-a336-4c88-b235-97b4a65bfbff:172.25.0.116
scm3.org:9894:FOLLOWER:561160c3-100c-4798-a9a7-03f5bf30840d:172.25.0.118</msg>
<status status="PASS" starttime="20231018 18:25:23.441" endtime="20231018 18:25:23.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231018 18:25:23.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231018 18:25:23.442" endtime="20231018 18:25:23.443"/>
</kw>
<status status="PASS" starttime="20231018 18:25:16.931" endtime="20231018 18:25:23.443"/>
</kw>
<msg timestamp="20231018 18:25:23.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231018 18:25:16.930" endtime="20231018 18:25:23.444"/>
</kw>
<msg timestamp="20231018 18:25:23.444" level="INFO">${result} = scm2.org:9894:FOLLOWER:0c5ee622-a63c-45f9-95b0-7b7a044dff01:172.25.0.117
scm4.org:9894:FOLLOWER:92217807-bbc5-459b-a439-727dfe9ebf69:172.25.0.120
scm1.org:9894:LEADER:61c02367-a336-4c88-b235-97b4a65bf...</msg>
<status status="PASS" starttime="20231018 18:25:16.930" endtime="20231018 18:25:23.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:23.444" level="INFO">scm2.org:9894:FOLLOWER:0c5ee622-a63c-45f9-95b0-7b7a044dff01:172.25.0.117
scm4.org:9894:FOLLOWER:92217807-bbc5-459b-a439-727dfe9ebf69:172.25.0.120
scm1.org:9894:LEADER:61c02367-a336-4c88-b235-97b4a65bfbff:172.25.0.116
scm3.org:9894:FOLLOWER:561160c3-100c-4798-a9a7-03f5bf30840d:172.25.0.118</msg>
<status status="PASS" starttime="20231018 18:25:23.444" endtime="20231018 18:25:23.444"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231018 18:25:23.445" level="INFO">4 lines</msg>
<msg timestamp="20231018 18:25:23.445" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231018 18:25:23.444" endtime="20231018 18:25:23.445"/>
</kw>
<msg timestamp="20231018 18:25:23.445" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231018 18:25:16.929" endtime="20231018 18:25:23.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:23.446" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20231018 18:25:23.445" endtime="20231018 18:25:23.446"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231018 18:25:23.446" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231018 18:25:23.446" endtime="20231018 18:25:23.446"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231018 18:25:23.446" endtime="20231018 18:25:23.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231018 18:25:16.928" endtime="20231018 18:25:23.447"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231018 18:25:23.455" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231018 18:25:29.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20231018 18:25:29.889" level="INFO">${output} = scm2.org:9894:FOLLOWER:0c5ee622-a63c-45f9-95b0-7b7a044dff01:172.25.0.117
scm4.org:9894:FOLLOWER:92217807-bbc5-459b-a439-727dfe9ebf69:172.25.0.120
scm1.org:9894:LEADER:61c02367-a336-4c88-b235-97b4a65bf...</msg>
<status status="PASS" starttime="20231018 18:25:23.452" endtime="20231018 18:25:29.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:29.891" level="INFO">scm2.org:9894:FOLLOWER:0c5ee622-a63c-45f9-95b0-7b7a044dff01:172.25.0.117
scm4.org:9894:FOLLOWER:92217807-bbc5-459b-a439-727dfe9ebf69:172.25.0.120
scm1.org:9894:LEADER:61c02367-a336-4c88-b235-97b4a65bfbff:172.25.0.116
scm3.org:9894:FOLLOWER:561160c3-100c-4798-a9a7-03f5bf30840d:172.25.0.118</msg>
<status status="PASS" starttime="20231018 18:25:29.890" endtime="20231018 18:25:29.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231018 18:25:29.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231018 18:25:29.892" endtime="20231018 18:25:29.892"/>
</kw>
<status status="PASS" starttime="20231018 18:25:23.451" endtime="20231018 18:25:29.893"/>
</kw>
<msg timestamp="20231018 18:25:29.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231018 18:25:23.450" endtime="20231018 18:25:29.893"/>
</kw>
<msg timestamp="20231018 18:25:29.893" level="INFO">${result} = scm2.org:9894:FOLLOWER:0c5ee622-a63c-45f9-95b0-7b7a044dff01:172.25.0.117
scm4.org:9894:FOLLOWER:92217807-bbc5-459b-a439-727dfe9ebf69:172.25.0.120
scm1.org:9894:LEADER:61c02367-a336-4c88-b235-97b4a65bf...</msg>
<status status="PASS" starttime="20231018 18:25:23.450" endtime="20231018 18:25:29.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:29.894" level="INFO">scm2.org:9894:FOLLOWER:0c5ee622-a63c-45f9-95b0-7b7a044dff01:172.25.0.117
scm4.org:9894:FOLLOWER:92217807-bbc5-459b-a439-727dfe9ebf69:172.25.0.120
scm1.org:9894:LEADER:61c02367-a336-4c88-b235-97b4a65bfbff:172.25.0.116
scm3.org:9894:FOLLOWER:561160c3-100c-4798-a9a7-03f5bf30840d:172.25.0.118</msg>
<status status="PASS" starttime="20231018 18:25:29.893" endtime="20231018 18:25:29.894"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231018 18:25:29.894" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231018 18:25:29.895" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:92217807-bbc5-459b-a439-727dfe9ebf69:172.25.0.120</msg>
<status status="PASS" starttime="20231018 18:25:29.894" endtime="20231018 18:25:29.895"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231018 18:25:29.895" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', '92217807-bbc5-459b-a439-727dfe9ebf69', '172.25.0.120']</msg>
<status status="PASS" starttime="20231018 18:25:29.895" endtime="20231018 18:25:29.895"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231018 18:25:29.897" level="INFO">${scm4_uuid} = 92217807-bbc5-459b-a439-727dfe9ebf69</msg>
<status status="PASS" starttime="20231018 18:25:29.895" endtime="20231018 18:25:29.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231018 18:25:29.903" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 92217807-bbc5-459b-a439-727dfe9ebf69 2&gt;&amp;1'.</msg>
<msg timestamp="20231018 18:25:40.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20231018 18:25:40.903" level="INFO">${output} = Transfer leadership successfully to 92217807-bbc5-459b-a439-727dfe9ebf69.</msg>
<status status="PASS" starttime="20231018 18:25:29.899" endtime="20231018 18:25:40.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:40.904" level="INFO">Transfer leadership successfully to 92217807-bbc5-459b-a439-727dfe9ebf69.</msg>
<status status="PASS" starttime="20231018 18:25:40.904" endtime="20231018 18:25:40.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231018 18:25:40.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231018 18:25:40.905" endtime="20231018 18:25:40.905"/>
</kw>
<status status="PASS" starttime="20231018 18:25:29.899" endtime="20231018 18:25:40.906"/>
</kw>
<msg timestamp="20231018 18:25:40.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231018 18:25:29.898" endtime="20231018 18:25:40.906"/>
</kw>
<msg timestamp="20231018 18:25:40.906" level="INFO">${result} = Transfer leadership successfully to 92217807-bbc5-459b-a439-727dfe9ebf69.</msg>
<status status="PASS" starttime="20231018 18:25:29.897" endtime="20231018 18:25:40.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:40.907" level="INFO">Transfer leadership successfully to 92217807-bbc5-459b-a439-727dfe9ebf69.</msg>
<status status="PASS" starttime="20231018 18:25:40.906" endtime="20231018 18:25:40.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231018 18:25:40.907" endtime="20231018 18:25:40.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231018 18:25:23.449" endtime="20231018 18:25:40.907"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231018 18:25:40.915" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231018 18:25:50.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20231018 18:25:50.262" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231018 18:25:40.911" endtime="20231018 18:25:50.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:50.264" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1070019237263     Wed Oct 18 18:20:55 UTC 2023   Sat Nov 25 18:20:55 UTC 2028   CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa CN=scm-1@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa          </msg>
<status status="PASS" starttime="20231018 18:25:50.263" endtime="20231018 18:25:50.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231018 18:25:50.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231018 18:25:50.264" endtime="20231018 18:25:50.264"/>
</kw>
<status status="PASS" starttime="20231018 18:25:40.911" endtime="20231018 18:25:50.265"/>
</kw>
<msg timestamp="20231018 18:25:50.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231018 18:25:40.910" endtime="20231018 18:25:50.265"/>
</kw>
<msg timestamp="20231018 18:25:50.265" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231018 18:25:40.910" endtime="20231018 18:25:50.265"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231018 18:25:50.266" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231018 18:25:50.266" level="INFO">${root_ca_cert} = 1070019237263     Wed Oct 18 18:20:55 UTC 2023   Sat Nov 25 18:20:55 UTC 2028   CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa CN=...</msg>
<status status="PASS" starttime="20231018 18:25:50.265" endtime="20231018 18:25:50.266"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231018 18:25:50.266" level="INFO">${root_ca_cert_split} = ['1070019237263', 'Wed', 'Oct', '18', '18:20:55', 'UTC', '2023', 'Sat', 'Nov', '25', '18:20:55', 'UTC', '2028', 'CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a3...</msg>
<status status="PASS" starttime="20231018 18:25:50.266" endtime="20231018 18:25:50.266"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231018 18:25:50.268" level="INFO">${root_ca_cert_subject} = 18</msg>
<status status="PASS" starttime="20231018 18:25:50.267" endtime="20231018 18:25:50.268"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231018 18:25:50.273" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20231018 18:25:58.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20231018 18:25:58.959" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231018 18:25:50.269" endtime="20231018 18:25:58.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:25:58.960" level="INFO">Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1070019237263     Wed Oct 18 18:20:55 UTC 2023   Sat Nov 25 18:20:55 UTC 2028   CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa CN=scm-1@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa          
1099275924392     Wed Oct 18 18:21:24 UTC 2023   Thu Oct 17 18:21:24 UTC 2024   CN=recon@recon,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa              CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa
1                 Wed Oct 18 18:20:54 UTC 2023   Sat Nov 25 18:20:54 UTC 2028   CN=scm-1@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa           CN=scm-1@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa          
1101116144598     Wed Oct 18 18:21:26 UTC 2023   Sat Nov 25 18:21:26 UTC 2028   CN=scm-sub-1099018016573@scm2.org,OU=0c5ee622-a63c-45f9-95b0-7b7a044dff01,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa CN=scm-1@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa          
1125053226592     Wed Oct 18 18:21:50 UTC 2023   Sat Nov 25 18:21:50 UTC 2028   CN=scm-sub-1124885568828@scm3.org,OU=561160c3-100c-4798-a9a7-03f5bf30840d,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa CN=scm-1@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa          
1172800125609     Wed Oct 18 18:22:38 UTC 2023   Thu Oct 17 18:22:38 UTC 2024   CN=dn@094a1c44b05d,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa          CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa
1175952537560     Wed Oct 18 18:22:41 UTC 2023   Thu Oct 17 18:22:41 UTC 2024   CN=dn@278cecb5858d,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa          CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa
1181279752835     Wed Oct 18 18:22:47 UTC 2023   Thu Oct 17 18:22:47 UTC 2024   CN=dn@30d9cf7d06f8,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa          CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa
1182332135050     Wed Oct 18 18:22:48 UTC 2023   Thu Oct 17 18:22:48 UTC 2024   CN=om2,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa                      CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa
1186422068814     Wed Oct 18 18:22:52 UTC 2023   Thu Oct 17 18:22:52 UTC 2024   CN=om1,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa                      CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa
1187627005460     Wed Oct 18 18:22:53 UTC 2023   Thu Oct 17 18:22:53 UTC 2024   CN=om3,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa                      CN=scm-sub-1069643973029@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa
1296220443122     Wed Oct 18 18:24:42 UTC 2023   Sat Nov 25 18:24:42 UTC 2028   CN=scm-sub-1296080254964@scm4.org,OU=92217807-bbc5-459b-a439-727dfe9ebf69,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa CN=scm-1@scm1.org,OU=61c02367-a336-4c88-b235-97b4a65bfbff,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa          </msg>
<status status="PASS" starttime="20231018 18:25:58.959" endtime="20231018 18:25:58.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231018 18:25:58.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231018 18:25:58.960" endtime="20231018 18:25:58.961"/>
</kw>
<status status="PASS" starttime="20231018 18:25:50.269" endtime="20231018 18:25:58.961"/>
</kw>
<msg timestamp="20231018 18:25:58.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231018 18:25:50.269" endtime="20231018 18:25:58.962"/>
</kw>
<msg timestamp="20231018 18:25:58.962" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231018 18:25:50.268" endtime="20231018 18:25:58.962"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231018 18:25:58.963" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231018 18:25:58.963" level="INFO">${scm4_cert} = 1296220443122     Wed Oct 18 18:24:42 UTC 2023   Sat Nov 25 18:24:42 UTC 2028   CN=scm-sub-1296080254964@scm4.org,OU=92217807-bbc5-459b-a439-727dfe9ebf69,O=CID-e2db5a30-4034-486c-b78c-ffc2633877fa CN=...</msg>
<status status="PASS" starttime="20231018 18:25:58.962" endtime="20231018 18:25:58.963"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231018 18:25:58.963" level="INFO">${scm4_cert_split} = ['1296220443122', 'Wed', 'Oct', '18', '18:24:42', 'UTC', '2023', 'Sat', 'Nov', '25', '18:24:42', 'UTC', '2028', 'CN=scm-sub-1296080254964@scm4.org,OU=92217807-bbc5-459b-a439-727dfe9ebf69,O=CID-e2db5a3...</msg>
<status status="PASS" starttime="20231018 18:25:58.963" endtime="20231018 18:25:58.963"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231018 18:25:58.965" level="INFO">${scm4_cert_issuer} = 18:24:42</msg>
<status status="PASS" starttime="20231018 18:25:58.964" endtime="20231018 18:25:58.965"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231018 18:25:58.965" endtime="20231018 18:25:58.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231018 18:25:40.909" endtime="20231018 18:25:58.966"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231018 18:25:16.873" endtime="20231018 18:25:58.968"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231018 18:27:14.883" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231018 18:27:14.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20231018 18:27:14.888" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231018 18:27:14.879" endtime="20231018 18:27:14.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:27:14.890" level="INFO">scm</msg>
<status status="PASS" starttime="20231018 18:27:14.889" endtime="20231018 18:27:14.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231018 18:27:14.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231018 18:27:14.890" endtime="20231018 18:27:14.891"/>
</kw>
<status status="PASS" starttime="20231018 18:27:14.879" endtime="20231018 18:27:14.891"/>
</kw>
<msg timestamp="20231018 18:27:14.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231018 18:27:14.878" endtime="20231018 18:27:14.891"/>
</kw>
<msg timestamp="20231018 18:27:14.891" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231018 18:27:14.878" endtime="20231018 18:27:14.891"/>
</kw>
<msg timestamp="20231018 18:27:14.892" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231018 18:27:14.877" endtime="20231018 18:27:14.892"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231018 18:27:14.892" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231018 18:27:14.892" endtime="20231018 18:27:14.892"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231018 18:27:14.897" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231018 18:27:15.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20231018 18:27:15.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231018 18:27:14.895" endtime="20231018 18:27:15.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231018 18:27:15.034" level="INFO"/>
<status status="PASS" starttime="20231018 18:27:15.034" endtime="20231018 18:27:15.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231018 18:27:15.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231018 18:27:15.035" endtime="20231018 18:27:15.036"/>
</kw>
<status status="PASS" starttime="20231018 18:27:14.894" endtime="20231018 18:27:15.036"/>
</kw>
<msg timestamp="20231018 18:27:15.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231018 18:27:14.894" endtime="20231018 18:27:15.036"/>
</kw>
<status status="PASS" starttime="20231018 18:27:14.893" endtime="20231018 18:27:15.036"/>
</kw>
<status status="PASS" starttime="20231018 18:27:14.893" endtime="20231018 18:27:15.036"/>
</kw>
<status status="PASS" starttime="20231018 18:27:14.876" endtime="20231018 18:27:15.036"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231018 18:27:14.875" endtime="20231018 18:27:15.037"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231018 18:27:14.808" endtime="20231018 18:27:15.038"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="42780"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
