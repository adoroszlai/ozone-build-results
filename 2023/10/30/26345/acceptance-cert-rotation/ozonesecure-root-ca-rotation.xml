<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231030 21:02:58.443" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:00:53.153" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:00:53.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:00:53.176" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231030 21:00:53.144" endtime="20231030 21:00:53.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:00:53.178" level="INFO">scm</msg>
<status status="PASS" starttime="20231030 21:00:53.177" endtime="20231030 21:00:53.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:00:53.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:00:53.178" endtime="20231030 21:00:53.182"/>
</kw>
<status status="PASS" starttime="20231030 21:00:53.141" endtime="20231030 21:00:53.184"/>
</kw>
<msg timestamp="20231030 21:00:53.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 21:00:53.141" endtime="20231030 21:00:53.184"/>
</kw>
<msg timestamp="20231030 21:00:53.184" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231030 21:00:53.139" endtime="20231030 21:00:53.185"/>
</kw>
<msg timestamp="20231030 21:00:53.186" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 21:00:53.138" endtime="20231030 21:00:53.186"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 21:00:53.188" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 21:00:53.186" endtime="20231030 21:00:53.188"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:00:53.206" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:00:53.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:00:53.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:00:53.195" endtime="20231030 21:00:53.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:00:53.267" level="INFO"/>
<status status="PASS" starttime="20231030 21:00:53.261" endtime="20231030 21:00:53.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:00:53.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:00:53.272" endtime="20231030 21:00:53.278"/>
</kw>
<status status="PASS" starttime="20231030 21:00:53.193" endtime="20231030 21:00:53.282"/>
</kw>
<msg timestamp="20231030 21:00:53.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 21:00:53.193" endtime="20231030 21:00:53.283"/>
</kw>
<status status="PASS" starttime="20231030 21:00:53.191" endtime="20231030 21:00:53.283"/>
</kw>
<status status="PASS" starttime="20231030 21:00:53.188" endtime="20231030 21:00:53.283"/>
</kw>
<status status="PASS" starttime="20231030 21:00:53.134" endtime="20231030 21:00:53.283"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231030 21:00:53.131" endtime="20231030 21:00:53.288"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231030 21:00:52.901" endtime="20231030 21:00:53.302"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:01:15.929" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:01:15.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:01:15.935" level="INFO">${output} = dn</msg>
<status status="PASS" starttime="20231030 21:01:15.923" endtime="20231030 21:01:15.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:01:15.937" level="INFO">dn</msg>
<status status="PASS" starttime="20231030 21:01:15.936" endtime="20231030 21:01:15.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:01:15.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:01:15.937" endtime="20231030 21:01:15.938"/>
</kw>
<status status="PASS" starttime="20231030 21:01:15.922" endtime="20231030 21:01:15.938"/>
</kw>
<msg timestamp="20231030 21:01:15.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 21:01:15.922" endtime="20231030 21:01:15.939"/>
</kw>
<msg timestamp="20231030 21:01:15.939" level="INFO">${instance} = dn</msg>
<status status="PASS" starttime="20231030 21:01:15.921" endtime="20231030 21:01:15.939"/>
</kw>
<msg timestamp="20231030 21:01:15.940" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 21:01:15.921" endtime="20231030 21:01:15.940"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 21:01:15.941" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 21:01:15.940" endtime="20231030 21:01:15.941"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:01:15.947" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/dn@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:01:16.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:01:16.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:01:15.944" endtime="20231030 21:01:16.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:01:16.002" level="INFO"/>
<status status="PASS" starttime="20231030 21:01:16.001" endtime="20231030 21:01:16.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:01:16.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:01:16.002" endtime="20231030 21:01:16.003"/>
</kw>
<status status="PASS" starttime="20231030 21:01:15.943" endtime="20231030 21:01:16.003"/>
</kw>
<msg timestamp="20231030 21:01:16.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 21:01:15.943" endtime="20231030 21:01:16.004"/>
</kw>
<status status="PASS" starttime="20231030 21:01:15.942" endtime="20231030 21:01:16.004"/>
</kw>
<status status="PASS" starttime="20231030 21:01:15.941" endtime="20231030 21:01:16.004"/>
</kw>
<status status="PASS" starttime="20231030 21:01:15.920" endtime="20231030 21:01:16.004"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231030 21:01:15.919" endtime="20231030 21:01:16.004"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231030 21:01:15.845" endtime="20231030 21:01:16.007"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:01:30.157" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:01:30.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:01:30.162" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231030 21:01:30.154" endtime="20231030 21:01:30.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:01:30.164" level="INFO">om</msg>
<status status="PASS" starttime="20231030 21:01:30.163" endtime="20231030 21:01:30.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:01:30.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:01:30.164" endtime="20231030 21:01:30.165"/>
</kw>
<status status="PASS" starttime="20231030 21:01:30.153" endtime="20231030 21:01:30.165"/>
</kw>
<msg timestamp="20231030 21:01:30.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 21:01:30.153" endtime="20231030 21:01:30.165"/>
</kw>
<msg timestamp="20231030 21:01:30.165" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231030 21:01:30.152" endtime="20231030 21:01:30.165"/>
</kw>
<msg timestamp="20231030 21:01:30.166" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 21:01:30.151" endtime="20231030 21:01:30.166"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 21:01:30.167" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 21:01:30.166" endtime="20231030 21:01:30.167"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:01:30.173" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:01:30.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:01:30.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:01:30.170" endtime="20231030 21:01:30.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:01:30.236" level="INFO"/>
<status status="PASS" starttime="20231030 21:01:30.235" endtime="20231030 21:01:30.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:01:30.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:01:30.236" endtime="20231030 21:01:30.237"/>
</kw>
<status status="PASS" starttime="20231030 21:01:30.169" endtime="20231030 21:01:30.237"/>
</kw>
<msg timestamp="20231030 21:01:30.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 21:01:30.169" endtime="20231030 21:01:30.238"/>
</kw>
<status status="PASS" starttime="20231030 21:01:30.168" endtime="20231030 21:01:30.238"/>
</kw>
<status status="PASS" starttime="20231030 21:01:30.167" endtime="20231030 21:01:30.238"/>
</kw>
<status status="PASS" starttime="20231030 21:01:30.151" endtime="20231030 21:01:30.238"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231030 21:01:30.150" endtime="20231030 21:01:30.238"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231030 21:01:30.079" endtime="20231030 21:01:30.240"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s4-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:01:41.931" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:01:51.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:01:51.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:01:41.927" endtime="20231030 21:01:51.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:01:51.452" level="INFO"/>
<status status="PASS" starttime="20231030 21:01:51.450" endtime="20231030 21:01:51.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:01:51.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:01:51.452" endtime="20231030 21:01:51.454"/>
</kw>
<status status="PASS" starttime="20231030 21:01:41.926" endtime="20231030 21:01:51.454"/>
</kw>
<msg timestamp="20231030 21:01:51.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 21:01:41.926" endtime="20231030 21:01:51.454"/>
</kw>
<msg timestamp="20231030 21:01:51.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:01:41.925" endtime="20231030 21:01:51.455"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 21:01:51.455" endtime="20231030 21:01:51.456"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:01:51.494" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:01:59.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:01:59.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:01:51.461" endtime="20231030 21:01:59.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:01:59.726" level="INFO"/>
<status status="PASS" starttime="20231030 21:01:59.725" endtime="20231030 21:01:59.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:01:59.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:01:59.726" endtime="20231030 21:01:59.727"/>
</kw>
<status status="PASS" starttime="20231030 21:01:51.459" endtime="20231030 21:01:59.727"/>
</kw>
<msg timestamp="20231030 21:01:59.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 21:01:51.459" endtime="20231030 21:01:59.727"/>
</kw>
<msg timestamp="20231030 21:01:59.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:01:51.457" endtime="20231030 21:01:59.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 21:01:59.728" endtime="20231030 21:01:59.728"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231030 21:01:41.924" endtime="20231030 21:01:59.728"/>
</test>
<test id="s1-s4-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:01:59.735" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231030 21:01:59.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:01:59.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:01:59.731" endtime="20231030 21:01:59.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:01:59.739" level="INFO"/>
<status status="PASS" starttime="20231030 21:01:59.738" endtime="20231030 21:01:59.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:01:59.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:01:59.739" endtime="20231030 21:01:59.740"/>
</kw>
<status status="PASS" starttime="20231030 21:01:59.730" endtime="20231030 21:01:59.740"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:01:59.746" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:02:14.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:02:14.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:01:59.743" endtime="20231030 21:02:14.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:02:14.939" level="INFO"/>
<status status="PASS" starttime="20231030 21:02:14.938" endtime="20231030 21:02:14.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:02:14.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:02:14.940" endtime="20231030 21:02:14.941"/>
</kw>
<status status="PASS" starttime="20231030 21:01:59.742" endtime="20231030 21:02:14.941"/>
</kw>
<msg timestamp="20231030 21:02:14.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 21:01:59.742" endtime="20231030 21:02:14.941"/>
</kw>
<msg timestamp="20231030 21:02:14.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:01:59.741" endtime="20231030 21:02:14.943"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 21:02:14.943" endtime="20231030 21:02:14.944"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:02:14.948" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:02:14.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 21:02:14.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 21:02:14.944" endtime="20231030 21:02:14.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:02:14.954" level="INFO"/>
<status status="PASS" starttime="20231030 21:02:14.953" endtime="20231030 21:02:14.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:02:14.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 21:02:14.955" endtime="20231030 21:02:14.956"/>
</kw>
<status status="PASS" starttime="20231030 21:02:14.944" endtime="20231030 21:02:14.956"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231030 21:01:59.729" endtime="20231030 21:02:14.956"/>
</test>
<test id="s1-s4-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231030 21:02:14.960" level="INFO">${random} = 38490</msg>
<status status="PASS" starttime="20231030 21:02:14.959" endtime="20231030 21:02:14.960"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 21:02:14.966" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-38490 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 21:02:30.537" level="INFO">${rc} = 255</msg>
<msg timestamp="20231030 21:02:30.538" level="INFO">${output} = java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20231030 21:02:14.963" endtime="20231030 21:02:30.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 21:02:30.539" level="INFO">java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20231030 21:02:30.538" endtime="20231030 21:02:30.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 21:02:30.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20231030 21:02:30.540" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20231030 21:02:30.540" endtime="20231030 21:02:30.541"/>
</kw>
<status status="FAIL" starttime="20231030 21:02:14.962" endtime="20231030 21:02:30.541"/>
</kw>
<msg timestamp="20231030 21:02:30.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231030 21:02:14.961" endtime="20231030 21:02:30.541"/>
</kw>
<status status="FAIL" starttime="20231030 21:02:14.960" endtime="20231030 21:02:30.541"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231030 21:02:30.541" endtime="20231030 21:02:30.542"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20231030 21:02:30.542" endtime="20231030 21:02:30.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231030 21:02:30.542" endtime="20231030 21:02:30.542"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20231030 21:02:30.542" endtime="20231030 21:02:30.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231030 21:02:14.958" endtime="20231030 21:02:30.543">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20231030 21:01:41.845" endtime="20231030 21:02:30.545"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="49424"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="5" fail="1" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="2" fail="1" skip="0" id="s1-s4" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
