<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231030 15:51:11.823" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:46:15.698" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:46:15.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:46:15.712" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231030 15:46:15.686" endtime="20231030 15:46:15.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:46:15.715" level="INFO">scm</msg>
<status status="PASS" starttime="20231030 15:46:15.713" endtime="20231030 15:46:15.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:46:15.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:46:15.716" endtime="20231030 15:46:15.716"/>
</kw>
<status status="PASS" starttime="20231030 15:46:15.685" endtime="20231030 15:46:15.717"/>
</kw>
<msg timestamp="20231030 15:46:15.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:46:15.685" endtime="20231030 15:46:15.717"/>
</kw>
<msg timestamp="20231030 15:46:15.717" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231030 15:46:15.684" endtime="20231030 15:46:15.717"/>
</kw>
<msg timestamp="20231030 15:46:15.718" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:46:15.683" endtime="20231030 15:46:15.718"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 15:46:15.719" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:46:15.718" endtime="20231030 15:46:15.719"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:46:15.729" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:46:15.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:46:15.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:46:15.724" endtime="20231030 15:46:15.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:46:15.782" level="INFO"/>
<status status="PASS" starttime="20231030 15:46:15.781" endtime="20231030 15:46:15.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:46:15.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:46:15.783" endtime="20231030 15:46:15.784"/>
</kw>
<status status="PASS" starttime="20231030 15:46:15.723" endtime="20231030 15:46:15.784"/>
</kw>
<msg timestamp="20231030 15:46:15.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:46:15.723" endtime="20231030 15:46:15.784"/>
</kw>
<status status="PASS" starttime="20231030 15:46:15.722" endtime="20231030 15:46:15.784"/>
</kw>
<status status="PASS" starttime="20231030 15:46:15.719" endtime="20231030 15:46:15.785"/>
</kw>
<status status="PASS" starttime="20231030 15:46:15.681" endtime="20231030 15:46:15.785"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231030 15:46:15.680" endtime="20231030 15:46:15.785"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231030 15:46:15.445" endtime="20231030 15:46:15.788"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:46:29.215" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:46:29.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:46:29.221" level="INFO">${output} = dn</msg>
<status status="PASS" starttime="20231030 15:46:29.213" endtime="20231030 15:46:29.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:46:29.223" level="INFO">dn</msg>
<status status="PASS" starttime="20231030 15:46:29.222" endtime="20231030 15:46:29.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:46:29.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:46:29.223" endtime="20231030 15:46:29.224"/>
</kw>
<status status="PASS" starttime="20231030 15:46:29.212" endtime="20231030 15:46:29.224"/>
</kw>
<msg timestamp="20231030 15:46:29.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:46:29.212" endtime="20231030 15:46:29.224"/>
</kw>
<msg timestamp="20231030 15:46:29.225" level="INFO">${instance} = dn</msg>
<status status="PASS" starttime="20231030 15:46:29.211" endtime="20231030 15:46:29.225"/>
</kw>
<msg timestamp="20231030 15:46:29.225" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:46:29.211" endtime="20231030 15:46:29.225"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 15:46:29.226" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:46:29.225" endtime="20231030 15:46:29.226"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:46:29.232" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/dn@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:46:29.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:46:29.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:46:29.229" endtime="20231030 15:46:29.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:46:29.285" level="INFO"/>
<status status="PASS" starttime="20231030 15:46:29.284" endtime="20231030 15:46:29.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:46:29.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:46:29.286" endtime="20231030 15:46:29.287"/>
</kw>
<status status="PASS" starttime="20231030 15:46:29.228" endtime="20231030 15:46:29.288"/>
</kw>
<msg timestamp="20231030 15:46:29.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:46:29.228" endtime="20231030 15:46:29.288"/>
</kw>
<status status="PASS" starttime="20231030 15:46:29.227" endtime="20231030 15:46:29.288"/>
</kw>
<status status="PASS" starttime="20231030 15:46:29.226" endtime="20231030 15:46:29.288"/>
</kw>
<status status="PASS" starttime="20231030 15:46:29.209" endtime="20231030 15:46:29.289"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231030 15:46:29.209" endtime="20231030 15:46:29.289"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231030 15:46:29.140" endtime="20231030 15:46:29.290"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:46:42.482" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:46:42.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:46:42.486" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231030 15:46:42.479" endtime="20231030 15:46:42.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:46:42.488" level="INFO">om</msg>
<status status="PASS" starttime="20231030 15:46:42.487" endtime="20231030 15:46:42.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:46:42.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:46:42.488" endtime="20231030 15:46:42.489"/>
</kw>
<status status="PASS" starttime="20231030 15:46:42.478" endtime="20231030 15:46:42.489"/>
</kw>
<msg timestamp="20231030 15:46:42.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:46:42.478" endtime="20231030 15:46:42.490"/>
</kw>
<msg timestamp="20231030 15:46:42.490" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231030 15:46:42.478" endtime="20231030 15:46:42.490"/>
</kw>
<msg timestamp="20231030 15:46:42.490" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:46:42.477" endtime="20231030 15:46:42.491"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 15:46:42.491" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:46:42.491" endtime="20231030 15:46:42.491"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:46:42.498" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:46:42.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:46:42.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:46:42.495" endtime="20231030 15:46:42.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:46:42.550" level="INFO"/>
<status status="PASS" starttime="20231030 15:46:42.549" endtime="20231030 15:46:42.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:46:42.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:46:42.550" endtime="20231030 15:46:42.551"/>
</kw>
<status status="PASS" starttime="20231030 15:46:42.495" endtime="20231030 15:46:42.551"/>
</kw>
<msg timestamp="20231030 15:46:42.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:46:42.494" endtime="20231030 15:46:42.551"/>
</kw>
<status status="PASS" starttime="20231030 15:46:42.493" endtime="20231030 15:46:42.551"/>
</kw>
<status status="PASS" starttime="20231030 15:46:42.492" endtime="20231030 15:46:42.552"/>
</kw>
<status status="PASS" starttime="20231030 15:46:42.476" endtime="20231030 15:46:42.552"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231030 15:46:42.475" endtime="20231030 15:46:42.552"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231030 15:46:42.401" endtime="20231030 15:46:42.554"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s4-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:46:53.436" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:47:00.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:47:00.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:46:53.433" endtime="20231030 15:47:00.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:47:00.291" level="INFO"/>
<status status="PASS" starttime="20231030 15:47:00.290" endtime="20231030 15:47:00.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:47:00.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:47:00.291" endtime="20231030 15:47:00.292"/>
</kw>
<status status="PASS" starttime="20231030 15:46:53.432" endtime="20231030 15:47:00.292"/>
</kw>
<msg timestamp="20231030 15:47:00.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:46:53.432" endtime="20231030 15:47:00.292"/>
</kw>
<msg timestamp="20231030 15:47:00.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:46:53.431" endtime="20231030 15:47:00.293"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 15:47:00.293" endtime="20231030 15:47:00.293"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:47:00.299" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:47:07.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:47:07.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:47:00.295" endtime="20231030 15:47:07.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:47:07.889" level="INFO"/>
<status status="PASS" starttime="20231030 15:47:07.888" endtime="20231030 15:47:07.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:47:07.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:47:07.891" endtime="20231030 15:47:07.892"/>
</kw>
<status status="PASS" starttime="20231030 15:47:00.295" endtime="20231030 15:47:07.892"/>
</kw>
<msg timestamp="20231030 15:47:07.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:47:00.294" endtime="20231030 15:47:07.892"/>
</kw>
<msg timestamp="20231030 15:47:07.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:47:00.294" endtime="20231030 15:47:07.893"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 15:47:07.893" endtime="20231030 15:47:07.894"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231030 15:46:53.429" endtime="20231030 15:47:07.894"/>
</test>
<test id="s1-s4-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:47:07.900" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231030 15:47:07.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:47:07.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:47:07.897" endtime="20231030 15:47:07.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:47:07.904" level="INFO"/>
<status status="PASS" starttime="20231030 15:47:07.903" endtime="20231030 15:47:07.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:47:07.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:47:07.905" endtime="20231030 15:47:07.906"/>
</kw>
<status status="PASS" starttime="20231030 15:47:07.896" endtime="20231030 15:47:07.906"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:47:07.911" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:47:20.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:47:20.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:47:07.908" endtime="20231030 15:47:20.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:47:20.663" level="INFO"/>
<status status="PASS" starttime="20231030 15:47:20.662" endtime="20231030 15:47:20.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:47:20.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:47:20.664" endtime="20231030 15:47:20.664"/>
</kw>
<status status="PASS" starttime="20231030 15:47:07.907" endtime="20231030 15:47:20.665"/>
</kw>
<msg timestamp="20231030 15:47:20.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:47:07.907" endtime="20231030 15:47:20.665"/>
</kw>
<msg timestamp="20231030 15:47:20.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:47:07.906" endtime="20231030 15:47:20.665"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 15:47:20.665" endtime="20231030 15:47:20.666"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:47:20.670" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:47:20.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:47:20.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:47:20.667" endtime="20231030 15:47:20.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:47:20.677" level="INFO"/>
<status status="PASS" starttime="20231030 15:47:20.676" endtime="20231030 15:47:20.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:47:20.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:47:20.677" endtime="20231030 15:47:20.678"/>
</kw>
<status status="PASS" starttime="20231030 15:47:20.666" endtime="20231030 15:47:20.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231030 15:47:07.895" endtime="20231030 15:47:20.678"/>
</test>
<test id="s1-s4-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231030 15:47:20.681" level="INFO">${random} = 67499</msg>
<status status="PASS" starttime="20231030 15:47:20.680" endtime="20231030 15:47:20.681"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:47:20.686" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-67499 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:47:30.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:47:30.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:47:20.683" endtime="20231030 15:47:30.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:47:30.822" level="INFO"/>
<status status="PASS" starttime="20231030 15:47:30.821" endtime="20231030 15:47:30.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:47:30.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:47:30.822" endtime="20231030 15:47:30.823"/>
</kw>
<status status="PASS" starttime="20231030 15:47:20.682" endtime="20231030 15:47:30.823"/>
</kw>
<msg timestamp="20231030 15:47:30.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:47:20.682" endtime="20231030 15:47:30.823"/>
</kw>
<msg timestamp="20231030 15:47:30.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:47:20.681" endtime="20231030 15:47:30.824"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 15:47:30.824" endtime="20231030 15:47:30.824"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:47:30.829" level="INFO">Running command 'cat /tmp/key-67499 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:47:30.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:47:30.834" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231030 15:47:30.826" endtime="20231030 15:47:30.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:47:30.835" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231030 15:47:30.834" endtime="20231030 15:47:30.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:47:30.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:47:30.835" endtime="20231030 15:47:30.836"/>
</kw>
<msg timestamp="20231030 15:47:30.836" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231030 15:47:30.825" endtime="20231030 15:47:30.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 15:47:30.837" endtime="20231030 15:47:30.837"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:47:30.840" level="INFO">Running command 'rm /tmp/key-67499 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:47:30.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:47:30.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:47:30.838" endtime="20231030 15:47:30.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:47:30.845" level="INFO"/>
<status status="PASS" starttime="20231030 15:47:30.845" endtime="20231030 15:47:30.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:47:30.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:47:30.846" endtime="20231030 15:47:30.847"/>
</kw>
<status status="PASS" starttime="20231030 15:47:30.838" endtime="20231030 15:47:30.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231030 15:47:20.679" endtime="20231030 15:47:30.847"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231030 15:46:53.352" endtime="20231030 15:47:30.849"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="38143"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
