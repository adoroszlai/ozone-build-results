<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231030 16:00:40.473" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:56:57.301" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:56:57.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:56:57.326" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231030 15:56:57.258" endtime="20231030 15:56:57.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:56:57.328" level="INFO">scm</msg>
<status status="PASS" starttime="20231030 15:56:57.327" endtime="20231030 15:56:57.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:56:57.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:56:57.329" endtime="20231030 15:56:57.329"/>
</kw>
<status status="PASS" starttime="20231030 15:56:57.256" endtime="20231030 15:56:57.330"/>
</kw>
<msg timestamp="20231030 15:56:57.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:56:57.256" endtime="20231030 15:56:57.331"/>
</kw>
<msg timestamp="20231030 15:56:57.331" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231030 15:56:57.253" endtime="20231030 15:56:57.331"/>
</kw>
<msg timestamp="20231030 15:56:57.332" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:56:57.252" endtime="20231030 15:56:57.332"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 15:56:57.332" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:56:57.332" endtime="20231030 15:56:57.333"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:56:57.352" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:56:57.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:56:57.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:56:57.339" endtime="20231030 15:56:57.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:56:57.430" level="INFO"/>
<status status="PASS" starttime="20231030 15:56:57.429" endtime="20231030 15:56:57.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:56:57.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:56:57.431" endtime="20231030 15:56:57.432"/>
</kw>
<status status="PASS" starttime="20231030 15:56:57.337" endtime="20231030 15:56:57.432"/>
</kw>
<msg timestamp="20231030 15:56:57.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:56:57.336" endtime="20231030 15:56:57.432"/>
</kw>
<status status="PASS" starttime="20231030 15:56:57.333" endtime="20231030 15:56:57.432"/>
</kw>
<status status="PASS" starttime="20231030 15:56:57.333" endtime="20231030 15:56:57.433"/>
</kw>
<status status="PASS" starttime="20231030 15:56:57.248" endtime="20231030 15:56:57.433"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231030 15:56:57.247" endtime="20231030 15:56:57.433"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231030 15:56:57.099" endtime="20231030 15:56:57.434"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:57:11.982" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:57:18.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:57:18.347" level="INFO">${output} = scm1.org:9894:LEADER:f30a9029-72a6-4a4c-a6a0-6701827b1813:172.25.0.116
scm3.org:9894:FOLLOWER:3695bfbc-9575-40db-8194-83b050bbd9df:172.25.0.118
scm4.org:9894:FOLLOWER:77688908-6bd7-4635-a801-b498b9c37...</msg>
<status status="PASS" starttime="20231030 15:57:11.979" endtime="20231030 15:57:18.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:57:18.350" level="INFO">scm1.org:9894:LEADER:f30a9029-72a6-4a4c-a6a0-6701827b1813:172.25.0.116
scm3.org:9894:FOLLOWER:3695bfbc-9575-40db-8194-83b050bbd9df:172.25.0.118
scm4.org:9894:FOLLOWER:77688908-6bd7-4635-a801-b498b9c37083:172.25.0.120
scm2.org:9894:FOLLOWER:df2aa113-aeb0-4203-b678-36f9c9b1d0bd:172.25.0.117</msg>
<status status="PASS" starttime="20231030 15:57:18.348" endtime="20231030 15:57:18.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:57:18.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:57:18.350" endtime="20231030 15:57:18.351"/>
</kw>
<status status="PASS" starttime="20231030 15:57:11.978" endtime="20231030 15:57:18.352"/>
</kw>
<msg timestamp="20231030 15:57:18.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:57:11.978" endtime="20231030 15:57:18.352"/>
</kw>
<msg timestamp="20231030 15:57:18.352" level="INFO">${result} = scm1.org:9894:LEADER:f30a9029-72a6-4a4c-a6a0-6701827b1813:172.25.0.116
scm3.org:9894:FOLLOWER:3695bfbc-9575-40db-8194-83b050bbd9df:172.25.0.118
scm4.org:9894:FOLLOWER:77688908-6bd7-4635-a801-b498b9c37...</msg>
<status status="PASS" starttime="20231030 15:57:11.977" endtime="20231030 15:57:18.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:57:18.353" level="INFO">scm1.org:9894:LEADER:f30a9029-72a6-4a4c-a6a0-6701827b1813:172.25.0.116
scm3.org:9894:FOLLOWER:3695bfbc-9575-40db-8194-83b050bbd9df:172.25.0.118
scm4.org:9894:FOLLOWER:77688908-6bd7-4635-a801-b498b9c37083:172.25.0.120
scm2.org:9894:FOLLOWER:df2aa113-aeb0-4203-b678-36f9c9b1d0bd:172.25.0.117</msg>
<status status="PASS" starttime="20231030 15:57:18.353" endtime="20231030 15:57:18.353"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231030 15:57:18.354" level="INFO">4 lines</msg>
<msg timestamp="20231030 15:57:18.354" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231030 15:57:18.354" endtime="20231030 15:57:18.354"/>
</kw>
<msg timestamp="20231030 15:57:18.355" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231030 15:57:11.977" endtime="20231030 15:57:18.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:57:18.355" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20231030 15:57:18.355" endtime="20231030 15:57:18.355"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231030 15:57:18.356" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231030 15:57:18.356" endtime="20231030 15:57:18.356"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231030 15:57:18.357" endtime="20231030 15:57:18.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231030 15:57:11.976" endtime="20231030 15:57:18.357"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:57:18.365" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:57:24.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:57:24.575" level="INFO">${output} = scm1.org:9894:LEADER:f30a9029-72a6-4a4c-a6a0-6701827b1813:172.25.0.116
scm3.org:9894:FOLLOWER:3695bfbc-9575-40db-8194-83b050bbd9df:172.25.0.118
scm4.org:9894:FOLLOWER:77688908-6bd7-4635-a801-b498b9c37...</msg>
<status status="PASS" starttime="20231030 15:57:18.361" endtime="20231030 15:57:24.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:57:24.576" level="INFO">scm1.org:9894:LEADER:f30a9029-72a6-4a4c-a6a0-6701827b1813:172.25.0.116
scm3.org:9894:FOLLOWER:3695bfbc-9575-40db-8194-83b050bbd9df:172.25.0.118
scm4.org:9894:FOLLOWER:77688908-6bd7-4635-a801-b498b9c37083:172.25.0.120
scm2.org:9894:FOLLOWER:df2aa113-aeb0-4203-b678-36f9c9b1d0bd:172.25.0.117</msg>
<status status="PASS" starttime="20231030 15:57:24.575" endtime="20231030 15:57:24.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:57:24.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:57:24.577" endtime="20231030 15:57:24.577"/>
</kw>
<status status="PASS" starttime="20231030 15:57:18.361" endtime="20231030 15:57:24.578"/>
</kw>
<msg timestamp="20231030 15:57:24.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:57:18.360" endtime="20231030 15:57:24.578"/>
</kw>
<msg timestamp="20231030 15:57:24.578" level="INFO">${result} = scm1.org:9894:LEADER:f30a9029-72a6-4a4c-a6a0-6701827b1813:172.25.0.116
scm3.org:9894:FOLLOWER:3695bfbc-9575-40db-8194-83b050bbd9df:172.25.0.118
scm4.org:9894:FOLLOWER:77688908-6bd7-4635-a801-b498b9c37...</msg>
<status status="PASS" starttime="20231030 15:57:18.360" endtime="20231030 15:57:24.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:57:24.579" level="INFO">scm1.org:9894:LEADER:f30a9029-72a6-4a4c-a6a0-6701827b1813:172.25.0.116
scm3.org:9894:FOLLOWER:3695bfbc-9575-40db-8194-83b050bbd9df:172.25.0.118
scm4.org:9894:FOLLOWER:77688908-6bd7-4635-a801-b498b9c37083:172.25.0.120
scm2.org:9894:FOLLOWER:df2aa113-aeb0-4203-b678-36f9c9b1d0bd:172.25.0.117</msg>
<status status="PASS" starttime="20231030 15:57:24.578" endtime="20231030 15:57:24.579"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231030 15:57:24.579" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231030 15:57:24.579" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:77688908-6bd7-4635-a801-b498b9c37083:172.25.0.120</msg>
<status status="PASS" starttime="20231030 15:57:24.579" endtime="20231030 15:57:24.579"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231030 15:57:24.580" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', '77688908-6bd7-4635-a801-b498b9c37083', '172.25.0.120']</msg>
<status status="PASS" starttime="20231030 15:57:24.580" endtime="20231030 15:57:24.580"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231030 15:57:24.582" level="INFO">${scm4_uuid} = 77688908-6bd7-4635-a801-b498b9c37083</msg>
<status status="PASS" starttime="20231030 15:57:24.580" endtime="20231030 15:57:24.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:57:24.588" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 77688908-6bd7-4635-a801-b498b9c37083 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:57:32.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:57:32.432" level="INFO">${output} = Transfer leadership successfully to 77688908-6bd7-4635-a801-b498b9c37083.</msg>
<status status="PASS" starttime="20231030 15:57:24.584" endtime="20231030 15:57:32.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:57:32.435" level="INFO">Transfer leadership successfully to 77688908-6bd7-4635-a801-b498b9c37083.</msg>
<status status="PASS" starttime="20231030 15:57:32.434" endtime="20231030 15:57:32.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:57:32.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:57:32.435" endtime="20231030 15:57:32.437"/>
</kw>
<status status="PASS" starttime="20231030 15:57:24.584" endtime="20231030 15:57:32.438"/>
</kw>
<msg timestamp="20231030 15:57:32.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:57:24.583" endtime="20231030 15:57:32.438"/>
</kw>
<msg timestamp="20231030 15:57:32.438" level="INFO">${result} = Transfer leadership successfully to 77688908-6bd7-4635-a801-b498b9c37083.</msg>
<status status="PASS" starttime="20231030 15:57:24.582" endtime="20231030 15:57:32.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:57:32.440" level="INFO">Transfer leadership successfully to 77688908-6bd7-4635-a801-b498b9c37083.</msg>
<status status="PASS" starttime="20231030 15:57:32.438" endtime="20231030 15:57:32.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 15:57:32.440" endtime="20231030 15:57:32.441"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231030 15:57:18.358" endtime="20231030 15:57:32.442"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:57:32.454" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:57:41.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:57:41.596" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231030 15:57:32.448" endtime="20231030 15:57:41.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:57:41.598" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Mon Oct 30 15:53:00 UTC 2023   Thu Dec 07 15:53:00 UTC 2028   CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=1 CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231030 15:57:41.597" endtime="20231030 15:57:41.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:57:41.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:57:41.598" endtime="20231030 15:57:41.599"/>
</kw>
<status status="PASS" starttime="20231030 15:57:32.447" endtime="20231030 15:57:41.599"/>
</kw>
<msg timestamp="20231030 15:57:41.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:57:32.446" endtime="20231030 15:57:41.600"/>
</kw>
<msg timestamp="20231030 15:57:41.600" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231030 15:57:32.445" endtime="20231030 15:57:41.600"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231030 15:57:41.601" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231030 15:57:41.601" level="INFO">${root_ca_cert} = 1                 Mon Oct 30 15:53:00 UTC 2023   Thu Dec 07 15:53:00 UTC 2028   CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=1 CN=scm...</msg>
<status status="PASS" starttime="20231030 15:57:41.601" endtime="20231030 15:57:41.601"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231030 15:57:41.602" level="INFO">${root_ca_cert_split} = ['1', 'Mon', 'Oct', '30', '15:53:00', 'UTC', '2023', 'Thu', 'Dec', '07', '15:53:00', 'UTC', '2028', 'CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,...</msg>
<status status="PASS" starttime="20231030 15:57:41.601" endtime="20231030 15:57:41.602"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231030 15:57:41.604" level="INFO">${root_ca_cert_subject} = 30</msg>
<status status="PASS" starttime="20231030 15:57:41.602" endtime="20231030 15:57:41.604"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:57:41.609" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:57:49.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:57:49.606" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231030 15:57:41.606" endtime="20231030 15:57:49.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:57:49.608" level="INFO">Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Mon Oct 30 15:53:00 UTC 2023   Thu Dec 07 15:53:00 UTC 2028   CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=1 CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=1
2                 Mon Oct 30 15:53:01 UTC 2023   Thu Dec 07 15:53:01 UTC 2028   CN=scm-sub@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=2 CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=1
3                 Mon Oct 30 15:53:30 UTC 2023   Tue Oct 29 15:53:30 UTC 2024   CN=recon@recon,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=3 CN=scm-sub@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=2
4                 Mon Oct 30 15:53:32 UTC 2023   Thu Dec 07 15:53:32 UTC 2028   CN=scm-sub@scm2.org,OU=df2aa113-aeb0-4203-b678-36f9c9b1d0bd,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=4 CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=1
5                 Mon Oct 30 15:53:53 UTC 2023   Thu Dec 07 15:53:53 UTC 2028   CN=scm-sub@scm3.org,OU=3695bfbc-9575-40db-8194-83b050bbd9df,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=5 CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=1
6                 Mon Oct 30 15:54:39 UTC 2023   Tue Oct 29 15:54:39 UTC 2024   CN=dn@19ee0796adf8,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=6 CN=scm-sub@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=2
7                 Mon Oct 30 15:54:40 UTC 2023   Tue Oct 29 15:54:40 UTC 2024   CN=dn@c4a4addc445b,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=7 CN=scm-sub@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=2
8                 Mon Oct 30 15:54:40 UTC 2023   Tue Oct 29 15:54:40 UTC 2024   CN=dn@bfc0e636ad7b,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=8 CN=scm-sub@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=2
9                 Mon Oct 30 15:54:45 UTC 2023   Tue Oct 29 15:54:45 UTC 2024   CN=om1,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=9       CN=scm-sub@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=2
10                Mon Oct 30 15:54:46 UTC 2023   Tue Oct 29 15:54:46 UTC 2024   CN=om3,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=10      CN=scm-sub@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=2
11                Mon Oct 30 15:54:52 UTC 2023   Tue Oct 29 15:54:52 UTC 2024   CN=om2,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=11      CN=scm-sub@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=2
12                Mon Oct 30 15:56:36 UTC 2023   Thu Dec 07 15:56:36 UTC 2028   CN=scm-sub@scm4.org,OU=77688908-6bd7-4635-a801-b498b9c37083,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=12 CN=scm@scm1.org,OU=f30a9029-72a6-4a4c-a6a0-6701827b1813,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231030 15:57:49.607" endtime="20231030 15:57:49.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:57:49.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:57:49.608" endtime="20231030 15:57:49.609"/>
</kw>
<status status="PASS" starttime="20231030 15:57:41.605" endtime="20231030 15:57:49.609"/>
</kw>
<msg timestamp="20231030 15:57:49.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:57:41.605" endtime="20231030 15:57:49.609"/>
</kw>
<msg timestamp="20231030 15:57:49.610" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231030 15:57:41.604" endtime="20231030 15:57:49.610"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231030 15:57:49.611" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231030 15:57:49.611" level="INFO">${scm4_cert} = 12                Mon Oct 30 15:56:36 UTC 2023   Thu Dec 07 15:56:36 UTC 2028   CN=scm-sub@scm4.org,OU=77688908-6bd7-4635-a801-b498b9c37083,O=CID-faf2274c-2952-4e5b-b355-78f103d58e19,SERIALNUMBER=12 C...</msg>
<status status="PASS" starttime="20231030 15:57:49.610" endtime="20231030 15:57:49.611"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231030 15:57:49.611" level="INFO">${scm4_cert_split} = ['12', 'Mon', 'Oct', '30', '15:56:36', 'UTC', '2023', 'Thu', 'Dec', '07', '15:56:36', 'UTC', '2028', 'CN=scm-sub@scm4.org,OU=77688908-6bd7-4635-a801-b498b9c37083,O=CID-faf2274c-2952-4e5b-b355-78f103d5...</msg>
<status status="PASS" starttime="20231030 15:57:49.611" endtime="20231030 15:57:49.612"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231030 15:57:49.613" level="INFO">${scm4_cert_issuer} = 15:56:36</msg>
<status status="PASS" starttime="20231030 15:57:49.612" endtime="20231030 15:57:49.613"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231030 15:57:49.613" endtime="20231030 15:57:49.615"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231030 15:57:32.444" endtime="20231030 15:57:49.615"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231030 15:57:11.917" endtime="20231030 15:57:49.616"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:59:03.987" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:59:04.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:59:04.003" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231030 15:59:03.966" endtime="20231030 15:59:04.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:59:04.005" level="INFO">scm</msg>
<status status="PASS" starttime="20231030 15:59:04.004" endtime="20231030 15:59:04.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:59:04.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:59:04.005" endtime="20231030 15:59:04.014"/>
</kw>
<status status="PASS" starttime="20231030 15:59:03.958" endtime="20231030 15:59:04.015"/>
</kw>
<msg timestamp="20231030 15:59:04.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:59:03.955" endtime="20231030 15:59:04.016"/>
</kw>
<msg timestamp="20231030 15:59:04.016" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231030 15:59:03.946" endtime="20231030 15:59:04.016"/>
</kw>
<msg timestamp="20231030 15:59:04.022" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:59:03.945" endtime="20231030 15:59:04.022"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 15:59:04.024" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231030 15:59:04.023" endtime="20231030 15:59:04.024"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231030 15:59:04.037" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231030 15:59:04.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20231030 15:59:04.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231030 15:59:04.032" endtime="20231030 15:59:04.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 15:59:04.091" level="INFO"/>
<status status="PASS" starttime="20231030 15:59:04.090" endtime="20231030 15:59:04.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231030 15:59:04.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231030 15:59:04.092" endtime="20231030 15:59:04.092"/>
</kw>
<status status="PASS" starttime="20231030 15:59:04.031" endtime="20231030 15:59:04.092"/>
</kw>
<msg timestamp="20231030 15:59:04.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231030 15:59:04.031" endtime="20231030 15:59:04.093"/>
</kw>
<status status="PASS" starttime="20231030 15:59:04.030" endtime="20231030 15:59:04.093"/>
</kw>
<status status="PASS" starttime="20231030 15:59:04.024" endtime="20231030 15:59:04.093"/>
</kw>
<status status="PASS" starttime="20231030 15:59:03.933" endtime="20231030 15:59:04.093"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231030 15:59:03.928" endtime="20231030 15:59:04.093"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231030 15:59:03.605" endtime="20231030 15:59:04.095"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="38524"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
