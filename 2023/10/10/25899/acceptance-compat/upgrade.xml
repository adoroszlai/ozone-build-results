<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231010 19:13:52.257" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231010 19:07:28.932" endtime="20231010 19:07:28.934"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:28.942" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:07:28.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:28.945" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=54387c2f9940
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.serv...</msg>
<status status="PASS" starttime="20231010 19:07:28.936" endtime="20231010 19:07:28.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:28.946" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=54387c2f9940
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231010 19:07:28.946" endtime="20231010 19:07:28.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:28.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:28.946" endtime="20231010 19:07:28.947"/>
</kw>
<status status="PASS" starttime="20231010 19:07:28.935" endtime="20231010 19:07:28.947"/>
</kw>
<msg timestamp="20231010 19:07:28.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:07:28.935" endtime="20231010 19:07:28.949"/>
</kw>
<msg timestamp="20231010 19:07:28.949" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=54387c2f9940
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.serv...</msg>
<status status="PASS" starttime="20231010 19:07:28.934" endtime="20231010 19:07:28.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:28.950" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=54387c2f9940
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231010 19:07:28.950" endtime="20231010 19:07:28.950"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231010 19:07:28.951" endtime="20231010 19:07:28.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:28.956" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:07:32.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:32.350" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231010 19:07:28.953" endtime="20231010 19:07:32.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:32.352" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231010 19:07:32.351" endtime="20231010 19:07:32.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:32.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:32.352" endtime="20231010 19:07:32.353"/>
</kw>
<status status="PASS" starttime="20231010 19:07:28.952" endtime="20231010 19:07:32.353"/>
</kw>
<msg timestamp="20231010 19:07:32.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:07:28.952" endtime="20231010 19:07:32.354"/>
</kw>
<msg timestamp="20231010 19:07:32.354" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231010 19:07:28.951" endtime="20231010 19:07:32.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:32.354" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231010 19:07:32.354" endtime="20231010 19:07:32.355"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231010 19:07:32.355" endtime="20231010 19:07:32.355"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231010 19:07:28.931" endtime="20231010 19:07:32.355"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231010 19:07:32.357" endtime="20231010 19:07:32.358"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231010 19:07:32.358" endtime="20231010 19:07:32.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:32.363" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:07:35.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:35.446" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231010 19:07:32.360" endtime="20231010 19:07:35.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:35.447" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231010 19:07:35.446" endtime="20231010 19:07:35.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:35.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:35.448" endtime="20231010 19:07:35.448"/>
</kw>
<status status="PASS" starttime="20231010 19:07:32.359" endtime="20231010 19:07:35.449"/>
</kw>
<msg timestamp="20231010 19:07:35.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:07:32.359" endtime="20231010 19:07:35.450"/>
</kw>
<msg timestamp="20231010 19:07:35.450" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231010 19:07:32.358" endtime="20231010 19:07:35.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:35.451" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231010 19:07:35.450" endtime="20231010 19:07:35.451"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231010 19:07:35.451" endtime="20231010 19:07:35.451"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231010 19:07:32.356" endtime="20231010 19:07:35.452"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231010 19:07:28.847" endtime="20231010 19:07:35.453"/>
</suite>
<suite id="s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:39.080" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:07:42.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:42.143" level="INFO">${output} = 2023-10-10 19:07:41,994 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231010 19:07:39.075" endtime="20231010 19:07:42.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:42.147" level="INFO">2023-10-10 19:07:41,994 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231010 19:07:42.144" endtime="20231010 19:07:42.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:42.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:42.148" endtime="20231010 19:07:42.148"/>
</kw>
<status status="PASS" starttime="20231010 19:07:39.074" endtime="20231010 19:07:42.151"/>
</kw>
<msg timestamp="20231010 19:07:42.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:07:39.074" endtime="20231010 19:07:42.154"/>
</kw>
<msg timestamp="20231010 19:07:42.155" level="INFO">${output} = 2023-10-10 19:07:41,994 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231010 19:07:39.073" endtime="20231010 19:07:42.155"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:07:42.155" endtime="20231010 19:07:42.155"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:42.163" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:07:45.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:45.874" level="INFO">${output} = 2023-10-10 19:07:45,787 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20231010 19:07:42.159" endtime="20231010 19:07:45.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:45.875" level="INFO">2023-10-10 19:07:45,787 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231010 19:07:45.874" endtime="20231010 19:07:45.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:45.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:45.875" endtime="20231010 19:07:45.876"/>
</kw>
<status status="PASS" starttime="20231010 19:07:42.158" endtime="20231010 19:07:45.877"/>
</kw>
<msg timestamp="20231010 19:07:45.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:07:42.156" endtime="20231010 19:07:45.877"/>
</kw>
<msg timestamp="20231010 19:07:45.878" level="INFO">${output} = 2023-10-10 19:07:45,787 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20231010 19:07:42.156" endtime="20231010 19:07:45.878"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:07:45.878" endtime="20231010 19:07:45.878"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:07:39.072" endtime="20231010 19:07:45.879"/>
</test>
<test id="s1-s2-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:45.887" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231010 19:07:45.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:45.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:07:45.883" endtime="20231010 19:07:45.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:45.891" level="INFO"/>
<status status="PASS" starttime="20231010 19:07:45.890" endtime="20231010 19:07:45.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:45.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:45.891" endtime="20231010 19:07:45.892"/>
</kw>
<status status="PASS" starttime="20231010 19:07:45.881" endtime="20231010 19:07:45.893"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:45.897" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:07:53.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:53.095" level="INFO">${output} = 2023-10-10 19:07:50,466 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 19:07:50,616 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 19:07:45.895" endtime="20231010 19:07:53.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:53.097" level="INFO">2023-10-10 19:07:50,466 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 19:07:50,616 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-10-10 19:07:50,616 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-10-10 19:07:50,982 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231010 19:07:53.096" endtime="20231010 19:07:53.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:53.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:53.097" endtime="20231010 19:07:53.098"/>
</kw>
<status status="PASS" starttime="20231010 19:07:45.894" endtime="20231010 19:07:53.098"/>
</kw>
<msg timestamp="20231010 19:07:53.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:07:45.894" endtime="20231010 19:07:53.098"/>
</kw>
<msg timestamp="20231010 19:07:53.099" level="INFO">${output} = 2023-10-10 19:07:50,466 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 19:07:50,616 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 19:07:45.893" endtime="20231010 19:07:53.099"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:07:53.099" endtime="20231010 19:07:53.099"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:53.103" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:07:53.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:53.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:07:53.100" endtime="20231010 19:07:53.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:53.107" level="INFO"/>
<status status="PASS" starttime="20231010 19:07:53.106" endtime="20231010 19:07:53.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:53.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:53.107" endtime="20231010 19:07:53.108"/>
</kw>
<status status="PASS" starttime="20231010 19:07:53.100" endtime="20231010 19:07:53.108"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:07:45.880" endtime="20231010 19:07:53.108"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:53.114" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:07:56.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:56.189" level="INFO">${output} = 2023-10-10 19:07:56,126 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20231010 19:07:53.112" endtime="20231010 19:07:56.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:56.190" level="INFO">2023-10-10 19:07:56,126 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231010 19:07:56.190" endtime="20231010 19:07:56.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:56.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:56.191" endtime="20231010 19:07:56.191"/>
</kw>
<status status="PASS" starttime="20231010 19:07:53.111" endtime="20231010 19:07:56.192"/>
</kw>
<msg timestamp="20231010 19:07:56.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:07:53.111" endtime="20231010 19:07:56.192"/>
</kw>
<msg timestamp="20231010 19:07:56.192" level="INFO">${output} = 2023-10-10 19:07:56,126 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20231010 19:07:53.110" endtime="20231010 19:07:56.192"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:07:56.193" endtime="20231010 19:07:56.193"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:07:53.109" endtime="20231010 19:07:56.193"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:56.200" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231010 19:07:56.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:07:56.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:07:56.196" endtime="20231010 19:07:56.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:07:56.202" level="INFO"/>
<status status="PASS" starttime="20231010 19:07:56.201" endtime="20231010 19:07:56.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:07:56.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:07:56.202" endtime="20231010 19:07:56.202"/>
</kw>
<status status="PASS" starttime="20231010 19:07:56.195" endtime="20231010 19:07:56.203"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:07:56.207" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:02.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:02.342" level="INFO">${output} = 2023-10-10 19:08:00,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 19:08:00,197 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 19:07:56.205" endtime="20231010 19:08:02.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:02.344" level="INFO">2023-10-10 19:08:00,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 19:08:00,197 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-10-10 19:08:00,197 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-10-10 19:08:00,507 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231010 19:08:02.343" endtime="20231010 19:08:02.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:02.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:02.344" endtime="20231010 19:08:02.345"/>
</kw>
<status status="PASS" starttime="20231010 19:07:56.204" endtime="20231010 19:08:02.345"/>
</kw>
<msg timestamp="20231010 19:08:02.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:07:56.203" endtime="20231010 19:08:02.346"/>
</kw>
<msg timestamp="20231010 19:08:02.346" level="INFO">${output} = 2023-10-10 19:08:00,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 19:08:00,197 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 19:07:56.203" endtime="20231010 19:08:02.346"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:02.346" endtime="20231010 19:08:02.347"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:02.350" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:02.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:02.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:02.347" endtime="20231010 19:08:02.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:02.355" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:02.355" endtime="20231010 19:08:02.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:02.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:02.356" endtime="20231010 19:08:02.356"/>
</kw>
<status status="PASS" starttime="20231010 19:08:02.347" endtime="20231010 19:08:02.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:07:56.194" endtime="20231010 19:08:02.357"/>
</test>
<test id="s1-s2-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:02.364" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:03.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:03.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:02.362" endtime="20231010 19:08:03.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:03.204" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:03.203" endtime="20231010 19:08:03.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:03.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:03.204" endtime="20231010 19:08:03.205"/>
</kw>
<status status="PASS" starttime="20231010 19:08:02.361" endtime="20231010 19:08:03.205"/>
</kw>
<msg timestamp="20231010 19:08:03.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:02.361" endtime="20231010 19:08:03.206"/>
</kw>
<status status="PASS" starttime="20231010 19:08:02.360" endtime="20231010 19:08:03.206"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:03.213" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:03.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:03.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:03.209" endtime="20231010 19:08:03.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:03.812" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:03.811" endtime="20231010 19:08:03.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:03.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:03.812" endtime="20231010 19:08:03.813"/>
</kw>
<status status="PASS" starttime="20231010 19:08:03.208" endtime="20231010 19:08:03.813"/>
</kw>
<msg timestamp="20231010 19:08:03.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:03.207" endtime="20231010 19:08:03.814"/>
</kw>
<status status="PASS" starttime="20231010 19:08:03.206" endtime="20231010 19:08:03.814"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:03.819" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:04.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:04.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:03.816" endtime="20231010 19:08:04.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:04.433" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:04.432" endtime="20231010 19:08:04.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:04.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:04.433" endtime="20231010 19:08:04.434"/>
</kw>
<status status="PASS" starttime="20231010 19:08:03.815" endtime="20231010 19:08:04.434"/>
</kw>
<msg timestamp="20231010 19:08:04.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:03.815" endtime="20231010 19:08:04.435"/>
</kw>
<status status="PASS" starttime="20231010 19:08:03.814" endtime="20231010 19:08:04.435"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:04.443" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:05.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:05.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:04.437" endtime="20231010 19:08:05.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:05.023" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:05.022" endtime="20231010 19:08:05.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:05.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:05.023" endtime="20231010 19:08:05.024"/>
</kw>
<status status="PASS" starttime="20231010 19:08:04.436" endtime="20231010 19:08:05.024"/>
</kw>
<msg timestamp="20231010 19:08:05.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:04.436" endtime="20231010 19:08:05.025"/>
</kw>
<status status="PASS" starttime="20231010 19:08:04.435" endtime="20231010 19:08:05.025"/>
</kw>
<status status="PASS" starttime="20231010 19:08:02.360" endtime="20231010 19:08:05.025"/>
</kw>
<status status="PASS" starttime="20231010 19:08:02.359" endtime="20231010 19:08:05.026"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:08:02.358" endtime="20231010 19:08:05.026"/>
</test>
<test id="s1-s2-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231010 19:08:05.029" level="INFO">${randStr} = 2922191808</msg>
<status status="PASS" starttime="20231010 19:08:05.029" endtime="20231010 19:08:05.030"/>
</kw>
<msg timestamp="20231010 19:08:05.030" level="INFO">${random} = ozone-test-2922191808</msg>
<status status="PASS" starttime="20231010 19:08:05.028" endtime="20231010 19:08:05.030"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:05.035" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-2922191808 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:07.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:07.584" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2922191808"
}</msg>
<status status="PASS" starttime="20231010 19:08:05.033" endtime="20231010 19:08:07.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:07.585" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2922191808"
}</msg>
<status status="PASS" starttime="20231010 19:08:07.584" endtime="20231010 19:08:07.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:07.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:07.586" endtime="20231010 19:08:07.586"/>
</kw>
<status status="PASS" starttime="20231010 19:08:05.032" endtime="20231010 19:08:07.587"/>
</kw>
<msg timestamp="20231010 19:08:07.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:05.032" endtime="20231010 19:08:07.588"/>
</kw>
<msg timestamp="20231010 19:08:07.588" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2922191808"
}</msg>
<status status="PASS" starttime="20231010 19:08:05.031" endtime="20231010 19:08:07.588"/>
</kw>
<msg timestamp="20231010 19:08:07.588" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2922191808"
}</msg>
<status status="PASS" starttime="20231010 19:08:05.031" endtime="20231010 19:08:07.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:07.588" endtime="20231010 19:08:07.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:07.589" endtime="20231010 19:08:07.589"/>
</kw>
<msg timestamp="20231010 19:08:07.590" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231010 19:08:05.030" endtime="20231010 19:08:07.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231010 19:08:07.590" endtime="20231010 19:08:07.590"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:08:05.027" endtime="20231010 19:08:07.591"/>
</test>
<test id="s1-s2-t7" name="Create key using S3 API" line="62">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:07.597" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231010 19:08:07.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:07.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:07.594" endtime="20231010 19:08:07.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:07.600" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:07.599" endtime="20231010 19:08:07.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:07.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:07.600" endtime="20231010 19:08:07.601"/>
</kw>
<status status="PASS" starttime="20231010 19:08:07.593" endtime="20231010 19:08:07.601"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:07.606" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:09.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:09.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:07.604" endtime="20231010 19:08:09.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:09.702" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:09.701" endtime="20231010 19:08:09.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:09.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:09.702" endtime="20231010 19:08:09.703"/>
</kw>
<msg timestamp="20231010 19:08:09.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:07.602" endtime="20231010 19:08:09.703"/>
</kw>
<msg timestamp="20231010 19:08:09.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:07.602" endtime="20231010 19:08:09.703"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:09.704" endtime="20231010 19:08:09.704"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:09.708" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:09.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:09.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:09.705" endtime="20231010 19:08:09.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:09.712" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:09.712" endtime="20231010 19:08:09.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:09.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:09.713" endtime="20231010 19:08:09.713"/>
</kw>
<status status="PASS" starttime="20231010 19:08:09.704" endtime="20231010 19:08:09.714"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:08:07.592" endtime="20231010 19:08:09.714"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231010 19:07:38.979" endtime="20231010 19:08:09.716"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s3-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231010 19:08:13.155" level="INFO">${random} = 60961</msg>
<status status="PASS" starttime="20231010 19:08:13.155" endtime="20231010 19:08:13.155"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:13.169" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-60961 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:18.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:18.343" level="INFO">${output} = 2023-10-10 19:08:16,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 19:08:17,021 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 19:08:13.158" endtime="20231010 19:08:18.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:18.344" level="INFO">2023-10-10 19:08:16,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 19:08:17,021 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-10-10 19:08:17,022 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231010 19:08:18.343" endtime="20231010 19:08:18.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:18.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:18.344" endtime="20231010 19:08:18.345"/>
</kw>
<status status="PASS" starttime="20231010 19:08:13.157" endtime="20231010 19:08:18.345"/>
</kw>
<msg timestamp="20231010 19:08:18.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:13.156" endtime="20231010 19:08:18.347"/>
</kw>
<msg timestamp="20231010 19:08:18.347" level="INFO">${output} = 2023-10-10 19:08:16,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 19:08:17,021 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 19:08:13.155" endtime="20231010 19:08:18.347"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:18.347" endtime="20231010 19:08:18.348"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:18.351" level="INFO">Running command 'cat /tmp/key-60961 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:18.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:18.354" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 19:08:18.349" endtime="20231010 19:08:18.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:18.356" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 19:08:18.355" endtime="20231010 19:08:18.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:18.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:18.356" endtime="20231010 19:08:18.357"/>
</kw>
<msg timestamp="20231010 19:08:18.357" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 19:08:18.348" endtime="20231010 19:08:18.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:18.357" endtime="20231010 19:08:18.358"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:18.361" level="INFO">Running command 'rm /tmp/key-60961 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:18.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:18.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:18.359" endtime="20231010 19:08:18.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:18.365" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:18.364" endtime="20231010 19:08:18.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:18.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:18.365" endtime="20231010 19:08:18.366"/>
</kw>
<status status="PASS" starttime="20231010 19:08:18.358" endtime="20231010 19:08:18.366"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:08:13.153" endtime="20231010 19:08:18.367"/>
</test>
<test id="s1-s3-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:18.374" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:19.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:19.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:18.371" endtime="20231010 19:08:19.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:19.010" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:19.010" endtime="20231010 19:08:19.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:19.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:19.011" endtime="20231010 19:08:19.011"/>
</kw>
<status status="PASS" starttime="20231010 19:08:18.371" endtime="20231010 19:08:19.012"/>
</kw>
<msg timestamp="20231010 19:08:19.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:18.370" endtime="20231010 19:08:19.012"/>
</kw>
<status status="PASS" starttime="20231010 19:08:18.370" endtime="20231010 19:08:19.012"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:19.017" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:19.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:19.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:19.014" endtime="20231010 19:08:19.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:19.601" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:19.600" endtime="20231010 19:08:19.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:19.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:19.601" endtime="20231010 19:08:19.602"/>
</kw>
<status status="PASS" starttime="20231010 19:08:19.014" endtime="20231010 19:08:19.602"/>
</kw>
<msg timestamp="20231010 19:08:19.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:19.013" endtime="20231010 19:08:19.603"/>
</kw>
<status status="PASS" starttime="20231010 19:08:19.013" endtime="20231010 19:08:19.603"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:19.607" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:20.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:20.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:19.605" endtime="20231010 19:08:20.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:20.199" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:20.199" endtime="20231010 19:08:20.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:20.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:20.200" endtime="20231010 19:08:20.200"/>
</kw>
<status status="PASS" starttime="20231010 19:08:19.604" endtime="20231010 19:08:20.201"/>
</kw>
<msg timestamp="20231010 19:08:20.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:19.604" endtime="20231010 19:08:20.201"/>
</kw>
<status status="PASS" starttime="20231010 19:08:19.603" endtime="20231010 19:08:20.201"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:20.206" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:20.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:20.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:20.203" endtime="20231010 19:08:20.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:20.771" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:20.770" endtime="20231010 19:08:20.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:20.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:20.771" endtime="20231010 19:08:20.772"/>
</kw>
<status status="PASS" starttime="20231010 19:08:20.202" endtime="20231010 19:08:20.772"/>
</kw>
<msg timestamp="20231010 19:08:20.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:08:20.202" endtime="20231010 19:08:20.773"/>
</kw>
<status status="PASS" starttime="20231010 19:08:20.202" endtime="20231010 19:08:20.773"/>
</kw>
<status status="PASS" starttime="20231010 19:08:18.369" endtime="20231010 19:08:20.773"/>
</kw>
<status status="PASS" starttime="20231010 19:08:18.369" endtime="20231010 19:08:20.773"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:08:18.368" endtime="20231010 19:08:20.773"/>
</test>
<test id="s1-s3-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:20.779" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:21.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:21.663" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 19:08:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 19:08:20.777" endtime="20231010 19:08:21.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:21.664" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 19:08:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 10 Oct 2023 19:08:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231010 19:08:21.663" endtime="20231010 19:08:21.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:21.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:21.664" endtime="20231010 19:08:21.665"/>
</kw>
<msg timestamp="20231010 19:08:21.665" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 19:08:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 19:08:20.776" endtime="20231010 19:08:21.665"/>
</kw>
<msg timestamp="20231010 19:08:21.666" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 19:08:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 19:08:20.775" endtime="20231010 19:08:21.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:21.666" endtime="20231010 19:08:21.666"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:21.670" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:21.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:21.673" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 19:08:21.667" endtime="20231010 19:08:21.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:21.674" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 19:08:21.674" endtime="20231010 19:08:21.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:21.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:21.675" endtime="20231010 19:08:21.675"/>
</kw>
<msg timestamp="20231010 19:08:21.676" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 19:08:21.667" endtime="20231010 19:08:21.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:21.676" endtime="20231010 19:08:21.676"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:21.679" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:21.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:21.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:21.677" endtime="20231010 19:08:21.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:21.684" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:21.683" endtime="20231010 19:08:21.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:21.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:21.684" endtime="20231010 19:08:21.684"/>
</kw>
<status status="PASS" starttime="20231010 19:08:21.676" endtime="20231010 19:08:21.685"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:08:20.774" endtime="20231010 19:08:21.685"/>
</test>
<test id="s1-s3-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:21.691" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:22.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:22.565" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 19:08:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 19:08:21.688" endtime="20231010 19:08:22.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:22.567" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 19:08:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 10 Oct 2023 19:08:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231010 19:08:22.566" endtime="20231010 19:08:22.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:22.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:22.567" endtime="20231010 19:08:22.568"/>
</kw>
<msg timestamp="20231010 19:08:22.568" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 19:08:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 19:08:21.687" endtime="20231010 19:08:22.568"/>
</kw>
<msg timestamp="20231010 19:08:22.569" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 19:08:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 19:08:21.687" endtime="20231010 19:08:22.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:22.569" endtime="20231010 19:08:22.570"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:22.574" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:22.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:22.577" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231010 19:08:22.571" endtime="20231010 19:08:22.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:22.578" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231010 19:08:22.577" endtime="20231010 19:08:22.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:22.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:22.578" endtime="20231010 19:08:22.579"/>
</kw>
<msg timestamp="20231010 19:08:22.579" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231010 19:08:22.570" endtime="20231010 19:08:22.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:08:22.579" endtime="20231010 19:08:22.580"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:22.583" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:08:22.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:08:22.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:08:22.581" endtime="20231010 19:08:22.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:08:22.587" level="INFO"/>
<status status="PASS" starttime="20231010 19:08:22.587" endtime="20231010 19:08:22.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:08:22.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:08:22.588" endtime="20231010 19:08:22.588"/>
</kw>
<status status="PASS" starttime="20231010 19:08:22.580" endtime="20231010 19:08:22.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:08:21.686" endtime="20231010 19:08:22.589"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231010 19:08:13.063" endtime="20231010 19:08:22.591"/>
</suite>
<suite id="s1-s4" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231010 19:08:26.142" endtime="20231010 19:08:26.143"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231010 19:08:26.143" endtime="20231010 19:08:26.143"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:08:26.149" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:13:26.142" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231010 19:08:26.145" endtime="20231010 19:13:26.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231010 19:13:26.143" endtime="20231010 19:13:26.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231010 19:13:26.143" endtime="20231010 19:13:26.143"/>
</kw>
<status status="FAIL" starttime="20231010 19:08:26.144" endtime="20231010 19:13:26.143"/>
</kw>
<msg timestamp="20231010 19:13:26.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231010 19:08:26.144" endtime="20231010 19:13:26.145"/>
</kw>
<status status="FAIL" starttime="20231010 19:08:26.143" endtime="20231010 19:13:26.145"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20231010 19:13:26.146" endtime="20231010 19:13:26.146"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231010 19:08:26.141" endtime="20231010 19:13:26.146">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20231010 19:08:26.086" endtime="20231010 19:13:26.148"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="346933"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Prepare">upgrade.Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
