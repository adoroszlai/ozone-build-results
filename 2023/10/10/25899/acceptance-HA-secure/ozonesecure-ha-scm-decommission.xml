<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231010 19:19:06.529" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:14:32.219" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:14:32.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:14:32.248" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231010 19:14:32.214" endtime="20231010 19:14:32.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:14:32.257" level="INFO">scm</msg>
<status status="PASS" starttime="20231010 19:14:32.249" endtime="20231010 19:14:32.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:14:32.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:14:32.258" endtime="20231010 19:14:32.261"/>
</kw>
<status status="PASS" starttime="20231010 19:14:32.213" endtime="20231010 19:14:32.261"/>
</kw>
<msg timestamp="20231010 19:14:32.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:14:32.213" endtime="20231010 19:14:32.263"/>
</kw>
<msg timestamp="20231010 19:14:32.263" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231010 19:14:32.212" endtime="20231010 19:14:32.264"/>
</kw>
<msg timestamp="20231010 19:14:32.264" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231010 19:14:32.211" endtime="20231010 19:14:32.264"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231010 19:14:32.265" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231010 19:14:32.264" endtime="20231010 19:14:32.270"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:14:32.290" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:14:32.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:14:32.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:14:32.279" endtime="20231010 19:14:32.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:14:32.520" level="INFO"/>
<status status="PASS" starttime="20231010 19:14:32.519" endtime="20231010 19:14:32.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:14:32.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:14:32.521" endtime="20231010 19:14:32.522"/>
</kw>
<status status="PASS" starttime="20231010 19:14:32.277" endtime="20231010 19:14:32.522"/>
</kw>
<msg timestamp="20231010 19:14:32.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:14:32.274" endtime="20231010 19:14:32.522"/>
</kw>
<status status="PASS" starttime="20231010 19:14:32.272" endtime="20231010 19:14:32.523"/>
</kw>
<status status="PASS" starttime="20231010 19:14:32.270" endtime="20231010 19:14:32.523"/>
</kw>
<status status="PASS" starttime="20231010 19:14:32.209" endtime="20231010 19:14:32.523"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231010 19:14:32.207" endtime="20231010 19:14:32.523"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231010 19:14:32.003" endtime="20231010 19:14:32.526"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:14:51.432" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:15:00.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:15:00.091" level="INFO">${output} = scm2.org:9894:FOLLOWER:05e5026f-7c63-4926-a268-bcccf1d268c2:172.25.0.117
scm3.org:9894:FOLLOWER:99d1ab4e-fb7e-4433-ba00-4612b700d9bb:172.25.0.118
scm1.org:9894:LEADER:025ef65e-f139-42e4-a099-f389631d2...</msg>
<status status="PASS" starttime="20231010 19:14:51.428" endtime="20231010 19:15:00.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:15:00.096" level="INFO">scm2.org:9894:FOLLOWER:05e5026f-7c63-4926-a268-bcccf1d268c2:172.25.0.117
scm3.org:9894:FOLLOWER:99d1ab4e-fb7e-4433-ba00-4612b700d9bb:172.25.0.118
scm1.org:9894:LEADER:025ef65e-f139-42e4-a099-f389631d21f8:172.25.0.116
scm4.org:9894:FOLLOWER:1775b560-196b-47ba-a41c-a5120d2a63d8:172.25.0.120</msg>
<status status="PASS" starttime="20231010 19:15:00.094" endtime="20231010 19:15:00.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:15:00.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:15:00.096" endtime="20231010 19:15:00.097"/>
</kw>
<status status="PASS" starttime="20231010 19:14:51.427" endtime="20231010 19:15:00.098"/>
</kw>
<msg timestamp="20231010 19:15:00.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:14:51.426" endtime="20231010 19:15:00.098"/>
</kw>
<msg timestamp="20231010 19:15:00.098" level="INFO">${result} = scm2.org:9894:FOLLOWER:05e5026f-7c63-4926-a268-bcccf1d268c2:172.25.0.117
scm3.org:9894:FOLLOWER:99d1ab4e-fb7e-4433-ba00-4612b700d9bb:172.25.0.118
scm1.org:9894:LEADER:025ef65e-f139-42e4-a099-f389631d2...</msg>
<status status="PASS" starttime="20231010 19:14:51.425" endtime="20231010 19:15:00.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:15:00.099" level="INFO">scm2.org:9894:FOLLOWER:05e5026f-7c63-4926-a268-bcccf1d268c2:172.25.0.117
scm3.org:9894:FOLLOWER:99d1ab4e-fb7e-4433-ba00-4612b700d9bb:172.25.0.118
scm1.org:9894:LEADER:025ef65e-f139-42e4-a099-f389631d21f8:172.25.0.116
scm4.org:9894:FOLLOWER:1775b560-196b-47ba-a41c-a5120d2a63d8:172.25.0.120</msg>
<status status="PASS" starttime="20231010 19:15:00.098" endtime="20231010 19:15:00.099"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231010 19:15:00.100" level="INFO">4 lines</msg>
<msg timestamp="20231010 19:15:00.100" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231010 19:15:00.099" endtime="20231010 19:15:00.100"/>
</kw>
<msg timestamp="20231010 19:15:00.100" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231010 19:14:51.425" endtime="20231010 19:15:00.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:15:00.101" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20231010 19:15:00.100" endtime="20231010 19:15:00.101"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231010 19:15:00.102" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231010 19:15:00.101" endtime="20231010 19:15:00.102"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231010 19:15:00.102" endtime="20231010 19:15:00.103"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:14:51.424" endtime="20231010 19:15:00.103"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:15:00.112" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:15:09.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:15:09.550" level="INFO">${output} = scm2.org:9894:FOLLOWER:05e5026f-7c63-4926-a268-bcccf1d268c2:172.25.0.117
scm3.org:9894:FOLLOWER:99d1ab4e-fb7e-4433-ba00-4612b700d9bb:172.25.0.118
scm1.org:9894:LEADER:025ef65e-f139-42e4-a099-f389631d2...</msg>
<status status="PASS" starttime="20231010 19:15:00.107" endtime="20231010 19:15:09.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:15:09.553" level="INFO">scm2.org:9894:FOLLOWER:05e5026f-7c63-4926-a268-bcccf1d268c2:172.25.0.117
scm3.org:9894:FOLLOWER:99d1ab4e-fb7e-4433-ba00-4612b700d9bb:172.25.0.118
scm1.org:9894:LEADER:025ef65e-f139-42e4-a099-f389631d21f8:172.25.0.116
scm4.org:9894:FOLLOWER:1775b560-196b-47ba-a41c-a5120d2a63d8:172.25.0.120</msg>
<status status="PASS" starttime="20231010 19:15:09.551" endtime="20231010 19:15:09.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:15:09.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:15:09.553" endtime="20231010 19:15:09.554"/>
</kw>
<status status="PASS" starttime="20231010 19:15:00.107" endtime="20231010 19:15:09.555"/>
</kw>
<msg timestamp="20231010 19:15:09.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:15:00.106" endtime="20231010 19:15:09.555"/>
</kw>
<msg timestamp="20231010 19:15:09.555" level="INFO">${result} = scm2.org:9894:FOLLOWER:05e5026f-7c63-4926-a268-bcccf1d268c2:172.25.0.117
scm3.org:9894:FOLLOWER:99d1ab4e-fb7e-4433-ba00-4612b700d9bb:172.25.0.118
scm1.org:9894:LEADER:025ef65e-f139-42e4-a099-f389631d2...</msg>
<status status="PASS" starttime="20231010 19:15:00.106" endtime="20231010 19:15:09.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:15:09.557" level="INFO">scm2.org:9894:FOLLOWER:05e5026f-7c63-4926-a268-bcccf1d268c2:172.25.0.117
scm3.org:9894:FOLLOWER:99d1ab4e-fb7e-4433-ba00-4612b700d9bb:172.25.0.118
scm1.org:9894:LEADER:025ef65e-f139-42e4-a099-f389631d21f8:172.25.0.116
scm4.org:9894:FOLLOWER:1775b560-196b-47ba-a41c-a5120d2a63d8:172.25.0.120</msg>
<status status="PASS" starttime="20231010 19:15:09.556" endtime="20231010 19:15:09.557"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231010 19:15:09.557" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231010 19:15:09.558" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:1775b560-196b-47ba-a41c-a5120d2a63d8:172.25.0.120</msg>
<status status="PASS" starttime="20231010 19:15:09.557" endtime="20231010 19:15:09.558"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231010 19:15:09.559" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', '1775b560-196b-47ba-a41c-a5120d2a63d8', '172.25.0.120']</msg>
<status status="PASS" starttime="20231010 19:15:09.558" endtime="20231010 19:15:09.559"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231010 19:15:09.561" level="INFO">${scm4_uuid} = 1775b560-196b-47ba-a41c-a5120d2a63d8</msg>
<status status="PASS" starttime="20231010 19:15:09.559" endtime="20231010 19:15:09.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:15:09.577" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 1775b560-196b-47ba-a41c-a5120d2a63d8 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:15:24.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:15:24.692" level="INFO">${output} = Transfer leadership successfully to 1775b560-196b-47ba-a41c-a5120d2a63d8.</msg>
<status status="PASS" starttime="20231010 19:15:09.565" endtime="20231010 19:15:24.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:15:24.694" level="INFO">Transfer leadership successfully to 1775b560-196b-47ba-a41c-a5120d2a63d8.</msg>
<status status="PASS" starttime="20231010 19:15:24.693" endtime="20231010 19:15:24.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:15:24.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:15:24.694" endtime="20231010 19:15:24.695"/>
</kw>
<status status="PASS" starttime="20231010 19:15:09.564" endtime="20231010 19:15:24.695"/>
</kw>
<msg timestamp="20231010 19:15:24.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:15:09.563" endtime="20231010 19:15:24.695"/>
</kw>
<msg timestamp="20231010 19:15:24.695" level="INFO">${result} = Transfer leadership successfully to 1775b560-196b-47ba-a41c-a5120d2a63d8.</msg>
<status status="PASS" starttime="20231010 19:15:09.562" endtime="20231010 19:15:24.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:15:24.696" level="INFO">Transfer leadership successfully to 1775b560-196b-47ba-a41c-a5120d2a63d8.</msg>
<status status="PASS" starttime="20231010 19:15:24.696" endtime="20231010 19:15:24.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 19:15:24.696" endtime="20231010 19:15:24.697"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:15:00.104" endtime="20231010 19:15:24.697"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:15:24.706" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:15:35.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:15:35.993" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231010 19:15:24.702" endtime="20231010 19:15:35.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:15:35.995" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
864166611385      Tue Oct 10 19:09:44 UTC 2023   Fri Nov 17 19:09:44 UTC 2028   CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec CN=scm-1@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec          </msg>
<status status="PASS" starttime="20231010 19:15:35.994" endtime="20231010 19:15:35.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:15:35.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:15:35.996" endtime="20231010 19:15:35.996"/>
</kw>
<status status="PASS" starttime="20231010 19:15:24.701" endtime="20231010 19:15:35.997"/>
</kw>
<msg timestamp="20231010 19:15:35.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:15:24.700" endtime="20231010 19:15:35.997"/>
</kw>
<msg timestamp="20231010 19:15:35.997" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231010 19:15:24.700" endtime="20231010 19:15:35.998"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231010 19:15:35.999" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231010 19:15:35.999" level="INFO">${root_ca_cert} = 864166611385      Tue Oct 10 19:09:44 UTC 2023   Fri Nov 17 19:09:44 UTC 2028   CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec CN=s...</msg>
<status status="PASS" starttime="20231010 19:15:35.998" endtime="20231010 19:15:35.999"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231010 19:15:36.000" level="INFO">${root_ca_cert_split} = ['864166611385', 'Tue', 'Oct', '10', '19:09:44', 'UTC', '2023', 'Fri', 'Nov', '17', '19:09:44', 'UTC', '2028', 'CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-...</msg>
<status status="PASS" starttime="20231010 19:15:35.999" endtime="20231010 19:15:36.000"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231010 19:15:36.002" level="INFO">${root_ca_cert_subject} = 10</msg>
<status status="PASS" starttime="20231010 19:15:36.000" endtime="20231010 19:15:36.002"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:15:36.010" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:15:47.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:15:47.828" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231010 19:15:36.005" endtime="20231010 19:15:47.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:15:47.829" level="INFO">Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
864166611385      Tue Oct 10 19:09:44 UTC 2023   Fri Nov 17 19:09:44 UTC 2028   CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec CN=scm-1@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec          
895967910918      Tue Oct 10 19:10:16 UTC 2023   Wed Oct 09 19:10:16 UTC 2024   CN=recon@recon,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec              CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec
898443281907      Tue Oct 10 19:10:19 UTC 2023   Fri Nov 17 19:10:19 UTC 2028   CN=scm-sub-897510391819@scm2.org,OU=05e5026f-7c63-4926-a268-bcccf1d268c2,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec CN=scm-1@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec          
926647555224      Tue Oct 10 19:10:47 UTC 2023   Fri Nov 17 19:10:47 UTC 2028   CN=scm-sub-926517302841@scm3.org,OU=99d1ab4e-fb7e-4433-ba00-4612b700d9bb,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec CN=scm-1@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec          
982180184834      Tue Oct 10 19:11:42 UTC 2023   Wed Oct 09 19:11:42 UTC 2024   CN=dn@9f45a3a2e63a,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec          CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec
983626571392      Tue Oct 10 19:11:44 UTC 2023   Wed Oct 09 19:11:44 UTC 2024   CN=dn@4a0c23e366ba,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec          CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec
985581929039      Tue Oct 10 19:11:46 UTC 2023   Wed Oct 09 19:11:46 UTC 2024   CN=dn@e698f7d3f986,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec          CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec
986882010214      Tue Oct 10 19:11:47 UTC 2023   Wed Oct 09 19:11:47 UTC 2024   CN=om3,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec                      CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec
992842371961      Tue Oct 10 19:11:53 UTC 2023   Wed Oct 09 19:11:53 UTC 2024   CN=om2,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec                      CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec
994238988069      Tue Oct 10 19:11:54 UTC 2023   Wed Oct 09 19:11:54 UTC 2024   CN=om1,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec                      CN=scm-sub-863714600146@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec
1                 Tue Oct 10 19:09:44 UTC 2023   Fri Nov 17 19:09:44 UTC 2028   CN=scm-1@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec           CN=scm-1@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec          
1122550174366     Tue Oct 10 19:14:03 UTC 2023   Fri Nov 17 19:14:03 UTC 2028   CN=scm-sub-1122345666255@scm4.org,OU=1775b560-196b-47ba-a41c-a5120d2a63d8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec CN=scm-1@scm1.org,OU=025ef65e-f139-42e4-a099-f389631d21f8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec          </msg>
<status status="PASS" starttime="20231010 19:15:47.828" endtime="20231010 19:15:47.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:15:47.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:15:47.830" endtime="20231010 19:15:47.831"/>
</kw>
<status status="PASS" starttime="20231010 19:15:36.004" endtime="20231010 19:15:47.831"/>
</kw>
<msg timestamp="20231010 19:15:47.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:15:36.003" endtime="20231010 19:15:47.831"/>
</kw>
<msg timestamp="20231010 19:15:47.832" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231010 19:15:36.003" endtime="20231010 19:15:47.832"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231010 19:15:47.832" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231010 19:15:47.833" level="INFO">${scm4_cert} = 1122550174366     Tue Oct 10 19:14:03 UTC 2023   Fri Nov 17 19:14:03 UTC 2028   CN=scm-sub-1122345666255@scm4.org,OU=1775b560-196b-47ba-a41c-a5120d2a63d8,O=CID-a46c1ba4-734c-49bb-8550-93bba06522ec CN=...</msg>
<status status="PASS" starttime="20231010 19:15:47.832" endtime="20231010 19:15:47.833"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231010 19:15:47.833" level="INFO">${scm4_cert_split} = ['1122550174366', 'Tue', 'Oct', '10', '19:14:03', 'UTC', '2023', 'Fri', 'Nov', '17', '19:14:03', 'UTC', '2028', 'CN=scm-sub-1122345666255@scm4.org,OU=1775b560-196b-47ba-a41c-a5120d2a63d8,O=CID-a46c1ba...</msg>
<status status="PASS" starttime="20231010 19:15:47.833" endtime="20231010 19:15:47.833"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231010 19:15:47.835" level="INFO">${scm4_cert_issuer} = 19:14:03</msg>
<status status="PASS" starttime="20231010 19:15:47.833" endtime="20231010 19:15:47.835"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231010 19:15:47.835" endtime="20231010 19:15:47.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 19:15:24.698" endtime="20231010 19:15:47.837"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231010 19:14:51.336" endtime="20231010 19:15:47.839"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:17:22.079" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:17:22.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:17:22.089" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231010 19:17:22.075" endtime="20231010 19:17:22.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:17:22.091" level="INFO">scm</msg>
<status status="PASS" starttime="20231010 19:17:22.090" endtime="20231010 19:17:22.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:17:22.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:17:22.091" endtime="20231010 19:17:22.092"/>
</kw>
<status status="PASS" starttime="20231010 19:17:22.074" endtime="20231010 19:17:22.092"/>
</kw>
<msg timestamp="20231010 19:17:22.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:17:22.074" endtime="20231010 19:17:22.093"/>
</kw>
<msg timestamp="20231010 19:17:22.093" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231010 19:17:22.073" endtime="20231010 19:17:22.093"/>
</kw>
<msg timestamp="20231010 19:17:22.093" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231010 19:17:22.073" endtime="20231010 19:17:22.094"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231010 19:17:22.094" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231010 19:17:22.094" endtime="20231010 19:17:22.094"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 19:17:22.104" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 19:17:22.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 19:17:22.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 19:17:22.097" endtime="20231010 19:17:22.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 19:17:22.260" level="INFO"/>
<status status="PASS" starttime="20231010 19:17:22.259" endtime="20231010 19:17:22.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 19:17:22.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 19:17:22.260" endtime="20231010 19:17:22.261"/>
</kw>
<status status="PASS" starttime="20231010 19:17:22.096" endtime="20231010 19:17:22.261"/>
</kw>
<msg timestamp="20231010 19:17:22.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 19:17:22.096" endtime="20231010 19:17:22.262"/>
</kw>
<status status="PASS" starttime="20231010 19:17:22.095" endtime="20231010 19:17:22.262"/>
</kw>
<status status="PASS" starttime="20231010 19:17:22.094" endtime="20231010 19:17:22.262"/>
</kw>
<status status="PASS" starttime="20231010 19:17:22.072" endtime="20231010 19:17:22.262"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231010 19:17:22.071" endtime="20231010 19:17:22.262"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231010 19:17:21.998" endtime="20231010 19:17:22.264"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="57292"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
