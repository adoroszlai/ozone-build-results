<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231010 21:09:40.335" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231010 21:03:22.640" endtime="20231010 21:03:22.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:22.648" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:22.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:22.651" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=71c28ba42bf5
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.serv...</msg>
<status status="PASS" starttime="20231010 21:03:22.643" endtime="20231010 21:03:22.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:22.652" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=71c28ba42bf5
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231010 21:03:22.651" endtime="20231010 21:03:22.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:22.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:22.652" endtime="20231010 21:03:22.653"/>
</kw>
<status status="PASS" starttime="20231010 21:03:22.642" endtime="20231010 21:03:22.653"/>
</kw>
<msg timestamp="20231010 21:03:22.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:22.642" endtime="20231010 21:03:22.655"/>
</kw>
<msg timestamp="20231010 21:03:22.655" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=71c28ba42bf5
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.serv...</msg>
<status status="PASS" starttime="20231010 21:03:22.641" endtime="20231010 21:03:22.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:22.655" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=71c28ba42bf5
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231010 21:03:22.655" endtime="20231010 21:03:22.655"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231010 21:03:22.656" endtime="20231010 21:03:22.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:22.660" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:25.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:25.829" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231010 21:03:22.657" endtime="20231010 21:03:25.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:25.830" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231010 21:03:25.829" endtime="20231010 21:03:25.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:25.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:25.831" endtime="20231010 21:03:25.832"/>
</kw>
<status status="PASS" starttime="20231010 21:03:22.657" endtime="20231010 21:03:25.832"/>
</kw>
<msg timestamp="20231010 21:03:25.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:22.657" endtime="20231010 21:03:25.832"/>
</kw>
<msg timestamp="20231010 21:03:25.833" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231010 21:03:22.656" endtime="20231010 21:03:25.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:25.833" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231010 21:03:25.833" endtime="20231010 21:03:25.833"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231010 21:03:25.833" endtime="20231010 21:03:25.834"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231010 21:03:22.634" endtime="20231010 21:03:25.834"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231010 21:03:25.835" endtime="20231010 21:03:25.836"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231010 21:03:25.836" endtime="20231010 21:03:25.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:25.840" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:28.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:28.720" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231010 21:03:25.838" endtime="20231010 21:03:28.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:28.722" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231010 21:03:28.721" endtime="20231010 21:03:28.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:28.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:28.722" endtime="20231010 21:03:28.723"/>
</kw>
<status status="PASS" starttime="20231010 21:03:25.837" endtime="20231010 21:03:28.723"/>
</kw>
<msg timestamp="20231010 21:03:28.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:25.837" endtime="20231010 21:03:28.723"/>
</kw>
<msg timestamp="20231010 21:03:28.724" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231010 21:03:25.836" endtime="20231010 21:03:28.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:28.724" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231010 21:03:28.724" endtime="20231010 21:03:28.724"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231010 21:03:28.724" endtime="20231010 21:03:28.725"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231010 21:03:25.835" endtime="20231010 21:03:28.725"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231010 21:03:22.578" endtime="20231010 21:03:28.726"/>
</suite>
<suite id="s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:32.019" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:35.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:35.049" level="INFO">${output} = 2023-10-10 21:03:34,787 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231010 21:03:32.014" endtime="20231010 21:03:35.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:35.050" level="INFO">2023-10-10 21:03:34,787 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231010 21:03:35.049" endtime="20231010 21:03:35.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:35.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:35.050" endtime="20231010 21:03:35.051"/>
</kw>
<status status="PASS" starttime="20231010 21:03:32.013" endtime="20231010 21:03:35.051"/>
</kw>
<msg timestamp="20231010 21:03:35.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:32.013" endtime="20231010 21:03:35.053"/>
</kw>
<msg timestamp="20231010 21:03:35.053" level="INFO">${output} = 2023-10-10 21:03:34,787 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231010 21:03:32.013" endtime="20231010 21:03:35.053"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:03:35.054" endtime="20231010 21:03:35.054"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:35.063" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:38.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:38.506" level="INFO">${output} = 2023-10-10 21:03:38,400 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20231010 21:03:35.060" endtime="20231010 21:03:38.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:38.508" level="INFO">2023-10-10 21:03:38,400 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231010 21:03:38.507" endtime="20231010 21:03:38.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:38.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:38.508" endtime="20231010 21:03:38.518"/>
</kw>
<status status="PASS" starttime="20231010 21:03:35.059" endtime="20231010 21:03:38.521"/>
</kw>
<msg timestamp="20231010 21:03:38.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:35.055" endtime="20231010 21:03:38.521"/>
</kw>
<msg timestamp="20231010 21:03:38.522" level="INFO">${output} = 2023-10-10 21:03:38,400 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20231010 21:03:35.055" endtime="20231010 21:03:38.522"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:03:38.522" endtime="20231010 21:03:38.525"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:03:32.012" endtime="20231010 21:03:38.525"/>
</test>
<test id="s1-s2-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:38.534" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231010 21:03:38.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:38.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:38.531" endtime="20231010 21:03:38.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:38.537" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:38.537" endtime="20231010 21:03:38.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:38.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:38.538" endtime="20231010 21:03:38.538"/>
</kw>
<status status="PASS" starttime="20231010 21:03:38.529" endtime="20231010 21:03:38.539"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:38.544" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:45.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:45.312" level="INFO">${output} = 2023-10-10 21:03:42,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 21:03:42,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 21:03:38.541" endtime="20231010 21:03:45.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:45.313" level="INFO">2023-10-10 21:03:42,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 21:03:42,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-10-10 21:03:42,836 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-10-10 21:03:43,245 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231010 21:03:45.312" endtime="20231010 21:03:45.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:45.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:45.313" endtime="20231010 21:03:45.314"/>
</kw>
<status status="PASS" starttime="20231010 21:03:38.540" endtime="20231010 21:03:45.314"/>
</kw>
<msg timestamp="20231010 21:03:45.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:38.539" endtime="20231010 21:03:45.315"/>
</kw>
<msg timestamp="20231010 21:03:45.315" level="INFO">${output} = 2023-10-10 21:03:42,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 21:03:42,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 21:03:38.539" endtime="20231010 21:03:45.315"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:03:45.316" endtime="20231010 21:03:45.316"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:45.320" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:45.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:45.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:45.317" endtime="20231010 21:03:45.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:45.325" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:45.324" endtime="20231010 21:03:45.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:45.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:45.325" endtime="20231010 21:03:45.326"/>
</kw>
<status status="PASS" starttime="20231010 21:03:45.316" endtime="20231010 21:03:45.326"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:03:38.528" endtime="20231010 21:03:45.327"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:45.333" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:48.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:48.233" level="INFO">${output} = 2023-10-10 21:03:48,180 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20231010 21:03:45.331" endtime="20231010 21:03:48.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:48.234" level="INFO">2023-10-10 21:03:48,180 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231010 21:03:48.233" endtime="20231010 21:03:48.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:48.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:48.234" endtime="20231010 21:03:48.235"/>
</kw>
<status status="PASS" starttime="20231010 21:03:45.330" endtime="20231010 21:03:48.235"/>
</kw>
<msg timestamp="20231010 21:03:48.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:45.330" endtime="20231010 21:03:48.236"/>
</kw>
<msg timestamp="20231010 21:03:48.236" level="INFO">${output} = 2023-10-10 21:03:48,180 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20231010 21:03:45.329" endtime="20231010 21:03:48.236"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:03:48.236" endtime="20231010 21:03:48.237"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:03:45.328" endtime="20231010 21:03:48.237"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:48.242" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231010 21:03:48.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:48.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:48.239" endtime="20231010 21:03:48.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:48.245" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:48.244" endtime="20231010 21:03:48.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:48.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:48.245" endtime="20231010 21:03:48.246"/>
</kw>
<status status="PASS" starttime="20231010 21:03:48.239" endtime="20231010 21:03:48.246"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:48.250" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:53.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:53.638" level="INFO">${output} = 2023-10-10 21:03:51,975 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 21:03:52,113 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 21:03:48.248" endtime="20231010 21:03:53.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:53.639" level="INFO">2023-10-10 21:03:51,975 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 21:03:52,113 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-10-10 21:03:52,113 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-10-10 21:03:52,382 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231010 21:03:53.639" endtime="20231010 21:03:53.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:53.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:53.640" endtime="20231010 21:03:53.640"/>
</kw>
<status status="PASS" starttime="20231010 21:03:48.247" endtime="20231010 21:03:53.640"/>
</kw>
<msg timestamp="20231010 21:03:53.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:48.247" endtime="20231010 21:03:53.641"/>
</kw>
<msg timestamp="20231010 21:03:53.641" level="INFO">${output} = 2023-10-10 21:03:51,975 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 21:03:52,113 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 21:03:48.246" endtime="20231010 21:03:53.641"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:03:53.641" endtime="20231010 21:03:53.642"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:53.645" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:53.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:53.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:53.642" endtime="20231010 21:03:53.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:53.649" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:53.648" endtime="20231010 21:03:53.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:53.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:53.649" endtime="20231010 21:03:53.649"/>
</kw>
<status status="PASS" starttime="20231010 21:03:53.642" endtime="20231010 21:03:53.650"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:03:48.238" endtime="20231010 21:03:53.650"/>
</test>
<test id="s1-s2-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:53.656" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:54.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:54.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:53.654" endtime="20231010 21:03:54.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:54.463" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:54.462" endtime="20231010 21:03:54.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:54.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:54.463" endtime="20231010 21:03:54.464"/>
</kw>
<status status="PASS" starttime="20231010 21:03:53.653" endtime="20231010 21:03:54.464"/>
</kw>
<msg timestamp="20231010 21:03:54.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:53.653" endtime="20231010 21:03:54.465"/>
</kw>
<status status="PASS" starttime="20231010 21:03:53.652" endtime="20231010 21:03:54.465"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:54.470" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:55.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:55.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:54.467" endtime="20231010 21:03:55.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:55.005" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:55.004" endtime="20231010 21:03:55.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:55.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:55.006" endtime="20231010 21:03:55.006"/>
</kw>
<status status="PASS" starttime="20231010 21:03:54.466" endtime="20231010 21:03:55.007"/>
</kw>
<msg timestamp="20231010 21:03:55.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:54.466" endtime="20231010 21:03:55.007"/>
</kw>
<status status="PASS" starttime="20231010 21:03:54.465" endtime="20231010 21:03:55.008"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:55.012" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:55.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:55.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:55.009" endtime="20231010 21:03:55.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:55.548" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:55.548" endtime="20231010 21:03:55.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:55.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:55.549" endtime="20231010 21:03:55.549"/>
</kw>
<status status="PASS" starttime="20231010 21:03:55.008" endtime="20231010 21:03:55.549"/>
</kw>
<msg timestamp="20231010 21:03:55.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:55.008" endtime="20231010 21:03:55.550"/>
</kw>
<status status="PASS" starttime="20231010 21:03:55.008" endtime="20231010 21:03:55.550"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:55.554" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:56.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:56.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:55.552" endtime="20231010 21:03:56.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:56.099" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:56.098" endtime="20231010 21:03:56.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:56.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:56.099" endtime="20231010 21:03:56.100"/>
</kw>
<status status="PASS" starttime="20231010 21:03:55.551" endtime="20231010 21:03:56.100"/>
</kw>
<msg timestamp="20231010 21:03:56.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:55.551" endtime="20231010 21:03:56.101"/>
</kw>
<status status="PASS" starttime="20231010 21:03:55.550" endtime="20231010 21:03:56.101"/>
</kw>
<status status="PASS" starttime="20231010 21:03:53.652" endtime="20231010 21:03:56.101"/>
</kw>
<status status="PASS" starttime="20231010 21:03:53.652" endtime="20231010 21:03:56.101"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:03:53.651" endtime="20231010 21:03:56.101"/>
</test>
<test id="s1-s2-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231010 21:03:56.105" level="INFO">${randStr} = 3422000023</msg>
<status status="PASS" starttime="20231010 21:03:56.104" endtime="20231010 21:03:56.105"/>
</kw>
<msg timestamp="20231010 21:03:56.105" level="INFO">${random} = ozone-test-3422000023</msg>
<status status="PASS" starttime="20231010 21:03:56.104" endtime="20231010 21:03:56.105"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:56.110" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-3422000023 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:58.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:58.094" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3422000023"
}</msg>
<status status="PASS" starttime="20231010 21:03:56.107" endtime="20231010 21:03:58.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:58.096" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3422000023"
}</msg>
<status status="PASS" starttime="20231010 21:03:58.095" endtime="20231010 21:03:58.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:58.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:58.096" endtime="20231010 21:03:58.097"/>
</kw>
<status status="PASS" starttime="20231010 21:03:56.107" endtime="20231010 21:03:58.098"/>
</kw>
<msg timestamp="20231010 21:03:58.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:03:56.107" endtime="20231010 21:03:58.098"/>
</kw>
<msg timestamp="20231010 21:03:58.099" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3422000023"
}</msg>
<status status="PASS" starttime="20231010 21:03:56.106" endtime="20231010 21:03:58.099"/>
</kw>
<msg timestamp="20231010 21:03:58.099" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3422000023"
}</msg>
<status status="PASS" starttime="20231010 21:03:56.106" endtime="20231010 21:03:58.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:03:58.099" endtime="20231010 21:03:58.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:03:58.100" endtime="20231010 21:03:58.100"/>
</kw>
<msg timestamp="20231010 21:03:58.100" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231010 21:03:56.105" endtime="20231010 21:03:58.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231010 21:03:58.100" endtime="20231010 21:03:58.101"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:03:56.103" endtime="20231010 21:03:58.101"/>
</test>
<test id="s1-s2-t7" name="Create key using S3 API" line="62">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:58.108" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231010 21:03:58.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:58.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:58.105" endtime="20231010 21:03:58.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:58.111" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:58.111" endtime="20231010 21:03:58.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:58.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:58.112" endtime="20231010 21:03:58.112"/>
</kw>
<status status="PASS" starttime="20231010 21:03:58.104" endtime="20231010 21:03:58.113"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:58.118" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:59.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:59.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:58.115" endtime="20231010 21:03:59.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:59.848" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:59.847" endtime="20231010 21:03:59.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:59.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:59.849" endtime="20231010 21:03:59.849"/>
</kw>
<msg timestamp="20231010 21:03:59.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:58.114" endtime="20231010 21:03:59.849"/>
</kw>
<msg timestamp="20231010 21:03:59.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:58.113" endtime="20231010 21:03:59.850"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:03:59.850" endtime="20231010 21:03:59.850"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:03:59.853" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:03:59.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:03:59.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:03:59.851" endtime="20231010 21:03:59.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:03:59.857" level="INFO"/>
<status status="PASS" starttime="20231010 21:03:59.856" endtime="20231010 21:03:59.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:03:59.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:03:59.857" endtime="20231010 21:03:59.858"/>
</kw>
<status status="PASS" starttime="20231010 21:03:59.850" endtime="20231010 21:03:59.858"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:03:58.103" endtime="20231010 21:03:59.858"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231010 21:03:31.930" endtime="20231010 21:03:59.860"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s3-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231010 21:04:03.196" level="INFO">${random} = 54771</msg>
<status status="PASS" starttime="20231010 21:04:03.196" endtime="20231010 21:04:03.196"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:03.203" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-54771 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:08.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:08.028" level="INFO">${output} = 2023-10-10 21:04:06,570 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 21:04:06,659 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 21:04:03.199" endtime="20231010 21:04:08.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:08.030" level="INFO">2023-10-10 21:04:06,570 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 21:04:06,659 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-10-10 21:04:06,659 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231010 21:04:08.029" endtime="20231010 21:04:08.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:08.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:08.030" endtime="20231010 21:04:08.030"/>
</kw>
<status status="PASS" starttime="20231010 21:04:03.198" endtime="20231010 21:04:08.031"/>
</kw>
<msg timestamp="20231010 21:04:08.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:04:03.197" endtime="20231010 21:04:08.032"/>
</kw>
<msg timestamp="20231010 21:04:08.032" level="INFO">${output} = 2023-10-10 21:04:06,570 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-10 21:04:06,659 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231010 21:04:03.197" endtime="20231010 21:04:08.032"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:04:08.032" endtime="20231010 21:04:08.033"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:08.036" level="INFO">Running command 'cat /tmp/key-54771 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:08.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:08.039" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 21:04:08.034" endtime="20231010 21:04:08.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:08.040" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 21:04:08.039" endtime="20231010 21:04:08.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:08.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:08.040" endtime="20231010 21:04:08.041"/>
</kw>
<msg timestamp="20231010 21:04:08.041" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 21:04:08.033" endtime="20231010 21:04:08.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:04:08.041" endtime="20231010 21:04:08.042"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:08.045" level="INFO">Running command 'rm /tmp/key-54771 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:08.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:08.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:04:08.043" endtime="20231010 21:04:08.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:08.049" level="INFO"/>
<status status="PASS" starttime="20231010 21:04:08.049" endtime="20231010 21:04:08.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:08.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:08.050" endtime="20231010 21:04:08.050"/>
</kw>
<status status="PASS" starttime="20231010 21:04:08.042" endtime="20231010 21:04:08.050"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:04:03.195" endtime="20231010 21:04:08.051"/>
</test>
<test id="s1-s3-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:08.057" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:08.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:08.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:04:08.055" endtime="20231010 21:04:08.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:08.587" level="INFO"/>
<status status="PASS" starttime="20231010 21:04:08.587" endtime="20231010 21:04:08.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:08.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:08.588" endtime="20231010 21:04:08.588"/>
</kw>
<status status="PASS" starttime="20231010 21:04:08.054" endtime="20231010 21:04:08.588"/>
</kw>
<msg timestamp="20231010 21:04:08.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:04:08.054" endtime="20231010 21:04:08.589"/>
</kw>
<status status="PASS" starttime="20231010 21:04:08.053" endtime="20231010 21:04:08.589"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:08.593" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:09.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:09.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:04:08.591" endtime="20231010 21:04:09.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:09.132" level="INFO"/>
<status status="PASS" starttime="20231010 21:04:09.132" endtime="20231010 21:04:09.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:09.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:09.133" endtime="20231010 21:04:09.133"/>
</kw>
<status status="PASS" starttime="20231010 21:04:08.590" endtime="20231010 21:04:09.133"/>
</kw>
<msg timestamp="20231010 21:04:09.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:04:08.590" endtime="20231010 21:04:09.134"/>
</kw>
<status status="PASS" starttime="20231010 21:04:08.589" endtime="20231010 21:04:09.134"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:09.138" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:09.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:09.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:04:09.136" endtime="20231010 21:04:09.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:09.709" level="INFO"/>
<status status="PASS" starttime="20231010 21:04:09.708" endtime="20231010 21:04:09.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:09.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:09.709" endtime="20231010 21:04:09.710"/>
</kw>
<status status="PASS" starttime="20231010 21:04:09.135" endtime="20231010 21:04:09.710"/>
</kw>
<msg timestamp="20231010 21:04:09.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:04:09.135" endtime="20231010 21:04:09.711"/>
</kw>
<status status="PASS" starttime="20231010 21:04:09.134" endtime="20231010 21:04:09.711"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:09.717" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:10.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:10.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:04:09.714" endtime="20231010 21:04:10.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:10.260" level="INFO"/>
<status status="PASS" starttime="20231010 21:04:10.259" endtime="20231010 21:04:10.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:10.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:10.260" endtime="20231010 21:04:10.260"/>
</kw>
<status status="PASS" starttime="20231010 21:04:09.713" endtime="20231010 21:04:10.261"/>
</kw>
<msg timestamp="20231010 21:04:10.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231010 21:04:09.713" endtime="20231010 21:04:10.261"/>
</kw>
<status status="PASS" starttime="20231010 21:04:09.711" endtime="20231010 21:04:10.261"/>
</kw>
<status status="PASS" starttime="20231010 21:04:08.053" endtime="20231010 21:04:10.262"/>
</kw>
<status status="PASS" starttime="20231010 21:04:08.052" endtime="20231010 21:04:10.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:04:08.052" endtime="20231010 21:04:10.262"/>
</test>
<test id="s1-s3-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:10.268" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:11.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:11.120" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 21:03:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 21:04:10.265" endtime="20231010 21:04:11.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:11.121" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 21:03:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 10 Oct 2023 21:04:10 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231010 21:04:11.121" endtime="20231010 21:04:11.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:11.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:11.122" endtime="20231010 21:04:11.122"/>
</kw>
<msg timestamp="20231010 21:04:11.122" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 21:03:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 21:04:10.264" endtime="20231010 21:04:11.123"/>
</kw>
<msg timestamp="20231010 21:04:11.123" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 21:03:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 21:04:10.264" endtime="20231010 21:04:11.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:04:11.123" endtime="20231010 21:04:11.123"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:11.127" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:11.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:11.130" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 21:04:11.124" endtime="20231010 21:04:11.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:11.131" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 21:04:11.130" endtime="20231010 21:04:11.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:11.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:11.131" endtime="20231010 21:04:11.132"/>
</kw>
<msg timestamp="20231010 21:04:11.132" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231010 21:04:11.124" endtime="20231010 21:04:11.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:04:11.132" endtime="20231010 21:04:11.133"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:11.136" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:11.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:11.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:04:11.133" endtime="20231010 21:04:11.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:11.139" level="INFO"/>
<status status="PASS" starttime="20231010 21:04:11.139" endtime="20231010 21:04:11.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:11.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:11.139" endtime="20231010 21:04:11.140"/>
</kw>
<status status="PASS" starttime="20231010 21:04:11.133" endtime="20231010 21:04:11.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:04:10.263" endtime="20231010 21:04:11.140"/>
</test>
<test id="s1-s3-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:11.145" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:11.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:11.815" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 21:03:59 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 21:04:11.143" endtime="20231010 21:04:11.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:11.817" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 21:03:59 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 10 Oct 2023 21:04:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231010 21:04:11.816" endtime="20231010 21:04:11.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:11.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:11.817" endtime="20231010 21:04:11.817"/>
</kw>
<msg timestamp="20231010 21:04:11.818" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 21:03:59 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 21:04:11.142" endtime="20231010 21:04:11.818"/>
</kw>
<msg timestamp="20231010 21:04:11.818" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 10 Oct 2023 21:03:59 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231010 21:04:11.142" endtime="20231010 21:04:11.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:04:11.819" endtime="20231010 21:04:11.819"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:11.822" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:11.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:11.825" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231010 21:04:11.820" endtime="20231010 21:04:11.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:11.826" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231010 21:04:11.826" endtime="20231010 21:04:11.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:11.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:11.827" endtime="20231010 21:04:11.827"/>
</kw>
<msg timestamp="20231010 21:04:11.827" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231010 21:04:11.819" endtime="20231010 21:04:11.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231010 21:04:11.828" endtime="20231010 21:04:11.828"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:11.835" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:04:11.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20231010 21:04:11.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231010 21:04:11.829" endtime="20231010 21:04:11.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:04:11.840" level="INFO"/>
<status status="PASS" starttime="20231010 21:04:11.839" endtime="20231010 21:04:11.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231010 21:04:11.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231010 21:04:11.840" endtime="20231010 21:04:11.840"/>
</kw>
<status status="PASS" starttime="20231010 21:04:11.828" endtime="20231010 21:04:11.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231010 21:04:11.141" endtime="20231010 21:04:11.841"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231010 21:04:03.111" endtime="20231010 21:04:11.846"/>
</suite>
<suite id="s1-s4" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231010 21:04:15.122" endtime="20231010 21:04:15.123"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231010 21:04:15.123" endtime="20231010 21:04:15.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231010 21:04:15.130" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231010 21:09:15.122" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231010 21:04:15.125" endtime="20231010 21:09:15.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231010 21:09:15.123" endtime="20231010 21:09:15.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231010 21:09:15.123" endtime="20231010 21:09:15.123"/>
</kw>
<status status="FAIL" starttime="20231010 21:04:15.124" endtime="20231010 21:09:15.123"/>
</kw>
<msg timestamp="20231010 21:09:15.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231010 21:04:15.124" endtime="20231010 21:09:15.125"/>
</kw>
<status status="FAIL" starttime="20231010 21:04:15.124" endtime="20231010 21:09:15.125"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20231010 21:09:15.125" endtime="20231010 21:09:15.125"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231010 21:04:15.121" endtime="20231010 21:09:15.126">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20231010 21:04:15.072" endtime="20231010 21:09:15.127"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="342868"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Prepare">upgrade.Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
