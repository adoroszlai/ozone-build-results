<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231026 17:32:06.420" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:24:10.676" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:24:10.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:24:10.694" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231026 17:24:10.672" endtime="20231026 17:24:10.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:10.696" level="INFO">scm</msg>
<status status="PASS" starttime="20231026 17:24:10.695" endtime="20231026 17:24:10.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:24:10.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:24:10.696" endtime="20231026 17:24:10.697"/>
</kw>
<status status="PASS" starttime="20231026 17:24:10.671" endtime="20231026 17:24:10.697"/>
</kw>
<msg timestamp="20231026 17:24:10.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:24:10.670" endtime="20231026 17:24:10.697"/>
</kw>
<msg timestamp="20231026 17:24:10.698" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231026 17:24:10.670" endtime="20231026 17:24:10.698"/>
</kw>
<msg timestamp="20231026 17:24:10.698" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 17:24:10.669" endtime="20231026 17:24:10.698"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231026 17:24:10.699" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 17:24:10.698" endtime="20231026 17:24:10.699"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:24:10.716" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:24:10.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:24:10.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 17:24:10.702" endtime="20231026 17:24:10.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:10.886" level="INFO"/>
<status status="PASS" starttime="20231026 17:24:10.885" endtime="20231026 17:24:10.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:24:10.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:24:10.887" endtime="20231026 17:24:10.887"/>
</kw>
<status status="PASS" starttime="20231026 17:24:10.702" endtime="20231026 17:24:10.888"/>
</kw>
<msg timestamp="20231026 17:24:10.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:24:10.701" endtime="20231026 17:24:10.888"/>
</kw>
<status status="PASS" starttime="20231026 17:24:10.700" endtime="20231026 17:24:10.888"/>
</kw>
<status status="PASS" starttime="20231026 17:24:10.699" endtime="20231026 17:24:10.888"/>
</kw>
<status status="PASS" starttime="20231026 17:24:10.668" endtime="20231026 17:24:10.888"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231026 17:24:10.667" endtime="20231026 17:24:10.888"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231026 17:24:10.487" endtime="20231026 17:24:10.890"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:24:24.457" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:24:30.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:24:30.835" level="INFO">${output} = scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm4.org:9894:FOLLOWER:de65a721-fea5-4305-be17-424bad1b848a:172.25.0.120
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717da...</msg>
<status status="PASS" starttime="20231026 17:24:24.453" endtime="20231026 17:24:30.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:30.838" level="INFO">scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm4.org:9894:FOLLOWER:de65a721-fea5-4305-be17-424bad1b848a:172.25.0.120
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe25d:172.25.0.118</msg>
<status status="PASS" starttime="20231026 17:24:30.836" endtime="20231026 17:24:30.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:24:30.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:24:30.838" endtime="20231026 17:24:30.839"/>
</kw>
<status status="PASS" starttime="20231026 17:24:24.451" endtime="20231026 17:24:30.839"/>
</kw>
<msg timestamp="20231026 17:24:30.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:24:24.450" endtime="20231026 17:24:30.840"/>
</kw>
<msg timestamp="20231026 17:24:30.840" level="INFO">${result} = scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm4.org:9894:FOLLOWER:de65a721-fea5-4305-be17-424bad1b848a:172.25.0.120
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717da...</msg>
<status status="PASS" starttime="20231026 17:24:24.450" endtime="20231026 17:24:30.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:30.841" level="INFO">scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm4.org:9894:FOLLOWER:de65a721-fea5-4305-be17-424bad1b848a:172.25.0.120
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe25d:172.25.0.118</msg>
<status status="PASS" starttime="20231026 17:24:30.840" endtime="20231026 17:24:30.841"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231026 17:24:30.842" level="INFO">4 lines</msg>
<msg timestamp="20231026 17:24:30.842" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231026 17:24:30.841" endtime="20231026 17:24:30.842"/>
</kw>
<msg timestamp="20231026 17:24:30.842" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231026 17:24:24.450" endtime="20231026 17:24:30.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:30.843" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20231026 17:24:30.842" endtime="20231026 17:24:30.843"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231026 17:24:30.844" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231026 17:24:30.843" endtime="20231026 17:24:30.844"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231026 17:24:30.844" endtime="20231026 17:24:30.844"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231026 17:24:24.449" endtime="20231026 17:24:30.845"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:24:30.852" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:24:36.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:24:36.728" level="INFO">${output} = scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm4.org:9894:FOLLOWER:de65a721-fea5-4305-be17-424bad1b848a:172.25.0.120
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717da...</msg>
<status status="PASS" starttime="20231026 17:24:30.848" endtime="20231026 17:24:36.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:36.730" level="INFO">scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm4.org:9894:FOLLOWER:de65a721-fea5-4305-be17-424bad1b848a:172.25.0.120
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe25d:172.25.0.118</msg>
<status status="PASS" starttime="20231026 17:24:36.729" endtime="20231026 17:24:36.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:24:36.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:24:36.730" endtime="20231026 17:24:36.731"/>
</kw>
<status status="PASS" starttime="20231026 17:24:30.848" endtime="20231026 17:24:36.731"/>
</kw>
<msg timestamp="20231026 17:24:36.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:24:30.847" endtime="20231026 17:24:36.731"/>
</kw>
<msg timestamp="20231026 17:24:36.731" level="INFO">${result} = scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm4.org:9894:FOLLOWER:de65a721-fea5-4305-be17-424bad1b848a:172.25.0.120
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717da...</msg>
<status status="PASS" starttime="20231026 17:24:30.847" endtime="20231026 17:24:36.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:36.732" level="INFO">scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm4.org:9894:FOLLOWER:de65a721-fea5-4305-be17-424bad1b848a:172.25.0.120
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe25d:172.25.0.118</msg>
<status status="PASS" starttime="20231026 17:24:36.731" endtime="20231026 17:24:36.732"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231026 17:24:36.732" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231026 17:24:36.733" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:de65a721-fea5-4305-be17-424bad1b848a:172.25.0.120</msg>
<status status="PASS" starttime="20231026 17:24:36.732" endtime="20231026 17:24:36.733"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 17:24:36.733" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', 'de65a721-fea5-4305-be17-424bad1b848a', '172.25.0.120']</msg>
<status status="PASS" starttime="20231026 17:24:36.733" endtime="20231026 17:24:36.733"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 17:24:36.735" level="INFO">${scm4_uuid} = de65a721-fea5-4305-be17-424bad1b848a</msg>
<status status="PASS" starttime="20231026 17:24:36.733" endtime="20231026 17:24:36.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:24:36.740" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n de65a721-fea5-4305-be17-424bad1b848a 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:24:43.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:24:43.794" level="INFO">${output} = Transfer leadership successfully to de65a721-fea5-4305-be17-424bad1b848a.</msg>
<status status="PASS" starttime="20231026 17:24:36.737" endtime="20231026 17:24:43.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:43.796" level="INFO">Transfer leadership successfully to de65a721-fea5-4305-be17-424bad1b848a.</msg>
<status status="PASS" starttime="20231026 17:24:43.795" endtime="20231026 17:24:43.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:24:43.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:24:43.796" endtime="20231026 17:24:43.797"/>
</kw>
<status status="PASS" starttime="20231026 17:24:36.737" endtime="20231026 17:24:43.797"/>
</kw>
<msg timestamp="20231026 17:24:43.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:24:36.736" endtime="20231026 17:24:43.798"/>
</kw>
<msg timestamp="20231026 17:24:43.798" level="INFO">${result} = Transfer leadership successfully to de65a721-fea5-4305-be17-424bad1b848a.</msg>
<status status="PASS" starttime="20231026 17:24:36.736" endtime="20231026 17:24:43.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:43.798" level="INFO">Transfer leadership successfully to de65a721-fea5-4305-be17-424bad1b848a.</msg>
<status status="PASS" starttime="20231026 17:24:43.798" endtime="20231026 17:24:43.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 17:24:43.799" endtime="20231026 17:24:43.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231026 17:24:30.846" endtime="20231026 17:24:43.800"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:24:43.813" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:24:54.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:24:54.037" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231026 17:24:43.804" endtime="20231026 17:24:54.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:24:54.039" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Thu Oct 26 17:20:15 UTC 2023   Sun Dec 03 17:20:15 UTC 2028   CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=1 CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231026 17:24:54.038" endtime="20231026 17:24:54.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:24:54.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:24:54.040" endtime="20231026 17:24:54.040"/>
</kw>
<status status="PASS" starttime="20231026 17:24:43.803" endtime="20231026 17:24:54.041"/>
</kw>
<msg timestamp="20231026 17:24:54.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:24:43.803" endtime="20231026 17:24:54.041"/>
</kw>
<msg timestamp="20231026 17:24:54.041" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231026 17:24:43.802" endtime="20231026 17:24:54.042"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231026 17:24:54.042" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231026 17:24:54.043" level="INFO">${root_ca_cert} = 1                 Thu Oct 26 17:20:15 UTC 2023   Sun Dec 03 17:20:15 UTC 2028   CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=1 CN=scm...</msg>
<status status="PASS" starttime="20231026 17:24:54.042" endtime="20231026 17:24:54.043"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 17:24:54.043" level="INFO">${root_ca_cert_split} = ['1', 'Thu', 'Oct', '26', '17:20:15', 'UTC', '2023', 'Sun', 'Dec', '03', '17:20:15', 'UTC', '2028', 'CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,...</msg>
<status status="PASS" starttime="20231026 17:24:54.043" endtime="20231026 17:24:54.044"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 17:24:54.046" level="INFO">${root_ca_cert_subject} = 26</msg>
<status status="PASS" starttime="20231026 17:24:54.044" endtime="20231026 17:24:54.046"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:24:54.052" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:25:02.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:25:02.757" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231026 17:24:54.048" endtime="20231026 17:25:02.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:25:02.758" level="INFO">Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Thu Oct 26 17:20:15 UTC 2023   Sun Dec 03 17:20:15 UTC 2028   CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=1 CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=1
2                 Thu Oct 26 17:20:15 UTC 2023   Sun Dec 03 17:20:15 UTC 2028   CN=scm-sub@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=2 CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=1
3                 Thu Oct 26 17:20:45 UTC 2023   Fri Oct 25 17:20:45 UTC 2024   CN=recon@recon,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=3 CN=scm-sub@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=2
4                 Thu Oct 26 17:20:46 UTC 2023   Sun Dec 03 17:20:46 UTC 2028   CN=scm-sub@scm2.org,OU=335b25be-693d-454c-a8b6-1706717daa88,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=4 CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=1
5                 Thu Oct 26 17:21:08 UTC 2023   Sun Dec 03 17:21:08 UTC 2028   CN=scm-sub@scm3.org,OU=0e41dde5-9c39-4dce-b91e-03862cefe25d,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=5 CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=1
6                 Thu Oct 26 17:21:54 UTC 2023   Fri Oct 25 17:21:54 UTC 2024   CN=dn@f1410f3d1c21,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=6 CN=scm-sub@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=2
7                 Thu Oct 26 17:21:55 UTC 2023   Fri Oct 25 17:21:55 UTC 2024   CN=dn@5b33b6122c7c,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=7 CN=scm-sub@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=2
8                 Thu Oct 26 17:21:56 UTC 2023   Fri Oct 25 17:21:56 UTC 2024   CN=dn@9e35755d5760,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=8 CN=scm-sub@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=2
9                 Thu Oct 26 17:22:01 UTC 2023   Fri Oct 25 17:22:01 UTC 2024   CN=om2,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=9       CN=scm-sub@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=2
10                Thu Oct 26 17:22:02 UTC 2023   Fri Oct 25 17:22:02 UTC 2024   CN=om1,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=10      CN=scm-sub@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=2
11                Thu Oct 26 17:22:07 UTC 2023   Fri Oct 25 17:22:07 UTC 2024   CN=om3,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=11      CN=scm-sub@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=2
12                Thu Oct 26 17:23:50 UTC 2023   Sun Dec 03 17:23:50 UTC 2028   CN=scm-sub@scm4.org,OU=de65a721-fea5-4305-be17-424bad1b848a,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=12 CN=scm@scm1.org,OU=2ca7fe16-ff89-49d6-8ce4-897540cda599,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231026 17:25:02.757" endtime="20231026 17:25:02.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:25:02.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:25:02.759" endtime="20231026 17:25:02.760"/>
</kw>
<status status="PASS" starttime="20231026 17:24:54.047" endtime="20231026 17:25:02.760"/>
</kw>
<msg timestamp="20231026 17:25:02.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:24:54.047" endtime="20231026 17:25:02.760"/>
</kw>
<msg timestamp="20231026 17:25:02.761" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231026 17:24:54.046" endtime="20231026 17:25:02.761"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231026 17:25:02.762" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231026 17:25:02.762" level="INFO">${scm4_cert} = 12                Thu Oct 26 17:23:50 UTC 2023   Sun Dec 03 17:23:50 UTC 2028   CN=scm-sub@scm4.org,OU=de65a721-fea5-4305-be17-424bad1b848a,O=CID-e74e82d1-b38c-40b7-986f-6763fa077e43,SERIALNUMBER=12 C...</msg>
<status status="PASS" starttime="20231026 17:25:02.761" endtime="20231026 17:25:02.762"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 17:25:02.762" level="INFO">${scm4_cert_split} = ['12', 'Thu', 'Oct', '26', '17:23:50', 'UTC', '2023', 'Sun', 'Dec', '03', '17:23:50', 'UTC', '2028', 'CN=scm-sub@scm4.org,OU=de65a721-fea5-4305-be17-424bad1b848a,O=CID-e74e82d1-b38c-40b7-986f-6763fa07...</msg>
<status status="PASS" starttime="20231026 17:25:02.762" endtime="20231026 17:25:02.762"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 17:25:02.764" level="INFO">${scm4_cert_issuer} = 17:23:50</msg>
<status status="PASS" starttime="20231026 17:25:02.763" endtime="20231026 17:25:02.764"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231026 17:25:02.764" endtime="20231026 17:25:02.765"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231026 17:24:43.801" endtime="20231026 17:25:02.765"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231026 17:24:24.379" endtime="20231026 17:25:02.767"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:18.821" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:26:18.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:26:18.831" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231026 17:26:18.818" endtime="20231026 17:26:18.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:18.833" level="INFO">scm</msg>
<status status="PASS" starttime="20231026 17:26:18.832" endtime="20231026 17:26:18.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:26:18.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:26:18.834" endtime="20231026 17:26:18.834"/>
</kw>
<status status="PASS" starttime="20231026 17:26:18.817" endtime="20231026 17:26:18.835"/>
</kw>
<msg timestamp="20231026 17:26:18.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:18.817" endtime="20231026 17:26:18.835"/>
</kw>
<msg timestamp="20231026 17:26:18.835" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231026 17:26:18.816" endtime="20231026 17:26:18.835"/>
</kw>
<msg timestamp="20231026 17:26:18.836" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 17:26:18.816" endtime="20231026 17:26:18.836"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231026 17:26:18.836" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 17:26:18.836" endtime="20231026 17:26:18.836"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:18.842" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:26:19.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:26:19.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 17:26:18.839" endtime="20231026 17:26:19.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:19.033" level="INFO"/>
<status status="PASS" starttime="20231026 17:26:19.032" endtime="20231026 17:26:19.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:26:19.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:26:19.033" endtime="20231026 17:26:19.034"/>
</kw>
<status status="PASS" starttime="20231026 17:26:18.838" endtime="20231026 17:26:19.034"/>
</kw>
<msg timestamp="20231026 17:26:19.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:18.838" endtime="20231026 17:26:19.034"/>
</kw>
<status status="PASS" starttime="20231026 17:26:18.837" endtime="20231026 17:26:19.035"/>
</kw>
<status status="PASS" starttime="20231026 17:26:18.837" endtime="20231026 17:26:19.035"/>
</kw>
<status status="PASS" starttime="20231026 17:26:18.815" endtime="20231026 17:26:19.035"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231026 17:26:18.814" endtime="20231026 17:26:19.035"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231026 17:26:18.759" endtime="20231026 17:26:19.037"/>
</suite>
<suite id="s1-s4" name="Scm-Decommission" source="/opt/hadoop/smoketest/scmha/scm-decommission.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:31.297" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:26:31.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:26:31.302" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231026 17:26:31.293" endtime="20231026 17:26:31.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:31.303" level="INFO">s3g</msg>
<status status="PASS" starttime="20231026 17:26:31.302" endtime="20231026 17:26:31.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:26:31.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:26:31.303" endtime="20231026 17:26:31.304"/>
</kw>
<status status="PASS" starttime="20231026 17:26:31.292" endtime="20231026 17:26:31.304"/>
</kw>
<msg timestamp="20231026 17:26:31.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:31.292" endtime="20231026 17:26:31.304"/>
</kw>
<msg timestamp="20231026 17:26:31.304" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231026 17:26:31.292" endtime="20231026 17:26:31.304"/>
</kw>
<msg timestamp="20231026 17:26:31.304" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 17:26:31.291" endtime="20231026 17:26:31.304"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231026 17:26:31.305" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 17:26:31.305" endtime="20231026 17:26:31.305"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:31.310" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:26:31.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:26:31.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 17:26:31.307" endtime="20231026 17:26:31.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:31.398" level="INFO"/>
<status status="PASS" starttime="20231026 17:26:31.397" endtime="20231026 17:26:31.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:26:31.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:26:31.398" endtime="20231026 17:26:31.399"/>
</kw>
<status status="PASS" starttime="20231026 17:26:31.307" endtime="20231026 17:26:31.399"/>
</kw>
<msg timestamp="20231026 17:26:31.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:31.306" endtime="20231026 17:26:31.399"/>
</kw>
<status status="PASS" starttime="20231026 17:26:31.306" endtime="20231026 17:26:31.400"/>
</kw>
<status status="PASS" starttime="20231026 17:26:31.305" endtime="20231026 17:26:31.400"/>
</kw>
<status status="PASS" starttime="20231026 17:26:31.290" endtime="20231026 17:26:31.400"/>
</kw>
<status status="PASS" starttime="20231026 17:26:31.289" endtime="20231026 17:26:31.400"/>
</kw>
<test id="s1-s4-t1" name="Decommission SCM Primordial Node" line="66">
<kw name="Get Primordial SCM ID">
<var>${primordial_scm_id}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:31.408" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:26:36.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:26:36.935" level="INFO">${output} = scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe...</msg>
<status status="PASS" starttime="20231026 17:26:31.404" endtime="20231026 17:26:36.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:36.936" level="INFO">scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe25d:172.25.0.118</msg>
<status status="PASS" starttime="20231026 17:26:36.935" endtime="20231026 17:26:36.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:26:36.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:26:36.937" endtime="20231026 17:26:36.938"/>
</kw>
<status status="PASS" starttime="20231026 17:26:31.403" endtime="20231026 17:26:36.938"/>
</kw>
<msg timestamp="20231026 17:26:36.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:31.403" endtime="20231026 17:26:36.938"/>
</kw>
<msg timestamp="20231026 17:26:36.939" level="INFO">${result} = scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe...</msg>
<status status="PASS" starttime="20231026 17:26:31.402" endtime="20231026 17:26:36.939"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${primordial_node}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:LEADER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20231026 17:26:36.940" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20231026 17:26:36.940" level="INFO">${primordial_node} = scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116</msg>
<status status="PASS" starttime="20231026 17:26:36.939" endtime="20231026 17:26:36.940"/>
</kw>
<kw name="Split String" library="String">
<var>${primordial_split}</var>
<arg>${primordial_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 17:26:36.940" level="INFO">${primordial_split} = ['scm1.org', '9894', 'LEADER', '2ca7fe16-ff89-49d6-8ce4-897540cda599', '172.25.0.116']</msg>
<status status="PASS" starttime="20231026 17:26:36.940" endtime="20231026 17:26:36.940"/>
</kw>
<kw name="Strip String" library="String">
<var>${primordial_scmId}</var>
<arg>${primordial_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 17:26:36.942" level="INFO">${primordial_scmId} = 2ca7fe16-ff89-49d6-8ce4-897540cda599</msg>
<status status="PASS" starttime="20231026 17:26:36.941" endtime="20231026 17:26:36.942"/>
</kw>
<msg timestamp="20231026 17:26:36.942" level="INFO">${primordial_scm_id} = 2ca7fe16-ff89-49d6-8ce4-897540cda599</msg>
<status status="PASS" starttime="20231026 17:26:31.401" endtime="20231026 17:26:36.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Primordial scm id : ${primordial_scm_id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:36.943" level="INFO">Primordial scm id : 2ca7fe16-ff89-49d6-8ce4-897540cda599</msg>
<status status="PASS" starttime="20231026 17:26:36.943" endtime="20231026 17:26:36.943"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${decomm_output}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:36.947" level="INFO">Running command 'ozone admin scm decommission --nodeid=2ca7fe16-ff89-49d6-8ce4-897540cda599 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:26:42.022" level="INFO">${rc} = 255</msg>
<msg timestamp="20231026 17:26:42.022" level="INFO">${output} = Error decommissioning Scm 2ca7fe16-ff89-49d6-8ce4-897540cda599, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231026 17:26:36.944" endtime="20231026 17:26:42.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:42.024" level="INFO">Error decommissioning Scm 2ca7fe16-ff89-49d6-8ce4-897540cda599, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231026 17:26:42.023" endtime="20231026 17:26:42.024"/>
</kw>
<msg timestamp="20231026 17:26:42.024" level="INFO">${decomm_output} = Error decommissioning Scm 2ca7fe16-ff89-49d6-8ce4-897540cda599, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231026 17:26:36.943" endtime="20231026 17:26:42.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decomm_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:42.025" level="INFO">Error decommissioning Scm 2ca7fe16-ff89-49d6-8ce4-897540cda599, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231026 17:26:42.025" endtime="20231026 17:26:42.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decomm_output}</arg>
<arg>Cannot remove current leader</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 17:26:42.025" endtime="20231026 17:26:42.026"/>
</kw>
<kw name="Create volume bucket and put key">
<var>${md5sum}</var>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:42.031" level="INFO">Running command 'ozone sh volume create /decom-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:26:49.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:26:49.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 17:26:42.028" endtime="20231026 17:26:49.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:49.752" level="INFO"/>
<status status="PASS" starttime="20231026 17:26:49.749" endtime="20231026 17:26:49.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:26:49.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:26:49.754" endtime="20231026 17:26:49.756"/>
</kw>
<status status="PASS" starttime="20231026 17:26:42.027" endtime="20231026 17:26:49.756"/>
</kw>
<msg timestamp="20231026 17:26:49.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:42.027" endtime="20231026 17:26:49.758"/>
</kw>
<status status="PASS" starttime="20231026 17:26:42.026" endtime="20231026 17:26:49.758"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:49.771" level="INFO">Running command 'ozone sh bucket create /decom-volume/decom-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:26:56.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:26:56.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 17:26:49.763" endtime="20231026 17:26:56.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:56.835" level="INFO"/>
<status status="PASS" starttime="20231026 17:26:56.834" endtime="20231026 17:26:56.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:26:56.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:26:56.835" endtime="20231026 17:26:56.836"/>
</kw>
<status status="PASS" starttime="20231026 17:26:49.761" endtime="20231026 17:26:56.836"/>
</kw>
<msg timestamp="20231026 17:26:56.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:49.760" endtime="20231026 17:26:56.837"/>
</kw>
<status status="PASS" starttime="20231026 17:26:49.758" endtime="20231026 17:26:56.837"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>/tmp/${TESTFILE}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20231026 17:26:56.838" level="INFO" html="true">Created file '&lt;a href="file:///tmp/testfiledecomm"&gt;/tmp/testfiledecomm&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231026 17:26:56.837" endtime="20231026 17:26:56.838"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "This is a decommissioning test" &gt; /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:56.843" level="INFO">Running command 'echo "This is a decommissioning test" &gt; /tmp/testfiledecomm'.</msg>
<msg timestamp="20231026 17:26:56.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:26:56.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 17:26:56.840" endtime="20231026 17:26:56.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:56.848" level="INFO"/>
<status status="PASS" starttime="20231026 17:26:56.847" endtime="20231026 17:26:56.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:26:56.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:26:56.848" endtime="20231026 17:26:56.849"/>
</kw>
<status status="PASS" starttime="20231026 17:26:56.839" endtime="20231026 17:26:56.849"/>
</kw>
<msg timestamp="20231026 17:26:56.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:56.839" endtime="20231026 17:26:56.849"/>
</kw>
<status status="PASS" starttime="20231026 17:26:56.838" endtime="20231026 17:26:56.849"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum /tmp/${TESTFILE} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:56.854" level="INFO">Running command 'md5sum /tmp/testfiledecomm | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:26:56.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:26:56.861" level="INFO">${output} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231026 17:26:56.851" endtime="20231026 17:26:56.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:26:56.863" level="INFO">ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231026 17:26:56.862" endtime="20231026 17:26:56.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:26:56.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:26:56.863" endtime="20231026 17:26:56.864"/>
</kw>
<status status="PASS" starttime="20231026 17:26:56.850" endtime="20231026 17:26:56.864"/>
</kw>
<msg timestamp="20231026 17:26:56.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:56.850" endtime="20231026 17:26:56.864"/>
</kw>
<msg timestamp="20231026 17:26:56.864" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231026 17:26:56.849" endtime="20231026 17:26:56.864"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:26:56.869" level="INFO">Running command 'ozone sh key put /decom-volume/decom-bucket/testfiledecomm /tmp/testfiledecomm 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:27:11.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:27:11.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 17:26:56.866" endtime="20231026 17:27:11.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:27:11.299" level="INFO"/>
<status status="PASS" starttime="20231026 17:27:11.298" endtime="20231026 17:27:11.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:27:11.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:27:11.300" endtime="20231026 17:27:11.300"/>
</kw>
<status status="PASS" starttime="20231026 17:26:56.866" endtime="20231026 17:27:11.300"/>
</kw>
<msg timestamp="20231026 17:27:11.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:26:56.865" endtime="20231026 17:27:11.301"/>
</kw>
<status status="PASS" starttime="20231026 17:26:56.865" endtime="20231026 17:27:11.301"/>
</kw>
<msg timestamp="20231026 17:27:11.301" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231026 17:26:42.026" endtime="20231026 17:27:11.301"/>
</kw>
<kw name="Transfer Leader to non-primordial node Follower">
<var>${transfer_result}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:27:11.307" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:27:16.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:27:16.390" level="INFO">${output} = scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe...</msg>
<status status="PASS" starttime="20231026 17:27:11.303" endtime="20231026 17:27:16.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:27:16.392" level="INFO">scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe25d:172.25.0.118</msg>
<status status="PASS" starttime="20231026 17:27:16.391" endtime="20231026 17:27:16.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:27:16.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:27:16.392" endtime="20231026 17:27:16.393"/>
</kw>
<status status="PASS" starttime="20231026 17:27:11.303" endtime="20231026 17:27:16.393"/>
</kw>
<msg timestamp="20231026 17:27:16.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:27:11.302" endtime="20231026 17:27:16.393"/>
</kw>
<msg timestamp="20231026 17:27:16.393" level="INFO">${result} = scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe...</msg>
<status status="PASS" starttime="20231026 17:27:11.302" endtime="20231026 17:27:16.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:27:16.394" level="INFO">scm1.org:9894:LEADER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe25d:172.25.0.118</msg>
<status status="PASS" starttime="20231026 17:27:16.393" endtime="20231026 17:27:16.394"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${follower_nodes}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:FOLLOWER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20231026 17:27:16.395" level="INFO">2 out of 3 lines matched</msg>
<msg timestamp="20231026 17:27:16.395" level="INFO">${follower_nodes} = scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe25d:172.25.0.118</msg>
<status status="PASS" starttime="20231026 17:27:16.394" endtime="20231026 17:27:16.395"/>
</kw>
<kw name="Get Line" library="String">
<var>${follower_node}</var>
<arg>${follower_nodes}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231026 17:27:16.395" level="INFO">${follower_node} = scm2.org:9894:FOLLOWER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117</msg>
<status status="PASS" starttime="20231026 17:27:16.395" endtime="20231026 17:27:16.395"/>
</kw>
<kw name="Split String" library="String">
<var>${follower_split}</var>
<arg>${follower_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 17:27:16.396" level="INFO">${follower_split} = ['scm2.org', '9894', 'FOLLOWER', '335b25be-693d-454c-a8b6-1706717daa88', '172.25.0.117']</msg>
<status status="PASS" starttime="20231026 17:27:16.396" endtime="20231026 17:27:16.396"/>
</kw>
<kw name="Strip String" library="String">
<var>${follower_scmId}</var>
<arg>${follower_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 17:27:16.397" level="INFO">${follower_scmId} = 335b25be-693d-454c-a8b6-1706717daa88</msg>
<status status="PASS" starttime="20231026 17:27:16.396" endtime="20231026 17:27:16.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${follower_scmId}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:27:16.402" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 335b25be-693d-454c-a8b6-1706717daa88 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:27:22.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:27:22.743" level="INFO">${output} = Transfer leadership successfully to 335b25be-693d-454c-a8b6-1706717daa88.</msg>
<status status="PASS" starttime="20231026 17:27:16.399" endtime="20231026 17:27:22.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:27:22.745" level="INFO">Transfer leadership successfully to 335b25be-693d-454c-a8b6-1706717daa88.</msg>
<status status="PASS" starttime="20231026 17:27:22.744" endtime="20231026 17:27:22.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:27:22.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:27:22.746" endtime="20231026 17:27:22.747"/>
</kw>
<status status="PASS" starttime="20231026 17:27:16.399" endtime="20231026 17:27:22.747"/>
</kw>
<msg timestamp="20231026 17:27:22.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:27:16.398" endtime="20231026 17:27:22.747"/>
</kw>
<msg timestamp="20231026 17:27:22.748" level="INFO">${result} = Transfer leadership successfully to 335b25be-693d-454c-a8b6-1706717daa88.</msg>
<status status="PASS" starttime="20231026 17:27:16.398" endtime="20231026 17:27:22.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:27:22.748" level="INFO">Transfer leadership successfully to 335b25be-693d-454c-a8b6-1706717daa88.</msg>
<status status="PASS" starttime="20231026 17:27:22.748" endtime="20231026 17:27:22.748"/>
</kw>
<msg timestamp="20231026 17:27:22.749" level="INFO">${transfer_result} = Transfer leadership successfully to 335b25be-693d-454c-a8b6-1706717daa88.</msg>
<status status="PASS" starttime="20231026 17:27:11.301" endtime="20231026 17:27:22.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${transfer_result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 17:27:22.749" endtime="20231026 17:27:22.750"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:27:22.756" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:27:30.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:27:30.175" level="INFO">${output} = scm1.org:9894:FOLLOWER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:LEADER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe...</msg>
<status status="PASS" starttime="20231026 17:27:22.752" endtime="20231026 17:27:30.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:27:30.177" level="INFO">scm1.org:9894:FOLLOWER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:LEADER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe25d:172.25.0.118</msg>
<status status="PASS" starttime="20231026 17:27:30.176" endtime="20231026 17:27:30.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:27:30.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:27:30.177" endtime="20231026 17:27:30.178"/>
</kw>
<status status="PASS" starttime="20231026 17:27:22.752" endtime="20231026 17:27:30.178"/>
</kw>
<msg timestamp="20231026 17:27:30.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:27:22.751" endtime="20231026 17:27:30.178"/>
</kw>
<msg timestamp="20231026 17:27:30.178" level="INFO">${result} = scm1.org:9894:FOLLOWER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:LEADER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe...</msg>
<status status="PASS" starttime="20231026 17:27:22.751" endtime="20231026 17:27:30.178"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20231026 17:27:30.179" level="INFO">3 out of 3 lines matched</msg>
<msg timestamp="20231026 17:27:30.180" level="INFO">${nodes_in_quorum} = scm1.org:9894:FOLLOWER:2ca7fe16-ff89-49d6-8ce4-897540cda599:172.25.0.116
scm2.org:9894:LEADER:335b25be-693d-454c-a8b6-1706717daa88:172.25.0.117
scm3.org:9894:FOLLOWER:0e41dde5-9c39-4dce-b91e-03862cefe...</msg>
<status status="PASS" starttime="20231026 17:27:30.179" endtime="20231026 17:27:30.180"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231026 17:27:30.180" level="INFO">3 lines</msg>
<msg timestamp="20231026 17:27:30.180" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20231026 17:27:30.180" endtime="20231026 17:27:30.180"/>
</kw>
<msg timestamp="20231026 17:27:30.181" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20231026 17:27:22.750" endtime="20231026 17:27:30.181"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_pre}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231026 17:27:30.181" level="INFO">${node_count_pre} = 3</msg>
<status status="PASS" starttime="20231026 17:27:30.181" endtime="20231026 17:27:30.181"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${node_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231026 17:27:30.182" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20231026 17:27:30.182" endtime="20231026 17:27:30.182"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_expect}</var>
<arg>${n}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231026 17:27:30.183" level="INFO">${node_count_expect} = 2</msg>
<status status="PASS" starttime="20231026 17:27:30.182" endtime="20231026 17:27:30.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count before SCM Decommission: ${node_count_pre}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:27:30.183" level="INFO">SCM Instance Count before SCM Decommission: 3</msg>
<status status="PASS" starttime="20231026 17:27:30.183" endtime="20231026 17:27:30.183"/>
</kw>
<kw name="Execute" library="os">
<var>${decommission_res}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:27:30.189" level="INFO">Running command 'ozone admin scm decommission --nodeid=2ca7fe16-ff89-49d6-8ce4-897540cda599 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:27:37.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 17:27:37.842" level="INFO">${output} = Decommissioned Scm 2ca7fe16-ff89-49d6-8ce4-897540cda599</msg>
<status status="PASS" starttime="20231026 17:27:30.185" endtime="20231026 17:27:37.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:27:37.844" level="INFO">Decommissioned Scm 2ca7fe16-ff89-49d6-8ce4-897540cda599</msg>
<status status="PASS" starttime="20231026 17:27:37.843" endtime="20231026 17:27:37.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 17:27:37.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 17:27:37.844" endtime="20231026 17:27:37.844"/>
</kw>
<status status="PASS" starttime="20231026 17:27:30.184" endtime="20231026 17:27:37.845"/>
</kw>
<msg timestamp="20231026 17:27:37.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 17:27:30.184" endtime="20231026 17:27:37.845"/>
</kw>
<msg timestamp="20231026 17:27:37.845" level="INFO">${decommission_res} = Decommissioned Scm 2ca7fe16-ff89-49d6-8ce4-897540cda599</msg>
<status status="PASS" starttime="20231026 17:27:30.183" endtime="20231026 17:27:37.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decommission_res}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 17:27:37.845" level="INFO">Decommissioned Scm 2ca7fe16-ff89-49d6-8ce4-897540cda599</msg>
<status status="PASS" starttime="20231026 17:27:37.845" endtime="20231026 17:27:37.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decommission_res}</arg>
<arg>Decommissioned</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 17:27:37.846" endtime="20231026 17:27:37.846"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 17:27:37.852" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 17:31:31.401" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231026 17:27:37.848" endtime="20231026 17:31:31.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231026 17:31:31.402" endtime="20231026 17:31:31.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231026 17:31:31.402" endtime="20231026 17:31:31.403"/>
</kw>
<status status="FAIL" starttime="20231026 17:27:37.848" endtime="20231026 17:31:31.403"/>
</kw>
<msg timestamp="20231026 17:31:31.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231026 17:27:37.847" endtime="20231026 17:31:31.403"/>
</kw>
<status status="FAIL" starttime="20231026 17:27:37.847" endtime="20231026 17:31:31.403"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<status status="NOT RUN" starttime="20231026 17:31:31.403" endtime="20231026 17:31:31.403"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<status status="NOT RUN" starttime="20231026 17:31:31.403" endtime="20231026 17:31:31.403"/>
</kw>
<status status="FAIL" starttime="20231026 17:27:37.846" endtime="20231026 17:31:31.404"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_post}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231026 17:31:31.404" endtime="20231026 17:31:31.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count after SCM Decommission: ${node_count_post}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231026 17:31:31.404" endtime="20231026 17:31:31.404"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${node_count_expect}</arg>
<arg>${node_count_post}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20231026 17:31:31.404" endtime="20231026 17:31:31.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/getdecomfile</arg>
<status status="NOT RUN" starttime="20231026 17:31:31.404" endtime="20231026 17:31:31.405"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum_new}</var>
<arg>md5sum /tmp/getdecomfile | awk '{print $1}'</arg>
<status status="NOT RUN" starttime="20231026 17:31:31.405" endtime="20231026 17:31:31.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${md5sum_new}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20231026 17:31:31.405" endtime="20231026 17:31:31.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231026 17:26:31.400" endtime="20231026 17:31:31.405">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test Ozone SCM Decommissioning</doc>
<status status="FAIL" starttime="20231026 17:26:31.228" endtime="20231026 17:31:31.407"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="339248"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="1" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Scm-Decommission">ozonesecure-ha-scm-decommission.Scm-Decommission</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
