<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231026 20:10:32.540" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:01:50.459" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:01:50.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:01:50.498" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231026 20:01:50.454" endtime="20231026 20:01:50.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:01:50.501" level="INFO">scm</msg>
<status status="PASS" starttime="20231026 20:01:50.500" endtime="20231026 20:01:50.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:01:50.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:01:50.502" endtime="20231026 20:01:50.503"/>
</kw>
<status status="PASS" starttime="20231026 20:01:50.453" endtime="20231026 20:01:50.504"/>
</kw>
<msg timestamp="20231026 20:01:50.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:01:50.452" endtime="20231026 20:01:50.505"/>
</kw>
<msg timestamp="20231026 20:01:50.505" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231026 20:01:50.450" endtime="20231026 20:01:50.505"/>
</kw>
<msg timestamp="20231026 20:01:50.506" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 20:01:50.449" endtime="20231026 20:01:50.506"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231026 20:01:50.509" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 20:01:50.506" endtime="20231026 20:01:50.509"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:01:50.533" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:01:50.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:01:50.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 20:01:50.520" endtime="20231026 20:01:50.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:01:50.736" level="INFO"/>
<status status="PASS" starttime="20231026 20:01:50.734" endtime="20231026 20:01:50.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:01:50.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:01:50.737" endtime="20231026 20:01:50.738"/>
</kw>
<status status="PASS" starttime="20231026 20:01:50.520" endtime="20231026 20:01:50.739"/>
</kw>
<msg timestamp="20231026 20:01:50.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:01:50.517" endtime="20231026 20:01:50.739"/>
</kw>
<status status="PASS" starttime="20231026 20:01:50.515" endtime="20231026 20:01:50.740"/>
</kw>
<status status="PASS" starttime="20231026 20:01:50.510" endtime="20231026 20:01:50.740"/>
</kw>
<status status="PASS" starttime="20231026 20:01:50.448" endtime="20231026 20:01:50.740"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231026 20:01:50.446" endtime="20231026 20:01:50.741"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231026 20:01:50.249" endtime="20231026 20:01:50.746"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:02:08.524" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:02:17.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:02:17.828" level="INFO">${output} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm4.org:9894:FOLLOWER:696caf32-5c43-46f2-a677-e10b7d44b1f8:172.25.0.120
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e9...</msg>
<status status="PASS" starttime="20231026 20:02:08.521" endtime="20231026 20:02:17.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:02:17.833" level="INFO">scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm4.org:9894:FOLLOWER:696caf32-5c43-46f2-a677-e10b7d44b1f8:172.25.0.120
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67c87:172.25.0.116</msg>
<status status="PASS" starttime="20231026 20:02:17.831" endtime="20231026 20:02:17.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:02:17.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:02:17.833" endtime="20231026 20:02:17.835"/>
</kw>
<status status="PASS" starttime="20231026 20:02:08.520" endtime="20231026 20:02:17.835"/>
</kw>
<msg timestamp="20231026 20:02:17.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:02:08.520" endtime="20231026 20:02:17.836"/>
</kw>
<msg timestamp="20231026 20:02:17.836" level="INFO">${result} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm4.org:9894:FOLLOWER:696caf32-5c43-46f2-a677-e10b7d44b1f8:172.25.0.120
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e9...</msg>
<status status="PASS" starttime="20231026 20:02:08.519" endtime="20231026 20:02:17.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:02:17.837" level="INFO">scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm4.org:9894:FOLLOWER:696caf32-5c43-46f2-a677-e10b7d44b1f8:172.25.0.120
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67c87:172.25.0.116</msg>
<status status="PASS" starttime="20231026 20:02:17.836" endtime="20231026 20:02:17.837"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231026 20:02:17.838" level="INFO">4 lines</msg>
<msg timestamp="20231026 20:02:17.838" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231026 20:02:17.837" endtime="20231026 20:02:17.838"/>
</kw>
<msg timestamp="20231026 20:02:17.838" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231026 20:02:08.518" endtime="20231026 20:02:17.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:02:17.839" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20231026 20:02:17.839" endtime="20231026 20:02:17.839"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231026 20:02:17.840" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231026 20:02:17.840" endtime="20231026 20:02:17.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231026 20:02:17.841" endtime="20231026 20:02:17.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231026 20:02:08.517" endtime="20231026 20:02:17.842"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:02:17.851" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:02:26.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:02:26.355" level="INFO">${output} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm4.org:9894:FOLLOWER:696caf32-5c43-46f2-a677-e10b7d44b1f8:172.25.0.120
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e9...</msg>
<status status="PASS" starttime="20231026 20:02:17.847" endtime="20231026 20:02:26.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:02:26.358" level="INFO">scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm4.org:9894:FOLLOWER:696caf32-5c43-46f2-a677-e10b7d44b1f8:172.25.0.120
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67c87:172.25.0.116</msg>
<status status="PASS" starttime="20231026 20:02:26.356" endtime="20231026 20:02:26.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:02:26.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:02:26.359" endtime="20231026 20:02:26.359"/>
</kw>
<status status="PASS" starttime="20231026 20:02:17.847" endtime="20231026 20:02:26.360"/>
</kw>
<msg timestamp="20231026 20:02:26.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:02:17.846" endtime="20231026 20:02:26.360"/>
</kw>
<msg timestamp="20231026 20:02:26.361" level="INFO">${result} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm4.org:9894:FOLLOWER:696caf32-5c43-46f2-a677-e10b7d44b1f8:172.25.0.120
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e9...</msg>
<status status="PASS" starttime="20231026 20:02:17.845" endtime="20231026 20:02:26.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:02:26.362" level="INFO">scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm4.org:9894:FOLLOWER:696caf32-5c43-46f2-a677-e10b7d44b1f8:172.25.0.120
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67c87:172.25.0.116</msg>
<status status="PASS" starttime="20231026 20:02:26.361" endtime="20231026 20:02:26.362"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231026 20:02:26.363" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231026 20:02:26.363" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:696caf32-5c43-46f2-a677-e10b7d44b1f8:172.25.0.120</msg>
<status status="PASS" starttime="20231026 20:02:26.362" endtime="20231026 20:02:26.363"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 20:02:26.364" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', '696caf32-5c43-46f2-a677-e10b7d44b1f8', '172.25.0.120']</msg>
<status status="PASS" starttime="20231026 20:02:26.364" endtime="20231026 20:02:26.364"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 20:02:26.367" level="INFO">${scm4_uuid} = 696caf32-5c43-46f2-a677-e10b7d44b1f8</msg>
<status status="PASS" starttime="20231026 20:02:26.365" endtime="20231026 20:02:26.367"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:02:26.374" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 696caf32-5c43-46f2-a677-e10b7d44b1f8 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:02:40.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:02:40.332" level="INFO">${output} = Transfer leadership successfully to 696caf32-5c43-46f2-a677-e10b7d44b1f8.</msg>
<status status="PASS" starttime="20231026 20:02:26.370" endtime="20231026 20:02:40.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:02:40.335" level="INFO">Transfer leadership successfully to 696caf32-5c43-46f2-a677-e10b7d44b1f8.</msg>
<status status="PASS" starttime="20231026 20:02:40.333" endtime="20231026 20:02:40.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:02:40.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:02:40.335" endtime="20231026 20:02:40.337"/>
</kw>
<status status="PASS" starttime="20231026 20:02:26.369" endtime="20231026 20:02:40.338"/>
</kw>
<msg timestamp="20231026 20:02:40.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:02:26.368" endtime="20231026 20:02:40.338"/>
</kw>
<msg timestamp="20231026 20:02:40.339" level="INFO">${result} = Transfer leadership successfully to 696caf32-5c43-46f2-a677-e10b7d44b1f8.</msg>
<status status="PASS" starttime="20231026 20:02:26.367" endtime="20231026 20:02:40.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:02:40.340" level="INFO">Transfer leadership successfully to 696caf32-5c43-46f2-a677-e10b7d44b1f8.</msg>
<status status="PASS" starttime="20231026 20:02:40.340" endtime="20231026 20:02:40.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 20:02:40.341" endtime="20231026 20:02:40.343"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231026 20:02:17.844" endtime="20231026 20:02:40.343"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:02:40.357" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:02:52.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:02:52.448" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231026 20:02:40.353" endtime="20231026 20:02:52.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:02:52.449" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Thu Oct 26 19:57:08 UTC 2023   Sun Dec 03 19:57:08 UTC 2028   CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=1 CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231026 20:02:52.448" endtime="20231026 20:02:52.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:02:52.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:02:52.450" endtime="20231026 20:02:52.451"/>
</kw>
<status status="PASS" starttime="20231026 20:02:40.352" endtime="20231026 20:02:52.451"/>
</kw>
<msg timestamp="20231026 20:02:52.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:02:40.351" endtime="20231026 20:02:52.451"/>
</kw>
<msg timestamp="20231026 20:02:52.452" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231026 20:02:40.350" endtime="20231026 20:02:52.452"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231026 20:02:52.453" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231026 20:02:52.453" level="INFO">${root_ca_cert} = 1                 Thu Oct 26 19:57:08 UTC 2023   Sun Dec 03 19:57:08 UTC 2028   CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=1 CN=scm...</msg>
<status status="PASS" starttime="20231026 20:02:52.452" endtime="20231026 20:02:52.453"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 20:02:52.454" level="INFO">${root_ca_cert_split} = ['1', 'Thu', 'Oct', '26', '19:57:08', 'UTC', '2023', 'Sun', 'Dec', '03', '19:57:08', 'UTC', '2028', 'CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,...</msg>
<status status="PASS" starttime="20231026 20:02:52.453" endtime="20231026 20:02:52.454"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 20:02:52.456" level="INFO">${root_ca_cert_subject} = 26</msg>
<status status="PASS" starttime="20231026 20:02:52.454" endtime="20231026 20:02:52.456"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:02:52.463" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:03:03.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:03:03.979" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231026 20:02:52.459" endtime="20231026 20:03:03.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:03:03.981" level="INFO">Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Thu Oct 26 19:57:08 UTC 2023   Sun Dec 03 19:57:08 UTC 2028   CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=1 CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=1
2                 Thu Oct 26 19:57:09 UTC 2023   Sun Dec 03 19:57:09 UTC 2028   CN=scm-sub@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=2 CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=1
3                 Thu Oct 26 19:57:40 UTC 2023   Fri Oct 25 19:57:40 UTC 2024   CN=recon@recon,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=3 CN=scm-sub@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=2
4                 Thu Oct 26 19:57:42 UTC 2023   Sun Dec 03 19:57:42 UTC 2028   CN=scm-sub@scm2.org,OU=eb764079-ea6b-41cb-96f1-253a4e979fdf,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=4 CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=1
5                 Thu Oct 26 19:58:09 UTC 2023   Sun Dec 03 19:58:09 UTC 2028   CN=scm-sub@scm3.org,OU=e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=5 CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=1
6                 Thu Oct 26 19:59:02 UTC 2023   Fri Oct 25 19:59:02 UTC 2024   CN=dn@58a4fa6b9f87,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=6 CN=scm-sub@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=2
7                 Thu Oct 26 19:59:06 UTC 2023   Fri Oct 25 19:59:06 UTC 2024   CN=dn@38630b8c0d8d,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=7 CN=scm-sub@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=2
8                 Thu Oct 26 19:59:07 UTC 2023   Fri Oct 25 19:59:07 UTC 2024   CN=dn@a6bf9f0801a5,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=8 CN=scm-sub@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=2
9                 Thu Oct 26 19:59:10 UTC 2023   Fri Oct 25 19:59:10 UTC 2024   CN=om2,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=9       CN=scm-sub@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=2
10                Thu Oct 26 19:59:13 UTC 2023   Fri Oct 25 19:59:13 UTC 2024   CN=om1,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=10      CN=scm-sub@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=2
11                Thu Oct 26 19:59:17 UTC 2023   Fri Oct 25 19:59:17 UTC 2024   CN=om3,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=11      CN=scm-sub@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=2
12                Thu Oct 26 20:01:22 UTC 2023   Sun Dec 03 20:01:22 UTC 2028   CN=scm-sub@scm4.org,OU=696caf32-5c43-46f2-a677-e10b7d44b1f8,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=12 CN=scm@scm1.org,OU=d83cca73-5623-4d10-b860-1e3b41e67c87,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231026 20:03:03.980" endtime="20231026 20:03:03.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:03:03.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:03:03.981" endtime="20231026 20:03:03.982"/>
</kw>
<status status="PASS" starttime="20231026 20:02:52.458" endtime="20231026 20:03:03.982"/>
</kw>
<msg timestamp="20231026 20:03:03.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:02:52.458" endtime="20231026 20:03:03.983"/>
</kw>
<msg timestamp="20231026 20:03:03.983" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231026 20:02:52.457" endtime="20231026 20:03:03.983"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231026 20:03:03.984" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231026 20:03:03.984" level="INFO">${scm4_cert} = 12                Thu Oct 26 20:01:22 UTC 2023   Sun Dec 03 20:01:22 UTC 2028   CN=scm-sub@scm4.org,OU=696caf32-5c43-46f2-a677-e10b7d44b1f8,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e113a3,SERIALNUMBER=12 C...</msg>
<status status="PASS" starttime="20231026 20:03:03.984" endtime="20231026 20:03:03.984"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 20:03:03.985" level="INFO">${scm4_cert_split} = ['12', 'Thu', 'Oct', '26', '20:01:22', 'UTC', '2023', 'Sun', 'Dec', '03', '20:01:22', 'UTC', '2028', 'CN=scm-sub@scm4.org,OU=696caf32-5c43-46f2-a677-e10b7d44b1f8,O=CID-fb8eeeac-afa1-47ab-8e46-8d9e89e1...</msg>
<status status="PASS" starttime="20231026 20:03:03.985" endtime="20231026 20:03:03.985"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 20:03:03.987" level="INFO">${scm4_cert_issuer} = 20:01:22</msg>
<status status="PASS" starttime="20231026 20:03:03.985" endtime="20231026 20:03:03.987"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231026 20:03:03.987" endtime="20231026 20:03:03.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231026 20:02:40.346" endtime="20231026 20:03:03.989"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231026 20:02:08.421" endtime="20231026 20:03:03.991"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:04:36.827" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:04:36.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:04:36.835" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231026 20:04:36.824" endtime="20231026 20:04:36.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:04:36.839" level="INFO">scm</msg>
<status status="PASS" starttime="20231026 20:04:36.837" endtime="20231026 20:04:36.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:04:36.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:04:36.839" endtime="20231026 20:04:36.840"/>
</kw>
<status status="PASS" starttime="20231026 20:04:36.823" endtime="20231026 20:04:36.841"/>
</kw>
<msg timestamp="20231026 20:04:36.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:04:36.823" endtime="20231026 20:04:36.841"/>
</kw>
<msg timestamp="20231026 20:04:36.841" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231026 20:04:36.822" endtime="20231026 20:04:36.842"/>
</kw>
<msg timestamp="20231026 20:04:36.842" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 20:04:36.822" endtime="20231026 20:04:36.842"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231026 20:04:36.843" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 20:04:36.843" endtime="20231026 20:04:36.844"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:04:36.851" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:04:37.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:04:37.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 20:04:36.847" endtime="20231026 20:04:37.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:04:37.081" level="INFO"/>
<status status="PASS" starttime="20231026 20:04:37.080" endtime="20231026 20:04:37.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:04:37.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:04:37.082" endtime="20231026 20:04:37.083"/>
</kw>
<status status="PASS" starttime="20231026 20:04:36.846" endtime="20231026 20:04:37.083"/>
</kw>
<msg timestamp="20231026 20:04:37.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:04:36.846" endtime="20231026 20:04:37.083"/>
</kw>
<status status="PASS" starttime="20231026 20:04:36.845" endtime="20231026 20:04:37.083"/>
</kw>
<status status="PASS" starttime="20231026 20:04:36.844" endtime="20231026 20:04:37.084"/>
</kw>
<status status="PASS" starttime="20231026 20:04:36.820" endtime="20231026 20:04:37.084"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231026 20:04:36.819" endtime="20231026 20:04:37.084"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231026 20:04:36.721" endtime="20231026 20:04:37.088"/>
</suite>
<suite id="s1-s4" name="Scm-Decommission" source="/opt/hadoop/smoketest/scmha/scm-decommission.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:04:52.189" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:04:52.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:04:52.196" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231026 20:04:52.186" endtime="20231026 20:04:52.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:04:52.197" level="INFO">s3g</msg>
<status status="PASS" starttime="20231026 20:04:52.196" endtime="20231026 20:04:52.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:04:52.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:04:52.197" endtime="20231026 20:04:52.198"/>
</kw>
<status status="PASS" starttime="20231026 20:04:52.185" endtime="20231026 20:04:52.198"/>
</kw>
<msg timestamp="20231026 20:04:52.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:04:52.184" endtime="20231026 20:04:52.199"/>
</kw>
<msg timestamp="20231026 20:04:52.200" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231026 20:04:52.184" endtime="20231026 20:04:52.200"/>
</kw>
<msg timestamp="20231026 20:04:52.200" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 20:04:52.183" endtime="20231026 20:04:52.201"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231026 20:04:52.201" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 20:04:52.201" endtime="20231026 20:04:52.201"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:04:52.208" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:04:52.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:04:52.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 20:04:52.204" endtime="20231026 20:04:52.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:04:52.269" level="INFO"/>
<status status="PASS" starttime="20231026 20:04:52.268" endtime="20231026 20:04:52.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:04:52.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:04:52.270" endtime="20231026 20:04:52.270"/>
</kw>
<status status="PASS" starttime="20231026 20:04:52.203" endtime="20231026 20:04:52.270"/>
</kw>
<msg timestamp="20231026 20:04:52.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:04:52.203" endtime="20231026 20:04:52.271"/>
</kw>
<status status="PASS" starttime="20231026 20:04:52.202" endtime="20231026 20:04:52.271"/>
</kw>
<status status="PASS" starttime="20231026 20:04:52.202" endtime="20231026 20:04:52.271"/>
</kw>
<status status="PASS" starttime="20231026 20:04:52.183" endtime="20231026 20:04:52.271"/>
</kw>
<status status="PASS" starttime="20231026 20:04:52.182" endtime="20231026 20:04:52.271"/>
</kw>
<test id="s1-s4-t1" name="Decommission SCM Primordial Node" line="66">
<kw name="Get Primordial SCM ID">
<var>${primordial_scm_id}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:04:52.281" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:04:59.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:04:59.289" level="INFO">${output} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67...</msg>
<status status="PASS" starttime="20231026 20:04:52.277" endtime="20231026 20:04:59.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:04:59.292" level="INFO">scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67c87:172.25.0.116</msg>
<status status="PASS" starttime="20231026 20:04:59.290" endtime="20231026 20:04:59.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:04:59.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:04:59.292" endtime="20231026 20:04:59.294"/>
</kw>
<status status="PASS" starttime="20231026 20:04:52.276" endtime="20231026 20:04:59.295"/>
</kw>
<msg timestamp="20231026 20:04:59.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:04:52.276" endtime="20231026 20:04:59.296"/>
</kw>
<msg timestamp="20231026 20:04:59.297" level="INFO">${result} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67...</msg>
<status status="PASS" starttime="20231026 20:04:52.274" endtime="20231026 20:04:59.297"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${primordial_node}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:LEADER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20231026 20:04:59.298" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20231026 20:04:59.298" level="INFO">${primordial_node} = scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67c87:172.25.0.116</msg>
<status status="PASS" starttime="20231026 20:04:59.297" endtime="20231026 20:04:59.298"/>
</kw>
<kw name="Split String" library="String">
<var>${primordial_split}</var>
<arg>${primordial_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 20:04:59.302" level="INFO">${primordial_split} = ['scm1.org', '9894', 'LEADER', 'd83cca73-5623-4d10-b860-1e3b41e67c87', '172.25.0.116']</msg>
<status status="PASS" starttime="20231026 20:04:59.299" endtime="20231026 20:04:59.302"/>
</kw>
<kw name="Strip String" library="String">
<var>${primordial_scmId}</var>
<arg>${primordial_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 20:04:59.305" level="INFO">${primordial_scmId} = d83cca73-5623-4d10-b860-1e3b41e67c87</msg>
<status status="PASS" starttime="20231026 20:04:59.302" endtime="20231026 20:04:59.305"/>
</kw>
<msg timestamp="20231026 20:04:59.305" level="INFO">${primordial_scm_id} = d83cca73-5623-4d10-b860-1e3b41e67c87</msg>
<status status="PASS" starttime="20231026 20:04:52.274" endtime="20231026 20:04:59.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Primordial scm id : ${primordial_scm_id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:04:59.307" level="INFO">Primordial scm id : d83cca73-5623-4d10-b860-1e3b41e67c87</msg>
<status status="PASS" starttime="20231026 20:04:59.305" endtime="20231026 20:04:59.307"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${decomm_output}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:04:59.315" level="INFO">Running command 'ozone admin scm decommission --nodeid=d83cca73-5623-4d10-b860-1e3b41e67c87 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:05:06.957" level="INFO">${rc} = 255</msg>
<msg timestamp="20231026 20:05:06.957" level="INFO">${output} = Error decommissioning Scm d83cca73-5623-4d10-b860-1e3b41e67c87, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231026 20:04:59.309" endtime="20231026 20:05:06.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:05:06.959" level="INFO">Error decommissioning Scm d83cca73-5623-4d10-b860-1e3b41e67c87, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231026 20:05:06.958" endtime="20231026 20:05:06.959"/>
</kw>
<msg timestamp="20231026 20:05:06.959" level="INFO">${decomm_output} = Error decommissioning Scm d83cca73-5623-4d10-b860-1e3b41e67c87, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231026 20:04:59.307" endtime="20231026 20:05:06.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decomm_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:05:06.960" level="INFO">Error decommissioning Scm d83cca73-5623-4d10-b860-1e3b41e67c87, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231026 20:05:06.960" endtime="20231026 20:05:06.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decomm_output}</arg>
<arg>Cannot remove current leader</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 20:05:06.960" endtime="20231026 20:05:06.961"/>
</kw>
<kw name="Create volume bucket and put key">
<var>${md5sum}</var>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:05:06.967" level="INFO">Running command 'ozone sh volume create /decom-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:05:17.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:05:17.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 20:05:06.964" endtime="20231026 20:05:17.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:05:17.510" level="INFO"/>
<status status="PASS" starttime="20231026 20:05:17.509" endtime="20231026 20:05:17.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:05:17.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:05:17.511" endtime="20231026 20:05:17.512"/>
</kw>
<status status="PASS" starttime="20231026 20:05:06.963" endtime="20231026 20:05:17.513"/>
</kw>
<msg timestamp="20231026 20:05:17.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:05:06.963" endtime="20231026 20:05:17.513"/>
</kw>
<status status="PASS" starttime="20231026 20:05:06.962" endtime="20231026 20:05:17.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:05:17.521" level="INFO">Running command 'ozone sh bucket create /decom-volume/decom-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:05:26.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:05:26.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 20:05:17.516" endtime="20231026 20:05:26.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:05:26.191" level="INFO"/>
<status status="PASS" starttime="20231026 20:05:26.189" endtime="20231026 20:05:26.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:05:26.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:05:26.192" endtime="20231026 20:05:26.194"/>
</kw>
<status status="PASS" starttime="20231026 20:05:17.515" endtime="20231026 20:05:26.195"/>
</kw>
<msg timestamp="20231026 20:05:26.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:05:17.515" endtime="20231026 20:05:26.196"/>
</kw>
<status status="PASS" starttime="20231026 20:05:17.513" endtime="20231026 20:05:26.197"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>/tmp/${TESTFILE}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20231026 20:05:26.199" level="INFO" html="true">Created file '&lt;a href="file:///tmp/testfiledecomm"&gt;/tmp/testfiledecomm&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231026 20:05:26.198" endtime="20231026 20:05:26.201"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "This is a decommissioning test" &gt; /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:05:26.214" level="INFO">Running command 'echo "This is a decommissioning test" &gt; /tmp/testfiledecomm'.</msg>
<msg timestamp="20231026 20:05:26.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:05:26.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 20:05:26.207" endtime="20231026 20:05:26.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:05:26.223" level="INFO"/>
<status status="PASS" starttime="20231026 20:05:26.220" endtime="20231026 20:05:26.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:05:26.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:05:26.224" endtime="20231026 20:05:26.227"/>
</kw>
<status status="PASS" starttime="20231026 20:05:26.205" endtime="20231026 20:05:26.227"/>
</kw>
<msg timestamp="20231026 20:05:26.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:05:26.203" endtime="20231026 20:05:26.230"/>
</kw>
<status status="PASS" starttime="20231026 20:05:26.201" endtime="20231026 20:05:26.231"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum /tmp/${TESTFILE} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:05:26.249" level="INFO">Running command 'md5sum /tmp/testfiledecomm | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:05:26.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:05:26.258" level="INFO">${output} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231026 20:05:26.241" endtime="20231026 20:05:26.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:05:26.259" level="INFO">ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231026 20:05:26.258" endtime="20231026 20:05:26.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:05:26.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:05:26.260" endtime="20231026 20:05:26.261"/>
</kw>
<status status="PASS" starttime="20231026 20:05:26.240" endtime="20231026 20:05:26.261"/>
</kw>
<msg timestamp="20231026 20:05:26.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:05:26.238" endtime="20231026 20:05:26.262"/>
</kw>
<msg timestamp="20231026 20:05:26.262" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231026 20:05:26.231" endtime="20231026 20:05:26.262"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:05:26.268" level="INFO">Running command 'ozone sh key put /decom-volume/decom-bucket/testfiledecomm /tmp/testfiledecomm 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:05:43.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:05:43.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 20:05:26.265" endtime="20231026 20:05:43.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:05:43.908" level="INFO"/>
<status status="PASS" starttime="20231026 20:05:43.907" endtime="20231026 20:05:43.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:05:43.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:05:43.908" endtime="20231026 20:05:43.909"/>
</kw>
<status status="PASS" starttime="20231026 20:05:26.264" endtime="20231026 20:05:43.909"/>
</kw>
<msg timestamp="20231026 20:05:43.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:05:26.264" endtime="20231026 20:05:43.910"/>
</kw>
<status status="PASS" starttime="20231026 20:05:26.263" endtime="20231026 20:05:43.910"/>
</kw>
<msg timestamp="20231026 20:05:43.910" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231026 20:05:06.961" endtime="20231026 20:05:43.910"/>
</kw>
<kw name="Transfer Leader to non-primordial node Follower">
<var>${transfer_result}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:05:43.919" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:05:51.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:05:51.413" level="INFO">${output} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67...</msg>
<status status="PASS" starttime="20231026 20:05:43.913" endtime="20231026 20:05:51.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:05:51.415" level="INFO">scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67c87:172.25.0.116</msg>
<status status="PASS" starttime="20231026 20:05:51.414" endtime="20231026 20:05:51.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:05:51.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:05:51.415" endtime="20231026 20:05:51.416"/>
</kw>
<status status="PASS" starttime="20231026 20:05:43.913" endtime="20231026 20:05:51.417"/>
</kw>
<msg timestamp="20231026 20:05:51.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:05:43.912" endtime="20231026 20:05:51.417"/>
</kw>
<msg timestamp="20231026 20:05:51.417" level="INFO">${result} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67...</msg>
<status status="PASS" starttime="20231026 20:05:43.911" endtime="20231026 20:05:51.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:05:51.418" level="INFO">scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:LEADER:d83cca73-5623-4d10-b860-1e3b41e67c87:172.25.0.116</msg>
<status status="PASS" starttime="20231026 20:05:51.417" endtime="20231026 20:05:51.418"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${follower_nodes}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:FOLLOWER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20231026 20:05:51.419" level="INFO">2 out of 3 lines matched</msg>
<msg timestamp="20231026 20:05:51.419" level="INFO">${follower_nodes} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117</msg>
<status status="PASS" starttime="20231026 20:05:51.418" endtime="20231026 20:05:51.419"/>
</kw>
<kw name="Get Line" library="String">
<var>${follower_node}</var>
<arg>${follower_nodes}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231026 20:05:51.420" level="INFO">${follower_node} = scm3.org:9894:FOLLOWER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118</msg>
<status status="PASS" starttime="20231026 20:05:51.420" endtime="20231026 20:05:51.420"/>
</kw>
<kw name="Split String" library="String">
<var>${follower_split}</var>
<arg>${follower_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231026 20:05:51.421" level="INFO">${follower_split} = ['scm3.org', '9894', 'FOLLOWER', 'e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0', '172.25.0.118']</msg>
<status status="PASS" starttime="20231026 20:05:51.420" endtime="20231026 20:05:51.421"/>
</kw>
<kw name="Strip String" library="String">
<var>${follower_scmId}</var>
<arg>${follower_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231026 20:05:51.423" level="INFO">${follower_scmId} = e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0</msg>
<status status="PASS" starttime="20231026 20:05:51.421" endtime="20231026 20:05:51.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${follower_scmId}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:05:51.429" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:06:04.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:06:04.790" level="INFO">${output} = Transfer leadership successfully to e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0.</msg>
<status status="PASS" starttime="20231026 20:05:51.425" endtime="20231026 20:06:04.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:06:04.791" level="INFO">Transfer leadership successfully to e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0.</msg>
<status status="PASS" starttime="20231026 20:06:04.790" endtime="20231026 20:06:04.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:06:04.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:06:04.792" endtime="20231026 20:06:04.792"/>
</kw>
<status status="PASS" starttime="20231026 20:05:51.424" endtime="20231026 20:06:04.793"/>
</kw>
<msg timestamp="20231026 20:06:04.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:05:51.424" endtime="20231026 20:06:04.793"/>
</kw>
<msg timestamp="20231026 20:06:04.793" level="INFO">${result} = Transfer leadership successfully to e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0.</msg>
<status status="PASS" starttime="20231026 20:05:51.423" endtime="20231026 20:06:04.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:06:04.794" level="INFO">Transfer leadership successfully to e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0.</msg>
<status status="PASS" starttime="20231026 20:06:04.793" endtime="20231026 20:06:04.794"/>
</kw>
<msg timestamp="20231026 20:06:04.794" level="INFO">${transfer_result} = Transfer leadership successfully to e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0.</msg>
<status status="PASS" starttime="20231026 20:05:43.911" endtime="20231026 20:06:04.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${transfer_result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 20:06:04.794" endtime="20231026 20:06:04.795"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:06:04.800" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:06:14.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:06:14.432" level="INFO">${output} = scm3.org:9894:LEADER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:FOLLOWER:d83cca73-5623-4d10-b860-1e3b41e67...</msg>
<status status="PASS" starttime="20231026 20:06:04.797" endtime="20231026 20:06:14.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:06:14.437" level="INFO">scm3.org:9894:LEADER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:FOLLOWER:d83cca73-5623-4d10-b860-1e3b41e67c87:172.25.0.116</msg>
<status status="PASS" starttime="20231026 20:06:14.434" endtime="20231026 20:06:14.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:06:14.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:06:14.438" endtime="20231026 20:06:14.440"/>
</kw>
<status status="PASS" starttime="20231026 20:06:04.797" endtime="20231026 20:06:14.441"/>
</kw>
<msg timestamp="20231026 20:06:14.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:06:04.796" endtime="20231026 20:06:14.442"/>
</kw>
<msg timestamp="20231026 20:06:14.443" level="INFO">${result} = scm3.org:9894:LEADER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:FOLLOWER:d83cca73-5623-4d10-b860-1e3b41e67...</msg>
<status status="PASS" starttime="20231026 20:06:04.796" endtime="20231026 20:06:14.443"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20231026 20:06:14.446" level="INFO">3 out of 3 lines matched</msg>
<msg timestamp="20231026 20:06:14.447" level="INFO">${nodes_in_quorum} = scm3.org:9894:LEADER:e68e8814-cd4d-4b79-bbc7-11e2fbc22fe0:172.25.0.118
scm2.org:9894:FOLLOWER:eb764079-ea6b-41cb-96f1-253a4e979fdf:172.25.0.117
scm1.org:9894:FOLLOWER:d83cca73-5623-4d10-b860-1e3b41e67...</msg>
<status status="PASS" starttime="20231026 20:06:14.444" endtime="20231026 20:06:14.447"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231026 20:06:14.449" level="INFO">3 lines</msg>
<msg timestamp="20231026 20:06:14.450" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20231026 20:06:14.448" endtime="20231026 20:06:14.450"/>
</kw>
<msg timestamp="20231026 20:06:14.451" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20231026 20:06:04.795" endtime="20231026 20:06:14.451"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_pre}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231026 20:06:14.453" level="INFO">${node_count_pre} = 3</msg>
<status status="PASS" starttime="20231026 20:06:14.452" endtime="20231026 20:06:14.454"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${node_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231026 20:06:14.456" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20231026 20:06:14.454" endtime="20231026 20:06:14.456"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_expect}</var>
<arg>${n}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231026 20:06:14.458" level="INFO">${node_count_expect} = 2</msg>
<status status="PASS" starttime="20231026 20:06:14.457" endtime="20231026 20:06:14.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count before SCM Decommission: ${node_count_pre}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:06:14.459" level="INFO">SCM Instance Count before SCM Decommission: 3</msg>
<status status="PASS" starttime="20231026 20:06:14.459" endtime="20231026 20:06:14.459"/>
</kw>
<kw name="Execute" library="os">
<var>${decommission_res}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:06:14.466" level="INFO">Running command 'ozone admin scm decommission --nodeid=d83cca73-5623-4d10-b860-1e3b41e67c87 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:06:24.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 20:06:24.182" level="INFO">${output} = Decommissioned Scm d83cca73-5623-4d10-b860-1e3b41e67c87</msg>
<status status="PASS" starttime="20231026 20:06:14.461" endtime="20231026 20:06:24.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:06:24.185" level="INFO">Decommissioned Scm d83cca73-5623-4d10-b860-1e3b41e67c87</msg>
<status status="PASS" starttime="20231026 20:06:24.183" endtime="20231026 20:06:24.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 20:06:24.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 20:06:24.185" endtime="20231026 20:06:24.186"/>
</kw>
<status status="PASS" starttime="20231026 20:06:14.461" endtime="20231026 20:06:24.186"/>
</kw>
<msg timestamp="20231026 20:06:24.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 20:06:14.460" endtime="20231026 20:06:24.186"/>
</kw>
<msg timestamp="20231026 20:06:24.187" level="INFO">${decommission_res} = Decommissioned Scm d83cca73-5623-4d10-b860-1e3b41e67c87</msg>
<status status="PASS" starttime="20231026 20:06:14.460" endtime="20231026 20:06:24.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decommission_res}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 20:06:24.188" level="INFO">Decommissioned Scm d83cca73-5623-4d10-b860-1e3b41e67c87</msg>
<status status="PASS" starttime="20231026 20:06:24.187" endtime="20231026 20:06:24.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decommission_res}</arg>
<arg>Decommissioned</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 20:06:24.188" endtime="20231026 20:06:24.189"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 20:06:24.195" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 20:09:52.274" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231026 20:06:24.192" endtime="20231026 20:09:52.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231026 20:09:52.274" endtime="20231026 20:09:52.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231026 20:09:52.275" endtime="20231026 20:09:52.275"/>
</kw>
<status status="FAIL" starttime="20231026 20:06:24.191" endtime="20231026 20:09:52.275"/>
</kw>
<msg timestamp="20231026 20:09:52.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231026 20:06:24.191" endtime="20231026 20:09:52.276"/>
</kw>
<status status="FAIL" starttime="20231026 20:06:24.190" endtime="20231026 20:09:52.276"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<status status="NOT RUN" starttime="20231026 20:09:52.276" endtime="20231026 20:09:52.276"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<status status="NOT RUN" starttime="20231026 20:09:52.276" endtime="20231026 20:09:52.277"/>
</kw>
<status status="FAIL" starttime="20231026 20:06:24.189" endtime="20231026 20:09:52.277"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_post}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231026 20:09:52.277" endtime="20231026 20:09:52.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count after SCM Decommission: ${node_count_post}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231026 20:09:52.277" endtime="20231026 20:09:52.277"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${node_count_expect}</arg>
<arg>${node_count_post}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20231026 20:09:52.277" endtime="20231026 20:09:52.278"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/getdecomfile</arg>
<status status="NOT RUN" starttime="20231026 20:09:52.278" endtime="20231026 20:09:52.278"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum_new}</var>
<arg>md5sum /tmp/getdecomfile | awk '{print $1}'</arg>
<status status="NOT RUN" starttime="20231026 20:09:52.278" endtime="20231026 20:09:52.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${md5sum_new}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20231026 20:09:52.279" endtime="20231026 20:09:52.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231026 20:04:52.272" endtime="20231026 20:09:52.279">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test Ozone SCM Decommissioning</doc>
<status status="FAIL" starttime="20231026 20:04:52.106" endtime="20231026 20:09:52.281"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="356609"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="1" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Scm-Decommission">ozonesecure-ha-scm-decommission.Scm-Decommission</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
