<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231026 19:00:53.895" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:55:57.415" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:55:57.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:55:57.425" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231026 18:55:57.406" endtime="20231026 18:55:57.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:55:57.429" level="INFO">scm</msg>
<status status="PASS" starttime="20231026 18:55:57.426" endtime="20231026 18:55:57.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:55:57.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:55:57.430" endtime="20231026 18:55:57.432"/>
</kw>
<status status="PASS" starttime="20231026 18:55:57.402" endtime="20231026 18:55:57.433"/>
</kw>
<msg timestamp="20231026 18:55:57.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:55:57.401" endtime="20231026 18:55:57.433"/>
</kw>
<msg timestamp="20231026 18:55:57.433" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231026 18:55:57.397" endtime="20231026 18:55:57.434"/>
</kw>
<msg timestamp="20231026 18:55:57.435" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 18:55:57.393" endtime="20231026 18:55:57.435"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231026 18:55:57.438" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 18:55:57.435" endtime="20231026 18:55:57.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:55:57.451" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:55:57.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:55:57.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:55:57.444" endtime="20231026 18:55:57.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:55:57.487" level="INFO"/>
<status status="PASS" starttime="20231026 18:55:57.485" endtime="20231026 18:55:57.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:55:57.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:55:57.487" endtime="20231026 18:55:57.488"/>
</kw>
<status status="PASS" starttime="20231026 18:55:57.442" endtime="20231026 18:55:57.488"/>
</kw>
<msg timestamp="20231026 18:55:57.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:55:57.440" endtime="20231026 18:55:57.489"/>
</kw>
<status status="PASS" starttime="20231026 18:55:57.440" endtime="20231026 18:55:57.489"/>
</kw>
<status status="PASS" starttime="20231026 18:55:57.438" endtime="20231026 18:55:57.490"/>
</kw>
<status status="PASS" starttime="20231026 18:55:57.389" endtime="20231026 18:55:57.490"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231026 18:55:57.387" endtime="20231026 18:55:57.491"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231026 18:55:57.131" endtime="20231026 18:55:57.495"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:11.606" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:56:11.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:56:11.612" level="INFO">${output} = dn</msg>
<status status="PASS" starttime="20231026 18:56:11.603" endtime="20231026 18:56:11.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:56:11.614" level="INFO">dn</msg>
<status status="PASS" starttime="20231026 18:56:11.613" endtime="20231026 18:56:11.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:56:11.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:56:11.614" endtime="20231026 18:56:11.615"/>
</kw>
<status status="PASS" starttime="20231026 18:56:11.602" endtime="20231026 18:56:11.615"/>
</kw>
<msg timestamp="20231026 18:56:11.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:56:11.602" endtime="20231026 18:56:11.616"/>
</kw>
<msg timestamp="20231026 18:56:11.616" level="INFO">${instance} = dn</msg>
<status status="PASS" starttime="20231026 18:56:11.601" endtime="20231026 18:56:11.616"/>
</kw>
<msg timestamp="20231026 18:56:11.616" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 18:56:11.601" endtime="20231026 18:56:11.616"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231026 18:56:11.617" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 18:56:11.616" endtime="20231026 18:56:11.617"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:11.624" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/dn@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:56:11.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:56:11.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:11.620" endtime="20231026 18:56:11.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:56:11.645" level="INFO"/>
<status status="PASS" starttime="20231026 18:56:11.644" endtime="20231026 18:56:11.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:56:11.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:56:11.645" endtime="20231026 18:56:11.646"/>
</kw>
<status status="PASS" starttime="20231026 18:56:11.619" endtime="20231026 18:56:11.647"/>
</kw>
<msg timestamp="20231026 18:56:11.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:56:11.619" endtime="20231026 18:56:11.647"/>
</kw>
<status status="PASS" starttime="20231026 18:56:11.618" endtime="20231026 18:56:11.647"/>
</kw>
<status status="PASS" starttime="20231026 18:56:11.617" endtime="20231026 18:56:11.647"/>
</kw>
<status status="PASS" starttime="20231026 18:56:11.600" endtime="20231026 18:56:11.647"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231026 18:56:11.599" endtime="20231026 18:56:11.647"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231026 18:56:11.531" endtime="20231026 18:56:11.652"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:24.279" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:56:24.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:56:24.285" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231026 18:56:24.277" endtime="20231026 18:56:24.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:56:24.286" level="INFO">om</msg>
<status status="PASS" starttime="20231026 18:56:24.285" endtime="20231026 18:56:24.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:56:24.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:56:24.287" endtime="20231026 18:56:24.287"/>
</kw>
<status status="PASS" starttime="20231026 18:56:24.276" endtime="20231026 18:56:24.287"/>
</kw>
<msg timestamp="20231026 18:56:24.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:56:24.276" endtime="20231026 18:56:24.288"/>
</kw>
<msg timestamp="20231026 18:56:24.288" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231026 18:56:24.275" endtime="20231026 18:56:24.288"/>
</kw>
<msg timestamp="20231026 18:56:24.288" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 18:56:24.275" endtime="20231026 18:56:24.288"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231026 18:56:24.289" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231026 18:56:24.288" endtime="20231026 18:56:24.289"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:24.294" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:56:24.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:56:24.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:24.291" endtime="20231026 18:56:24.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:56:24.376" level="INFO"/>
<status status="PASS" starttime="20231026 18:56:24.375" endtime="20231026 18:56:24.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:56:24.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:56:24.376" endtime="20231026 18:56:24.377"/>
</kw>
<status status="PASS" starttime="20231026 18:56:24.291" endtime="20231026 18:56:24.377"/>
</kw>
<msg timestamp="20231026 18:56:24.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:56:24.290" endtime="20231026 18:56:24.377"/>
</kw>
<status status="PASS" starttime="20231026 18:56:24.290" endtime="20231026 18:56:24.377"/>
</kw>
<status status="PASS" starttime="20231026 18:56:24.289" endtime="20231026 18:56:24.377"/>
</kw>
<status status="PASS" starttime="20231026 18:56:24.274" endtime="20231026 18:56:24.377"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231026 18:56:24.273" endtime="20231026 18:56:24.378"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231026 18:56:24.214" endtime="20231026 18:56:24.379"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s4-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:33.981" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:56:40.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:56:40.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:33.978" endtime="20231026 18:56:40.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:56:40.469" level="INFO"/>
<status status="PASS" starttime="20231026 18:56:40.469" endtime="20231026 18:56:40.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:56:40.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:56:40.470" endtime="20231026 18:56:40.470"/>
</kw>
<status status="PASS" starttime="20231026 18:56:33.978" endtime="20231026 18:56:40.471"/>
</kw>
<msg timestamp="20231026 18:56:40.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:56:33.978" endtime="20231026 18:56:40.471"/>
</kw>
<msg timestamp="20231026 18:56:40.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:33.976" endtime="20231026 18:56:40.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 18:56:40.471" endtime="20231026 18:56:40.472"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:40.476" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:56:46.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:56:46.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:40.474" endtime="20231026 18:56:46.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:56:46.506" level="INFO"/>
<status status="PASS" starttime="20231026 18:56:46.505" endtime="20231026 18:56:46.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:56:46.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:56:46.506" endtime="20231026 18:56:46.506"/>
</kw>
<status status="PASS" starttime="20231026 18:56:40.473" endtime="20231026 18:56:46.507"/>
</kw>
<msg timestamp="20231026 18:56:46.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:56:40.473" endtime="20231026 18:56:46.507"/>
</kw>
<msg timestamp="20231026 18:56:46.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:40.472" endtime="20231026 18:56:46.507"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 18:56:46.507" endtime="20231026 18:56:46.508"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231026 18:56:33.976" endtime="20231026 18:56:46.508"/>
</test>
<test id="s1-s4-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:46.514" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231026 18:56:46.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:56:46.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:46.511" endtime="20231026 18:56:46.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:56:46.517" level="INFO"/>
<status status="PASS" starttime="20231026 18:56:46.517" endtime="20231026 18:56:46.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:56:46.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:56:46.518" endtime="20231026 18:56:46.518"/>
</kw>
<status status="PASS" starttime="20231026 18:56:46.510" endtime="20231026 18:56:46.519"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:46.523" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:56:59.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:56:59.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:46.521" endtime="20231026 18:56:59.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:56:59.512" level="INFO"/>
<status status="PASS" starttime="20231026 18:56:59.511" endtime="20231026 18:56:59.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:56:59.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:56:59.512" endtime="20231026 18:56:59.513"/>
</kw>
<status status="PASS" starttime="20231026 18:56:46.520" endtime="20231026 18:56:59.513"/>
</kw>
<msg timestamp="20231026 18:56:59.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:56:46.519" endtime="20231026 18:56:59.513"/>
</kw>
<msg timestamp="20231026 18:56:59.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:46.519" endtime="20231026 18:56:59.513"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 18:56:59.513" endtime="20231026 18:56:59.514"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:59.517" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:56:59.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:56:59.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:59.514" endtime="20231026 18:56:59.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:56:59.522" level="INFO"/>
<status status="PASS" starttime="20231026 18:56:59.522" endtime="20231026 18:56:59.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:56:59.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:56:59.523" endtime="20231026 18:56:59.524"/>
</kw>
<status status="PASS" starttime="20231026 18:56:59.514" endtime="20231026 18:56:59.524"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231026 18:56:46.509" endtime="20231026 18:56:59.524"/>
</test>
<test id="s1-s4-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231026 18:56:59.527" level="INFO">${random} = 00049</msg>
<status status="PASS" starttime="20231026 18:56:59.527" endtime="20231026 18:56:59.527"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:56:59.532" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-00049 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:57:10.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:57:10.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:59.529" endtime="20231026 18:57:10.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:57:10.193" level="INFO"/>
<status status="PASS" starttime="20231026 18:57:10.192" endtime="20231026 18:57:10.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:57:10.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:57:10.193" endtime="20231026 18:57:10.194"/>
</kw>
<status status="PASS" starttime="20231026 18:56:59.528" endtime="20231026 18:57:10.194"/>
</kw>
<msg timestamp="20231026 18:57:10.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231026 18:56:59.528" endtime="20231026 18:57:10.194"/>
</kw>
<msg timestamp="20231026 18:57:10.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:56:59.527" endtime="20231026 18:57:10.194"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 18:57:10.195" endtime="20231026 18:57:10.195"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:57:10.199" level="INFO">Running command 'cat /tmp/key-00049 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:57:10.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:57:10.203" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231026 18:57:10.196" endtime="20231026 18:57:10.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:57:10.204" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231026 18:57:10.204" endtime="20231026 18:57:10.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:57:10.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:57:10.205" endtime="20231026 18:57:10.205"/>
</kw>
<msg timestamp="20231026 18:57:10.206" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231026 18:57:10.195" endtime="20231026 18:57:10.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231026 18:57:10.206" endtime="20231026 18:57:10.206"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231026 18:57:10.210" level="INFO">Running command 'rm /tmp/key-00049 2&gt;&amp;1'.</msg>
<msg timestamp="20231026 18:57:10.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20231026 18:57:10.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231026 18:57:10.207" endtime="20231026 18:57:10.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231026 18:57:10.215" level="INFO"/>
<status status="PASS" starttime="20231026 18:57:10.215" endtime="20231026 18:57:10.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231026 18:57:10.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231026 18:57:10.215" endtime="20231026 18:57:10.216"/>
</kw>
<status status="PASS" starttime="20231026 18:57:10.207" endtime="20231026 18:57:10.216"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231026 18:56:59.526" endtime="20231026 18:57:10.217"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231026 18:56:33.918" endtime="20231026 18:57:10.219"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="36951"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
