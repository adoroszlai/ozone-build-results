<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231027 23:10:29.121" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231027 23:04:17.986" endtime="20231027 23:04:17.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:17.991" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:17.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:17.995" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=c3537c7879d9
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.serv...</msg>
<status status="PASS" starttime="20231027 23:04:17.987" endtime="20231027 23:04:17.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:17.996" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=c3537c7879d9
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231027 23:04:17.995" endtime="20231027 23:04:17.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:17.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:17.996" endtime="20231027 23:04:17.997"/>
</kw>
<status status="PASS" starttime="20231027 23:04:17.987" endtime="20231027 23:04:17.997"/>
</kw>
<msg timestamp="20231027 23:04:17.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:17.987" endtime="20231027 23:04:17.998"/>
</kw>
<msg timestamp="20231027 23:04:17.998" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=c3537c7879d9
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.serv...</msg>
<status status="PASS" starttime="20231027 23:04:17.986" endtime="20231027 23:04:17.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:17.999" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=c3537c7879d9
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231027 23:04:17.998" endtime="20231027 23:04:17.999"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231027 23:04:17.999" endtime="20231027 23:04:17.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:18.013" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:20.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:20.587" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231027 23:04:18.000" endtime="20231027 23:04:20.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:20.588" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231027 23:04:20.587" endtime="20231027 23:04:20.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:20.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:20.589" endtime="20231027 23:04:20.589"/>
</kw>
<status status="PASS" starttime="20231027 23:04:18.000" endtime="20231027 23:04:20.590"/>
</kw>
<msg timestamp="20231027 23:04:20.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:18.000" endtime="20231027 23:04:20.590"/>
</kw>
<msg timestamp="20231027 23:04:20.590" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231027 23:04:17.999" endtime="20231027 23:04:20.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:20.591" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231027 23:04:20.590" endtime="20231027 23:04:20.591"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231027 23:04:20.591" endtime="20231027 23:04:20.591"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231027 23:04:17.985" endtime="20231027 23:04:20.592"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231027 23:04:20.593" endtime="20231027 23:04:20.593"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231027 23:04:20.594" endtime="20231027 23:04:20.594"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:20.597" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:23.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:23.421" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231027 23:04:20.595" endtime="20231027 23:04:23.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:23.422" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231027 23:04:23.422" endtime="20231027 23:04:23.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:23.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:23.423" endtime="20231027 23:04:23.423"/>
</kw>
<status status="PASS" starttime="20231027 23:04:20.595" endtime="20231027 23:04:23.428"/>
</kw>
<msg timestamp="20231027 23:04:23.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:20.594" endtime="20231027 23:04:23.429"/>
</kw>
<msg timestamp="20231027 23:04:23.429" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231027 23:04:20.594" endtime="20231027 23:04:23.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:23.429" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231027 23:04:23.429" endtime="20231027 23:04:23.429"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231027 23:04:23.430" endtime="20231027 23:04:23.430"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231027 23:04:20.592" endtime="20231027 23:04:23.430"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231027 23:04:17.938" endtime="20231027 23:04:23.431"/>
</suite>
<suite id="s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:26.339" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:28.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:28.947" level="INFO">${output} = 2023-10-27 23:04:28,747 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231027 23:04:26.335" endtime="20231027 23:04:28.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:28.950" level="INFO">2023-10-27 23:04:28,747 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231027 23:04:28.948" endtime="20231027 23:04:28.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:28.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:28.950" endtime="20231027 23:04:28.950"/>
</kw>
<status status="PASS" starttime="20231027 23:04:26.334" endtime="20231027 23:04:28.951"/>
</kw>
<msg timestamp="20231027 23:04:28.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:26.334" endtime="20231027 23:04:28.952"/>
</kw>
<msg timestamp="20231027 23:04:28.952" level="INFO">${output} = 2023-10-27 23:04:28,747 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231027 23:04:26.333" endtime="20231027 23:04:28.952"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:28.952" endtime="20231027 23:04:28.953"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:28.961" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:31.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:31.504" level="INFO">${output} = 2023-10-27 23:04:31,420 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20231027 23:04:28.958" endtime="20231027 23:04:31.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:31.505" level="INFO">2023-10-27 23:04:31,420 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231027 23:04:31.504" endtime="20231027 23:04:31.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:31.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:31.505" endtime="20231027 23:04:31.506"/>
</kw>
<status status="PASS" starttime="20231027 23:04:28.953" endtime="20231027 23:04:31.506"/>
</kw>
<msg timestamp="20231027 23:04:31.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:28.953" endtime="20231027 23:04:31.507"/>
</kw>
<msg timestamp="20231027 23:04:31.507" level="INFO">${output} = 2023-10-27 23:04:31,420 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20231027 23:04:28.953" endtime="20231027 23:04:31.507"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:31.507" endtime="20231027 23:04:31.507"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:04:26.332" endtime="20231027 23:04:31.508"/>
</test>
<test id="s1-s2-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:31.512" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231027 23:04:31.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:31.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:31.510" endtime="20231027 23:04:31.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:31.515" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:31.515" endtime="20231027 23:04:31.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:31.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:31.515" endtime="20231027 23:04:31.516"/>
</kw>
<status status="PASS" starttime="20231027 23:04:31.509" endtime="20231027 23:04:31.516"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:31.519" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:37.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:37.174" level="INFO">${output} = 2023-10-27 23:04:34,960 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-27 23:04:35,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231027 23:04:31.518" endtime="20231027 23:04:37.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:37.175" level="INFO">2023-10-27 23:04:34,960 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-27 23:04:35,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-10-27 23:04:35,081 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-10-27 23:04:35,412 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231027 23:04:37.175" endtime="20231027 23:04:37.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:37.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:37.175" endtime="20231027 23:04:37.176"/>
</kw>
<status status="PASS" starttime="20231027 23:04:31.517" endtime="20231027 23:04:37.176"/>
</kw>
<msg timestamp="20231027 23:04:37.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:31.517" endtime="20231027 23:04:37.177"/>
</kw>
<msg timestamp="20231027 23:04:37.177" level="INFO">${output} = 2023-10-27 23:04:34,960 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-27 23:04:35,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231027 23:04:31.516" endtime="20231027 23:04:37.177"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:37.177" endtime="20231027 23:04:37.177"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:37.180" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:37.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:37.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:37.178" endtime="20231027 23:04:37.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:37.184" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:37.183" endtime="20231027 23:04:37.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:37.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:37.184" endtime="20231027 23:04:37.185"/>
</kw>
<status status="PASS" starttime="20231027 23:04:37.178" endtime="20231027 23:04:37.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:04:31.509" endtime="20231027 23:04:37.186"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:37.191" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:40.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:40.218" level="INFO">${output} = 2023-10-27 23:04:40,175 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20231027 23:04:37.189" endtime="20231027 23:04:40.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:40.219" level="INFO">2023-10-27 23:04:40,175 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231027 23:04:40.218" endtime="20231027 23:04:40.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:40.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:40.219" endtime="20231027 23:04:40.220"/>
</kw>
<status status="PASS" starttime="20231027 23:04:37.189" endtime="20231027 23:04:40.220"/>
</kw>
<msg timestamp="20231027 23:04:40.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:37.188" endtime="20231027 23:04:40.220"/>
</kw>
<msg timestamp="20231027 23:04:40.221" level="INFO">${output} = 2023-10-27 23:04:40,175 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20231027 23:04:37.188" endtime="20231027 23:04:40.221"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:40.221" endtime="20231027 23:04:40.221"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:04:37.187" endtime="20231027 23:04:40.221"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:40.225" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231027 23:04:40.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:40.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:40.223" endtime="20231027 23:04:40.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:40.228" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:40.227" endtime="20231027 23:04:40.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:40.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:40.228" endtime="20231027 23:04:40.228"/>
</kw>
<status status="PASS" starttime="20231027 23:04:40.223" endtime="20231027 23:04:40.229"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:40.232" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:45.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:45.337" level="INFO">${output} = 2023-10-27 23:04:43,850 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-27 23:04:43,991 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231027 23:04:40.230" endtime="20231027 23:04:45.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:45.338" level="INFO">2023-10-27 23:04:43,850 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-27 23:04:43,991 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-10-27 23:04:43,991 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-10-27 23:04:44,274 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231027 23:04:45.337" endtime="20231027 23:04:45.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:45.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:45.338" endtime="20231027 23:04:45.339"/>
</kw>
<status status="PASS" starttime="20231027 23:04:40.230" endtime="20231027 23:04:45.339"/>
</kw>
<msg timestamp="20231027 23:04:45.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:40.229" endtime="20231027 23:04:45.340"/>
</kw>
<msg timestamp="20231027 23:04:45.340" level="INFO">${output} = 2023-10-27 23:04:43,850 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-27 23:04:43,991 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231027 23:04:40.229" endtime="20231027 23:04:45.340"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:45.340" endtime="20231027 23:04:45.340"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:45.343" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:45.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:45.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:45.341" endtime="20231027 23:04:45.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:45.347" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:45.346" endtime="20231027 23:04:45.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:45.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:45.347" endtime="20231027 23:04:45.348"/>
</kw>
<status status="PASS" starttime="20231027 23:04:45.341" endtime="20231027 23:04:45.348"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:04:40.222" endtime="20231027 23:04:45.348"/>
</test>
<test id="s1-s2-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:45.353" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:45.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:45.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:45.351" endtime="20231027 23:04:45.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:45.939" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:45.938" endtime="20231027 23:04:45.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:45.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:45.939" endtime="20231027 23:04:45.939"/>
</kw>
<status status="PASS" starttime="20231027 23:04:45.351" endtime="20231027 23:04:45.940"/>
</kw>
<msg timestamp="20231027 23:04:45.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:45.351" endtime="20231027 23:04:45.940"/>
</kw>
<status status="PASS" starttime="20231027 23:04:45.350" endtime="20231027 23:04:45.940"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:45.944" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:46.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:46.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:45.942" endtime="20231027 23:04:46.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:46.403" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:46.403" endtime="20231027 23:04:46.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:46.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:46.404" endtime="20231027 23:04:46.404"/>
</kw>
<status status="PASS" starttime="20231027 23:04:45.941" endtime="20231027 23:04:46.404"/>
</kw>
<msg timestamp="20231027 23:04:46.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:45.941" endtime="20231027 23:04:46.405"/>
</kw>
<status status="PASS" starttime="20231027 23:04:45.941" endtime="20231027 23:04:46.405"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:46.408" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:46.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:46.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:46.407" endtime="20231027 23:04:46.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:46.955" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:46.955" endtime="20231027 23:04:46.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:46.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:46.955" endtime="20231027 23:04:46.956"/>
</kw>
<status status="PASS" starttime="20231027 23:04:46.406" endtime="20231027 23:04:46.956"/>
</kw>
<msg timestamp="20231027 23:04:46.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:46.406" endtime="20231027 23:04:46.957"/>
</kw>
<status status="PASS" starttime="20231027 23:04:46.405" endtime="20231027 23:04:46.957"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:46.960" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:47.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:47.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:46.958" endtime="20231027 23:04:47.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:47.441" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:47.440" endtime="20231027 23:04:47.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:47.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:47.442" endtime="20231027 23:04:47.442"/>
</kw>
<status status="PASS" starttime="20231027 23:04:46.958" endtime="20231027 23:04:47.442"/>
</kw>
<msg timestamp="20231027 23:04:47.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:46.958" endtime="20231027 23:04:47.443"/>
</kw>
<status status="PASS" starttime="20231027 23:04:46.957" endtime="20231027 23:04:47.443"/>
</kw>
<status status="PASS" starttime="20231027 23:04:45.350" endtime="20231027 23:04:47.443"/>
</kw>
<status status="PASS" starttime="20231027 23:04:45.350" endtime="20231027 23:04:47.443"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:04:45.349" endtime="20231027 23:04:47.443"/>
</test>
<test id="s1-s2-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231027 23:04:47.448" level="INFO">${randStr} = 3832429636</msg>
<status status="PASS" starttime="20231027 23:04:47.447" endtime="20231027 23:04:47.448"/>
</kw>
<msg timestamp="20231027 23:04:47.448" level="INFO">${random} = ozone-test-3832429636</msg>
<status status="PASS" starttime="20231027 23:04:47.447" endtime="20231027 23:04:47.448"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:47.452" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-3832429636 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:49.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:49.541" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3832429636"
}</msg>
<status status="PASS" starttime="20231027 23:04:47.450" endtime="20231027 23:04:49.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:49.542" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3832429636"
}</msg>
<status status="PASS" starttime="20231027 23:04:49.542" endtime="20231027 23:04:49.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:49.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:49.543" endtime="20231027 23:04:49.543"/>
</kw>
<status status="PASS" starttime="20231027 23:04:47.449" endtime="20231027 23:04:49.544"/>
</kw>
<msg timestamp="20231027 23:04:49.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:47.449" endtime="20231027 23:04:49.544"/>
</kw>
<msg timestamp="20231027 23:04:49.545" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3832429636"
}</msg>
<status status="PASS" starttime="20231027 23:04:47.449" endtime="20231027 23:04:49.545"/>
</kw>
<msg timestamp="20231027 23:04:49.545" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3832429636"
}</msg>
<status status="PASS" starttime="20231027 23:04:47.448" endtime="20231027 23:04:49.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:49.545" endtime="20231027 23:04:49.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:49.546" endtime="20231027 23:04:49.546"/>
</kw>
<msg timestamp="20231027 23:04:49.547" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231027 23:04:47.448" endtime="20231027 23:04:49.547"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231027 23:04:49.547" endtime="20231027 23:04:49.547"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:04:47.445" endtime="20231027 23:04:49.547"/>
</test>
<test id="s1-s2-t7" name="Create key using S3 API" line="62">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:49.553" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231027 23:04:49.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:49.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:49.550" endtime="20231027 23:04:49.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:49.556" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:49.555" endtime="20231027 23:04:49.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:49.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:49.557" endtime="20231027 23:04:49.557"/>
</kw>
<status status="PASS" starttime="20231027 23:04:49.550" endtime="20231027 23:04:49.558"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:49.561" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:51.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:51.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:49.559" endtime="20231027 23:04:51.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:51.499" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:51.499" endtime="20231027 23:04:51.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:51.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:51.499" endtime="20231027 23:04:51.500"/>
</kw>
<msg timestamp="20231027 23:04:51.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:49.558" endtime="20231027 23:04:51.500"/>
</kw>
<msg timestamp="20231027 23:04:51.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:49.558" endtime="20231027 23:04:51.500"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:51.501" endtime="20231027 23:04:51.501"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:51.504" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:51.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:51.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:51.502" endtime="20231027 23:04:51.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:51.507" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:51.506" endtime="20231027 23:04:51.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:51.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:51.507" endtime="20231027 23:04:51.508"/>
</kw>
<status status="PASS" starttime="20231027 23:04:51.501" endtime="20231027 23:04:51.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:04:49.549" endtime="20231027 23:04:51.508"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231027 23:04:26.250" endtime="20231027 23:04:51.510"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s3-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231027 23:04:54.422" level="INFO">${random} = 35962</msg>
<status status="PASS" starttime="20231027 23:04:54.421" endtime="20231027 23:04:54.422"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:54.427" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-35962 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:58.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:58.853" level="INFO">${output} = 2023-10-27 23:04:57,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-27 23:04:57,629 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231027 23:04:54.424" endtime="20231027 23:04:58.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:58.854" level="INFO">2023-10-27 23:04:57,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-27 23:04:57,629 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-10-27 23:04:57,629 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231027 23:04:58.853" endtime="20231027 23:04:58.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:58.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:58.854" endtime="20231027 23:04:58.855"/>
</kw>
<status status="PASS" starttime="20231027 23:04:54.423" endtime="20231027 23:04:58.855"/>
</kw>
<msg timestamp="20231027 23:04:58.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:54.422" endtime="20231027 23:04:58.856"/>
</kw>
<msg timestamp="20231027 23:04:58.856" level="INFO">${output} = 2023-10-27 23:04:57,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-10-27 23:04:57,629 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231027 23:04:54.422" endtime="20231027 23:04:58.856"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:58.856" endtime="20231027 23:04:58.857"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:58.860" level="INFO">Running command 'cat /tmp/key-35962 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:58.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:58.863" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231027 23:04:58.858" endtime="20231027 23:04:58.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:58.864" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231027 23:04:58.863" endtime="20231027 23:04:58.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:58.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:58.864" endtime="20231027 23:04:58.865"/>
</kw>
<msg timestamp="20231027 23:04:58.865" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231027 23:04:58.857" endtime="20231027 23:04:58.865"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:04:58.865" endtime="20231027 23:04:58.866"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:58.868" level="INFO">Running command 'rm /tmp/key-35962 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:58.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:58.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:58.867" endtime="20231027 23:04:58.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:58.872" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:58.872" endtime="20231027 23:04:58.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:58.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:58.873" endtime="20231027 23:04:58.873"/>
</kw>
<status status="PASS" starttime="20231027 23:04:58.866" endtime="20231027 23:04:58.873"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:04:54.420" endtime="20231027 23:04:58.874"/>
</test>
<test id="s1-s3-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:58.881" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:59.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:59.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:58.879" endtime="20231027 23:04:59.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:59.340" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:59.339" endtime="20231027 23:04:59.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:59.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:59.340" endtime="20231027 23:04:59.341"/>
</kw>
<status status="PASS" starttime="20231027 23:04:58.878" endtime="20231027 23:04:59.341"/>
</kw>
<msg timestamp="20231027 23:04:59.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:58.878" endtime="20231027 23:04:59.342"/>
</kw>
<status status="PASS" starttime="20231027 23:04:58.878" endtime="20231027 23:04:59.342"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:59.345" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:04:59.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:04:59.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:59.343" endtime="20231027 23:04:59.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:04:59.795" level="INFO"/>
<status status="PASS" starttime="20231027 23:04:59.794" endtime="20231027 23:04:59.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:04:59.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:04:59.795" endtime="20231027 23:04:59.795"/>
</kw>
<status status="PASS" starttime="20231027 23:04:59.343" endtime="20231027 23:04:59.796"/>
</kw>
<msg timestamp="20231027 23:04:59.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:59.343" endtime="20231027 23:04:59.796"/>
</kw>
<status status="PASS" starttime="20231027 23:04:59.342" endtime="20231027 23:04:59.796"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:04:59.799" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:05:00.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:05:00.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:04:59.798" endtime="20231027 23:05:00.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:05:00.247" level="INFO"/>
<status status="PASS" starttime="20231027 23:05:00.246" endtime="20231027 23:05:00.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:05:00.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:05:00.247" endtime="20231027 23:05:00.248"/>
</kw>
<status status="PASS" starttime="20231027 23:04:59.797" endtime="20231027 23:05:00.248"/>
</kw>
<msg timestamp="20231027 23:05:00.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:04:59.797" endtime="20231027 23:05:00.249"/>
</kw>
<status status="PASS" starttime="20231027 23:04:59.796" endtime="20231027 23:05:00.249"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:05:00.252" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:05:00.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:05:00.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:05:00.250" endtime="20231027 23:05:00.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:05:00.704" level="INFO"/>
<status status="PASS" starttime="20231027 23:05:00.703" endtime="20231027 23:05:00.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:05:00.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:05:00.704" endtime="20231027 23:05:00.705"/>
</kw>
<status status="PASS" starttime="20231027 23:05:00.250" endtime="20231027 23:05:00.705"/>
</kw>
<msg timestamp="20231027 23:05:00.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231027 23:05:00.249" endtime="20231027 23:05:00.706"/>
</kw>
<status status="PASS" starttime="20231027 23:05:00.249" endtime="20231027 23:05:00.706"/>
</kw>
<status status="PASS" starttime="20231027 23:04:58.877" endtime="20231027 23:05:00.706"/>
</kw>
<status status="PASS" starttime="20231027 23:04:58.877" endtime="20231027 23:05:00.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:04:58.876" endtime="20231027 23:05:00.706"/>
</test>
<test id="s1-s3-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:05:00.711" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:05:01.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:05:01.389" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 27 Oct 2023 23:04:44 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231027 23:05:00.709" endtime="20231027 23:05:01.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:05:01.390" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 27 Oct 2023 23:04:44 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 27 Oct 2023 23:05:01 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231027 23:05:01.390" endtime="20231027 23:05:01.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:05:01.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:05:01.390" endtime="20231027 23:05:01.391"/>
</kw>
<msg timestamp="20231027 23:05:01.391" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 27 Oct 2023 23:04:44 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231027 23:05:00.708" endtime="20231027 23:05:01.391"/>
</kw>
<msg timestamp="20231027 23:05:01.391" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 27 Oct 2023 23:04:44 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231027 23:05:00.708" endtime="20231027 23:05:01.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:05:01.392" endtime="20231027 23:05:01.392"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:05:01.395" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:05:01.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:05:01.397" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231027 23:05:01.393" endtime="20231027 23:05:01.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:05:01.398" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231027 23:05:01.397" endtime="20231027 23:05:01.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:05:01.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:05:01.398" endtime="20231027 23:05:01.399"/>
</kw>
<msg timestamp="20231027 23:05:01.399" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231027 23:05:01.392" endtime="20231027 23:05:01.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:05:01.399" endtime="20231027 23:05:01.400"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:05:01.402" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:05:01.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:05:01.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:05:01.400" endtime="20231027 23:05:01.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:05:01.406" level="INFO"/>
<status status="PASS" starttime="20231027 23:05:01.406" endtime="20231027 23:05:01.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:05:01.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:05:01.407" endtime="20231027 23:05:01.407"/>
</kw>
<status status="PASS" starttime="20231027 23:05:01.400" endtime="20231027 23:05:01.408"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:05:00.707" endtime="20231027 23:05:01.408"/>
</test>
<test id="s1-s3-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:05:01.413" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:05:01.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:05:01.998" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 27 Oct 2023 23:04:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231027 23:05:01.411" endtime="20231027 23:05:01.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:05:01.999" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 27 Oct 2023 23:04:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 27 Oct 2023 23:05:01 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231027 23:05:01.998" endtime="20231027 23:05:01.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:05:02.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:05:01.999" endtime="20231027 23:05:02.000"/>
</kw>
<msg timestamp="20231027 23:05:02.000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 27 Oct 2023 23:04:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231027 23:05:01.411" endtime="20231027 23:05:02.000"/>
</kw>
<msg timestamp="20231027 23:05:02.000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 27 Oct 2023 23:04:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231027 23:05:01.410" endtime="20231027 23:05:02.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:05:02.001" endtime="20231027 23:05:02.001"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:05:02.004" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:05:02.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:05:02.006" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231027 23:05:02.002" endtime="20231027 23:05:02.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:05:02.007" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231027 23:05:02.006" endtime="20231027 23:05:02.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:05:02.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:05:02.007" endtime="20231027 23:05:02.008"/>
</kw>
<msg timestamp="20231027 23:05:02.008" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231027 23:05:02.001" endtime="20231027 23:05:02.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231027 23:05:02.008" endtime="20231027 23:05:02.008"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:05:02.011" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:05:02.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20231027 23:05:02.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231027 23:05:02.009" endtime="20231027 23:05:02.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231027 23:05:02.014" level="INFO"/>
<status status="PASS" starttime="20231027 23:05:02.013" endtime="20231027 23:05:02.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231027 23:05:02.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231027 23:05:02.014" endtime="20231027 23:05:02.015"/>
</kw>
<status status="PASS" starttime="20231027 23:05:02.009" endtime="20231027 23:05:02.015"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231027 23:05:01.409" endtime="20231027 23:05:02.015"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231027 23:04:54.346" endtime="20231027 23:05:02.016"/>
</suite>
<suite id="s1-s4" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231027 23:05:04.895" endtime="20231027 23:05:04.896"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231027 23:05:04.896" endtime="20231027 23:05:04.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231027 23:05:04.900" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231027 23:10:04.895" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231027 23:05:04.897" endtime="20231027 23:10:04.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231027 23:10:04.896" endtime="20231027 23:10:04.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231027 23:10:04.896" endtime="20231027 23:10:04.896"/>
</kw>
<status status="FAIL" starttime="20231027 23:05:04.897" endtime="20231027 23:10:04.896"/>
</kw>
<msg timestamp="20231027 23:10:04.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231027 23:05:04.897" endtime="20231027 23:10:04.898"/>
</kw>
<status status="FAIL" starttime="20231027 23:05:04.896" endtime="20231027 23:10:04.898"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20231027 23:10:04.898" endtime="20231027 23:10:04.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231027 23:05:04.894" endtime="20231027 23:10:04.899">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20231027 23:05:04.851" endtime="20231027 23:10:04.900"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="338472"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Prepare">upgrade.Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
