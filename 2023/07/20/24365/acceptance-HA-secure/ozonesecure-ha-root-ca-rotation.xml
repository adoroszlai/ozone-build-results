<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230720 05:43:48.091" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:36:37.551" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:36:37.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20230720 05:36:37.558" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230720 05:36:37.547" endtime="20230720 05:36:37.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:36:37.559" level="INFO">scm</msg>
<status status="PASS" starttime="20230720 05:36:37.558" endtime="20230720 05:36:37.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:36:37.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230720 05:36:37.559" endtime="20230720 05:36:37.560"/>
</kw>
<status status="PASS" starttime="20230720 05:36:37.547" endtime="20230720 05:36:37.560"/>
</kw>
<msg timestamp="20230720 05:36:37.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230720 05:36:37.546" endtime="20230720 05:36:37.560"/>
</kw>
<msg timestamp="20230720 05:36:37.561" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230720 05:36:37.546" endtime="20230720 05:36:37.561"/>
</kw>
<msg timestamp="20230720 05:36:37.561" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230720 05:36:37.545" endtime="20230720 05:36:37.561"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230720 05:36:37.561" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230720 05:36:37.561" endtime="20230720 05:36:37.562"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:36:37.567" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:36:37.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230720 05:36:37.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230720 05:36:37.564" endtime="20230720 05:36:37.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:36:37.631" level="INFO"/>
<status status="PASS" starttime="20230720 05:36:37.630" endtime="20230720 05:36:37.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:36:37.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230720 05:36:37.631" endtime="20230720 05:36:37.632"/>
</kw>
<status status="PASS" starttime="20230720 05:36:37.563" endtime="20230720 05:36:37.632"/>
</kw>
<msg timestamp="20230720 05:36:37.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230720 05:36:37.563" endtime="20230720 05:36:37.632"/>
</kw>
<status status="PASS" starttime="20230720 05:36:37.562" endtime="20230720 05:36:37.633"/>
</kw>
<status status="PASS" starttime="20230720 05:36:37.562" endtime="20230720 05:36:37.633"/>
</kw>
<status status="PASS" starttime="20230720 05:36:37.544" endtime="20230720 05:36:37.633"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230720 05:36:37.543" endtime="20230720 05:36:37.633"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230720 05:36:37.460" endtime="20230720 05:36:37.635"/>
</suite>
<suite id="s1-s2" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s2-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:36:56.226" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:37:03.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230720 05:37:03.387" level="INFO">${output} = scm1.org:9894:LEADER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:FOLLOWER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf...</msg>
<status status="PASS" starttime="20230720 05:36:56.222" endtime="20230720 05:37:03.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:03.389" level="INFO">scm1.org:9894:LEADER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:FOLLOWER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf8e5:172.25.0.118</msg>
<status status="PASS" starttime="20230720 05:37:03.388" endtime="20230720 05:37:03.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:37:03.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230720 05:37:03.389" endtime="20230720 05:37:03.390"/>
</kw>
<status status="PASS" starttime="20230720 05:36:56.220" endtime="20230720 05:37:03.390"/>
</kw>
<msg timestamp="20230720 05:37:03.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230720 05:36:56.219" endtime="20230720 05:37:03.390"/>
</kw>
<msg timestamp="20230720 05:37:03.391" level="INFO">${result} = scm1.org:9894:LEADER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:FOLLOWER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf...</msg>
<status status="PASS" starttime="20230720 05:36:56.219" endtime="20230720 05:37:03.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:03.391" level="INFO">scm1.org:9894:LEADER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:FOLLOWER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf8e5:172.25.0.118</msg>
<status status="PASS" starttime="20230720 05:37:03.391" endtime="20230720 05:37:03.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230720 05:37:03.392" endtime="20230720 05:37:03.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230720 05:37:03.392" endtime="20230720 05:37:03.393"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230720 05:37:03.394" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230720 05:37:03.394" level="INFO">${scmLine} = scm1.org:9894:LEADER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116</msg>
<status status="PASS" starttime="20230720 05:37:03.393" endtime="20230720 05:37:03.394"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230720 05:37:03.395" level="INFO">${splits} = ['scm1.org', '9894', 'LEADER', '1dc20e6a-c47b-46d0-998c-0b054e2a3d5a', '172.25.0.116']</msg>
<status status="PASS" starttime="20230720 05:37:03.394" endtime="20230720 05:37:03.395"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230720 05:37:03.396" level="INFO">${leaderSCM} = 1dc20e6a-c47b-46d0-998c-0b054e2a3d5a</msg>
<status status="PASS" starttime="20230720 05:37:03.395" endtime="20230720 05:37:03.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:03.397" level="INFO">Leader SCM: 1dc20e6a-c47b-46d0-998c-0b054e2a3d5a</msg>
<status status="PASS" starttime="20230720 05:37:03.396" endtime="20230720 05:37:03.397"/>
</kw>
<msg timestamp="20230720 05:37:03.397" level="INFO">${leaderSCM} = 1dc20e6a-c47b-46d0-998c-0b054e2a3d5a</msg>
<status status="PASS" starttime="20230720 05:36:56.218" endtime="20230720 05:37:03.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:03.398" level="INFO">Leader SCM: 1dc20e6a-c47b-46d0-998c-0b054e2a3d5a</msg>
<status status="PASS" starttime="20230720 05:37:03.397" endtime="20230720 05:37:03.398"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:37:03.403" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:37:10.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20230720 05:37:10.585" level="INFO">${output} = scm1.org:9894:LEADER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:FOLLOWER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf...</msg>
<status status="PASS" starttime="20230720 05:37:03.400" endtime="20230720 05:37:10.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:10.587" level="INFO">scm1.org:9894:LEADER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:FOLLOWER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf8e5:172.25.0.118</msg>
<status status="PASS" starttime="20230720 05:37:10.586" endtime="20230720 05:37:10.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:37:10.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230720 05:37:10.587" endtime="20230720 05:37:10.588"/>
</kw>
<status status="PASS" starttime="20230720 05:37:03.399" endtime="20230720 05:37:10.588"/>
</kw>
<msg timestamp="20230720 05:37:10.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230720 05:37:03.399" endtime="20230720 05:37:10.588"/>
</kw>
<msg timestamp="20230720 05:37:10.589" level="INFO">${result} = scm1.org:9894:LEADER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:FOLLOWER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf...</msg>
<status status="PASS" starttime="20230720 05:37:03.398" endtime="20230720 05:37:10.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:10.589" level="INFO">scm1.org:9894:LEADER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:FOLLOWER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf8e5:172.25.0.118</msg>
<status status="PASS" starttime="20230720 05:37:10.589" endtime="20230720 05:37:10.589"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230720 05:37:10.590" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230720 05:37:10.590" level="INFO">${scm_line} = scm2.org:9894:FOLLOWER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117</msg>
<status status="PASS" starttime="20230720 05:37:10.589" endtime="20230720 05:37:10.590"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230720 05:37:10.591" level="INFO">${scm_split} = ['scm2.org', '9894', 'FOLLOWER', '0c5e3a6c-ea0a-4649-8c96-0c4922ed0768', '172.25.0.117']</msg>
<status status="PASS" starttime="20230720 05:37:10.590" endtime="20230720 05:37:10.591"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230720 05:37:10.592" level="INFO">${scm_uuid} = 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768</msg>
<status status="PASS" starttime="20230720 05:37:10.591" endtime="20230720 05:37:10.592"/>
</kw>
<msg timestamp="20230720 05:37:10.593" level="INFO">${target_scm_uuid} = 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768</msg>
<status status="PASS" starttime="20230720 05:37:03.398" endtime="20230720 05:37:10.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:37:10.602" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:37:19.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230720 05:37:19.623" level="INFO">${output} = Transfer leadership successfully to 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768.</msg>
<status status="PASS" starttime="20230720 05:37:10.599" endtime="20230720 05:37:19.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:19.625" level="INFO">Transfer leadership successfully to 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768.</msg>
<status status="PASS" starttime="20230720 05:37:19.623" endtime="20230720 05:37:19.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:37:19.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230720 05:37:19.625" endtime="20230720 05:37:19.626"/>
</kw>
<status status="PASS" starttime="20230720 05:37:10.598" endtime="20230720 05:37:19.626"/>
</kw>
<msg timestamp="20230720 05:37:19.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230720 05:37:10.598" endtime="20230720 05:37:19.627"/>
</kw>
<msg timestamp="20230720 05:37:19.627" level="INFO">${result} = Transfer leadership successfully to 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768.</msg>
<status status="PASS" starttime="20230720 05:37:10.593" endtime="20230720 05:37:19.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:19.628" level="INFO">Transfer leadership successfully to 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768.</msg>
<status status="PASS" starttime="20230720 05:37:19.627" endtime="20230720 05:37:19.628"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230720 05:37:19.628" endtime="20230720 05:37:19.629"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:37:19.643" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:37:28.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20230720 05:37:28.306" level="INFO">${output} = scm1.org:9894:FOLLOWER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:LEADER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf...</msg>
<status status="PASS" starttime="20230720 05:37:19.632" endtime="20230720 05:37:28.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:28.308" level="INFO">scm1.org:9894:FOLLOWER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:LEADER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf8e5:172.25.0.118</msg>
<status status="PASS" starttime="20230720 05:37:28.307" endtime="20230720 05:37:28.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:37:28.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230720 05:37:28.308" endtime="20230720 05:37:28.309"/>
</kw>
<status status="PASS" starttime="20230720 05:37:19.631" endtime="20230720 05:37:28.309"/>
</kw>
<msg timestamp="20230720 05:37:28.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230720 05:37:19.630" endtime="20230720 05:37:28.309"/>
</kw>
<msg timestamp="20230720 05:37:28.310" level="INFO">${result} = scm1.org:9894:FOLLOWER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:LEADER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf...</msg>
<status status="PASS" starttime="20230720 05:37:19.630" endtime="20230720 05:37:28.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:28.310" level="INFO">scm1.org:9894:FOLLOWER:1dc20e6a-c47b-46d0-998c-0b054e2a3d5a:172.25.0.116
scm2.org:9894:LEADER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117
scm3.org:9894:FOLLOWER:ebcfdf0a-2c56-4d01-a90e-57b16c6bf8e5:172.25.0.118</msg>
<status status="PASS" starttime="20230720 05:37:28.310" endtime="20230720 05:37:28.310"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230720 05:37:28.310" endtime="20230720 05:37:28.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230720 05:37:28.311" endtime="20230720 05:37:28.312"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230720 05:37:28.312" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230720 05:37:28.312" level="INFO">${scmLine} = scm2.org:9894:LEADER:0c5e3a6c-ea0a-4649-8c96-0c4922ed0768:172.25.0.117</msg>
<status status="PASS" starttime="20230720 05:37:28.312" endtime="20230720 05:37:28.312"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230720 05:37:28.313" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', '0c5e3a6c-ea0a-4649-8c96-0c4922ed0768', '172.25.0.117']</msg>
<status status="PASS" starttime="20230720 05:37:28.312" endtime="20230720 05:37:28.313"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230720 05:37:28.314" level="INFO">${leaderSCM} = 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768</msg>
<status status="PASS" starttime="20230720 05:37:28.313" endtime="20230720 05:37:28.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:28.315" level="INFO">Leader SCM: 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768</msg>
<status status="PASS" starttime="20230720 05:37:28.315" endtime="20230720 05:37:28.315"/>
</kw>
<msg timestamp="20230720 05:37:28.316" level="INFO">${newLeaderSCM} = 0c5e3a6c-ea0a-4649-8c96-0c4922ed0768</msg>
<status status="PASS" starttime="20230720 05:37:19.629" endtime="20230720 05:37:28.316"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230720 05:37:28.316" endtime="20230720 05:37:28.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230720 05:36:56.217" endtime="20230720 05:37:28.317"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230720 05:36:56.135" endtime="20230720 05:37:28.319"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:37:37.070" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:37:45.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230720 05:37:45.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230720 05:37:37.046" endtime="20230720 05:37:45.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:45.093" level="INFO"/>
<status status="PASS" starttime="20230720 05:37:45.089" endtime="20230720 05:37:45.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:37:45.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230720 05:37:45.093" endtime="20230720 05:37:45.096"/>
</kw>
<status status="PASS" starttime="20230720 05:37:37.045" endtime="20230720 05:37:45.098"/>
</kw>
<msg timestamp="20230720 05:37:45.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230720 05:37:37.045" endtime="20230720 05:37:45.100"/>
</kw>
<msg timestamp="20230720 05:37:45.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230720 05:37:37.043" endtime="20230720 05:37:45.100"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230720 05:37:45.102" endtime="20230720 05:37:45.104"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:37:45.114" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:37:55.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20230720 05:37:55.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230720 05:37:45.106" endtime="20230720 05:37:55.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:55.705" level="INFO"/>
<status status="PASS" starttime="20230720 05:37:55.704" endtime="20230720 05:37:55.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:37:55.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230720 05:37:55.705" endtime="20230720 05:37:55.706"/>
</kw>
<status status="PASS" starttime="20230720 05:37:45.105" endtime="20230720 05:37:55.706"/>
</kw>
<msg timestamp="20230720 05:37:55.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230720 05:37:45.105" endtime="20230720 05:37:55.706"/>
</kw>
<msg timestamp="20230720 05:37:55.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230720 05:37:45.104" endtime="20230720 05:37:55.707"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230720 05:37:55.707" endtime="20230720 05:37:55.707"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230720 05:37:37.042" endtime="20230720 05:37:55.708"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:37:55.714" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230720 05:37:55.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20230720 05:37:55.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230720 05:37:55.711" endtime="20230720 05:37:55.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:37:55.718" level="INFO"/>
<status status="PASS" starttime="20230720 05:37:55.718" endtime="20230720 05:37:55.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:37:55.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230720 05:37:55.719" endtime="20230720 05:37:55.720"/>
</kw>
<status status="PASS" starttime="20230720 05:37:55.710" endtime="20230720 05:37:55.720"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:37:55.725" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:42:55.710" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230720 05:37:55.722" endtime="20230720 05:42:55.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230720 05:42:55.712" endtime="20230720 05:42:55.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230720 05:42:55.712" endtime="20230720 05:42:55.712"/>
</kw>
<status status="FAIL" starttime="20230720 05:37:55.721" endtime="20230720 05:42:55.712"/>
</kw>
<msg timestamp="20230720 05:42:55.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230720 05:37:55.721" endtime="20230720 05:42:55.713"/>
</kw>
<status status="FAIL" starttime="20230720 05:37:55.720" endtime="20230720 05:42:55.713"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230720 05:42:55.713" endtime="20230720 05:42:55.713"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230720 05:42:55.714" endtime="20230720 05:42:55.714"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230720 05:37:55.709" endtime="20230720 05:42:55.714">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230720 05:42:55.719" level="INFO">${random} = 05129</msg>
<status status="PASS" starttime="20230720 05:42:55.718" endtime="20230720 05:42:55.719"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230720 05:42:55.729" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-05129 2&gt;&amp;1'.</msg>
<msg timestamp="20230720 05:43:05.101" level="INFO">${rc} = 255</msg>
<msg timestamp="20230720 05:43:05.101" level="INFO">${output} = KEY_NOT_FOUND Key:rootca-key not found</msg>
<status status="PASS" starttime="20230720 05:42:55.722" endtime="20230720 05:43:05.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230720 05:43:05.103" level="INFO">KEY_NOT_FOUND Key:rootca-key not found</msg>
<status status="PASS" starttime="20230720 05:43:05.102" endtime="20230720 05:43:05.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230720 05:43:05.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230720 05:43:05.104" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20230720 05:43:05.103" endtime="20230720 05:43:05.104"/>
</kw>
<status status="FAIL" starttime="20230720 05:42:55.721" endtime="20230720 05:43:05.104"/>
</kw>
<msg timestamp="20230720 05:43:05.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230720 05:42:55.720" endtime="20230720 05:43:05.104"/>
</kw>
<status status="FAIL" starttime="20230720 05:42:55.719" endtime="20230720 05:43:05.104"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230720 05:43:05.105" endtime="20230720 05:43:05.105"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230720 05:43:05.105" endtime="20230720 05:43:05.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230720 05:43:05.105" endtime="20230720 05:43:05.105"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230720 05:43:05.105" endtime="20230720 05:43:05.105"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230720 05:42:55.716" endtime="20230720 05:43:05.106">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20230720 05:37:36.973" endtime="20230720 05:43:05.107"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="360493"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="3" fail="2" skip="0" id="s1" name="ozonesecure-ha-root-ca-rotation">ozonesecure-ha-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="1" fail="2" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
