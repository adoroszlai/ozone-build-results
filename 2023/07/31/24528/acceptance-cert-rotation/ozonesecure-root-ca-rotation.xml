<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230731 23:06:25.917" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:03:34.183" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:03:34.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:03:34.212" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230731 23:03:34.168" endtime="20230731 23:03:34.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:03:34.215" level="INFO">scm</msg>
<status status="PASS" starttime="20230731 23:03:34.213" endtime="20230731 23:03:34.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:03:34.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:03:34.217" endtime="20230731 23:03:34.218"/>
</kw>
<status status="PASS" starttime="20230731 23:03:34.165" endtime="20230731 23:03:34.218"/>
</kw>
<msg timestamp="20230731 23:03:34.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:03:34.164" endtime="20230731 23:03:34.218"/>
</kw>
<msg timestamp="20230731 23:03:34.219" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230731 23:03:34.163" endtime="20230731 23:03:34.219"/>
</kw>
<msg timestamp="20230731 23:03:34.219" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230731 23:03:34.157" endtime="20230731 23:03:34.219"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230731 23:03:34.220" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230731 23:03:34.219" endtime="20230731 23:03:34.220"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:03:34.228" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:03:34.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:03:34.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:03:34.224" endtime="20230731 23:03:34.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:03:34.349" level="INFO"/>
<status status="PASS" starttime="20230731 23:03:34.348" endtime="20230731 23:03:34.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:03:34.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:03:34.350" endtime="20230731 23:03:34.350"/>
</kw>
<status status="PASS" starttime="20230731 23:03:34.224" endtime="20230731 23:03:34.351"/>
</kw>
<msg timestamp="20230731 23:03:34.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:03:34.223" endtime="20230731 23:03:34.351"/>
</kw>
<status status="PASS" starttime="20230731 23:03:34.221" endtime="20230731 23:03:34.351"/>
</kw>
<status status="PASS" starttime="20230731 23:03:34.220" endtime="20230731 23:03:34.351"/>
</kw>
<status status="PASS" starttime="20230731 23:03:34.154" endtime="20230731 23:03:34.351"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230731 23:03:34.142" endtime="20230731 23:03:34.352"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230731 23:03:34.024" endtime="20230731 23:03:34.354"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:03:55.953" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:04:05.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:04:05.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:03:55.950" endtime="20230731 23:04:05.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:04:05.336" level="INFO"/>
<status status="PASS" starttime="20230731 23:04:05.335" endtime="20230731 23:04:05.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:04:05.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:04:05.337" endtime="20230731 23:04:05.337"/>
</kw>
<status status="PASS" starttime="20230731 23:03:55.950" endtime="20230731 23:04:05.338"/>
</kw>
<msg timestamp="20230731 23:04:05.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:03:55.949" endtime="20230731 23:04:05.338"/>
</kw>
<msg timestamp="20230731 23:04:05.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:03:55.948" endtime="20230731 23:04:05.338"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:04:05.338" endtime="20230731 23:04:05.339"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:04:05.345" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:04:12.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:04:12.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:04:05.341" endtime="20230731 23:04:12.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:04:12.780" level="INFO"/>
<status status="PASS" starttime="20230731 23:04:12.778" endtime="20230731 23:04:12.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:04:12.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:04:12.782" endtime="20230731 23:04:12.784"/>
</kw>
<status status="PASS" starttime="20230731 23:04:05.340" endtime="20230731 23:04:12.785"/>
</kw>
<msg timestamp="20230731 23:04:12.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:04:05.340" endtime="20230731 23:04:12.789"/>
</kw>
<msg timestamp="20230731 23:04:12.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:04:05.339" endtime="20230731 23:04:12.790"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:04:12.790" endtime="20230731 23:04:12.792"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230731 23:03:55.947" endtime="20230731 23:04:12.792"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:04:12.813" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230731 23:04:12.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:04:12.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:04:12.803" endtime="20230731 23:04:12.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:04:12.822" level="INFO"/>
<status status="PASS" starttime="20230731 23:04:12.820" endtime="20230731 23:04:12.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:04:12.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:04:12.822" endtime="20230731 23:04:12.823"/>
</kw>
<status status="PASS" starttime="20230731 23:04:12.801" endtime="20230731 23:04:12.823"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:04:12.837" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:04:27.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:04:27.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:04:12.827" endtime="20230731 23:04:27.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:04:27.799" level="INFO"/>
<status status="PASS" starttime="20230731 23:04:27.798" endtime="20230731 23:04:27.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:04:27.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:04:27.799" endtime="20230731 23:04:27.800"/>
</kw>
<status status="PASS" starttime="20230731 23:04:12.825" endtime="20230731 23:04:27.800"/>
</kw>
<msg timestamp="20230731 23:04:27.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:04:12.825" endtime="20230731 23:04:27.800"/>
</kw>
<msg timestamp="20230731 23:04:27.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:04:12.824" endtime="20230731 23:04:27.801"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:04:27.801" endtime="20230731 23:04:27.801"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:04:27.805" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:04:27.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:04:27.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:04:27.802" endtime="20230731 23:04:27.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:04:27.810" level="INFO"/>
<status status="PASS" starttime="20230731 23:04:27.809" endtime="20230731 23:04:27.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:04:27.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:04:27.811" endtime="20230731 23:04:27.811"/>
</kw>
<status status="PASS" starttime="20230731 23:04:27.802" endtime="20230731 23:04:27.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230731 23:04:12.799" endtime="20230731 23:04:27.812"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230731 23:04:27.814" level="INFO">${random} = 99540</msg>
<status status="PASS" starttime="20230731 23:04:27.814" endtime="20230731 23:04:27.814"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:04:27.831" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-99540 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:04:39.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:04:39.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:04:27.825" endtime="20230731 23:04:39.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:04:39.999" level="INFO"/>
<status status="PASS" starttime="20230731 23:04:39.998" endtime="20230731 23:04:39.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:04:40.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:04:40.000" endtime="20230731 23:04:40.000"/>
</kw>
<status status="PASS" starttime="20230731 23:04:27.824" endtime="20230731 23:04:40.000"/>
</kw>
<msg timestamp="20230731 23:04:40.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:04:27.823" endtime="20230731 23:04:40.001"/>
</kw>
<msg timestamp="20230731 23:04:40.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:04:27.815" endtime="20230731 23:04:40.001"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:04:40.001" endtime="20230731 23:04:40.002"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:04:40.005" level="INFO">Running command 'cat /tmp/key-99540 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:04:40.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:04:40.012" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230731 23:04:40.002" endtime="20230731 23:04:40.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:04:40.013" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230731 23:04:40.012" endtime="20230731 23:04:40.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:04:40.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:04:40.013" endtime="20230731 23:04:40.014"/>
</kw>
<msg timestamp="20230731 23:04:40.014" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230731 23:04:40.002" endtime="20230731 23:04:40.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:04:40.015" endtime="20230731 23:04:40.015"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:04:40.019" level="INFO">Running command 'rm /tmp/key-99540 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:04:40.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:04:40.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:04:40.016" endtime="20230731 23:04:40.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:04:40.024" level="INFO"/>
<status status="PASS" starttime="20230731 23:04:40.023" endtime="20230731 23:04:40.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:04:40.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:04:40.024" endtime="20230731 23:04:40.026"/>
</kw>
<status status="PASS" starttime="20230731 23:04:40.016" endtime="20230731 23:04:40.026"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230731 23:04:27.813" endtime="20230731 23:04:40.026"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230731 23:03:55.878" endtime="20230731 23:04:40.028"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:05:18.570" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:05:26.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:05:26.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:18.567" endtime="20230731 23:05:26.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:05:26.148" level="INFO"/>
<status status="PASS" starttime="20230731 23:05:26.146" endtime="20230731 23:05:26.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:05:26.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:05:26.148" endtime="20230731 23:05:26.149"/>
</kw>
<status status="PASS" starttime="20230731 23:05:18.567" endtime="20230731 23:05:26.149"/>
</kw>
<msg timestamp="20230731 23:05:26.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:05:18.566" endtime="20230731 23:05:26.150"/>
</kw>
<msg timestamp="20230731 23:05:26.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:18.565" endtime="20230731 23:05:26.150"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:05:26.150" endtime="20230731 23:05:26.151"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:05:26.157" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:05:34.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:05:34.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:26.154" endtime="20230731 23:05:34.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:05:34.964" level="INFO"/>
<status status="PASS" starttime="20230731 23:05:34.961" endtime="20230731 23:05:34.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:05:34.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:05:34.964" endtime="20230731 23:05:34.987"/>
</kw>
<status status="PASS" starttime="20230731 23:05:26.153" endtime="20230731 23:05:34.987"/>
</kw>
<msg timestamp="20230731 23:05:34.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:05:26.152" endtime="20230731 23:05:34.988"/>
</kw>
<msg timestamp="20230731 23:05:34.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:26.151" endtime="20230731 23:05:34.988"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:05:34.988" endtime="20230731 23:05:34.991"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230731 23:05:18.564" endtime="20230731 23:05:34.991"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:05:34.999" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230731 23:05:35.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:05:35.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:34.996" endtime="20230731 23:05:35.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:05:35.006" level="INFO"/>
<status status="PASS" starttime="20230731 23:05:35.004" endtime="20230731 23:05:35.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:05:35.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:05:35.006" endtime="20230731 23:05:35.007"/>
</kw>
<status status="PASS" starttime="20230731 23:05:34.994" endtime="20230731 23:05:35.008"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:05:35.015" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:05:47.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:05:47.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:35.011" endtime="20230731 23:05:47.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:05:47.277" level="INFO"/>
<status status="PASS" starttime="20230731 23:05:47.276" endtime="20230731 23:05:47.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:05:47.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:05:47.277" endtime="20230731 23:05:47.279"/>
</kw>
<status status="PASS" starttime="20230731 23:05:35.010" endtime="20230731 23:05:47.279"/>
</kw>
<msg timestamp="20230731 23:05:47.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:05:35.009" endtime="20230731 23:05:47.279"/>
</kw>
<msg timestamp="20230731 23:05:47.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:35.008" endtime="20230731 23:05:47.279"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:05:47.280" endtime="20230731 23:05:47.280"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:05:47.284" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:05:47.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:05:47.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:47.281" endtime="20230731 23:05:47.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:05:47.290" level="INFO"/>
<status status="PASS" starttime="20230731 23:05:47.289" endtime="20230731 23:05:47.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:05:47.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:05:47.291" endtime="20230731 23:05:47.291"/>
</kw>
<status status="PASS" starttime="20230731 23:05:47.280" endtime="20230731 23:05:47.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230731 23:05:34.993" endtime="20230731 23:05:47.292"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230731 23:05:47.295" level="INFO">${random} = 45108</msg>
<status status="PASS" starttime="20230731 23:05:47.294" endtime="20230731 23:05:47.295"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:05:47.300" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-45108 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:05:57.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:05:57.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:47.297" endtime="20230731 23:05:57.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:05:57.190" level="INFO"/>
<status status="PASS" starttime="20230731 23:05:57.189" endtime="20230731 23:05:57.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:05:57.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:05:57.190" endtime="20230731 23:05:57.191"/>
</kw>
<status status="PASS" starttime="20230731 23:05:47.297" endtime="20230731 23:05:57.191"/>
</kw>
<msg timestamp="20230731 23:05:57.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:05:47.296" endtime="20230731 23:05:57.192"/>
</kw>
<msg timestamp="20230731 23:05:57.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:47.295" endtime="20230731 23:05:57.192"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:05:57.192" endtime="20230731 23:05:57.193"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:05:57.197" level="INFO">Running command 'cat /tmp/key-45108 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:05:57.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:05:57.200" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230731 23:05:57.194" endtime="20230731 23:05:57.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:05:57.202" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230731 23:05:57.201" endtime="20230731 23:05:57.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:05:57.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:05:57.202" endtime="20230731 23:05:57.203"/>
</kw>
<msg timestamp="20230731 23:05:57.203" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230731 23:05:57.193" endtime="20230731 23:05:57.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230731 23:05:57.203" endtime="20230731 23:05:57.204"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:05:57.207" level="INFO">Running command 'rm /tmp/key-45108 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:05:57.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:05:57.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230731 23:05:57.205" endtime="20230731 23:05:57.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:05:57.212" level="INFO"/>
<status status="PASS" starttime="20230731 23:05:57.211" endtime="20230731 23:05:57.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:05:57.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:05:57.212" endtime="20230731 23:05:57.213"/>
</kw>
<status status="PASS" starttime="20230731 23:05:57.204" endtime="20230731 23:05:57.213"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230731 23:05:47.293" endtime="20230731 23:05:57.213"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230731 23:05:18.495" endtime="20230731 23:05:57.215"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230731 23:06:02.278" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230731 23:06:03.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230731 23:06:03.015" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230731 23:06:02.264" endtime="20230731 23:06:03.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:06:03.017" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230731 23:06:03.016" endtime="20230731 23:06:03.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230731 23:06:03.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230731 23:06:03.017" endtime="20230731 23:06:03.018"/>
</kw>
<status status="PASS" starttime="20230731 23:06:02.263" endtime="20230731 23:06:03.018"/>
</kw>
<msg timestamp="20230731 23:06:03.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230731 23:06:02.263" endtime="20230731 23:06:03.019"/>
</kw>
<msg timestamp="20230731 23:06:03.019" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230731 23:06:02.262" endtime="20230731 23:06:03.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 23:06:03.020" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230731 23:06:03.019" endtime="20230731 23:06:03.020"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230731 23:06:03.022" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230731 23:06:03.020" endtime="20230731 23:06:03.022"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230731 23:06:03.027" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230731 23:06:03.024" endtime="20230731 23:06:03.027"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230731 23:06:03.028" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230731 23:06:03.027" endtime="20230731 23:06:03.028"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230731 23:06:03.030" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230731 23:06:03.028" endtime="20230731 23:06:03.030"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230731 23:06:03.031" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230731 23:06:03.030" endtime="20230731 23:06:03.031"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230731 23:06:03.031" endtime="20230731 23:06:03.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230731 23:06:02.261" endtime="20230731 23:06:03.033"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230731 23:06:02.191" endtime="20230731 23:06:03.036"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="84045"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
