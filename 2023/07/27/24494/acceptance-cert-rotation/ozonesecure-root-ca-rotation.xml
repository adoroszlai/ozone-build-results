<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230727 19:28:01.682" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:24:54.066" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:24:54.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:24:54.073" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230727 19:24:54.061" endtime="20230727 19:24:54.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:24:54.075" level="INFO">scm</msg>
<status status="PASS" starttime="20230727 19:24:54.074" endtime="20230727 19:24:54.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:24:54.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:24:54.075" endtime="20230727 19:24:54.077"/>
</kw>
<status status="PASS" starttime="20230727 19:24:54.060" endtime="20230727 19:24:54.077"/>
</kw>
<msg timestamp="20230727 19:24:54.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:24:54.060" endtime="20230727 19:24:54.077"/>
</kw>
<msg timestamp="20230727 19:24:54.078" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230727 19:24:54.059" endtime="20230727 19:24:54.078"/>
</kw>
<msg timestamp="20230727 19:24:54.078" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230727 19:24:54.058" endtime="20230727 19:24:54.078"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230727 19:24:54.080" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230727 19:24:54.079" endtime="20230727 19:24:54.080"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:24:54.089" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:24:54.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:24:54.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:24:54.084" endtime="20230727 19:24:54.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:24:54.172" level="INFO"/>
<status status="PASS" starttime="20230727 19:24:54.171" endtime="20230727 19:24:54.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:24:54.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:24:54.173" endtime="20230727 19:24:54.174"/>
</kw>
<status status="PASS" starttime="20230727 19:24:54.083" endtime="20230727 19:24:54.174"/>
</kw>
<msg timestamp="20230727 19:24:54.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:24:54.082" endtime="20230727 19:24:54.175"/>
</kw>
<status status="PASS" starttime="20230727 19:24:54.081" endtime="20230727 19:24:54.175"/>
</kw>
<status status="PASS" starttime="20230727 19:24:54.080" endtime="20230727 19:24:54.175"/>
</kw>
<status status="PASS" starttime="20230727 19:24:54.057" endtime="20230727 19:24:54.175"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230727 19:24:54.056" endtime="20230727 19:24:54.176"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230727 19:24:53.843" endtime="20230727 19:24:54.178"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:25:14.543" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:25:25.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:25:25.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:14.539" endtime="20230727 19:25:25.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:25:25.199" level="INFO"/>
<status status="PASS" starttime="20230727 19:25:25.199" endtime="20230727 19:25:25.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:25:25.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:25:25.200" endtime="20230727 19:25:25.201"/>
</kw>
<status status="PASS" starttime="20230727 19:25:14.539" endtime="20230727 19:25:25.201"/>
</kw>
<msg timestamp="20230727 19:25:25.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:25:14.538" endtime="20230727 19:25:25.201"/>
</kw>
<msg timestamp="20230727 19:25:25.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:14.537" endtime="20230727 19:25:25.202"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:25:25.202" endtime="20230727 19:25:25.203"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:25:25.210" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:25:34.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:25:34.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:25.206" endtime="20230727 19:25:34.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:25:34.301" level="INFO"/>
<status status="PASS" starttime="20230727 19:25:34.299" endtime="20230727 19:25:34.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:25:34.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:25:34.302" endtime="20230727 19:25:34.305"/>
</kw>
<status status="PASS" starttime="20230727 19:25:25.204" endtime="20230727 19:25:34.317"/>
</kw>
<msg timestamp="20230727 19:25:34.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:25:25.204" endtime="20230727 19:25:34.317"/>
</kw>
<msg timestamp="20230727 19:25:34.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:25.203" endtime="20230727 19:25:34.319"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:25:34.330" endtime="20230727 19:25:34.332"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230727 19:25:14.536" endtime="20230727 19:25:34.332"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:25:34.363" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230727 19:25:34.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:25:34.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:34.348" endtime="20230727 19:25:34.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:25:34.387" level="INFO"/>
<status status="PASS" starttime="20230727 19:25:34.381" endtime="20230727 19:25:34.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:25:34.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:25:34.388" endtime="20230727 19:25:34.395"/>
</kw>
<status status="PASS" starttime="20230727 19:25:34.341" endtime="20230727 19:25:34.397"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:25:34.451" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:25:52.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:25:52.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:34.411" endtime="20230727 19:25:52.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:25:52.341" level="INFO"/>
<status status="PASS" starttime="20230727 19:25:52.332" endtime="20230727 19:25:52.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:25:52.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:25:52.341" endtime="20230727 19:25:52.349"/>
</kw>
<status status="PASS" starttime="20230727 19:25:34.403" endtime="20230727 19:25:52.353"/>
</kw>
<msg timestamp="20230727 19:25:52.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:25:34.403" endtime="20230727 19:25:52.353"/>
</kw>
<msg timestamp="20230727 19:25:52.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:34.397" endtime="20230727 19:25:52.353"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:25:52.357" endtime="20230727 19:25:52.358"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:25:52.384" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:25:52.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:25:52.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:52.365" endtime="20230727 19:25:52.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:25:52.394" level="INFO"/>
<status status="PASS" starttime="20230727 19:25:52.393" endtime="20230727 19:25:52.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:25:52.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:25:52.394" endtime="20230727 19:25:52.395"/>
</kw>
<status status="PASS" starttime="20230727 19:25:52.363" endtime="20230727 19:25:52.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230727 19:25:34.336" endtime="20230727 19:25:52.396"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230727 19:25:52.400" level="INFO">${random} = 69335</msg>
<status status="PASS" starttime="20230727 19:25:52.399" endtime="20230727 19:25:52.400"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:25:52.406" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-69335 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:26:04.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:26:04.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:52.402" endtime="20230727 19:26:04.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:26:04.898" level="INFO"/>
<status status="PASS" starttime="20230727 19:26:04.897" endtime="20230727 19:26:04.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:26:04.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:26:04.898" endtime="20230727 19:26:04.899"/>
</kw>
<status status="PASS" starttime="20230727 19:25:52.401" endtime="20230727 19:26:04.899"/>
</kw>
<msg timestamp="20230727 19:26:04.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:25:52.401" endtime="20230727 19:26:04.900"/>
</kw>
<msg timestamp="20230727 19:26:04.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:25:52.400" endtime="20230727 19:26:04.900"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:26:04.900" endtime="20230727 19:26:04.901"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:26:04.913" level="INFO">Running command 'cat /tmp/key-69335 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:26:04.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:26:04.920" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230727 19:26:04.902" endtime="20230727 19:26:04.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:26:04.922" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230727 19:26:04.921" endtime="20230727 19:26:04.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:26:04.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:26:04.922" endtime="20230727 19:26:04.923"/>
</kw>
<msg timestamp="20230727 19:26:04.923" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230727 19:26:04.902" endtime="20230727 19:26:04.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:26:04.924" endtime="20230727 19:26:04.925"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:26:04.936" level="INFO">Running command 'rm /tmp/key-69335 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:26:04.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:26:04.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:26:04.926" endtime="20230727 19:26:04.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:26:04.941" level="INFO"/>
<status status="PASS" starttime="20230727 19:26:04.940" endtime="20230727 19:26:04.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:26:04.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:26:04.941" endtime="20230727 19:26:04.943"/>
</kw>
<status status="PASS" starttime="20230727 19:26:04.925" endtime="20230727 19:26:04.943"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230727 19:25:52.398" endtime="20230727 19:26:04.943"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230727 19:25:14.460" endtime="20230727 19:26:04.946"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:26:44.697" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:26:54.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:26:54.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:26:44.688" endtime="20230727 19:26:54.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:26:54.988" level="INFO"/>
<status status="PASS" starttime="20230727 19:26:54.987" endtime="20230727 19:26:54.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:26:54.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:26:54.995" endtime="20230727 19:26:54.996"/>
</kw>
<status status="PASS" starttime="20230727 19:26:44.687" endtime="20230727 19:26:54.996"/>
</kw>
<msg timestamp="20230727 19:26:54.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:26:44.687" endtime="20230727 19:26:54.997"/>
</kw>
<msg timestamp="20230727 19:26:54.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:26:44.686" endtime="20230727 19:26:54.997"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:26:54.997" endtime="20230727 19:26:54.998"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:26:55.025" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:27:04.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:27:04.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:26:55.016" endtime="20230727 19:27:04.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:27:04.844" level="INFO"/>
<status status="PASS" starttime="20230727 19:27:04.843" endtime="20230727 19:27:04.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:27:04.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:27:04.844" endtime="20230727 19:27:04.845"/>
</kw>
<status status="PASS" starttime="20230727 19:26:55.015" endtime="20230727 19:27:04.845"/>
</kw>
<msg timestamp="20230727 19:27:04.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:26:55.013" endtime="20230727 19:27:04.845"/>
</kw>
<msg timestamp="20230727 19:27:04.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:26:54.998" endtime="20230727 19:27:04.845"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:27:04.845" endtime="20230727 19:27:04.846"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230727 19:26:44.685" endtime="20230727 19:27:04.846"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:27:04.853" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230727 19:27:04.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:27:04.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:27:04.850" endtime="20230727 19:27:04.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:27:04.859" level="INFO"/>
<status status="PASS" starttime="20230727 19:27:04.858" endtime="20230727 19:27:04.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:27:04.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:27:04.859" endtime="20230727 19:27:04.860"/>
</kw>
<status status="PASS" starttime="20230727 19:27:04.849" endtime="20230727 19:27:04.860"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:27:04.865" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:27:16.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:27:16.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:27:04.863" endtime="20230727 19:27:16.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:27:16.727" level="INFO"/>
<status status="PASS" starttime="20230727 19:27:16.725" endtime="20230727 19:27:16.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:27:16.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:27:16.728" endtime="20230727 19:27:16.729"/>
</kw>
<status status="PASS" starttime="20230727 19:27:04.862" endtime="20230727 19:27:16.729"/>
</kw>
<msg timestamp="20230727 19:27:16.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:27:04.861" endtime="20230727 19:27:16.729"/>
</kw>
<msg timestamp="20230727 19:27:16.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:27:04.861" endtime="20230727 19:27:16.730"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:27:16.730" endtime="20230727 19:27:16.731"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:27:16.736" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:27:16.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:27:16.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:27:16.732" endtime="20230727 19:27:16.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:27:16.742" level="INFO"/>
<status status="PASS" starttime="20230727 19:27:16.741" endtime="20230727 19:27:16.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:27:16.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:27:16.743" endtime="20230727 19:27:16.744"/>
</kw>
<status status="PASS" starttime="20230727 19:27:16.731" endtime="20230727 19:27:16.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230727 19:27:04.848" endtime="20230727 19:27:16.744"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230727 19:27:16.748" level="INFO">${random} = 16151</msg>
<status status="PASS" starttime="20230727 19:27:16.747" endtime="20230727 19:27:16.748"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:27:16.754" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-16151 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:27:30.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:27:30.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:27:16.750" endtime="20230727 19:27:30.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:27:30.052" level="INFO"/>
<status status="PASS" starttime="20230727 19:27:30.051" endtime="20230727 19:27:30.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:27:30.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:27:30.052" endtime="20230727 19:27:30.053"/>
</kw>
<status status="PASS" starttime="20230727 19:27:16.750" endtime="20230727 19:27:30.054"/>
</kw>
<msg timestamp="20230727 19:27:30.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:27:16.749" endtime="20230727 19:27:30.054"/>
</kw>
<msg timestamp="20230727 19:27:30.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:27:16.748" endtime="20230727 19:27:30.058"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:27:30.059" endtime="20230727 19:27:30.059"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:27:30.065" level="INFO">Running command 'cat /tmp/key-16151 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:27:30.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:27:30.069" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230727 19:27:30.061" endtime="20230727 19:27:30.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:27:30.071" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230727 19:27:30.070" endtime="20230727 19:27:30.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:27:30.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:27:30.072" endtime="20230727 19:27:30.072"/>
</kw>
<msg timestamp="20230727 19:27:30.073" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230727 19:27:30.060" endtime="20230727 19:27:30.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230727 19:27:30.073" endtime="20230727 19:27:30.073"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:27:30.077" level="INFO">Running command 'rm /tmp/key-16151 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:27:30.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:27:30.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230727 19:27:30.074" endtime="20230727 19:27:30.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:27:30.082" level="INFO"/>
<status status="PASS" starttime="20230727 19:27:30.082" endtime="20230727 19:27:30.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:27:30.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:27:30.083" endtime="20230727 19:27:30.083"/>
</kw>
<status status="PASS" starttime="20230727 19:27:30.074" endtime="20230727 19:27:30.084"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230727 19:27:16.745" endtime="20230727 19:27:30.084"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230727 19:26:44.607" endtime="20230727 19:27:30.086"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230727 19:27:35.779" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230727 19:27:36.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20230727 19:27:36.559" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230727 19:27:35.774" endtime="20230727 19:27:36.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:27:36.561" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230727 19:27:36.560" endtime="20230727 19:27:36.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230727 19:27:36.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230727 19:27:36.561" endtime="20230727 19:27:36.562"/>
</kw>
<status status="PASS" starttime="20230727 19:27:35.772" endtime="20230727 19:27:36.562"/>
</kw>
<msg timestamp="20230727 19:27:36.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230727 19:27:35.771" endtime="20230727 19:27:36.563"/>
</kw>
<msg timestamp="20230727 19:27:36.563" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230727 19:27:35.770" endtime="20230727 19:27:36.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230727 19:27:36.564" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230727 19:27:36.563" endtime="20230727 19:27:36.564"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230727 19:27:36.565" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230727 19:27:36.564" endtime="20230727 19:27:36.565"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230727 19:27:36.570" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230727 19:27:36.566" endtime="20230727 19:27:36.570"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230727 19:27:36.571" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230727 19:27:36.570" endtime="20230727 19:27:36.571"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230727 19:27:36.573" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230727 19:27:36.571" endtime="20230727 19:27:36.573"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230727 19:27:36.574" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230727 19:27:36.573" endtime="20230727 19:27:36.574"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230727 19:27:36.574" endtime="20230727 19:27:36.575"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230727 19:27:35.767" endtime="20230727 19:27:36.576"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230727 19:27:35.606" endtime="20230727 19:27:36.578"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="97272"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
