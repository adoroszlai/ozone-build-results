<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230728 00:32:57.099" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:30:11.533" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:30:11.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:30:11.540" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230728 00:30:11.530" endtime="20230728 00:30:11.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:30:11.542" level="INFO">scm</msg>
<status status="PASS" starttime="20230728 00:30:11.541" endtime="20230728 00:30:11.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:30:11.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:30:11.542" endtime="20230728 00:30:11.543"/>
</kw>
<status status="PASS" starttime="20230728 00:30:11.530" endtime="20230728 00:30:11.543"/>
</kw>
<msg timestamp="20230728 00:30:11.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:30:11.529" endtime="20230728 00:30:11.543"/>
</kw>
<msg timestamp="20230728 00:30:11.543" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230728 00:30:11.528" endtime="20230728 00:30:11.543"/>
</kw>
<msg timestamp="20230728 00:30:11.544" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230728 00:30:11.528" endtime="20230728 00:30:11.544"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230728 00:30:11.544" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230728 00:30:11.544" endtime="20230728 00:30:11.544"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:30:11.549" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:30:11.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:30:11.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:30:11.546" endtime="20230728 00:30:11.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:30:11.605" level="INFO"/>
<status status="PASS" starttime="20230728 00:30:11.604" endtime="20230728 00:30:11.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:30:11.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:30:11.605" endtime="20230728 00:30:11.606"/>
</kw>
<status status="PASS" starttime="20230728 00:30:11.546" endtime="20230728 00:30:11.606"/>
</kw>
<msg timestamp="20230728 00:30:11.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:30:11.546" endtime="20230728 00:30:11.606"/>
</kw>
<status status="PASS" starttime="20230728 00:30:11.545" endtime="20230728 00:30:11.606"/>
</kw>
<status status="PASS" starttime="20230728 00:30:11.545" endtime="20230728 00:30:11.607"/>
</kw>
<status status="PASS" starttime="20230728 00:30:11.525" endtime="20230728 00:30:11.607"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230728 00:30:11.524" endtime="20230728 00:30:11.607"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230728 00:30:11.454" endtime="20230728 00:30:11.609"/>
</suite>
<suite id="s1-s2" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s2-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:30:30.758" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:30:39.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:30:39.012" level="INFO">${output} = scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:LEADER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:FOLLOWER:34120335-29d9-4030-9e15-3962af1e1...</msg>
<status status="PASS" starttime="20230728 00:30:30.754" endtime="20230728 00:30:39.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:30:39.014" level="INFO">scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:LEADER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:FOLLOWER:34120335-29d9-4030-9e15-3962af1e117f:172.25.0.117</msg>
<status status="PASS" starttime="20230728 00:30:39.013" endtime="20230728 00:30:39.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:30:39.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:30:39.015" endtime="20230728 00:30:39.016"/>
</kw>
<status status="PASS" starttime="20230728 00:30:30.753" endtime="20230728 00:30:39.016"/>
</kw>
<msg timestamp="20230728 00:30:39.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:30:30.753" endtime="20230728 00:30:39.016"/>
</kw>
<msg timestamp="20230728 00:30:39.017" level="INFO">${result} = scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:LEADER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:FOLLOWER:34120335-29d9-4030-9e15-3962af1e1...</msg>
<status status="PASS" starttime="20230728 00:30:30.752" endtime="20230728 00:30:39.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:30:39.017" level="INFO">scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:LEADER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:FOLLOWER:34120335-29d9-4030-9e15-3962af1e117f:172.25.0.117</msg>
<status status="PASS" starttime="20230728 00:30:39.017" endtime="20230728 00:30:39.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:30:39.018" endtime="20230728 00:30:39.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:30:39.018" endtime="20230728 00:30:39.019"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230728 00:30:39.019" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230728 00:30:39.020" level="INFO">${scmLine} = scm1.org:9894:LEADER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116</msg>
<status status="PASS" starttime="20230728 00:30:39.019" endtime="20230728 00:30:39.020"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230728 00:30:39.020" level="INFO">${splits} = ['scm1.org', '9894', 'LEADER', '7402bd51-d489-4652-9f49-3cd9717da483', '172.25.0.116']</msg>
<status status="PASS" starttime="20230728 00:30:39.020" endtime="20230728 00:30:39.020"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230728 00:30:39.022" level="INFO">${leaderSCM} = 7402bd51-d489-4652-9f49-3cd9717da483</msg>
<status status="PASS" starttime="20230728 00:30:39.021" endtime="20230728 00:30:39.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:30:39.023" level="INFO">Leader SCM: 7402bd51-d489-4652-9f49-3cd9717da483</msg>
<status status="PASS" starttime="20230728 00:30:39.022" endtime="20230728 00:30:39.023"/>
</kw>
<msg timestamp="20230728 00:30:39.023" level="INFO">${leaderSCM} = 7402bd51-d489-4652-9f49-3cd9717da483</msg>
<status status="PASS" starttime="20230728 00:30:30.752" endtime="20230728 00:30:39.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:30:39.024" level="INFO">Leader SCM: 7402bd51-d489-4652-9f49-3cd9717da483</msg>
<status status="PASS" starttime="20230728 00:30:39.023" endtime="20230728 00:30:39.024"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:30:39.030" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:30:45.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:30:45.939" level="INFO">${output} = scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:LEADER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:FOLLOWER:34120335-29d9-4030-9e15-3962af1e1...</msg>
<status status="PASS" starttime="20230728 00:30:39.026" endtime="20230728 00:30:45.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:30:45.940" level="INFO">scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:LEADER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:FOLLOWER:34120335-29d9-4030-9e15-3962af1e117f:172.25.0.117</msg>
<status status="PASS" starttime="20230728 00:30:45.939" endtime="20230728 00:30:45.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:30:45.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:30:45.941" endtime="20230728 00:30:45.942"/>
</kw>
<status status="PASS" starttime="20230728 00:30:39.026" endtime="20230728 00:30:45.943"/>
</kw>
<msg timestamp="20230728 00:30:45.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:30:39.025" endtime="20230728 00:30:45.943"/>
</kw>
<msg timestamp="20230728 00:30:45.943" level="INFO">${result} = scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:LEADER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:FOLLOWER:34120335-29d9-4030-9e15-3962af1e1...</msg>
<status status="PASS" starttime="20230728 00:30:39.025" endtime="20230728 00:30:45.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:30:45.944" level="INFO">scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:LEADER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:FOLLOWER:34120335-29d9-4030-9e15-3962af1e117f:172.25.0.117</msg>
<status status="PASS" starttime="20230728 00:30:45.943" endtime="20230728 00:30:45.944"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230728 00:30:45.945" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230728 00:30:45.945" level="INFO">${scm_line} = scm2.org:9894:FOLLOWER:34120335-29d9-4030-9e15-3962af1e117f:172.25.0.117</msg>
<status status="PASS" starttime="20230728 00:30:45.944" endtime="20230728 00:30:45.945"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230728 00:30:45.946" level="INFO">${scm_split} = ['scm2.org', '9894', 'FOLLOWER', '34120335-29d9-4030-9e15-3962af1e117f', '172.25.0.117']</msg>
<status status="PASS" starttime="20230728 00:30:45.945" endtime="20230728 00:30:45.946"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230728 00:30:45.948" level="INFO">${scm_uuid} = 34120335-29d9-4030-9e15-3962af1e117f</msg>
<status status="PASS" starttime="20230728 00:30:45.946" endtime="20230728 00:30:45.948"/>
</kw>
<msg timestamp="20230728 00:30:45.948" level="INFO">${target_scm_uuid} = 34120335-29d9-4030-9e15-3962af1e117f</msg>
<status status="PASS" starttime="20230728 00:30:39.024" endtime="20230728 00:30:45.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:30:45.953" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 34120335-29d9-4030-9e15-3962af1e117f 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:31:00.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:31:00.399" level="INFO">${output} = Transfer leadership successfully to 34120335-29d9-4030-9e15-3962af1e117f.</msg>
<status status="PASS" starttime="20230728 00:30:45.950" endtime="20230728 00:31:00.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:00.401" level="INFO">Transfer leadership successfully to 34120335-29d9-4030-9e15-3962af1e117f.</msg>
<status status="PASS" starttime="20230728 00:31:00.400" endtime="20230728 00:31:00.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:31:00.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:31:00.401" endtime="20230728 00:31:00.402"/>
</kw>
<status status="PASS" starttime="20230728 00:30:45.949" endtime="20230728 00:31:00.402"/>
</kw>
<msg timestamp="20230728 00:31:00.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:30:45.949" endtime="20230728 00:31:00.403"/>
</kw>
<msg timestamp="20230728 00:31:00.403" level="INFO">${result} = Transfer leadership successfully to 34120335-29d9-4030-9e15-3962af1e117f.</msg>
<status status="PASS" starttime="20230728 00:30:45.948" endtime="20230728 00:31:00.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:00.404" level="INFO">Transfer leadership successfully to 34120335-29d9-4030-9e15-3962af1e117f.</msg>
<status status="PASS" starttime="20230728 00:31:00.403" endtime="20230728 00:31:00.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:31:00.404" endtime="20230728 00:31:00.405"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:31:00.411" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:31:10.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:31:10.471" level="INFO">${output} = scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:FOLLOWER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:LEADER:34120335-29d9-4030-9e15-3962af1e1...</msg>
<status status="PASS" starttime="20230728 00:31:00.407" endtime="20230728 00:31:10.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:10.476" level="INFO">scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:FOLLOWER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:LEADER:34120335-29d9-4030-9e15-3962af1e117f:172.25.0.117</msg>
<status status="PASS" starttime="20230728 00:31:10.474" endtime="20230728 00:31:10.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:31:10.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:31:10.477" endtime="20230728 00:31:10.480"/>
</kw>
<status status="PASS" starttime="20230728 00:31:00.406" endtime="20230728 00:31:10.480"/>
</kw>
<msg timestamp="20230728 00:31:10.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:31:00.406" endtime="20230728 00:31:10.480"/>
</kw>
<msg timestamp="20230728 00:31:10.492" level="INFO">${result} = scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:FOLLOWER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:LEADER:34120335-29d9-4030-9e15-3962af1e1...</msg>
<status status="PASS" starttime="20230728 00:31:00.406" endtime="20230728 00:31:10.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:10.493" level="INFO">scm3.org:9894:FOLLOWER:e0a883e2-ff6a-4191-a9dd-075ce7c417f7:172.25.0.118
scm1.org:9894:FOLLOWER:7402bd51-d489-4652-9f49-3cd9717da483:172.25.0.116
scm2.org:9894:LEADER:34120335-29d9-4030-9e15-3962af1e117f:172.25.0.117</msg>
<status status="PASS" starttime="20230728 00:31:10.492" endtime="20230728 00:31:10.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:31:10.497" endtime="20230728 00:31:10.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:31:10.498" endtime="20230728 00:31:10.503"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230728 00:31:10.505" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230728 00:31:10.508" level="INFO">${scmLine} = scm2.org:9894:LEADER:34120335-29d9-4030-9e15-3962af1e117f:172.25.0.117</msg>
<status status="PASS" starttime="20230728 00:31:10.505" endtime="20230728 00:31:10.508"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230728 00:31:10.509" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', '34120335-29d9-4030-9e15-3962af1e117f', '172.25.0.117']</msg>
<status status="PASS" starttime="20230728 00:31:10.508" endtime="20230728 00:31:10.509"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230728 00:31:10.517" level="INFO">${leaderSCM} = 34120335-29d9-4030-9e15-3962af1e117f</msg>
<status status="PASS" starttime="20230728 00:31:10.513" endtime="20230728 00:31:10.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:10.519" level="INFO">Leader SCM: 34120335-29d9-4030-9e15-3962af1e117f</msg>
<status status="PASS" starttime="20230728 00:31:10.517" endtime="20230728 00:31:10.519"/>
</kw>
<msg timestamp="20230728 00:31:10.520" level="INFO">${newLeaderSCM} = 34120335-29d9-4030-9e15-3962af1e117f</msg>
<status status="PASS" starttime="20230728 00:31:00.405" endtime="20230728 00:31:10.520"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230728 00:31:10.520" endtime="20230728 00:31:10.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:30:30.751" endtime="20230728 00:31:10.523"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230728 00:30:30.682" endtime="20230728 00:31:10.528"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:31:18.994" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:31:29.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:31:29.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:31:18.991" endtime="20230728 00:31:29.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:29.181" level="INFO"/>
<status status="PASS" starttime="20230728 00:31:29.178" endtime="20230728 00:31:29.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:31:29.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:31:29.186" endtime="20230728 00:31:29.190"/>
</kw>
<status status="PASS" starttime="20230728 00:31:18.990" endtime="20230728 00:31:29.190"/>
</kw>
<msg timestamp="20230728 00:31:29.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:31:18.990" endtime="20230728 00:31:29.190"/>
</kw>
<msg timestamp="20230728 00:31:29.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:31:18.989" endtime="20230728 00:31:29.193"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:31:29.195" endtime="20230728 00:31:29.195"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:31:29.220" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:31:39.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:31:39.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:31:29.209" endtime="20230728 00:31:39.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:39.352" level="INFO"/>
<status status="PASS" starttime="20230728 00:31:39.351" endtime="20230728 00:31:39.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:31:39.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:31:39.353" endtime="20230728 00:31:39.354"/>
</kw>
<status status="PASS" starttime="20230728 00:31:29.207" endtime="20230728 00:31:39.355"/>
</kw>
<msg timestamp="20230728 00:31:39.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:31:29.202" endtime="20230728 00:31:39.355"/>
</kw>
<msg timestamp="20230728 00:31:39.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:31:29.196" endtime="20230728 00:31:39.355"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:31:39.356" endtime="20230728 00:31:39.356"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:31:18.988" endtime="20230728 00:31:39.357"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:31:39.365" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230728 00:31:39.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:31:39.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:31:39.362" endtime="20230728 00:31:39.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:39.371" level="INFO"/>
<status status="PASS" starttime="20230728 00:31:39.370" endtime="20230728 00:31:39.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:31:39.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:31:39.371" endtime="20230728 00:31:39.372"/>
</kw>
<status status="PASS" starttime="20230728 00:31:39.361" endtime="20230728 00:31:39.373"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:31:39.379" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:31:59.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:31:59.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:31:39.376" endtime="20230728 00:31:59.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:59.147" level="INFO"/>
<status status="PASS" starttime="20230728 00:31:59.143" endtime="20230728 00:31:59.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:31:59.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:31:59.150" endtime="20230728 00:31:59.152"/>
</kw>
<status status="PASS" starttime="20230728 00:31:39.375" endtime="20230728 00:31:59.152"/>
</kw>
<msg timestamp="20230728 00:31:59.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:31:39.374" endtime="20230728 00:31:59.156"/>
</kw>
<msg timestamp="20230728 00:31:59.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:31:39.373" endtime="20230728 00:31:59.156"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:31:59.157" endtime="20230728 00:31:59.167"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:31:59.235" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:31:59.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:31:59.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:31:59.176" endtime="20230728 00:31:59.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:31:59.267" level="INFO"/>
<status status="PASS" starttime="20230728 00:31:59.266" endtime="20230728 00:31:59.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:31:59.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:31:59.269" endtime="20230728 00:31:59.271"/>
</kw>
<status status="PASS" starttime="20230728 00:31:59.171" endtime="20230728 00:31:59.271"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:31:39.359" endtime="20230728 00:31:59.272"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230728 00:31:59.280" level="INFO">${random} = 31130</msg>
<status status="PASS" starttime="20230728 00:31:59.279" endtime="20230728 00:31:59.282"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:31:59.302" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-31130 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:32:14.722" level="INFO">${rc} = 255</msg>
<msg timestamp="20230728 00:32:14.722" level="INFO">${output} = java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20230728 00:31:59.286" endtime="20230728 00:32:14.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:32:14.724" level="INFO">java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20230728 00:32:14.723" endtime="20230728 00:32:14.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:32:14.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230728 00:32:14.726" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20230728 00:32:14.725" endtime="20230728 00:32:14.726"/>
</kw>
<status status="FAIL" starttime="20230728 00:31:59.285" endtime="20230728 00:32:14.726"/>
</kw>
<msg timestamp="20230728 00:32:14.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230728 00:31:59.284" endtime="20230728 00:32:14.727"/>
</kw>
<status status="FAIL" starttime="20230728 00:31:59.282" endtime="20230728 00:32:14.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230728 00:32:14.727" endtime="20230728 00:32:14.727"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230728 00:32:14.728" endtime="20230728 00:32:14.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230728 00:32:14.728" endtime="20230728 00:32:14.728"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230728 00:32:14.729" endtime="20230728 00:32:14.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230728 00:31:59.277" endtime="20230728 00:32:14.729">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20230728 00:31:18.920" endtime="20230728 00:32:14.732"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="95813"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="1" skip="0" id="s1" name="ozonesecure-ha-root-ca-rotation">ozonesecure-ha-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="2" fail="1" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
