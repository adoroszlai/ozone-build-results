<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230728 00:42:01.281" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:39:12.399" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:39:12.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:39:12.403" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230728 00:39:12.396" endtime="20230728 00:39:12.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:39:12.404" level="INFO">scm</msg>
<status status="PASS" starttime="20230728 00:39:12.404" endtime="20230728 00:39:12.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:39:12.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:39:12.405" endtime="20230728 00:39:12.405"/>
</kw>
<status status="PASS" starttime="20230728 00:39:12.395" endtime="20230728 00:39:12.405"/>
</kw>
<msg timestamp="20230728 00:39:12.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:39:12.395" endtime="20230728 00:39:12.405"/>
</kw>
<msg timestamp="20230728 00:39:12.406" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230728 00:39:12.395" endtime="20230728 00:39:12.406"/>
</kw>
<msg timestamp="20230728 00:39:12.406" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230728 00:39:12.394" endtime="20230728 00:39:12.406"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230728 00:39:12.406" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230728 00:39:12.406" endtime="20230728 00:39:12.407"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:39:12.411" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:39:12.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:39:12.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:39:12.409" endtime="20230728 00:39:12.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:39:12.442" level="INFO"/>
<status status="PASS" starttime="20230728 00:39:12.441" endtime="20230728 00:39:12.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:39:12.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:39:12.442" endtime="20230728 00:39:12.443"/>
</kw>
<status status="PASS" starttime="20230728 00:39:12.408" endtime="20230728 00:39:12.443"/>
</kw>
<msg timestamp="20230728 00:39:12.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:39:12.408" endtime="20230728 00:39:12.443"/>
</kw>
<status status="PASS" starttime="20230728 00:39:12.407" endtime="20230728 00:39:12.443"/>
</kw>
<status status="PASS" starttime="20230728 00:39:12.407" endtime="20230728 00:39:12.443"/>
</kw>
<status status="PASS" starttime="20230728 00:39:12.393" endtime="20230728 00:39:12.443"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230728 00:39:12.393" endtime="20230728 00:39:12.444"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230728 00:39:12.337" endtime="20230728 00:39:12.446"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:39:38.828" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:39:45.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:39:45.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:39:38.826" endtime="20230728 00:39:45.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:39:45.227" level="INFO"/>
<status status="PASS" starttime="20230728 00:39:45.227" endtime="20230728 00:39:45.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:39:45.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:39:45.228" endtime="20230728 00:39:45.228"/>
</kw>
<status status="PASS" starttime="20230728 00:39:38.825" endtime="20230728 00:39:45.229"/>
</kw>
<msg timestamp="20230728 00:39:45.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:39:38.825" endtime="20230728 00:39:45.229"/>
</kw>
<msg timestamp="20230728 00:39:45.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:39:38.824" endtime="20230728 00:39:45.229"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:39:45.229" endtime="20230728 00:39:45.230"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:39:45.234" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:39:53.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:39:53.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:39:45.232" endtime="20230728 00:39:53.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:39:53.015" level="INFO"/>
<status status="PASS" starttime="20230728 00:39:53.014" endtime="20230728 00:39:53.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:39:53.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:39:53.015" endtime="20230728 00:39:53.015"/>
</kw>
<status status="PASS" starttime="20230728 00:39:45.231" endtime="20230728 00:39:53.016"/>
</kw>
<msg timestamp="20230728 00:39:53.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:39:45.231" endtime="20230728 00:39:53.016"/>
</kw>
<msg timestamp="20230728 00:39:53.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:39:45.230" endtime="20230728 00:39:53.016"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:39:53.016" endtime="20230728 00:39:53.017"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:39:38.823" endtime="20230728 00:39:53.017"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:39:53.022" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230728 00:39:53.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:39:53.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:39:53.019" endtime="20230728 00:39:53.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:39:53.025" level="INFO"/>
<status status="PASS" starttime="20230728 00:39:53.025" endtime="20230728 00:39:53.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:39:53.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:39:53.026" endtime="20230728 00:39:53.026"/>
</kw>
<status status="PASS" starttime="20230728 00:39:53.019" endtime="20230728 00:39:53.027"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:39:53.031" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:40:04.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:40:04.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:39:53.029" endtime="20230728 00:40:04.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:40:04.427" level="INFO"/>
<status status="PASS" starttime="20230728 00:40:04.426" endtime="20230728 00:40:04.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:40:04.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:40:04.427" endtime="20230728 00:40:04.428"/>
</kw>
<status status="PASS" starttime="20230728 00:39:53.028" endtime="20230728 00:40:04.428"/>
</kw>
<msg timestamp="20230728 00:40:04.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:39:53.028" endtime="20230728 00:40:04.428"/>
</kw>
<msg timestamp="20230728 00:40:04.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:39:53.027" endtime="20230728 00:40:04.428"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:40:04.429" endtime="20230728 00:40:04.429"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:40:04.433" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:40:04.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:40:04.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:40:04.430" endtime="20230728 00:40:04.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:40:04.438" level="INFO"/>
<status status="PASS" starttime="20230728 00:40:04.437" endtime="20230728 00:40:04.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:40:04.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:40:04.438" endtime="20230728 00:40:04.439"/>
</kw>
<status status="PASS" starttime="20230728 00:40:04.429" endtime="20230728 00:40:04.439"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:39:53.018" endtime="20230728 00:40:04.439"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230728 00:40:04.442" level="INFO">${random} = 77022</msg>
<status status="PASS" starttime="20230728 00:40:04.442" endtime="20230728 00:40:04.442"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:40:04.446" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-77022 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:40:13.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:40:13.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:40:04.444" endtime="20230728 00:40:13.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:40:13.712" level="INFO"/>
<status status="PASS" starttime="20230728 00:40:13.711" endtime="20230728 00:40:13.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:40:13.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:40:13.713" endtime="20230728 00:40:13.713"/>
</kw>
<status status="PASS" starttime="20230728 00:40:04.443" endtime="20230728 00:40:13.713"/>
</kw>
<msg timestamp="20230728 00:40:13.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:40:04.443" endtime="20230728 00:40:13.713"/>
</kw>
<msg timestamp="20230728 00:40:13.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:40:04.442" endtime="20230728 00:40:13.714"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:40:13.714" endtime="20230728 00:40:13.714"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:40:13.718" level="INFO">Running command 'cat /tmp/key-77022 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:40:13.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:40:13.721" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230728 00:40:13.715" endtime="20230728 00:40:13.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:40:13.722" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230728 00:40:13.721" endtime="20230728 00:40:13.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:40:13.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:40:13.723" endtime="20230728 00:40:13.723"/>
</kw>
<msg timestamp="20230728 00:40:13.724" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230728 00:40:13.714" endtime="20230728 00:40:13.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:40:13.724" endtime="20230728 00:40:13.724"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:40:13.727" level="INFO">Running command 'rm /tmp/key-77022 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:40:13.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:40:13.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:40:13.725" endtime="20230728 00:40:13.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:40:13.732" level="INFO"/>
<status status="PASS" starttime="20230728 00:40:13.731" endtime="20230728 00:40:13.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:40:13.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:40:13.733" endtime="20230728 00:40:13.733"/>
</kw>
<status status="PASS" starttime="20230728 00:40:13.724" endtime="20230728 00:40:13.733"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:40:04.441" endtime="20230728 00:40:13.734"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230728 00:39:38.769" endtime="20230728 00:40:13.736"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:41:03.458" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:41:09.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:41:09.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:03.453" endtime="20230728 00:41:09.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:09.559" level="INFO"/>
<status status="PASS" starttime="20230728 00:41:09.559" endtime="20230728 00:41:09.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:41:09.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:41:09.560" endtime="20230728 00:41:09.561"/>
</kw>
<status status="PASS" starttime="20230728 00:41:03.453" endtime="20230728 00:41:09.561"/>
</kw>
<msg timestamp="20230728 00:41:09.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:41:03.452" endtime="20230728 00:41:09.561"/>
</kw>
<msg timestamp="20230728 00:41:09.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:03.451" endtime="20230728 00:41:09.561"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:41:09.562" endtime="20230728 00:41:09.562"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:41:09.567" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:41:15.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:41:15.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:09.564" endtime="20230728 00:41:15.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:15.537" level="INFO"/>
<status status="PASS" starttime="20230728 00:41:15.536" endtime="20230728 00:41:15.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:41:15.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:41:15.537" endtime="20230728 00:41:15.538"/>
</kw>
<status status="PASS" starttime="20230728 00:41:09.563" endtime="20230728 00:41:15.538"/>
</kw>
<msg timestamp="20230728 00:41:15.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:41:09.563" endtime="20230728 00:41:15.538"/>
</kw>
<msg timestamp="20230728 00:41:15.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:09.562" endtime="20230728 00:41:15.538"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:41:15.538" endtime="20230728 00:41:15.539"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:41:03.450" endtime="20230728 00:41:15.539"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:41:15.545" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230728 00:41:15.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:41:15.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:15.542" endtime="20230728 00:41:15.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:15.549" level="INFO"/>
<status status="PASS" starttime="20230728 00:41:15.548" endtime="20230728 00:41:15.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:41:15.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:41:15.549" endtime="20230728 00:41:15.550"/>
</kw>
<status status="PASS" starttime="20230728 00:41:15.541" endtime="20230728 00:41:15.550"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:41:15.555" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:41:26.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:41:26.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:15.552" endtime="20230728 00:41:26.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:26.246" level="INFO"/>
<status status="PASS" starttime="20230728 00:41:26.245" endtime="20230728 00:41:26.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:41:26.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:41:26.246" endtime="20230728 00:41:26.247"/>
</kw>
<status status="PASS" starttime="20230728 00:41:15.551" endtime="20230728 00:41:26.248"/>
</kw>
<msg timestamp="20230728 00:41:26.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:41:15.551" endtime="20230728 00:41:26.248"/>
</kw>
<msg timestamp="20230728 00:41:26.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:15.550" endtime="20230728 00:41:26.248"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:41:26.249" endtime="20230728 00:41:26.249"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:41:26.253" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:41:26.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:41:26.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:26.250" endtime="20230728 00:41:26.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:26.259" level="INFO"/>
<status status="PASS" starttime="20230728 00:41:26.257" endtime="20230728 00:41:26.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:41:26.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:41:26.259" endtime="20230728 00:41:26.260"/>
</kw>
<status status="PASS" starttime="20230728 00:41:26.249" endtime="20230728 00:41:26.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:41:15.540" endtime="20230728 00:41:26.260"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230728 00:41:26.262" level="INFO">${random} = 52576</msg>
<status status="PASS" starttime="20230728 00:41:26.262" endtime="20230728 00:41:26.262"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:41:26.267" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-52576 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:41:34.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:41:34.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:26.264" endtime="20230728 00:41:34.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:34.982" level="INFO"/>
<status status="PASS" starttime="20230728 00:41:34.981" endtime="20230728 00:41:34.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:41:34.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:41:34.982" endtime="20230728 00:41:34.983"/>
</kw>
<status status="PASS" starttime="20230728 00:41:26.264" endtime="20230728 00:41:34.983"/>
</kw>
<msg timestamp="20230728 00:41:34.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:41:26.263" endtime="20230728 00:41:34.984"/>
</kw>
<msg timestamp="20230728 00:41:34.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:26.262" endtime="20230728 00:41:34.984"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:41:34.984" endtime="20230728 00:41:34.984"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:41:34.989" level="INFO">Running command 'cat /tmp/key-52576 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:41:34.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:41:34.992" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230728 00:41:34.985" endtime="20230728 00:41:34.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:34.993" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230728 00:41:34.993" endtime="20230728 00:41:34.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:41:34.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:41:34.994" endtime="20230728 00:41:34.994"/>
</kw>
<msg timestamp="20230728 00:41:34.995" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230728 00:41:34.985" endtime="20230728 00:41:34.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230728 00:41:34.995" endtime="20230728 00:41:34.995"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:41:34.999" level="INFO">Running command 'rm /tmp/key-52576 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:41:35.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:41:35.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230728 00:41:34.996" endtime="20230728 00:41:35.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:35.023" level="INFO"/>
<status status="PASS" starttime="20230728 00:41:35.022" endtime="20230728 00:41:35.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:41:35.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:41:35.023" endtime="20230728 00:41:35.026"/>
</kw>
<status status="PASS" starttime="20230728 00:41:34.996" endtime="20230728 00:41:35.027"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:41:26.261" endtime="20230728 00:41:35.028"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230728 00:41:03.383" endtime="20230728 00:41:35.033"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230728 00:41:39.130" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230728 00:41:39.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20230728 00:41:39.636" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230728 00:41:39.127" endtime="20230728 00:41:39.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:39.638" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230728 00:41:39.637" endtime="20230728 00:41:39.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230728 00:41:39.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230728 00:41:39.639" endtime="20230728 00:41:39.640"/>
</kw>
<status status="PASS" starttime="20230728 00:41:39.126" endtime="20230728 00:41:39.640"/>
</kw>
<msg timestamp="20230728 00:41:39.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230728 00:41:39.125" endtime="20230728 00:41:39.640"/>
</kw>
<msg timestamp="20230728 00:41:39.640" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230728 00:41:39.125" endtime="20230728 00:41:39.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230728 00:41:39.641" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230728 00:41:39.641" endtime="20230728 00:41:39.641"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230728 00:41:39.642" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230728 00:41:39.641" endtime="20230728 00:41:39.642"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230728 00:41:39.645" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230728 00:41:39.643" endtime="20230728 00:41:39.645"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230728 00:41:39.646" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230728 00:41:39.645" endtime="20230728 00:41:39.646"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230728 00:41:39.649" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230728 00:41:39.646" endtime="20230728 00:41:39.649"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230728 00:41:39.650" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230728 00:41:39.649" endtime="20230728 00:41:39.650"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230728 00:41:39.650" endtime="20230728 00:41:39.651"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230728 00:41:39.123" endtime="20230728 00:41:39.651"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230728 00:41:39.067" endtime="20230728 00:41:39.653"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="67312"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
