<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230713 18:14:20.012" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-root-ca-rotation">
<suite id="s1-s1" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s1-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:07:29.987" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:07:37.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:07:37.547" level="INFO">${output} = scm2.org:9894:FOLLOWER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:LEADER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c...</msg>
<status status="PASS" starttime="20230713 18:07:29.979" endtime="20230713 18:07:37.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:37.549" level="INFO">scm2.org:9894:FOLLOWER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:LEADER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c472:172.25.0.118</msg>
<status status="PASS" starttime="20230713 18:07:37.548" endtime="20230713 18:07:37.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:07:37.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:07:37.550" endtime="20230713 18:07:37.551"/>
</kw>
<status status="PASS" starttime="20230713 18:07:29.978" endtime="20230713 18:07:37.551"/>
</kw>
<msg timestamp="20230713 18:07:37.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:07:29.978" endtime="20230713 18:07:37.551"/>
</kw>
<msg timestamp="20230713 18:07:37.561" level="INFO">${result} = scm2.org:9894:FOLLOWER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:LEADER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c...</msg>
<status status="PASS" starttime="20230713 18:07:29.977" endtime="20230713 18:07:37.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:37.563" level="INFO">scm2.org:9894:FOLLOWER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:LEADER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c472:172.25.0.118</msg>
<status status="PASS" starttime="20230713 18:07:37.561" endtime="20230713 18:07:37.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:07:37.563" endtime="20230713 18:07:37.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:07:37.570" endtime="20230713 18:07:37.572"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230713 18:07:37.575" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230713 18:07:37.575" level="INFO">${scmLine} = scm1.org:9894:LEADER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116</msg>
<status status="PASS" starttime="20230713 18:07:37.572" endtime="20230713 18:07:37.575"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230713 18:07:37.581" level="INFO">${splits} = ['scm1.org', '9894', 'LEADER', '6e81ba57-0c85-48e6-861a-b7381bdb3f8a', '172.25.0.116']</msg>
<status status="PASS" starttime="20230713 18:07:37.581" endtime="20230713 18:07:37.581"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230713 18:07:37.587" level="INFO">${leaderSCM} = 6e81ba57-0c85-48e6-861a-b7381bdb3f8a</msg>
<status status="PASS" starttime="20230713 18:07:37.584" endtime="20230713 18:07:37.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:37.598" level="INFO">Leader SCM: 6e81ba57-0c85-48e6-861a-b7381bdb3f8a</msg>
<status status="PASS" starttime="20230713 18:07:37.598" endtime="20230713 18:07:37.598"/>
</kw>
<msg timestamp="20230713 18:07:37.599" level="INFO">${leaderSCM} = 6e81ba57-0c85-48e6-861a-b7381bdb3f8a</msg>
<status status="PASS" starttime="20230713 18:07:29.977" endtime="20230713 18:07:37.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:37.606" level="INFO">Leader SCM: 6e81ba57-0c85-48e6-861a-b7381bdb3f8a</msg>
<status status="PASS" starttime="20230713 18:07:37.602" endtime="20230713 18:07:37.607"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:07:37.658" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:07:45.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:07:45.565" level="INFO">${output} = scm2.org:9894:FOLLOWER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:LEADER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c...</msg>
<status status="PASS" starttime="20230713 18:07:37.621" endtime="20230713 18:07:45.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:45.567" level="INFO">scm2.org:9894:FOLLOWER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:LEADER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c472:172.25.0.118</msg>
<status status="PASS" starttime="20230713 18:07:45.566" endtime="20230713 18:07:45.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:07:45.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:07:45.567" endtime="20230713 18:07:45.568"/>
</kw>
<status status="PASS" starttime="20230713 18:07:37.618" endtime="20230713 18:07:45.568"/>
</kw>
<msg timestamp="20230713 18:07:45.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:07:37.614" endtime="20230713 18:07:45.568"/>
</kw>
<msg timestamp="20230713 18:07:45.569" level="INFO">${result} = scm2.org:9894:FOLLOWER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:LEADER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c...</msg>
<status status="PASS" starttime="20230713 18:07:37.608" endtime="20230713 18:07:45.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:45.569" level="INFO">scm2.org:9894:FOLLOWER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:LEADER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c472:172.25.0.118</msg>
<status status="PASS" starttime="20230713 18:07:45.569" endtime="20230713 18:07:45.570"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230713 18:07:45.571" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230713 18:07:45.571" level="INFO">${scm_line} = scm2.org:9894:FOLLOWER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117</msg>
<status status="PASS" starttime="20230713 18:07:45.570" endtime="20230713 18:07:45.571"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230713 18:07:45.572" level="INFO">${scm_split} = ['scm2.org', '9894', 'FOLLOWER', 'e3c863ac-c72b-449c-ac7a-42531fccfd35', '172.25.0.117']</msg>
<status status="PASS" starttime="20230713 18:07:45.571" endtime="20230713 18:07:45.572"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230713 18:07:45.574" level="INFO">${scm_uuid} = e3c863ac-c72b-449c-ac7a-42531fccfd35</msg>
<status status="PASS" starttime="20230713 18:07:45.572" endtime="20230713 18:07:45.574"/>
</kw>
<msg timestamp="20230713 18:07:45.575" level="INFO">${target_scm_uuid} = e3c863ac-c72b-449c-ac7a-42531fccfd35</msg>
<status status="PASS" starttime="20230713 18:07:37.607" endtime="20230713 18:07:45.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:07:45.581" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n e3c863ac-c72b-449c-ac7a-42531fccfd35 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:07:58.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:07:58.679" level="INFO">${output} = Transfer leadership successfully to e3c863ac-c72b-449c-ac7a-42531fccfd35.</msg>
<status status="PASS" starttime="20230713 18:07:45.577" endtime="20230713 18:07:58.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:58.681" level="INFO">Transfer leadership successfully to e3c863ac-c72b-449c-ac7a-42531fccfd35.</msg>
<status status="PASS" starttime="20230713 18:07:58.680" endtime="20230713 18:07:58.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:07:58.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:07:58.681" endtime="20230713 18:07:58.683"/>
</kw>
<status status="PASS" starttime="20230713 18:07:45.576" endtime="20230713 18:07:58.684"/>
</kw>
<msg timestamp="20230713 18:07:58.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:07:45.576" endtime="20230713 18:07:58.685"/>
</kw>
<msg timestamp="20230713 18:07:58.685" level="INFO">${result} = Transfer leadership successfully to e3c863ac-c72b-449c-ac7a-42531fccfd35.</msg>
<status status="PASS" starttime="20230713 18:07:45.575" endtime="20230713 18:07:58.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:58.687" level="INFO">Transfer leadership successfully to e3c863ac-c72b-449c-ac7a-42531fccfd35.</msg>
<status status="PASS" starttime="20230713 18:07:58.685" endtime="20230713 18:07:58.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:07:58.687" endtime="20230713 18:07:58.688"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:07:58.708" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:08:08.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:08:08.731" level="INFO">${output} = scm2.org:9894:LEADER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:FOLLOWER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c...</msg>
<status status="PASS" starttime="20230713 18:07:58.703" endtime="20230713 18:08:08.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:08:08.733" level="INFO">scm2.org:9894:LEADER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:FOLLOWER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c472:172.25.0.118</msg>
<status status="PASS" starttime="20230713 18:08:08.732" endtime="20230713 18:08:08.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:08:08.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:08:08.733" endtime="20230713 18:08:08.734"/>
</kw>
<status status="PASS" starttime="20230713 18:07:58.702" endtime="20230713 18:08:08.734"/>
</kw>
<msg timestamp="20230713 18:08:08.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:07:58.691" endtime="20230713 18:08:08.735"/>
</kw>
<msg timestamp="20230713 18:08:08.735" level="INFO">${result} = scm2.org:9894:LEADER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:FOLLOWER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c...</msg>
<status status="PASS" starttime="20230713 18:07:58.690" endtime="20230713 18:08:08.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:08:08.736" level="INFO">scm2.org:9894:LEADER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117
scm1.org:9894:FOLLOWER:6e81ba57-0c85-48e6-861a-b7381bdb3f8a:172.25.0.116
scm3.org:9894:FOLLOWER:66931c36-a3b6-4681-bc2a-05703b31c472:172.25.0.118</msg>
<status status="PASS" starttime="20230713 18:08:08.736" endtime="20230713 18:08:08.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:08:08.736" endtime="20230713 18:08:08.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:08:08.738" endtime="20230713 18:08:08.739"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230713 18:08:08.741" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230713 18:08:08.742" level="INFO">${scmLine} = scm2.org:9894:LEADER:e3c863ac-c72b-449c-ac7a-42531fccfd35:172.25.0.117</msg>
<status status="PASS" starttime="20230713 18:08:08.739" endtime="20230713 18:08:08.742"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230713 18:08:08.744" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', 'e3c863ac-c72b-449c-ac7a-42531fccfd35', '172.25.0.117']</msg>
<status status="PASS" starttime="20230713 18:08:08.742" endtime="20230713 18:08:08.744"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230713 18:08:08.748" level="INFO">${leaderSCM} = e3c863ac-c72b-449c-ac7a-42531fccfd35</msg>
<status status="PASS" starttime="20230713 18:08:08.745" endtime="20230713 18:08:08.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:08:08.748" level="INFO">Leader SCM: e3c863ac-c72b-449c-ac7a-42531fccfd35</msg>
<status status="PASS" starttime="20230713 18:08:08.748" endtime="20230713 18:08:08.748"/>
</kw>
<msg timestamp="20230713 18:08:08.748" level="INFO">${newLeaderSCM} = e3c863ac-c72b-449c-ac7a-42531fccfd35</msg>
<status status="PASS" starttime="20230713 18:07:58.689" endtime="20230713 18:08:08.748"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230713 18:08:08.749" endtime="20230713 18:08:08.749"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 18:07:29.975" endtime="20230713 18:08:08.749"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230713 18:07:29.854" endtime="20230713 18:08:08.751"/>
</suite>
<suite id="s1-s2" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:08:43.840" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:08:43.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:08:43.846" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230713 18:08:43.837" endtime="20230713 18:08:43.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:08:43.848" level="INFO">scm</msg>
<status status="PASS" starttime="20230713 18:08:43.847" endtime="20230713 18:08:43.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:08:43.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:08:43.848" endtime="20230713 18:08:43.849"/>
</kw>
<status status="PASS" starttime="20230713 18:08:43.836" endtime="20230713 18:08:43.850"/>
</kw>
<msg timestamp="20230713 18:08:43.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:08:43.836" endtime="20230713 18:08:43.850"/>
</kw>
<msg timestamp="20230713 18:08:43.851" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230713 18:08:43.835" endtime="20230713 18:08:43.851"/>
</kw>
<msg timestamp="20230713 18:08:43.851" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230713 18:08:43.834" endtime="20230713 18:08:43.852"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230713 18:08:43.853" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230713 18:08:43.852" endtime="20230713 18:08:43.853"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:08:43.859" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:08:43.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:08:43.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 18:08:43.857" endtime="20230713 18:08:43.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:08:43.897" level="INFO"/>
<status status="PASS" starttime="20230713 18:08:43.896" endtime="20230713 18:08:43.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:08:43.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:08:43.897" endtime="20230713 18:08:43.898"/>
</kw>
<status status="PASS" starttime="20230713 18:08:43.856" endtime="20230713 18:08:43.898"/>
</kw>
<msg timestamp="20230713 18:08:43.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:08:43.855" endtime="20230713 18:08:43.899"/>
</kw>
<status status="PASS" starttime="20230713 18:08:43.854" endtime="20230713 18:08:43.899"/>
</kw>
<status status="PASS" starttime="20230713 18:08:43.853" endtime="20230713 18:08:43.899"/>
</kw>
<status status="PASS" starttime="20230713 18:08:43.833" endtime="20230713 18:08:43.899"/>
</kw>
<status status="PASS" starttime="20230713 18:08:43.831" endtime="20230713 18:08:43.899"/>
</kw>
<test id="s1-s2-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:08:43.907" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:08:51.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:08:51.956" level="INFO">${output} = PipelineID=2b21bf9f-ba54-4911-80f7-03a711a0aa88 is created. Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230713 18:08:43.903" endtime="20230713 18:08:51.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:08:51.958" level="INFO">PipelineID=2b21bf9f-ba54-4911-80f7-03a711a0aa88 is created. Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-13T18:08:51.557Z[UTC]]</msg>
<status status="PASS" starttime="20230713 18:08:51.957" endtime="20230713 18:08:51.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:08:51.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:08:51.958" endtime="20230713 18:08:51.959"/>
</kw>
<status status="PASS" starttime="20230713 18:08:43.902" endtime="20230713 18:08:51.959"/>
</kw>
<msg timestamp="20230713 18:08:51.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:08:43.902" endtime="20230713 18:08:51.960"/>
</kw>
<msg timestamp="20230713 18:08:51.960" level="INFO">${output} = PipelineID=2b21bf9f-ba54-4911-80f7-03a711a0aa88 is created. Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230713 18:08:43.901" endtime="20230713 18:08:51.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:08:51.960" endtime="20230713 18:08:51.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:08:51.961" endtime="20230713 18:08:51.961"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:08:51.967" level="INFO">Running command 'echo "PipelineID=2b21bf9f-ba54-4911-80f7-03a711a0aa88 is created. Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-13T18:08:51.557Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:08:51.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:08:51.974" level="INFO">${output} = 2b21bf9f-ba54-4911-80f7-03a711a0aa88</msg>
<status status="PASS" starttime="20230713 18:08:51.964" endtime="20230713 18:08:51.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:08:51.975" level="INFO">2b21bf9f-ba54-4911-80f7-03a711a0aa88</msg>
<status status="PASS" starttime="20230713 18:08:51.974" endtime="20230713 18:08:51.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:08:51.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:08:51.976" endtime="20230713 18:08:51.977"/>
</kw>
<status status="PASS" starttime="20230713 18:08:51.963" endtime="20230713 18:08:51.977"/>
</kw>
<msg timestamp="20230713 18:08:51.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:08:51.963" endtime="20230713 18:08:51.977"/>
</kw>
<msg timestamp="20230713 18:08:51.977" level="INFO">${pipeline} = 2b21bf9f-ba54-4911-80f7-03a711a0aa88</msg>
<status status="PASS" starttime="20230713 18:08:51.962" endtime="20230713 18:08:51.978"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230713 18:08:51.978" level="INFO">${PIPELINE} = 2b21bf9f-ba54-4911-80f7-03a711a0aa88</msg>
<status status="PASS" starttime="20230713 18:08:51.978" endtime="20230713 18:08:51.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 18:08:43.900" endtime="20230713 18:08:51.979"/>
</test>
<test id="s1-s2-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:08:51.987" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:09:02.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:09:02.760" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:08:51.984" endtime="20230713 18:09:02.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:09:02.765" level="INFO">Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-13T18:08:51.557Z[UTC]]
Pipeline[ Id: 721c568e-ab85-4416-8d7c-c187b371e3cc, Nodes: 3d582a79-edb0-47f6-a5da-b583183cdf49(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)670feeb2-63d9-4844-90cb-0909fa95d83a(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:e75a0338-c280-4d7d-9d5c-e78a01b0769e, CreationTimestamp2023-07-13T18:05:29.758Z[UTC]]
Pipeline[ Id: 4a603b70-e5cc-49fa-b037-ae64bd1eeddc, Nodes: 670feeb2-63d9-4844-90cb-0909fa95d83a(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)3d582a79-edb0-47f6-a5da-b583183cdf49(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:3d582a79-edb0-47f6-a5da-b583183cdf49, CreationTimestamp2023-07-13T18:05:29.994Z[UTC]]
Pipeline[ Id: 3d6b0901-249a-41be-8c98-c41e068f7d3e, Nodes: 3d582a79-edb0-47f6-a5da-b583183cdf49(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:3d582a79-edb0-47f6-a5da-b583183cdf49, CreationTimestamp2023-07-13T18:05:29.569Z[UTC]]
Pipeline[ Id: 7a89bd69-5fb0-4d75-befe-d3cf57b94880, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e75a0338-c280-4d7d-9d5c-e78a01b0769e, CreationTimestamp2023-07-13T18:05:27.486Z[UTC]]
Pipeline[ Id: 87f3cb6d-d63d-425c-b56f-d0df3c413343, Nodes: 670feeb2-63d9-4844-90cb-0909fa95d83a(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:670feeb2-63d9-4844-90cb-0909fa95d83a, CreationTimestamp2023-07-13T18:05:28.396Z[UTC]]</msg>
<status status="PASS" starttime="20230713 18:09:02.762" endtime="20230713 18:09:02.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:09:02.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:09:02.765" endtime="20230713 18:09:02.770"/>
</kw>
<status status="PASS" starttime="20230713 18:08:51.983" endtime="20230713 18:09:02.773"/>
</kw>
<msg timestamp="20230713 18:09:02.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:08:51.982" endtime="20230713 18:09:02.773"/>
</kw>
<msg timestamp="20230713 18:09:02.773" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:08:51.981" endtime="20230713 18:09:02.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:09:02.773" endtime="20230713 18:09:02.774"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 18:08:51.980" endtime="20230713 18:09:02.774"/>
</test>
<test id="s1-s2-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:09:02.785" level="INFO">Running command 'ozone admin pipeline list --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:09:12.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:09:12.364" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:09:02.779" endtime="20230713 18:09:12.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:09:12.368" level="INFO">Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-13T18:08:51.557Z[UTC]]
Pipeline[ Id: 721c568e-ab85-4416-8d7c-c187b371e3cc, Nodes: 3d582a79-edb0-47f6-a5da-b583183cdf49(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)670feeb2-63d9-4844-90cb-0909fa95d83a(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:e75a0338-c280-4d7d-9d5c-e78a01b0769e, CreationTimestamp2023-07-13T18:05:29.758Z[UTC]]
Pipeline[ Id: 4a603b70-e5cc-49fa-b037-ae64bd1eeddc, Nodes: 670feeb2-63d9-4844-90cb-0909fa95d83a(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)3d582a79-edb0-47f6-a5da-b583183cdf49(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:3d582a79-edb0-47f6-a5da-b583183cdf49, CreationTimestamp2023-07-13T18:05:29.994Z[UTC]]
Pipeline[ Id: 3d6b0901-249a-41be-8c98-c41e068f7d3e, Nodes: 3d582a79-edb0-47f6-a5da-b583183cdf49(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:3d582a79-edb0-47f6-a5da-b583183cdf49, CreationTimestamp2023-07-13T18:05:29.569Z[UTC]]
Pipeline[ Id: 7a89bd69-5fb0-4d75-befe-d3cf57b94880, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e75a0338-c280-4d7d-9d5c-e78a01b0769e, CreationTimestamp2023-07-13T18:05:27.486Z[UTC]]
Pipeline[ Id: 87f3cb6d-d63d-425c-b56f-d0df3c413343, Nodes: 670feeb2-63d9-4844-90cb-0909fa95d83a(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:670feeb2-63d9-4844-90cb-0909fa95d83a, CreationTimestamp2023-07-13T18:05:28.396Z[UTC]]</msg>
<status status="PASS" starttime="20230713 18:09:12.366" endtime="20230713 18:09:12.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:09:12.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:09:12.370" endtime="20230713 18:09:12.373"/>
</kw>
<status status="PASS" starttime="20230713 18:09:02.778" endtime="20230713 18:09:12.373"/>
</kw>
<msg timestamp="20230713 18:09:12.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:09:02.778" endtime="20230713 18:09:12.375"/>
</kw>
<msg timestamp="20230713 18:09:12.375" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:09:02.777" endtime="20230713 18:09:12.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:09:12.375" endtime="20230713 18:09:12.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 18:09:02.776" endtime="20230713 18:09:12.377"/>
</test>
<test id="s1-s2-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:09:12.391" level="INFO">Running command 'ozone admin pipeline deactivate "2b21bf9f-ba54-4911-80f7-03a711a0aa88" 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:09:21.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:09:21.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 18:09:12.385" endtime="20230713 18:09:21.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:09:21.409" level="INFO"/>
<status status="PASS" starttime="20230713 18:09:21.408" endtime="20230713 18:09:21.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:09:21.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:09:21.409" endtime="20230713 18:09:21.410"/>
</kw>
<status status="PASS" starttime="20230713 18:09:12.383" endtime="20230713 18:09:21.410"/>
</kw>
<msg timestamp="20230713 18:09:21.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:09:12.382" endtime="20230713 18:09:21.410"/>
</kw>
<status status="PASS" starttime="20230713 18:09:12.380" endtime="20230713 18:09:21.410"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:09:21.417" level="INFO">Running command 'ozone admin pipeline list | grep "2b21bf9f-ba54-4911-80f7-03a711a0aa88" 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:09:32.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:09:32.262" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:09:21.413" endtime="20230713 18:09:32.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:09:32.265" level="INFO">Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2023-07-13T18:08:51.557Z[UTC]]</msg>
<status status="PASS" starttime="20230713 18:09:32.264" endtime="20230713 18:09:32.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:09:32.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:09:32.265" endtime="20230713 18:09:32.266"/>
</kw>
<status status="PASS" starttime="20230713 18:09:21.412" endtime="20230713 18:09:32.267"/>
</kw>
<msg timestamp="20230713 18:09:32.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:09:21.411" endtime="20230713 18:09:32.267"/>
</kw>
<msg timestamp="20230713 18:09:32.267" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:09:21.411" endtime="20230713 18:09:32.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:09:32.268" endtime="20230713 18:09:32.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 18:09:12.378" endtime="20230713 18:09:32.269"/>
</test>
<test id="s1-s2-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:09:32.282" level="INFO">Running command 'ozone admin pipeline activate "2b21bf9f-ba54-4911-80f7-03a711a0aa88" 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:09:41.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:09:41.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 18:09:32.274" endtime="20230713 18:09:41.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:09:41.044" level="INFO"/>
<status status="PASS" starttime="20230713 18:09:41.043" endtime="20230713 18:09:41.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:09:41.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:09:41.044" endtime="20230713 18:09:41.045"/>
</kw>
<status status="PASS" starttime="20230713 18:09:32.273" endtime="20230713 18:09:41.045"/>
</kw>
<msg timestamp="20230713 18:09:41.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:09:32.273" endtime="20230713 18:09:41.045"/>
</kw>
<status status="PASS" starttime="20230713 18:09:32.272" endtime="20230713 18:09:41.045"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:09:41.059" level="INFO">Running command 'ozone admin pipeline list | grep "2b21bf9f-ba54-4911-80f7-03a711a0aa88" 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:09:51.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:09:51.611" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:09:41.050" endtime="20230713 18:09:51.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:09:51.613" level="INFO">Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-13T18:08:51.557Z[UTC]]</msg>
<status status="PASS" starttime="20230713 18:09:51.612" endtime="20230713 18:09:51.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:09:51.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:09:51.614" endtime="20230713 18:09:51.615"/>
</kw>
<status status="PASS" starttime="20230713 18:09:41.049" endtime="20230713 18:09:51.616"/>
</kw>
<msg timestamp="20230713 18:09:51.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:09:41.046" endtime="20230713 18:09:51.616"/>
</kw>
<msg timestamp="20230713 18:09:51.616" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:09:41.046" endtime="20230713 18:09:51.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:09:51.617" endtime="20230713 18:09:51.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 18:09:32.270" endtime="20230713 18:09:51.619"/>
</test>
<test id="s1-s2-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:09:51.626" level="INFO">Running command 'ozone admin pipeline close "2b21bf9f-ba54-4911-80f7-03a711a0aa88" 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:10:01.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:10:01.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 18:09:51.623" endtime="20230713 18:10:01.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:10:01.035" level="INFO"/>
<status status="PASS" starttime="20230713 18:10:01.034" endtime="20230713 18:10:01.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:10:01.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:10:01.035" endtime="20230713 18:10:01.036"/>
</kw>
<status status="PASS" starttime="20230713 18:09:51.623" endtime="20230713 18:10:01.036"/>
</kw>
<msg timestamp="20230713 18:10:01.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:09:51.622" endtime="20230713 18:10:01.037"/>
</kw>
<status status="PASS" starttime="20230713 18:09:51.621" endtime="20230713 18:10:01.037"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:10:01.042" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:10:10.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:10:10.151" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:10:01.039" endtime="20230713 18:10:10.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:10:10.153" level="INFO">Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2023-07-13T18:08:51.557Z[UTC]]
Pipeline[ Id: 721c568e-ab85-4416-8d7c-c187b371e3cc, Nodes: 3d582a79-edb0-47f6-a5da-b583183cdf49(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)670feeb2-63d9-4844-90cb-0909fa95d83a(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:e75a0338-c280-4d7d-9d5c-e78a01b0769e, CreationTimestamp2023-07-13T18:05:29.758Z[UTC]]
Pipeline[ Id: 4a603b70-e5cc-49fa-b037-ae64bd1eeddc, Nodes: 670feeb2-63d9-4844-90cb-0909fa95d83a(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)3d582a79-edb0-47f6-a5da-b583183cdf49(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:3d582a79-edb0-47f6-a5da-b583183cdf49, CreationTimestamp2023-07-13T18:05:29.994Z[UTC]]
Pipeline[ Id: 3d6b0901-249a-41be-8c98-c41e068f7d3e, Nodes: 3d582a79-edb0-47f6-a5da-b583183cdf49(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:3d582a79-edb0-47f6-a5da-b583183cdf49, CreationTimestamp2023-07-13T18:05:29.569Z[UTC]]
Pipeline[ Id: 7a89bd69-5fb0-4d75-befe-d3cf57b94880, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e75a0338-c280-4d7d-9d5c-e78a01b0769e, CreationTimestamp2023-07-13T18:05:27.486Z[UTC]]
Pipeline[ Id: 87f3cb6d-d63d-425c-b56f-d0df3c413343, Nodes: 670feeb2-63d9-4844-90cb-0909fa95d83a(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:670feeb2-63d9-4844-90cb-0909fa95d83a, CreationTimestamp2023-07-13T18:05:28.396Z[UTC]]</msg>
<status status="PASS" starttime="20230713 18:10:10.152" endtime="20230713 18:10:10.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:10:10.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:10:10.153" endtime="20230713 18:10:10.154"/>
</kw>
<status status="PASS" starttime="20230713 18:10:01.038" endtime="20230713 18:10:10.154"/>
</kw>
<msg timestamp="20230713 18:10:10.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:10:01.038" endtime="20230713 18:10:10.154"/>
</kw>
<msg timestamp="20230713 18:10:10.154" level="INFO">${output} = Pipeline[ Id: 2b21bf9f-ba54-4911-80f7-03a711a0aa88, Nodes: e75a0338-c280-4d7d-9d5c-e78a01b0769e(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230713 18:10:01.037" endtime="20230713 18:10:10.154"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230713 18:10:10.156" endtime="20230713 18:10:10.156"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230713 18:10:10.156" endtime="20230713 18:10:10.158"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 18:09:51.620" endtime="20230713 18:10:10.158"/>
</test>
<test id="s1-s2-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:10:10.166" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:10:16.401" level="INFO">${rc} = 255</msg>
<msg timestamp="20230713 18:10:16.401" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230713 18:10:10.161" endtime="20230713 18:10:16.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:10:16.403" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20230713 18:10:16.402" endtime="20230713 18:10:16.403"/>
</kw>
<msg timestamp="20230713 18:10:16.404" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230713 18:10:10.160" endtime="20230713 18:10:16.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:10:16.404" endtime="20230713 18:10:16.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:10:16.405" endtime="20230713 18:10:16.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:10:16.406" endtime="20230713 18:10:16.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:10:16.407" endtime="20230713 18:10:16.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 18:10:16.407" endtime="20230713 18:10:16.408"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 18:10:10.159" endtime="20230713 18:10:16.408"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20230713 18:08:43.717" endtime="20230713 18:10:16.410"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:11:17.135" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:11:17.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:11:17.186" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230713 18:11:17.085" endtime="20230713 18:11:17.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:11:17.190" level="INFO">scm</msg>
<status status="PASS" starttime="20230713 18:11:17.187" endtime="20230713 18:11:17.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:11:17.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:11:17.191" endtime="20230713 18:11:17.193"/>
</kw>
<status status="PASS" starttime="20230713 18:11:17.079" endtime="20230713 18:11:17.194"/>
</kw>
<msg timestamp="20230713 18:11:17.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:11:17.067" endtime="20230713 18:11:17.194"/>
</kw>
<msg timestamp="20230713 18:11:17.196" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230713 18:11:17.063" endtime="20230713 18:11:17.196"/>
</kw>
<msg timestamp="20230713 18:11:17.196" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230713 18:11:17.057" endtime="20230713 18:11:17.196"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230713 18:11:17.200" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230713 18:11:17.196" endtime="20230713 18:11:17.200"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:11:17.255" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:11:17.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:11:17.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 18:11:17.222" endtime="20230713 18:11:17.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:11:17.333" level="INFO"/>
<status status="PASS" starttime="20230713 18:11:17.328" endtime="20230713 18:11:17.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:11:17.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:11:17.336" endtime="20230713 18:11:17.341"/>
</kw>
<status status="PASS" starttime="20230713 18:11:17.214" endtime="20230713 18:11:17.342"/>
</kw>
<msg timestamp="20230713 18:11:17.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:11:17.213" endtime="20230713 18:11:17.342"/>
</kw>
<status status="PASS" starttime="20230713 18:11:17.204" endtime="20230713 18:11:17.343"/>
</kw>
<status status="PASS" starttime="20230713 18:11:17.203" endtime="20230713 18:11:17.343"/>
</kw>
<status status="PASS" starttime="20230713 18:11:17.051" endtime="20230713 18:11:17.344"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230713 18:11:17.045" endtime="20230713 18:11:17.350"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230713 18:11:16.812" endtime="20230713 18:11:17.366"/>
</suite>
<suite id="s1-s4" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s4-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:07:08.944" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:07:08.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:07:08.952" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230713 18:07:08.940" endtime="20230713 18:07:08.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:08.954" level="INFO">scm</msg>
<status status="PASS" starttime="20230713 18:07:08.953" endtime="20230713 18:07:08.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:07:08.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:07:08.954" endtime="20230713 18:07:08.955"/>
</kw>
<status status="PASS" starttime="20230713 18:07:08.940" endtime="20230713 18:07:08.955"/>
</kw>
<msg timestamp="20230713 18:07:08.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:07:08.939" endtime="20230713 18:07:08.956"/>
</kw>
<msg timestamp="20230713 18:07:08.956" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230713 18:07:08.939" endtime="20230713 18:07:08.956"/>
</kw>
<msg timestamp="20230713 18:07:08.956" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230713 18:07:08.938" endtime="20230713 18:07:08.956"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230713 18:07:08.957" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230713 18:07:08.957" endtime="20230713 18:07:08.957"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 18:07:08.963" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 18:07:08.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 18:07:08.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 18:07:08.960" endtime="20230713 18:07:08.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 18:07:08.990" level="INFO"/>
<status status="PASS" starttime="20230713 18:07:08.989" endtime="20230713 18:07:08.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 18:07:08.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 18:07:08.991" endtime="20230713 18:07:08.992"/>
</kw>
<status status="PASS" starttime="20230713 18:07:08.960" endtime="20230713 18:07:08.992"/>
</kw>
<msg timestamp="20230713 18:07:08.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 18:07:08.959" endtime="20230713 18:07:08.993"/>
</kw>
<status status="PASS" starttime="20230713 18:07:08.958" endtime="20230713 18:07:08.993"/>
</kw>
<status status="PASS" starttime="20230713 18:07:08.958" endtime="20230713 18:07:08.993"/>
</kw>
<status status="PASS" starttime="20230713 18:07:08.937" endtime="20230713 18:07:08.993"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230713 18:07:08.936" endtime="20230713 18:07:08.993"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230713 18:07:08.851" endtime="20230713 18:07:08.996"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="132289"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-ha-root-ca-rotation">ozonesecure-ha-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="Pipeline">ozonesecure-ha-root-ca-rotation.Pipeline</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
