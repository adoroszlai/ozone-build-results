<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230713 21:16:00.439" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230713 21:09:03.964" level="INFO">${random} = 20771</msg>
<status status="PASS" starttime="20230713 21:09:03.963" endtime="20230713 21:09:03.964"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:03.971" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-20771 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:09.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:09.675" level="INFO">${output} = 2023-07-13 21:09:08,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:08,291 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:09:03.967" endtime="20230713 21:09:09.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:09.676" level="INFO">2023-07-13 21:09:08,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:08,291 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 21:09:08,292 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230713 21:09:09.676" endtime="20230713 21:09:09.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:09.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:09.677" endtime="20230713 21:09:09.677"/>
</kw>
<status status="PASS" starttime="20230713 21:09:03.966" endtime="20230713 21:09:09.678"/>
</kw>
<msg timestamp="20230713 21:09:09.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:03.965" endtime="20230713 21:09:09.679"/>
</kw>
<msg timestamp="20230713 21:09:09.679" level="INFO">${output} = 2023-07-13 21:09:08,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:08,291 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:09:03.964" endtime="20230713 21:09:09.679"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:09.679" endtime="20230713 21:09:09.680"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:09.683" level="INFO">Running command 'cat /tmp/key-20771 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:09.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:09.686" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:09.681" endtime="20230713 21:09:09.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:09.688" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:09.686" endtime="20230713 21:09:09.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:09.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:09.688" endtime="20230713 21:09:09.690"/>
</kw>
<msg timestamp="20230713 21:09:09.690" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:09.680" endtime="20230713 21:09:09.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:09.691" endtime="20230713 21:09:09.691"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:09.694" level="INFO">Running command 'rm /tmp/key-20771 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:09.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:09.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:09.692" endtime="20230713 21:09:09.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:09.698" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:09.697" endtime="20230713 21:09:09.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:09.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:09.698" endtime="20230713 21:09:09.699"/>
</kw>
<status status="PASS" starttime="20230713 21:09:09.691" endtime="20230713 21:09:09.699"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:03.962" endtime="20230713 21:09:09.699"/>
</test>
<test id="s1-s1-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:09.705" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:10.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:10.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:09.703" endtime="20230713 21:09:10.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:10.587" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:10.587" endtime="20230713 21:09:10.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:10.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:10.588" endtime="20230713 21:09:10.588"/>
</kw>
<status status="PASS" starttime="20230713 21:09:09.703" endtime="20230713 21:09:10.589"/>
</kw>
<msg timestamp="20230713 21:09:10.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:09.702" endtime="20230713 21:09:10.589"/>
</kw>
<status status="PASS" starttime="20230713 21:09:09.702" endtime="20230713 21:09:10.589"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:10.594" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:11.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:11.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:10.591" endtime="20230713 21:09:11.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:11.173" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:11.172" endtime="20230713 21:09:11.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:11.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:11.173" endtime="20230713 21:09:11.174"/>
</kw>
<status status="PASS" starttime="20230713 21:09:10.590" endtime="20230713 21:09:11.174"/>
</kw>
<msg timestamp="20230713 21:09:11.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:10.590" endtime="20230713 21:09:11.175"/>
</kw>
<status status="PASS" starttime="20230713 21:09:10.590" endtime="20230713 21:09:11.175"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:11.179" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:11.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:11.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:11.177" endtime="20230713 21:09:11.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:11.810" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:11.808" endtime="20230713 21:09:11.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:11.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:11.813" endtime="20230713 21:09:11.813"/>
</kw>
<status status="PASS" starttime="20230713 21:09:11.176" endtime="20230713 21:09:11.814"/>
</kw>
<msg timestamp="20230713 21:09:11.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:11.176" endtime="20230713 21:09:11.814"/>
</kw>
<status status="PASS" starttime="20230713 21:09:11.175" endtime="20230713 21:09:11.815"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:11.819" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:12.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:12.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:11.816" endtime="20230713 21:09:12.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:12.384" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:12.384" endtime="20230713 21:09:12.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:12.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:12.385" endtime="20230713 21:09:12.385"/>
</kw>
<status status="PASS" starttime="20230713 21:09:11.816" endtime="20230713 21:09:12.386"/>
</kw>
<msg timestamp="20230713 21:09:12.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:11.815" endtime="20230713 21:09:12.386"/>
</kw>
<status status="PASS" starttime="20230713 21:09:11.815" endtime="20230713 21:09:12.386"/>
</kw>
<status status="PASS" starttime="20230713 21:09:09.701" endtime="20230713 21:09:12.387"/>
</kw>
<status status="PASS" starttime="20230713 21:09:09.701" endtime="20230713 21:09:12.387"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:09.700" endtime="20230713 21:09:12.387"/>
</test>
<test id="s1-s1-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:12.394" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:15.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:15.504" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:17 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:12.391" endtime="20230713 21:09:15.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:15.506" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:17 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:09:13 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:09:15.505" endtime="20230713 21:09:15.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:15.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:15.506" endtime="20230713 21:09:15.506"/>
</kw>
<msg timestamp="20230713 21:09:15.507" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:17 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:12.390" endtime="20230713 21:09:15.507"/>
</kw>
<msg timestamp="20230713 21:09:15.507" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:17 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:12.390" endtime="20230713 21:09:15.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:15.508" endtime="20230713 21:09:15.508"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:15.512" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:15.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:15.515" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:15.509" endtime="20230713 21:09:15.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:15.516" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:15.515" endtime="20230713 21:09:15.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:15.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:15.516" endtime="20230713 21:09:15.517"/>
</kw>
<msg timestamp="20230713 21:09:15.517" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:15.508" endtime="20230713 21:09:15.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:15.517" endtime="20230713 21:09:15.518"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:15.521" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:15.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:15.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:15.519" endtime="20230713 21:09:15.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:15.526" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:15.525" endtime="20230713 21:09:15.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:15.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:15.526" endtime="20230713 21:09:15.527"/>
</kw>
<status status="PASS" starttime="20230713 21:09:15.518" endtime="20230713 21:09:15.527"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:12.389" endtime="20230713 21:09:15.527"/>
</test>
<test id="s1-s1-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:15.534" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:16.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:16.353" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:23 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:15.531" endtime="20230713 21:09:16.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:16.354" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:23 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:09:16 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:09:16.353" endtime="20230713 21:09:16.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:16.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:16.355" endtime="20230713 21:09:16.356"/>
</kw>
<msg timestamp="20230713 21:09:16.356" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:23 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:15.531" endtime="20230713 21:09:16.357"/>
</kw>
<msg timestamp="20230713 21:09:16.357" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:23 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:15.530" endtime="20230713 21:09:16.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:16.357" endtime="20230713 21:09:16.357"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:16.361" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:16.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:16.363" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:09:16.358" endtime="20230713 21:09:16.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:16.364" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:09:16.364" endtime="20230713 21:09:16.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:16.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:16.365" endtime="20230713 21:09:16.366"/>
</kw>
<msg timestamp="20230713 21:09:16.366" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:09:16.358" endtime="20230713 21:09:16.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:16.366" endtime="20230713 21:09:16.367"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:16.370" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:16.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:16.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:16.368" endtime="20230713 21:09:16.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:16.374" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:16.373" endtime="20230713 21:09:16.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:16.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:16.374" endtime="20230713 21:09:16.375"/>
</kw>
<status status="PASS" starttime="20230713 21:09:16.367" endtime="20230713 21:09:16.376"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:15.529" endtime="20230713 21:09:16.376"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230713 21:09:03.872" endtime="20230713 21:09:16.378"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230713 21:09:19.999" level="INFO">${random} = 25920</msg>
<status status="PASS" starttime="20230713 21:09:19.998" endtime="20230713 21:09:19.999"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:20.005" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-25920 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:24.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:24.939" level="INFO">${output} = 2023-07-13 21:09:23,584 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:23,681 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:09:20.001" endtime="20230713 21:09:24.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:24.940" level="INFO">2023-07-13 21:09:23,584 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:23,681 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 21:09:23,681 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230713 21:09:24.939" endtime="20230713 21:09:24.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:24.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:24.940" endtime="20230713 21:09:24.941"/>
</kw>
<status status="PASS" starttime="20230713 21:09:20.000" endtime="20230713 21:09:24.942"/>
</kw>
<msg timestamp="20230713 21:09:24.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:19.999" endtime="20230713 21:09:24.943"/>
</kw>
<msg timestamp="20230713 21:09:24.943" level="INFO">${output} = 2023-07-13 21:09:23,584 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:23,681 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:09:19.999" endtime="20230713 21:09:24.943"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:24.943" endtime="20230713 21:09:24.944"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:24.952" level="INFO">Running command 'cat /tmp/key-25920 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:24.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:24.953" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:24.945" endtime="20230713 21:09:24.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:24.954" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:24.954" endtime="20230713 21:09:24.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:24.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:24.954" endtime="20230713 21:09:24.955"/>
</kw>
<msg timestamp="20230713 21:09:24.956" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:24.944" endtime="20230713 21:09:24.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:24.956" endtime="20230713 21:09:24.956"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:24.960" level="INFO">Running command 'rm /tmp/key-25920 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:24.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:24.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:24.957" endtime="20230713 21:09:24.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:24.964" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:24.963" endtime="20230713 21:09:24.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:24.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:24.964" endtime="20230713 21:09:24.965"/>
</kw>
<status status="PASS" starttime="20230713 21:09:24.957" endtime="20230713 21:09:24.965"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:19.997" endtime="20230713 21:09:24.965"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:24.972" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:25.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:25.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:24.970" endtime="20230713 21:09:25.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:25.543" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:25.542" endtime="20230713 21:09:25.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:25.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:25.543" endtime="20230713 21:09:25.544"/>
</kw>
<status status="PASS" starttime="20230713 21:09:24.970" endtime="20230713 21:09:25.544"/>
</kw>
<msg timestamp="20230713 21:09:25.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:24.969" endtime="20230713 21:09:25.544"/>
</kw>
<status status="PASS" starttime="20230713 21:09:24.969" endtime="20230713 21:09:25.545"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:25.549" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:26.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:26.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:25.546" endtime="20230713 21:09:26.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:26.113" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:26.112" endtime="20230713 21:09:26.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:26.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:26.113" endtime="20230713 21:09:26.114"/>
</kw>
<status status="PASS" starttime="20230713 21:09:25.546" endtime="20230713 21:09:26.114"/>
</kw>
<msg timestamp="20230713 21:09:26.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:25.545" endtime="20230713 21:09:26.115"/>
</kw>
<status status="PASS" starttime="20230713 21:09:25.545" endtime="20230713 21:09:26.115"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:26.119" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:26.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:26.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:26.117" endtime="20230713 21:09:26.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:26.666" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:26.666" endtime="20230713 21:09:26.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:26.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:26.667" endtime="20230713 21:09:26.667"/>
</kw>
<status status="PASS" starttime="20230713 21:09:26.116" endtime="20230713 21:09:26.668"/>
</kw>
<msg timestamp="20230713 21:09:26.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:26.116" endtime="20230713 21:09:26.668"/>
</kw>
<status status="PASS" starttime="20230713 21:09:26.115" endtime="20230713 21:09:26.668"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:26.673" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:27.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:27.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:26.670" endtime="20230713 21:09:27.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:27.253" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:27.252" endtime="20230713 21:09:27.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:27.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:27.253" endtime="20230713 21:09:27.254"/>
</kw>
<status status="PASS" starttime="20230713 21:09:26.669" endtime="20230713 21:09:27.254"/>
</kw>
<msg timestamp="20230713 21:09:27.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:26.669" endtime="20230713 21:09:27.254"/>
</kw>
<status status="PASS" starttime="20230713 21:09:26.669" endtime="20230713 21:09:27.255"/>
</kw>
<status status="PASS" starttime="20230713 21:09:24.968" endtime="20230713 21:09:27.255"/>
</kw>
<status status="PASS" starttime="20230713 21:09:24.968" endtime="20230713 21:09:27.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:24.967" endtime="20230713 21:09:27.255"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:27.275" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:28.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:28.070" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:27.270" endtime="20230713 21:09:28.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:28.072" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:09:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:09:28.071" endtime="20230713 21:09:28.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:28.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:28.073" endtime="20230713 21:09:28.073"/>
</kw>
<msg timestamp="20230713 21:09:28.074" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:27.269" endtime="20230713 21:09:28.074"/>
</kw>
<msg timestamp="20230713 21:09:28.074" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:27.268" endtime="20230713 21:09:28.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:28.074" endtime="20230713 21:09:28.074"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:28.078" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:28.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:28.082" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:28.076" endtime="20230713 21:09:28.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:28.083" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:28.082" endtime="20230713 21:09:28.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:28.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:28.084" endtime="20230713 21:09:28.084"/>
</kw>
<msg timestamp="20230713 21:09:28.084" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:09:28.075" endtime="20230713 21:09:28.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:28.085" endtime="20230713 21:09:28.085"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:28.089" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:28.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:28.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:28.086" endtime="20230713 21:09:28.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:28.093" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:28.092" endtime="20230713 21:09:28.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:28.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:28.093" endtime="20230713 21:09:28.094"/>
</kw>
<status status="PASS" starttime="20230713 21:09:28.085" endtime="20230713 21:09:28.094"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:27.263" endtime="20230713 21:09:28.094"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:28.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:28.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:28.885" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:05:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:28.102" endtime="20230713 21:09:28.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:28.887" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:05:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:09:28 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:09:28.886" endtime="20230713 21:09:28.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:28.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:28.887" endtime="20230713 21:09:28.888"/>
</kw>
<msg timestamp="20230713 21:09:28.888" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:05:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:28.097" endtime="20230713 21:09:28.889"/>
</kw>
<msg timestamp="20230713 21:09:28.889" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:05:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:09:28.097" endtime="20230713 21:09:28.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:28.889" endtime="20230713 21:09:28.889"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:28.893" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:28.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:28.896" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:09:28.890" endtime="20230713 21:09:28.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:28.897" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:09:28.897" endtime="20230713 21:09:28.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:28.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:28.898" endtime="20230713 21:09:28.898"/>
</kw>
<msg timestamp="20230713 21:09:28.898" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:09:28.890" endtime="20230713 21:09:28.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:28.899" endtime="20230713 21:09:28.899"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:28.902" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:28.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:28.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:28.900" endtime="20230713 21:09:28.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:28.906" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:28.905" endtime="20230713 21:09:28.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:28.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:28.906" endtime="20230713 21:09:28.907"/>
</kw>
<status status="PASS" starttime="20230713 21:09:28.899" endtime="20230713 21:09:28.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:28.096" endtime="20230713 21:09:28.907"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230713 21:09:19.909" endtime="20230713 21:09:28.909"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:32.724" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:36.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:36.066" level="INFO">${output} = 2023-07-13 21:09:35,982 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230713 21:09:32.719" endtime="20230713 21:09:36.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:36.067" level="INFO">2023-07-13 21:09:35,982 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230713 21:09:36.066" endtime="20230713 21:09:36.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:36.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:36.068" endtime="20230713 21:09:36.068"/>
</kw>
<status status="PASS" starttime="20230713 21:09:32.719" endtime="20230713 21:09:36.069"/>
</kw>
<msg timestamp="20230713 21:09:36.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:32.718" endtime="20230713 21:09:36.073"/>
</kw>
<msg timestamp="20230713 21:09:36.074" level="INFO">${output} = 2023-07-13 21:09:35,982 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230713 21:09:32.718" endtime="20230713 21:09:36.074"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:36.075" endtime="20230713 21:09:36.076"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:36.085" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:39.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:39.284" level="INFO">${output} = 2023-07-13 21:09:39,194 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230713 21:09:36.080" endtime="20230713 21:09:39.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:39.285" level="INFO">2023-07-13 21:09:39,194 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230713 21:09:39.285" endtime="20230713 21:09:39.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:39.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:39.286" endtime="20230713 21:09:39.287"/>
</kw>
<status status="PASS" starttime="20230713 21:09:36.078" endtime="20230713 21:09:39.287"/>
</kw>
<msg timestamp="20230713 21:09:39.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:36.078" endtime="20230713 21:09:39.288"/>
</kw>
<msg timestamp="20230713 21:09:39.288" level="INFO">${output} = 2023-07-13 21:09:39,194 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230713 21:09:36.076" endtime="20230713 21:09:39.288"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:39.289" endtime="20230713 21:09:39.289"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:32.717" endtime="20230713 21:09:39.289"/>
</test>
<test id="s1-s3-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:39.297" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:09:39.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:39.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:39.294" endtime="20230713 21:09:39.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:39.300" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:39.299" endtime="20230713 21:09:39.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:39.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:39.300" endtime="20230713 21:09:39.301"/>
</kw>
<status status="PASS" starttime="20230713 21:09:39.293" endtime="20230713 21:09:39.301"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:39.305" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:45.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:45.242" level="INFO">${output} = 2023-07-13 21:09:43,284 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:43,369 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:09:39.303" endtime="20230713 21:09:45.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:45.243" level="INFO">2023-07-13 21:09:43,284 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:43,369 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 21:09:43,369 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-13 21:09:43,700 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230713 21:09:45.242" endtime="20230713 21:09:45.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:45.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:45.244" endtime="20230713 21:09:45.244"/>
</kw>
<status status="PASS" starttime="20230713 21:09:39.302" endtime="20230713 21:09:45.245"/>
</kw>
<msg timestamp="20230713 21:09:45.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:39.302" endtime="20230713 21:09:45.246"/>
</kw>
<msg timestamp="20230713 21:09:45.246" level="INFO">${output} = 2023-07-13 21:09:43,284 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:43,369 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:09:39.301" endtime="20230713 21:09:45.246"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:45.246" endtime="20230713 21:09:45.247"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:45.250" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:45.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:45.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:45.247" endtime="20230713 21:09:45.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:45.255" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:45.254" endtime="20230713 21:09:45.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:45.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:45.255" endtime="20230713 21:09:45.255"/>
</kw>
<status status="PASS" starttime="20230713 21:09:45.247" endtime="20230713 21:09:45.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:39.292" endtime="20230713 21:09:45.256"/>
</test>
<test id="s1-s3-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:45.262" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:48.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:48.342" level="INFO">${output} = 2023-07-13 21:09:48,284 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230713 21:09:45.260" endtime="20230713 21:09:48.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:48.343" level="INFO">2023-07-13 21:09:48,284 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230713 21:09:48.342" endtime="20230713 21:09:48.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:48.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:48.344" endtime="20230713 21:09:48.344"/>
</kw>
<status status="PASS" starttime="20230713 21:09:45.259" endtime="20230713 21:09:48.345"/>
</kw>
<msg timestamp="20230713 21:09:48.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:45.259" endtime="20230713 21:09:48.345"/>
</kw>
<msg timestamp="20230713 21:09:48.345" level="INFO">${output} = 2023-07-13 21:09:48,284 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230713 21:09:45.258" endtime="20230713 21:09:48.345"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:48.346" endtime="20230713 21:09:48.346"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:45.257" endtime="20230713 21:09:48.346"/>
</test>
<test id="s1-s3-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:48.351" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:09:48.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:48.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:48.349" endtime="20230713 21:09:48.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:48.354" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:48.354" endtime="20230713 21:09:48.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:48.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:48.354" endtime="20230713 21:09:48.355"/>
</kw>
<status status="PASS" starttime="20230713 21:09:48.348" endtime="20230713 21:09:48.356"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:48.360" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:53.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:53.904" level="INFO">${output} = 2023-07-13 21:09:52,215 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:52,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:09:48.358" endtime="20230713 21:09:53.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:53.906" level="INFO">2023-07-13 21:09:52,215 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:52,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 21:09:52,382 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-13 21:09:52,688 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230713 21:09:53.905" endtime="20230713 21:09:53.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:53.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:53.906" endtime="20230713 21:09:53.907"/>
</kw>
<status status="PASS" starttime="20230713 21:09:48.357" endtime="20230713 21:09:53.907"/>
</kw>
<msg timestamp="20230713 21:09:53.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:48.357" endtime="20230713 21:09:53.908"/>
</kw>
<msg timestamp="20230713 21:09:53.908" level="INFO">${output} = 2023-07-13 21:09:52,215 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:09:52,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:09:48.356" endtime="20230713 21:09:53.908"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:53.908" endtime="20230713 21:09:53.908"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:53.911" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:53.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:53.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:53.909" endtime="20230713 21:09:53.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:53.916" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:53.915" endtime="20230713 21:09:53.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:53.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:53.916" endtime="20230713 21:09:53.917"/>
</kw>
<status status="PASS" starttime="20230713 21:09:53.909" endtime="20230713 21:09:53.917"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:48.347" endtime="20230713 21:09:53.917"/>
</test>
<test id="s1-s3-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:53.923" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:54.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:54.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:53.921" endtime="20230713 21:09:54.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:54.474" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:54.473" endtime="20230713 21:09:54.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:54.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:54.474" endtime="20230713 21:09:54.475"/>
</kw>
<status status="PASS" starttime="20230713 21:09:53.921" endtime="20230713 21:09:54.475"/>
</kw>
<msg timestamp="20230713 21:09:54.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:53.920" endtime="20230713 21:09:54.476"/>
</kw>
<status status="PASS" starttime="20230713 21:09:53.920" endtime="20230713 21:09:54.476"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:54.480" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:55.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:55.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:54.478" endtime="20230713 21:09:55.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:55.056" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:55.055" endtime="20230713 21:09:55.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:55.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:55.056" endtime="20230713 21:09:55.057"/>
</kw>
<status status="PASS" starttime="20230713 21:09:54.477" endtime="20230713 21:09:55.057"/>
</kw>
<msg timestamp="20230713 21:09:55.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:54.477" endtime="20230713 21:09:55.058"/>
</kw>
<status status="PASS" starttime="20230713 21:09:54.476" endtime="20230713 21:09:55.058"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:55.062" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:55.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:55.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:55.060" endtime="20230713 21:09:55.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:55.611" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:55.610" endtime="20230713 21:09:55.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:55.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:55.612" endtime="20230713 21:09:55.612"/>
</kw>
<status status="PASS" starttime="20230713 21:09:55.059" endtime="20230713 21:09:55.612"/>
</kw>
<msg timestamp="20230713 21:09:55.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:55.059" endtime="20230713 21:09:55.613"/>
</kw>
<status status="PASS" starttime="20230713 21:09:55.058" endtime="20230713 21:09:55.613"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:55.618" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:56.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:56.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:55.615" endtime="20230713 21:09:56.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:56.173" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:56.172" endtime="20230713 21:09:56.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:56.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:56.173" endtime="20230713 21:09:56.174"/>
</kw>
<status status="PASS" starttime="20230713 21:09:55.614" endtime="20230713 21:09:56.174"/>
</kw>
<msg timestamp="20230713 21:09:56.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:55.614" endtime="20230713 21:09:56.175"/>
</kw>
<status status="PASS" starttime="20230713 21:09:55.613" endtime="20230713 21:09:56.175"/>
</kw>
<status status="PASS" starttime="20230713 21:09:53.920" endtime="20230713 21:09:56.175"/>
</kw>
<status status="PASS" starttime="20230713 21:09:53.919" endtime="20230713 21:09:56.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:53.918" endtime="20230713 21:09:56.176"/>
</test>
<test id="s1-s3-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:56.182" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:56.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:56.916" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:09:56.180" endtime="20230713 21:09:56.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:56.917" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:09:56.916" endtime="20230713 21:09:56.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:56.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:56.918" endtime="20230713 21:09:56.918"/>
</kw>
<status status="PASS" starttime="20230713 21:09:56.179" endtime="20230713 21:09:56.918"/>
</kw>
<msg timestamp="20230713 21:09:56.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:09:56.179" endtime="20230713 21:09:56.919"/>
</kw>
<msg timestamp="20230713 21:09:56.920" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:09:56.178" endtime="20230713 21:09:56.920"/>
</kw>
<msg timestamp="20230713 21:09:56.920" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:09:56.178" endtime="20230713 21:09:56.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:56.920" endtime="20230713 21:09:56.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:56.921" endtime="20230713 21:09:56.921"/>
</kw>
<msg timestamp="20230713 21:09:56.921" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230713 21:09:56.177" endtime="20230713 21:09:56.921"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230713 21:09:56.922" endtime="20230713 21:09:56.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:56.176" endtime="20230713 21:09:56.923"/>
</test>
<test id="s1-s3-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:56.927" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:09:56.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:56.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:56.925" endtime="20230713 21:09:56.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:56.930" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:56.930" endtime="20230713 21:09:56.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:56.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:56.931" endtime="20230713 21:09:56.931"/>
</kw>
<status status="PASS" starttime="20230713 21:09:56.924" endtime="20230713 21:09:56.932"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:56.936" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:58.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:58.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:56.934" endtime="20230713 21:09:58.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:58.189" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:58.188" endtime="20230713 21:09:58.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:58.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:58.189" endtime="20230713 21:09:58.190"/>
</kw>
<msg timestamp="20230713 21:09:58.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:56.933" endtime="20230713 21:09:58.190"/>
</kw>
<msg timestamp="20230713 21:09:58.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:56.932" endtime="20230713 21:09:58.190"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:09:58.190" endtime="20230713 21:09:58.191"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:09:58.195" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:58.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:58.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:09:58.192" endtime="20230713 21:09:58.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:58.200" level="INFO"/>
<status status="PASS" starttime="20230713 21:09:58.199" endtime="20230713 21:09:58.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:58.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:58.200" endtime="20230713 21:09:58.201"/>
</kw>
<status status="PASS" starttime="20230713 21:09:58.191" endtime="20230713 21:09:58.201"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:09:56.923" endtime="20230713 21:09:58.201"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230713 21:09:32.614" endtime="20230713 21:09:58.204"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230713 21:10:01.768" level="INFO">${random} = 17352</msg>
<status status="PASS" starttime="20230713 21:10:01.767" endtime="20230713 21:10:01.768"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:01.775" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-17352 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:07.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:07.267" level="INFO">${output} = 2023-07-13 21:10:05,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:10:06,049 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:10:01.770" endtime="20230713 21:10:07.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:07.268" level="INFO">2023-07-13 21:10:05,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:10:06,049 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 21:10:06,049 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230713 21:10:07.267" endtime="20230713 21:10:07.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:07.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:07.268" endtime="20230713 21:10:07.269"/>
</kw>
<status status="PASS" starttime="20230713 21:10:01.770" endtime="20230713 21:10:07.269"/>
</kw>
<msg timestamp="20230713 21:10:07.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:01.769" endtime="20230713 21:10:07.271"/>
</kw>
<msg timestamp="20230713 21:10:07.271" level="INFO">${output} = 2023-07-13 21:10:05,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:10:06,049 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:10:01.768" endtime="20230713 21:10:07.271"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:07.271" endtime="20230713 21:10:07.272"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:07.276" level="INFO">Running command 'cat /tmp/key-17352 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:07.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:07.280" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:10:07.273" endtime="20230713 21:10:07.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:07.281" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:10:07.280" endtime="20230713 21:10:07.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:07.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:07.281" endtime="20230713 21:10:07.282"/>
</kw>
<msg timestamp="20230713 21:10:07.283" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:10:07.272" endtime="20230713 21:10:07.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:07.283" endtime="20230713 21:10:07.284"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:07.288" level="INFO">Running command 'rm /tmp/key-17352 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:07.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:07.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:07.284" endtime="20230713 21:10:07.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:07.291" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:07.290" endtime="20230713 21:10:07.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:07.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:07.291" endtime="20230713 21:10:07.292"/>
</kw>
<status status="PASS" starttime="20230713 21:10:07.284" endtime="20230713 21:10:07.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:10:01.766" endtime="20230713 21:10:07.293"/>
</test>
<test id="s1-s4-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:07.300" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:07.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:07.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:07.298" endtime="20230713 21:10:07.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:07.885" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:07.884" endtime="20230713 21:10:07.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:07.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:07.885" endtime="20230713 21:10:07.886"/>
</kw>
<status status="PASS" starttime="20230713 21:10:07.297" endtime="20230713 21:10:07.886"/>
</kw>
<msg timestamp="20230713 21:10:07.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:07.297" endtime="20230713 21:10:07.887"/>
</kw>
<status status="PASS" starttime="20230713 21:10:07.296" endtime="20230713 21:10:07.887"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:07.891" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:08.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:08.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:07.888" endtime="20230713 21:10:08.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:08.489" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:08.489" endtime="20230713 21:10:08.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:08.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:08.490" endtime="20230713 21:10:08.490"/>
</kw>
<status status="PASS" starttime="20230713 21:10:07.888" endtime="20230713 21:10:08.491"/>
</kw>
<msg timestamp="20230713 21:10:08.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:07.888" endtime="20230713 21:10:08.491"/>
</kw>
<status status="PASS" starttime="20230713 21:10:07.887" endtime="20230713 21:10:08.491"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:08.495" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:09.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:09.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:08.493" endtime="20230713 21:10:09.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:09.075" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:09.074" endtime="20230713 21:10:09.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:09.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:09.075" endtime="20230713 21:10:09.076"/>
</kw>
<status status="PASS" starttime="20230713 21:10:08.492" endtime="20230713 21:10:09.076"/>
</kw>
<msg timestamp="20230713 21:10:09.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:08.492" endtime="20230713 21:10:09.077"/>
</kw>
<status status="PASS" starttime="20230713 21:10:08.492" endtime="20230713 21:10:09.077"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:09.082" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:09.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:09.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:09.079" endtime="20230713 21:10:09.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:09.644" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:09.643" endtime="20230713 21:10:09.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:09.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:09.644" endtime="20230713 21:10:09.645"/>
</kw>
<status status="PASS" starttime="20230713 21:10:09.078" endtime="20230713 21:10:09.645"/>
</kw>
<msg timestamp="20230713 21:10:09.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:09.078" endtime="20230713 21:10:09.646"/>
</kw>
<status status="PASS" starttime="20230713 21:10:09.077" endtime="20230713 21:10:09.646"/>
</kw>
<status status="PASS" starttime="20230713 21:10:07.295" endtime="20230713 21:10:09.647"/>
</kw>
<status status="PASS" starttime="20230713 21:10:07.295" endtime="20230713 21:10:09.647"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:10:07.294" endtime="20230713 21:10:09.647"/>
</test>
<test id="s1-s4-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:09.652" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:10.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:10.401" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:09:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:10:09.650" endtime="20230713 21:10:10.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:10.403" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:09:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:10:10 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:10:10.402" endtime="20230713 21:10:10.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:10.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:10.403" endtime="20230713 21:10:10.404"/>
</kw>
<msg timestamp="20230713 21:10:10.404" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:09:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:10:09.649" endtime="20230713 21:10:10.404"/>
</kw>
<msg timestamp="20230713 21:10:10.405" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:09:53 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:10:09.649" endtime="20230713 21:10:10.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:10.405" endtime="20230713 21:10:10.405"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:10.409" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:10.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:10.412" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:10:10.406" endtime="20230713 21:10:10.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:10.413" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:10:10.413" endtime="20230713 21:10:10.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:10.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:10.414" endtime="20230713 21:10:10.414"/>
</kw>
<msg timestamp="20230713 21:10:10.415" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:10:10.405" endtime="20230713 21:10:10.415"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:10.415" endtime="20230713 21:10:10.416"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:10.419" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:10.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:10.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:10.416" endtime="20230713 21:10:10.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:10.423" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:10.422" endtime="20230713 21:10:10.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:10.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:10.423" endtime="20230713 21:10:10.424"/>
</kw>
<status status="PASS" starttime="20230713 21:10:10.416" endtime="20230713 21:10:10.424"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:10:09.648" endtime="20230713 21:10:10.425"/>
</test>
<test id="s1-s4-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:10.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:11.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:11.151" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:09:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:10:10.429" endtime="20230713 21:10:11.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:11.152" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:09:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:10:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:10:11.152" endtime="20230713 21:10:11.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:11.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:11.153" endtime="20230713 21:10:11.153"/>
</kw>
<msg timestamp="20230713 21:10:11.154" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:09:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:10:10.428" endtime="20230713 21:10:11.154"/>
</kw>
<msg timestamp="20230713 21:10:11.154" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:09:58 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:10:10.427" endtime="20230713 21:10:11.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:11.155" endtime="20230713 21:10:11.155"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:11.159" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:11.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:11.161" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:10:11.156" endtime="20230713 21:10:11.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:11.163" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:10:11.162" endtime="20230713 21:10:11.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:11.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:11.163" endtime="20230713 21:10:11.164"/>
</kw>
<msg timestamp="20230713 21:10:11.164" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:10:11.156" endtime="20230713 21:10:11.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:11.164" endtime="20230713 21:10:11.165"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:11.168" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:11.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:11.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:11.166" endtime="20230713 21:10:11.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:11.172" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:11.171" endtime="20230713 21:10:11.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:11.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:11.172" endtime="20230713 21:10:11.173"/>
</kw>
<status status="PASS" starttime="20230713 21:10:11.165" endtime="20230713 21:10:11.173"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:10:10.426" endtime="20230713 21:10:11.174"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230713 21:10:01.677" endtime="20230713 21:10:11.176"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s5-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:14.739" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:10:14.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:14.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:14.734" endtime="20230713 21:10:14.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:14.742" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:14.741" endtime="20230713 21:10:14.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:14.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:14.742" endtime="20230713 21:10:14.743"/>
</kw>
<status status="PASS" starttime="20230713 21:10:14.733" endtime="20230713 21:10:14.743"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:14.750" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:19.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:19.819" level="INFO">${output} = 2023-07-13 21:10:18,239 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:10:18,326 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:10:14.745" endtime="20230713 21:10:19.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:19.820" level="INFO">2023-07-13 21:10:18,239 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:10:18,326 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 21:10:18,326 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-13 21:10:18,600 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230713 21:10:19.819" endtime="20230713 21:10:19.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:19.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:19.821" endtime="20230713 21:10:19.821"/>
</kw>
<status status="PASS" starttime="20230713 21:10:14.744" endtime="20230713 21:10:19.821"/>
</kw>
<msg timestamp="20230713 21:10:19.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:14.744" endtime="20230713 21:10:19.823"/>
</kw>
<msg timestamp="20230713 21:10:19.823" level="INFO">${output} = 2023-07-13 21:10:18,239 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:10:18,326 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:10:14.743" endtime="20230713 21:10:19.823"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:19.824" endtime="20230713 21:10:19.824"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:19.827" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:19.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:19.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:19.825" endtime="20230713 21:10:19.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:19.831" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:19.831" endtime="20230713 21:10:19.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:19.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:19.832" endtime="20230713 21:10:19.833"/>
</kw>
<status status="PASS" starttime="20230713 21:10:19.824" endtime="20230713 21:10:19.833"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:10:14.732" endtime="20230713 21:10:19.834"/>
</test>
<test id="s1-s5-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:19.840" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:10:19.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:19.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:19.837" endtime="20230713 21:10:19.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:19.843" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:19.842" endtime="20230713 21:10:19.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:19.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:19.843" endtime="20230713 21:10:19.844"/>
</kw>
<status status="PASS" starttime="20230713 21:10:19.836" endtime="20230713 21:10:19.844"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:19.849" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:25.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:25.372" level="INFO">${output} = 2023-07-13 21:10:23,665 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:10:23,810 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:10:19.846" endtime="20230713 21:10:25.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:25.373" level="INFO">2023-07-13 21:10:23,665 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:10:23,810 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 21:10:23,810 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-13 21:10:24,148 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230713 21:10:25.372" endtime="20230713 21:10:25.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:25.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:25.374" endtime="20230713 21:10:25.374"/>
</kw>
<status status="PASS" starttime="20230713 21:10:19.845" endtime="20230713 21:10:25.375"/>
</kw>
<msg timestamp="20230713 21:10:25.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:19.845" endtime="20230713 21:10:25.376"/>
</kw>
<msg timestamp="20230713 21:10:25.376" level="INFO">${output} = 2023-07-13 21:10:23,665 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:10:23,810 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:10:19.844" endtime="20230713 21:10:25.376"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:25.376" endtime="20230713 21:10:25.377"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:25.381" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:25.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:25.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:25.378" endtime="20230713 21:10:25.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:25.385" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:25.384" endtime="20230713 21:10:25.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:25.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:25.385" endtime="20230713 21:10:25.385"/>
</kw>
<status status="PASS" starttime="20230713 21:10:25.377" endtime="20230713 21:10:25.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:10:19.835" endtime="20230713 21:10:25.386"/>
</test>
<test id="s1-s5-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:25.393" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:25.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:25.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:25.391" endtime="20230713 21:10:25.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:25.959" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:25.958" endtime="20230713 21:10:25.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:25.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:25.959" endtime="20230713 21:10:25.960"/>
</kw>
<status status="PASS" starttime="20230713 21:10:25.390" endtime="20230713 21:10:25.960"/>
</kw>
<msg timestamp="20230713 21:10:25.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:25.389" endtime="20230713 21:10:25.961"/>
</kw>
<status status="PASS" starttime="20230713 21:10:25.389" endtime="20230713 21:10:25.961"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:25.965" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:26.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:26.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:25.962" endtime="20230713 21:10:26.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:26.523" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:26.521" endtime="20230713 21:10:26.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:26.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:26.523" endtime="20230713 21:10:26.524"/>
</kw>
<status status="PASS" starttime="20230713 21:10:25.962" endtime="20230713 21:10:26.524"/>
</kw>
<msg timestamp="20230713 21:10:26.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:25.961" endtime="20230713 21:10:26.525"/>
</kw>
<status status="PASS" starttime="20230713 21:10:25.961" endtime="20230713 21:10:26.526"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:26.531" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:27.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:27.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:26.528" endtime="20230713 21:10:27.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:27.096" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:27.095" endtime="20230713 21:10:27.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:27.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:27.097" endtime="20230713 21:10:27.097"/>
</kw>
<status status="PASS" starttime="20230713 21:10:26.527" endtime="20230713 21:10:27.098"/>
</kw>
<msg timestamp="20230713 21:10:27.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:26.526" endtime="20230713 21:10:27.098"/>
</kw>
<status status="PASS" starttime="20230713 21:10:26.526" endtime="20230713 21:10:27.099"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:27.103" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:27.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:27.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:27.100" endtime="20230713 21:10:27.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:27.776" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:27.775" endtime="20230713 21:10:27.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:27.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:27.776" endtime="20230713 21:10:27.777"/>
</kw>
<status status="PASS" starttime="20230713 21:10:27.100" endtime="20230713 21:10:27.777"/>
</kw>
<msg timestamp="20230713 21:10:27.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:27.099" endtime="20230713 21:10:27.778"/>
</kw>
<status status="PASS" starttime="20230713 21:10:27.099" endtime="20230713 21:10:27.778"/>
</kw>
<status status="PASS" starttime="20230713 21:10:25.388" endtime="20230713 21:10:27.778"/>
</kw>
<status status="PASS" starttime="20230713 21:10:25.388" endtime="20230713 21:10:27.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:10:25.387" endtime="20230713 21:10:27.779"/>
</test>
<test id="s1-s5-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:27.786" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:28.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:28.491" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:10:27.784" endtime="20230713 21:10:28.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:28.493" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:10:28.492" endtime="20230713 21:10:28.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:28.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:28.493" endtime="20230713 21:10:28.493"/>
</kw>
<status status="PASS" starttime="20230713 21:10:27.783" endtime="20230713 21:10:28.494"/>
</kw>
<msg timestamp="20230713 21:10:28.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:10:27.783" endtime="20230713 21:10:28.494"/>
</kw>
<msg timestamp="20230713 21:10:28.495" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:10:27.782" endtime="20230713 21:10:28.495"/>
</kw>
<msg timestamp="20230713 21:10:28.495" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:10:27.782" endtime="20230713 21:10:28.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:28.495" endtime="20230713 21:10:28.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:28.496" endtime="20230713 21:10:28.496"/>
</kw>
<msg timestamp="20230713 21:10:28.497" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230713 21:10:27.781" endtime="20230713 21:10:28.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230713 21:10:28.497" endtime="20230713 21:10:28.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:10:27.780" endtime="20230713 21:10:28.498"/>
</test>
<test id="s1-s5-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:28.503" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:10:28.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:28.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:28.500" endtime="20230713 21:10:28.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:28.506" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:28.505" endtime="20230713 21:10:28.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:28.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:28.506" endtime="20230713 21:10:28.507"/>
</kw>
<status status="PASS" starttime="20230713 21:10:28.499" endtime="20230713 21:10:28.508"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:28.511" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:29.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:29.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:28.509" endtime="20230713 21:10:29.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:29.375" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:29.374" endtime="20230713 21:10:29.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:29.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:29.375" endtime="20230713 21:10:29.376"/>
</kw>
<msg timestamp="20230713 21:10:29.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:28.508" endtime="20230713 21:10:29.376"/>
</kw>
<msg timestamp="20230713 21:10:29.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:28.508" endtime="20230713 21:10:29.376"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:10:29.377" endtime="20230713 21:10:29.377"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:29.380" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:10:29.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:10:29.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:10:29.378" endtime="20230713 21:10:29.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:10:29.386" level="INFO"/>
<status status="PASS" starttime="20230713 21:10:29.384" endtime="20230713 21:10:29.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:10:29.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:10:29.386" endtime="20230713 21:10:29.387"/>
</kw>
<status status="PASS" starttime="20230713 21:10:29.377" endtime="20230713 21:10:29.387"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:10:28.498" endtime="20230713 21:10:29.387"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230713 21:10:14.641" endtime="20230713 21:10:29.390"/>
</suite>
<suite id="s1-s6" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s6-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230713 21:10:33.069" endtime="20230713 21:10:33.070"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230713 21:10:33.070" endtime="20230713 21:10:33.071"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:10:33.076" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:15:33.069" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230713 21:10:33.072" endtime="20230713 21:15:33.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230713 21:15:33.070" endtime="20230713 21:15:33.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230713 21:15:33.070" endtime="20230713 21:15:33.070"/>
</kw>
<status status="FAIL" starttime="20230713 21:10:33.072" endtime="20230713 21:15:33.071"/>
</kw>
<msg timestamp="20230713 21:15:33.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230713 21:10:33.071" endtime="20230713 21:15:33.072"/>
</kw>
<status status="FAIL" starttime="20230713 21:10:33.071" endtime="20230713 21:15:33.073"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230713 21:15:33.073" endtime="20230713 21:15:33.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230713 21:10:33.068" endtime="20230713 21:15:33.074">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230713 21:10:33.015" endtime="20230713 21:15:33.075"/>
</suite>
<suite id="s1-s7" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s7-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230713 21:08:53.856" endtime="20230713 21:08:53.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:08:53.864" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:08:53.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:08:53.867" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2f27e839d3e7
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230713 21:08:53.859" endtime="20230713 21:08:53.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:08:53.868" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2f27e839d3e7
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230713 21:08:53.868" endtime="20230713 21:08:53.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:08:53.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:08:53.869" endtime="20230713 21:08:53.869"/>
</kw>
<status status="PASS" starttime="20230713 21:08:53.858" endtime="20230713 21:08:53.870"/>
</kw>
<msg timestamp="20230713 21:08:53.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:08:53.858" endtime="20230713 21:08:53.871"/>
</kw>
<msg timestamp="20230713 21:08:53.871" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2f27e839d3e7
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230713 21:08:53.858" endtime="20230713 21:08:53.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:08:53.872" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2f27e839d3e7
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230713 21:08:53.872" endtime="20230713 21:08:53.872"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230713 21:08:53.872" endtime="20230713 21:08:53.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:08:53.876" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:08:56.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:08:56.981" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230713 21:08:53.874" endtime="20230713 21:08:56.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:08:56.983" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230713 21:08:56.982" endtime="20230713 21:08:56.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:08:56.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:08:56.983" endtime="20230713 21:08:56.984"/>
</kw>
<status status="PASS" starttime="20230713 21:08:53.873" endtime="20230713 21:08:56.984"/>
</kw>
<msg timestamp="20230713 21:08:56.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:08:53.873" endtime="20230713 21:08:56.985"/>
</kw>
<msg timestamp="20230713 21:08:56.985" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230713 21:08:53.873" endtime="20230713 21:08:56.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:08:56.985" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230713 21:08:56.985" endtime="20230713 21:08:56.985"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230713 21:08:56.986" endtime="20230713 21:08:56.986"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230713 21:08:53.855" endtime="20230713 21:08:56.986"/>
</test>
<test id="s1-s7-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230713 21:08:56.988" endtime="20230713 21:08:56.988"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230713 21:08:56.988" endtime="20230713 21:08:56.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:08:56.993" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:09:00.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:09:00.015" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230713 21:08:56.990" endtime="20230713 21:09:00.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:00.017" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230713 21:09:00.016" endtime="20230713 21:09:00.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:09:00.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:09:00.017" endtime="20230713 21:09:00.018"/>
</kw>
<status status="PASS" starttime="20230713 21:08:56.990" endtime="20230713 21:09:00.018"/>
</kw>
<msg timestamp="20230713 21:09:00.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:08:56.989" endtime="20230713 21:09:00.018"/>
</kw>
<msg timestamp="20230713 21:09:00.019" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230713 21:08:56.989" endtime="20230713 21:09:00.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:09:00.019" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230713 21:09:00.019" endtime="20230713 21:09:00.020"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230713 21:09:00.020" endtime="20230713 21:09:00.020"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230713 21:08:56.987" endtime="20230713 21:09:00.021"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230713 21:08:53.794" endtime="20230713 21:09:00.022"/>
</suite>
<suite id="s1-s8" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s8-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 20:59:47.151" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 20:59:50.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 20:59:50.548" level="INFO">${output} = 2023-07-13 20:59:50,351 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230713 20:59:47.146" endtime="20230713 20:59:50.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 20:59:50.549" level="INFO">2023-07-13 20:59:50,351 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230713 20:59:50.548" endtime="20230713 20:59:50.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 20:59:50.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 20:59:50.549" endtime="20230713 20:59:50.550"/>
</kw>
<status status="PASS" starttime="20230713 20:59:47.146" endtime="20230713 20:59:50.557"/>
</kw>
<msg timestamp="20230713 20:59:50.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 20:59:47.146" endtime="20230713 20:59:50.558"/>
</kw>
<msg timestamp="20230713 20:59:50.558" level="INFO">${output} = 2023-07-13 20:59:50,351 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230713 20:59:47.145" endtime="20230713 20:59:50.558"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 20:59:50.559" endtime="20230713 20:59:50.561"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 20:59:50.575" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 20:59:54.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 20:59:54.079" level="INFO">${output} = 2023-07-13 20:59:53,992 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230713 20:59:50.572" endtime="20230713 20:59:54.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 20:59:54.081" level="INFO">2023-07-13 20:59:53,992 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230713 20:59:54.080" endtime="20230713 20:59:54.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 20:59:54.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 20:59:54.081" endtime="20230713 20:59:54.084"/>
</kw>
<status status="PASS" starttime="20230713 20:59:50.571" endtime="20230713 20:59:54.084"/>
</kw>
<msg timestamp="20230713 20:59:54.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 20:59:50.570" endtime="20230713 20:59:54.087"/>
</kw>
<msg timestamp="20230713 20:59:54.087" level="INFO">${output} = 2023-07-13 20:59:53,992 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230713 20:59:50.561" endtime="20230713 20:59:54.087"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 20:59:54.088" endtime="20230713 20:59:54.088"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 20:59:47.144" endtime="20230713 20:59:54.088"/>
</test>
<test id="s1-s8-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 20:59:54.097" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 20:59:54.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 20:59:54.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 20:59:54.093" endtime="20230713 20:59:54.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 20:59:54.099" level="INFO"/>
<status status="PASS" starttime="20230713 20:59:54.098" endtime="20230713 20:59:54.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 20:59:54.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 20:59:54.099" endtime="20230713 20:59:54.100"/>
</kw>
<status status="PASS" starttime="20230713 20:59:54.092" endtime="20230713 20:59:54.100"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 20:59:54.105" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:01.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:01.459" level="INFO">${output} = 2023-07-13 20:59:58,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 20:59:58,861 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 20:59:54.102" endtime="20230713 21:00:01.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:01.461" level="INFO">2023-07-13 20:59:58,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 20:59:58,861 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 20:59:58,861 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-13 20:59:59,253 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230713 21:00:01.460" endtime="20230713 21:00:01.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:01.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:01.461" endtime="20230713 21:00:01.462"/>
</kw>
<status status="PASS" starttime="20230713 20:59:54.101" endtime="20230713 21:00:01.463"/>
</kw>
<msg timestamp="20230713 21:00:01.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 20:59:54.101" endtime="20230713 21:00:01.463"/>
</kw>
<msg timestamp="20230713 21:00:01.464" level="INFO">${output} = 2023-07-13 20:59:58,693 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 20:59:58,861 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 20:59:54.100" endtime="20230713 21:00:01.464"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:01.464" endtime="20230713 21:00:01.464"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:01.468" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:01.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:01.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:01.465" endtime="20230713 21:00:01.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:01.473" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:01.473" endtime="20230713 21:00:01.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:01.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:01.474" endtime="20230713 21:00:01.474"/>
</kw>
<status status="PASS" starttime="20230713 21:00:01.465" endtime="20230713 21:00:01.475"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 20:59:54.091" endtime="20230713 21:00:01.475"/>
</test>
<test id="s1-s8-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:01.481" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:04.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:04.519" level="INFO">${output} = 2023-07-13 21:00:04,464 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230713 21:00:01.479" endtime="20230713 21:00:04.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:04.520" level="INFO">2023-07-13 21:00:04,464 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230713 21:00:04.519" endtime="20230713 21:00:04.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:04.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:04.520" endtime="20230713 21:00:04.521"/>
</kw>
<status status="PASS" starttime="20230713 21:00:01.478" endtime="20230713 21:00:04.521"/>
</kw>
<msg timestamp="20230713 21:00:04.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:01.478" endtime="20230713 21:00:04.522"/>
</kw>
<msg timestamp="20230713 21:00:04.522" level="INFO">${output} = 2023-07-13 21:00:04,464 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230713 21:00:01.477" endtime="20230713 21:00:04.522"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:04.522" endtime="20230713 21:00:04.523"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:01.476" endtime="20230713 21:00:04.523"/>
</test>
<test id="s1-s8-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:04.531" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:00:04.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:04.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:04.526" endtime="20230713 21:00:04.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:04.534" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:04.533" endtime="20230713 21:00:04.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:04.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:04.534" endtime="20230713 21:00:04.535"/>
</kw>
<status status="PASS" starttime="20230713 21:00:04.525" endtime="20230713 21:00:04.535"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:04.540" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:10.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:10.090" level="INFO">${output} = 2023-07-13 21:00:08,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:00:08,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:00:04.538" endtime="20230713 21:00:10.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:10.092" level="INFO">2023-07-13 21:00:08,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:00:08,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 21:00:08,596 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-13 21:00:08,971 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230713 21:00:10.091" endtime="20230713 21:00:10.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:10.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:10.092" endtime="20230713 21:00:10.092"/>
</kw>
<status status="PASS" starttime="20230713 21:00:04.537" endtime="20230713 21:00:10.093"/>
</kw>
<msg timestamp="20230713 21:00:10.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:04.536" endtime="20230713 21:00:10.093"/>
</kw>
<msg timestamp="20230713 21:00:10.094" level="INFO">${output} = 2023-07-13 21:00:08,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:00:08,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:00:04.535" endtime="20230713 21:00:10.094"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:10.094" endtime="20230713 21:00:10.094"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:10.097" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:10.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:10.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:10.095" endtime="20230713 21:00:10.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:10.102" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:10.101" endtime="20230713 21:00:10.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:10.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:10.102" endtime="20230713 21:00:10.102"/>
</kw>
<status status="PASS" starttime="20230713 21:00:10.094" endtime="20230713 21:00:10.103"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:04.525" endtime="20230713 21:00:10.103"/>
</test>
<test id="s1-s8-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:10.110" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:10.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:10.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:10.107" endtime="20230713 21:00:10.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:10.973" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:10.972" endtime="20230713 21:00:10.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:10.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:10.973" endtime="20230713 21:00:10.974"/>
</kw>
<status status="PASS" starttime="20230713 21:00:10.107" endtime="20230713 21:00:10.974"/>
</kw>
<msg timestamp="20230713 21:00:10.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:10.106" endtime="20230713 21:00:10.975"/>
</kw>
<status status="PASS" starttime="20230713 21:00:10.106" endtime="20230713 21:00:10.975"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:10.980" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:11.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:11.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:10.977" endtime="20230713 21:00:11.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:11.546" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:11.545" endtime="20230713 21:00:11.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:11.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:11.546" endtime="20230713 21:00:11.547"/>
</kw>
<status status="PASS" starttime="20230713 21:00:10.976" endtime="20230713 21:00:11.547"/>
</kw>
<msg timestamp="20230713 21:00:11.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:10.976" endtime="20230713 21:00:11.548"/>
</kw>
<status status="PASS" starttime="20230713 21:00:10.975" endtime="20230713 21:00:11.548"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:11.552" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:12.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:12.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:11.550" endtime="20230713 21:00:12.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:12.113" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:12.112" endtime="20230713 21:00:12.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:12.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:12.113" endtime="20230713 21:00:12.113"/>
</kw>
<status status="PASS" starttime="20230713 21:00:11.549" endtime="20230713 21:00:12.114"/>
</kw>
<msg timestamp="20230713 21:00:12.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:11.549" endtime="20230713 21:00:12.114"/>
</kw>
<status status="PASS" starttime="20230713 21:00:11.548" endtime="20230713 21:00:12.115"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:12.119" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:12.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:12.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:12.116" endtime="20230713 21:00:12.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:12.719" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:12.718" endtime="20230713 21:00:12.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:12.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:12.720" endtime="20230713 21:00:12.720"/>
</kw>
<status status="PASS" starttime="20230713 21:00:12.116" endtime="20230713 21:00:12.721"/>
</kw>
<msg timestamp="20230713 21:00:12.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:12.115" endtime="20230713 21:00:12.721"/>
</kw>
<status status="PASS" starttime="20230713 21:00:12.115" endtime="20230713 21:00:12.722"/>
</kw>
<status status="PASS" starttime="20230713 21:00:10.106" endtime="20230713 21:00:12.722"/>
</kw>
<status status="PASS" starttime="20230713 21:00:10.105" endtime="20230713 21:00:12.722"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:10.104" endtime="20230713 21:00:12.722"/>
</test>
<test id="s1-s8-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:12.729" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:14.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:14.977" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:00:12.727" endtime="20230713 21:00:14.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:14.979" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:00:14.978" endtime="20230713 21:00:14.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:14.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:14.979" endtime="20230713 21:00:14.980"/>
</kw>
<status status="PASS" starttime="20230713 21:00:12.726" endtime="20230713 21:00:14.980"/>
</kw>
<msg timestamp="20230713 21:00:14.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:12.726" endtime="20230713 21:00:14.981"/>
</kw>
<msg timestamp="20230713 21:00:14.981" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:00:12.725" endtime="20230713 21:00:14.981"/>
</kw>
<msg timestamp="20230713 21:00:14.982" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:00:12.725" endtime="20230713 21:00:14.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:14.982" endtime="20230713 21:00:14.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:14.982" endtime="20230713 21:00:14.983"/>
</kw>
<msg timestamp="20230713 21:00:14.983" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230713 21:00:12.724" endtime="20230713 21:00:14.983"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230713 21:00:14.983" endtime="20230713 21:00:14.984"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:12.723" endtime="20230713 21:00:14.985"/>
</test>
<test id="s1-s8-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:14.994" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:00:14.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:14.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:14.989" endtime="20230713 21:00:14.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:14.998" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:14.997" endtime="20230713 21:00:14.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:14.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:14.998" endtime="20230713 21:00:14.999"/>
</kw>
<status status="PASS" starttime="20230713 21:00:14.989" endtime="20230713 21:00:14.999"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:15.004" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:17.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:17.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:15.001" endtime="20230713 21:00:17.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:17.111" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:17.110" endtime="20230713 21:00:17.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:17.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:17.112" endtime="20230713 21:00:17.112"/>
</kw>
<msg timestamp="20230713 21:00:17.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:15.000" endtime="20230713 21:00:17.112"/>
</kw>
<msg timestamp="20230713 21:00:17.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:15.000" endtime="20230713 21:00:17.113"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:17.113" endtime="20230713 21:00:17.114"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:17.117" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:17.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:17.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:17.114" endtime="20230713 21:00:17.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:17.126" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:17.125" endtime="20230713 21:00:17.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:17.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:17.126" endtime="20230713 21:00:17.126"/>
</kw>
<status status="PASS" starttime="20230713 21:00:17.114" endtime="20230713 21:00:17.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:14.987" endtime="20230713 21:00:17.127"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230713 20:59:47.038" endtime="20230713 21:00:17.129"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s9-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230713 21:00:20.805" level="INFO">${random} = 81642</msg>
<status status="PASS" starttime="20230713 21:00:20.805" endtime="20230713 21:00:20.805"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:20.812" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-81642 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:26.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:26.155" level="INFO">${output} = 2023-07-13 21:00:24,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:00:24,786 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:00:20.808" endtime="20230713 21:00:26.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:26.156" level="INFO">2023-07-13 21:00:24,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:00:24,786 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-13 21:00:24,786 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230713 21:00:26.155" endtime="20230713 21:00:26.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:26.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:26.156" endtime="20230713 21:00:26.157"/>
</kw>
<status status="PASS" starttime="20230713 21:00:20.807" endtime="20230713 21:00:26.157"/>
</kw>
<msg timestamp="20230713 21:00:26.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:20.806" endtime="20230713 21:00:26.162"/>
</kw>
<msg timestamp="20230713 21:00:26.163" level="INFO">${output} = 2023-07-13 21:00:24,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-13 21:00:24,786 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230713 21:00:20.805" endtime="20230713 21:00:26.163"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:26.163" endtime="20230713 21:00:26.164"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:26.167" level="INFO">Running command 'cat /tmp/key-81642 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:26.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:26.170" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:00:26.165" endtime="20230713 21:00:26.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:26.172" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:00:26.171" endtime="20230713 21:00:26.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:26.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:26.172" endtime="20230713 21:00:26.173"/>
</kw>
<msg timestamp="20230713 21:00:26.173" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:00:26.164" endtime="20230713 21:00:26.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:26.173" endtime="20230713 21:00:26.174"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:26.177" level="INFO">Running command 'rm /tmp/key-81642 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:26.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:26.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:26.175" endtime="20230713 21:00:26.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:26.182" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:26.181" endtime="20230713 21:00:26.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:26.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:26.182" endtime="20230713 21:00:26.182"/>
</kw>
<status status="PASS" starttime="20230713 21:00:26.174" endtime="20230713 21:00:26.183"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:20.803" endtime="20230713 21:00:26.183"/>
</test>
<test id="s1-s9-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:26.190" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:26.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:26.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:26.188" endtime="20230713 21:00:26.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:26.763" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:26.762" endtime="20230713 21:00:26.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:26.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:26.763" endtime="20230713 21:00:26.764"/>
</kw>
<status status="PASS" starttime="20230713 21:00:26.187" endtime="20230713 21:00:26.764"/>
</kw>
<msg timestamp="20230713 21:00:26.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:26.187" endtime="20230713 21:00:26.765"/>
</kw>
<status status="PASS" starttime="20230713 21:00:26.186" endtime="20230713 21:00:26.765"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:26.769" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:27.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:27.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:26.767" endtime="20230713 21:00:27.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:27.367" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:27.366" endtime="20230713 21:00:27.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:27.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:27.367" endtime="20230713 21:00:27.368"/>
</kw>
<status status="PASS" starttime="20230713 21:00:26.766" endtime="20230713 21:00:27.368"/>
</kw>
<msg timestamp="20230713 21:00:27.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:26.766" endtime="20230713 21:00:27.369"/>
</kw>
<status status="PASS" starttime="20230713 21:00:26.765" endtime="20230713 21:00:27.369"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:27.374" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:27.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:27.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:27.371" endtime="20230713 21:00:27.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:27.942" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:27.941" endtime="20230713 21:00:27.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:27.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:27.942" endtime="20230713 21:00:27.943"/>
</kw>
<status status="PASS" starttime="20230713 21:00:27.370" endtime="20230713 21:00:27.943"/>
</kw>
<msg timestamp="20230713 21:00:27.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:27.370" endtime="20230713 21:00:27.944"/>
</kw>
<status status="PASS" starttime="20230713 21:00:27.369" endtime="20230713 21:00:27.944"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:27.948" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:28.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:28.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:27.945" endtime="20230713 21:00:28.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:28.543" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:28.542" endtime="20230713 21:00:28.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:28.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:28.543" endtime="20230713 21:00:28.544"/>
</kw>
<status status="PASS" starttime="20230713 21:00:27.945" endtime="20230713 21:00:28.545"/>
</kw>
<msg timestamp="20230713 21:00:28.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:27.945" endtime="20230713 21:00:28.546"/>
</kw>
<status status="PASS" starttime="20230713 21:00:27.944" endtime="20230713 21:00:28.546"/>
</kw>
<status status="PASS" starttime="20230713 21:00:26.186" endtime="20230713 21:00:28.546"/>
</kw>
<status status="PASS" starttime="20230713 21:00:26.185" endtime="20230713 21:00:28.546"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:26.185" endtime="20230713 21:00:28.546"/>
</test>
<test id="s1-s9-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:28.554" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:29.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:29.488" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:00:28.551" endtime="20230713 21:00:29.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:29.490" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:00:29 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:00:29.489" endtime="20230713 21:00:29.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:29.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:29.490" endtime="20230713 21:00:29.491"/>
</kw>
<msg timestamp="20230713 21:00:29.491" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:00:28.550" endtime="20230713 21:00:29.491"/>
</kw>
<msg timestamp="20230713 21:00:29.491" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:00:28.550" endtime="20230713 21:00:29.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:29.492" endtime="20230713 21:00:29.492"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:29.496" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:29.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:29.500" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:00:29.493" endtime="20230713 21:00:29.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:29.501" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:00:29.500" endtime="20230713 21:00:29.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:29.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:29.501" endtime="20230713 21:00:29.502"/>
</kw>
<msg timestamp="20230713 21:00:29.502" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:00:29.492" endtime="20230713 21:00:29.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:29.502" endtime="20230713 21:00:29.503"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:29.506" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:29.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:29.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:29.504" endtime="20230713 21:00:29.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:29.511" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:29.510" endtime="20230713 21:00:29.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:29.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:29.511" endtime="20230713 21:00:29.512"/>
</kw>
<status status="PASS" starttime="20230713 21:00:29.503" endtime="20230713 21:00:29.512"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:28.549" endtime="20230713 21:00:29.513"/>
</test>
<test id="s1-s9-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:29.520" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:30.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:30.325" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:17 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:00:29.518" endtime="20230713 21:00:30.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:30.327" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:17 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:00:30 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:00:30.326" endtime="20230713 21:00:30.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:30.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:30.327" endtime="20230713 21:00:30.327"/>
</kw>
<msg timestamp="20230713 21:00:30.328" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:17 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:00:29.517" endtime="20230713 21:00:30.328"/>
</kw>
<msg timestamp="20230713 21:00:30.328" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:17 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:00:29.516" endtime="20230713 21:00:30.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:30.329" endtime="20230713 21:00:30.329"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:30.333" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:30.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:30.336" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:00:30.330" endtime="20230713 21:00:30.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:30.337" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:00:30.336" endtime="20230713 21:00:30.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:30.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:30.337" endtime="20230713 21:00:30.338"/>
</kw>
<msg timestamp="20230713 21:00:30.338" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:00:30.329" endtime="20230713 21:00:30.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:30.338" endtime="20230713 21:00:30.339"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:30.342" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:30.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:30.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:00:30.340" endtime="20230713 21:00:30.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:30.346" level="INFO"/>
<status status="PASS" starttime="20230713 21:00:30.345" endtime="20230713 21:00:30.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:30.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:30.346" endtime="20230713 21:00:30.347"/>
</kw>
<status status="PASS" starttime="20230713 21:00:30.339" endtime="20230713 21:00:30.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:29.515" endtime="20230713 21:00:30.347"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230713 21:00:20.712" endtime="20230713 21:00:30.349"/>
</suite>
<suite id="s1-s10" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s10-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230713 21:00:33.899" endtime="20230713 21:00:33.900"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230713 21:00:33.900" endtime="20230713 21:00:33.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:00:33.906" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:00:42.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:00:42.625" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230713 21:00:33.902" endtime="20230713 21:00:42.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:00:42.626" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230713 21:00:42.625" endtime="20230713 21:00:42.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:00:42.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:00:42.627" endtime="20230713 21:00:42.627"/>
</kw>
<status status="PASS" starttime="20230713 21:00:33.901" endtime="20230713 21:00:42.628"/>
</kw>
<msg timestamp="20230713 21:00:42.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:00:33.901" endtime="20230713 21:00:42.629"/>
</kw>
<msg timestamp="20230713 21:00:42.629" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230713 21:00:33.901" endtime="20230713 21:00:42.629"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:00:42.630" endtime="20230713 21:00:42.631"/>
</kw>
<status status="PASS" starttime="20230713 21:00:42.629" endtime="20230713 21:00:42.631"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:00:33.898" endtime="20230713 21:00:42.631"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230713 21:00:33.845" endtime="20230713 21:00:42.632"/>
</suite>
<suite id="s1-s11" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s11-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230713 20:59:37.165" endtime="20230713 20:59:37.165"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 20:59:37.172" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 20:59:37.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 20:59:37.175" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b5384a5c6c81
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230713 20:59:37.167" endtime="20230713 20:59:37.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 20:59:37.176" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b5384a5c6c81
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230713 20:59:37.176" endtime="20230713 20:59:37.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 20:59:37.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 20:59:37.177" endtime="20230713 20:59:37.177"/>
</kw>
<status status="PASS" starttime="20230713 20:59:37.166" endtime="20230713 20:59:37.178"/>
</kw>
<msg timestamp="20230713 20:59:37.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 20:59:37.166" endtime="20230713 20:59:37.179"/>
</kw>
<msg timestamp="20230713 20:59:37.179" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b5384a5c6c81
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230713 20:59:37.165" endtime="20230713 20:59:37.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 20:59:37.180" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b5384a5c6c81
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230713 20:59:37.180" endtime="20230713 20:59:37.184"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230713 20:59:37.184" endtime="20230713 20:59:37.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 20:59:37.194" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 20:59:40.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 20:59:40.506" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230713 20:59:37.191" endtime="20230713 20:59:40.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 20:59:40.507" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230713 20:59:40.506" endtime="20230713 20:59:40.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 20:59:40.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 20:59:40.507" endtime="20230713 20:59:40.508"/>
</kw>
<status status="PASS" starttime="20230713 20:59:37.185" endtime="20230713 20:59:40.508"/>
</kw>
<msg timestamp="20230713 20:59:40.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 20:59:37.185" endtime="20230713 20:59:40.509"/>
</kw>
<msg timestamp="20230713 20:59:40.509" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230713 20:59:37.184" endtime="20230713 20:59:40.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 20:59:40.510" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230713 20:59:40.509" endtime="20230713 20:59:40.510"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230713 20:59:40.510" endtime="20230713 20:59:40.510"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230713 20:59:37.164" endtime="20230713 20:59:40.511"/>
</test>
<test id="s1-s11-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230713 20:59:40.513" endtime="20230713 20:59:40.514"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230713 20:59:40.514" endtime="20230713 20:59:40.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 20:59:40.518" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 20:59:43.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 20:59:43.487" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230713 20:59:40.516" endtime="20230713 20:59:43.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 20:59:43.489" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230713 20:59:43.488" endtime="20230713 20:59:43.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 20:59:43.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 20:59:43.489" endtime="20230713 20:59:43.489"/>
</kw>
<status status="PASS" starttime="20230713 20:59:40.515" endtime="20230713 20:59:43.490"/>
</kw>
<msg timestamp="20230713 20:59:43.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 20:59:40.515" endtime="20230713 20:59:43.490"/>
</kw>
<msg timestamp="20230713 20:59:43.491" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230713 20:59:40.514" endtime="20230713 20:59:43.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 20:59:43.491" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230713 20:59:43.491" endtime="20230713 20:59:43.491"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230713 20:59:43.491" endtime="20230713 20:59:43.492"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230713 20:59:40.512" endtime="20230713 20:59:43.492"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230713 20:59:37.096" endtime="20230713 20:59:43.493"/>
</suite>
<suite id="s1-s12" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s12-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:59.459" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:03:59.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:59.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:59.455" endtime="20230713 21:03:59.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:59.463" level="INFO"/>
<status status="PASS" starttime="20230713 21:03:59.462" endtime="20230713 21:03:59.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:59.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:59.463" endtime="20230713 21:03:59.464"/>
</kw>
<status status="PASS" starttime="20230713 21:03:59.454" endtime="20230713 21:03:59.464"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:59.469" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:09.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:09.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:59.466" endtime="20230713 21:04:09.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:09.879" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:09.878" endtime="20230713 21:04:09.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:09.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:09.879" endtime="20230713 21:04:09.880"/>
</kw>
<status status="PASS" starttime="20230713 21:03:59.465" endtime="20230713 21:04:09.880"/>
</kw>
<msg timestamp="20230713 21:04:09.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:03:59.465" endtime="20230713 21:04:09.880"/>
</kw>
<msg timestamp="20230713 21:04:09.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:59.464" endtime="20230713 21:04:09.880"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:04:09.880" endtime="20230713 21:04:09.881"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:09.886" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:09.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:09.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:09.882" endtime="20230713 21:04:09.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:09.891" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:09.890" endtime="20230713 21:04:09.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:09.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:09.891" endtime="20230713 21:04:09.892"/>
</kw>
<status status="PASS" starttime="20230713 21:04:09.881" endtime="20230713 21:04:09.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:03:59.453" endtime="20230713 21:04:09.892"/>
</test>
<test id="s1-s12-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:09.898" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:04:09.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:09.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:09.895" endtime="20230713 21:04:09.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:09.903" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:09.902" endtime="20230713 21:04:09.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:09.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:09.903" endtime="20230713 21:04:09.904"/>
</kw>
<status status="PASS" starttime="20230713 21:04:09.894" endtime="20230713 21:04:09.904"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:09.909" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:17.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:17.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:09.906" endtime="20230713 21:04:17.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:17.989" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:17.988" endtime="20230713 21:04:17.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:17.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:17.989" endtime="20230713 21:04:17.989"/>
</kw>
<status status="PASS" starttime="20230713 21:04:09.905" endtime="20230713 21:04:17.990"/>
</kw>
<msg timestamp="20230713 21:04:17.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:09.905" endtime="20230713 21:04:17.990"/>
</kw>
<msg timestamp="20230713 21:04:17.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:09.904" endtime="20230713 21:04:17.990"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:04:17.990" endtime="20230713 21:04:17.991"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:17.995" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:18.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:18.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:17.992" endtime="20230713 21:04:18.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:18.002" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:18.001" endtime="20230713 21:04:18.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:18.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:18.002" endtime="20230713 21:04:18.003"/>
</kw>
<status status="PASS" starttime="20230713 21:04:17.991" endtime="20230713 21:04:18.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:04:09.893" endtime="20230713 21:04:18.004"/>
</test>
<test id="s1-s12-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:18.011" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:18.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:18.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:18.009" endtime="20230713 21:04:18.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:18.685" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:18.684" endtime="20230713 21:04:18.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:18.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:18.685" endtime="20230713 21:04:18.685"/>
</kw>
<status status="PASS" starttime="20230713 21:04:18.008" endtime="20230713 21:04:18.686"/>
</kw>
<msg timestamp="20230713 21:04:18.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:18.008" endtime="20230713 21:04:18.686"/>
</kw>
<status status="PASS" starttime="20230713 21:04:18.007" endtime="20230713 21:04:18.686"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:18.691" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:19.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:19.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:18.688" endtime="20230713 21:04:19.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:19.492" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:19.490" endtime="20230713 21:04:19.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:19.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:19.492" endtime="20230713 21:04:19.493"/>
</kw>
<status status="PASS" starttime="20230713 21:04:18.687" endtime="20230713 21:04:19.494"/>
</kw>
<msg timestamp="20230713 21:04:19.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:18.687" endtime="20230713 21:04:19.494"/>
</kw>
<status status="PASS" starttime="20230713 21:04:18.686" endtime="20230713 21:04:19.494"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:19.502" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:20.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:20.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:19.496" endtime="20230713 21:04:20.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:20.185" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:20.184" endtime="20230713 21:04:20.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:20.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:20.185" endtime="20230713 21:04:20.186"/>
</kw>
<status status="PASS" starttime="20230713 21:04:19.496" endtime="20230713 21:04:20.186"/>
</kw>
<msg timestamp="20230713 21:04:20.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:19.495" endtime="20230713 21:04:20.187"/>
</kw>
<status status="PASS" starttime="20230713 21:04:19.494" endtime="20230713 21:04:20.187"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:20.192" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:20.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:20.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:20.189" endtime="20230713 21:04:20.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:20.890" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:20.889" endtime="20230713 21:04:20.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:20.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:20.890" endtime="20230713 21:04:20.891"/>
</kw>
<status status="PASS" starttime="20230713 21:04:20.188" endtime="20230713 21:04:20.891"/>
</kw>
<msg timestamp="20230713 21:04:20.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:20.188" endtime="20230713 21:04:20.891"/>
</kw>
<status status="PASS" starttime="20230713 21:04:20.187" endtime="20230713 21:04:20.892"/>
</kw>
<status status="PASS" starttime="20230713 21:04:18.006" endtime="20230713 21:04:20.892"/>
</kw>
<status status="PASS" starttime="20230713 21:04:18.006" endtime="20230713 21:04:20.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:04:18.005" endtime="20230713 21:04:20.892"/>
</test>
<test id="s1-s12-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:20.900" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:21.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:21.884" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:04:20.896" endtime="20230713 21:04:21.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:21.885" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:04:21.884" endtime="20230713 21:04:21.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:21.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:21.886" endtime="20230713 21:04:21.886"/>
</kw>
<status status="PASS" starttime="20230713 21:04:20.896" endtime="20230713 21:04:21.887"/>
</kw>
<msg timestamp="20230713 21:04:21.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:20.895" endtime="20230713 21:04:21.887"/>
</kw>
<msg timestamp="20230713 21:04:21.887" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:04:20.895" endtime="20230713 21:04:21.887"/>
</kw>
<msg timestamp="20230713 21:04:21.888" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:04:20.894" endtime="20230713 21:04:21.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:04:21.888" endtime="20230713 21:04:21.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:04:21.889" endtime="20230713 21:04:21.889"/>
</kw>
<msg timestamp="20230713 21:04:21.889" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230713 21:04:20.894" endtime="20230713 21:04:21.889"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230713 21:04:21.890" endtime="20230713 21:04:21.890"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:04:20.893" endtime="20230713 21:04:21.891"/>
</test>
<test id="s1-s12-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:21.897" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:04:21.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:21.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:21.893" endtime="20230713 21:04:21.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:21.900" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:21.900" endtime="20230713 21:04:21.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:21.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:21.901" endtime="20230713 21:04:21.902"/>
</kw>
<status status="PASS" starttime="20230713 21:04:21.892" endtime="20230713 21:04:21.902"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:21.907" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:23.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:23.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:21.904" endtime="20230713 21:04:23.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:23.896" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:23.895" endtime="20230713 21:04:23.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:23.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:23.896" endtime="20230713 21:04:23.897"/>
</kw>
<msg timestamp="20230713 21:04:23.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:21.903" endtime="20230713 21:04:23.897"/>
</kw>
<msg timestamp="20230713 21:04:23.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:21.902" endtime="20230713 21:04:23.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:04:23.898" endtime="20230713 21:04:23.898"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:23.902" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:23.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:23.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:23.899" endtime="20230713 21:04:23.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:23.907" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:23.906" endtime="20230713 21:04:23.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:23.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:23.907" endtime="20230713 21:04:23.908"/>
</kw>
<status status="PASS" starttime="20230713 21:04:23.898" endtime="20230713 21:04:23.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:04:21.891" endtime="20230713 21:04:23.908"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230713 21:03:59.345" endtime="20230713 21:04:23.911"/>
</suite>
<suite id="s1-s13" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s13-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:28.124" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:33.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:33.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:28.121" endtime="20230713 21:04:33.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:33.306" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:33.304" endtime="20230713 21:04:33.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:33.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:33.306" endtime="20230713 21:04:33.307"/>
</kw>
<status status="PASS" starttime="20230713 21:04:28.120" endtime="20230713 21:04:33.308"/>
</kw>
<msg timestamp="20230713 21:04:33.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:28.120" endtime="20230713 21:04:33.309"/>
</kw>
<msg timestamp="20230713 21:04:33.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:28.119" endtime="20230713 21:04:33.309"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:04:33.309" endtime="20230713 21:04:33.310"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:33.318" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:37.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:37.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:33.313" endtime="20230713 21:04:37.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:37.936" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:37.935" endtime="20230713 21:04:37.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:37.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:37.936" endtime="20230713 21:04:37.937"/>
</kw>
<status status="PASS" starttime="20230713 21:04:33.312" endtime="20230713 21:04:37.937"/>
</kw>
<msg timestamp="20230713 21:04:37.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:33.312" endtime="20230713 21:04:37.937"/>
</kw>
<msg timestamp="20230713 21:04:37.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:33.310" endtime="20230713 21:04:37.938"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:04:37.938" endtime="20230713 21:04:37.939"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:04:28.118" endtime="20230713 21:04:37.939"/>
</test>
<test id="s1-s13-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:37.945" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:04:37.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:37.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:37.942" endtime="20230713 21:04:37.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:37.950" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:37.949" endtime="20230713 21:04:37.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:37.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:37.950" endtime="20230713 21:04:37.951"/>
</kw>
<status status="PASS" starttime="20230713 21:04:37.941" endtime="20230713 21:04:37.952"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:37.958" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:46.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:46.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:37.954" endtime="20230713 21:04:46.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:46.105" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:46.104" endtime="20230713 21:04:46.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:46.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:46.105" endtime="20230713 21:04:46.106"/>
</kw>
<status status="PASS" starttime="20230713 21:04:37.953" endtime="20230713 21:04:46.106"/>
</kw>
<msg timestamp="20230713 21:04:46.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:37.953" endtime="20230713 21:04:46.107"/>
</kw>
<msg timestamp="20230713 21:04:46.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:37.952" endtime="20230713 21:04:46.107"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:04:46.107" endtime="20230713 21:04:46.108"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:46.112" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:46.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:46.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:46.109" endtime="20230713 21:04:46.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:46.119" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:46.118" endtime="20230713 21:04:46.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:46.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:46.119" endtime="20230713 21:04:46.120"/>
</kw>
<status status="PASS" starttime="20230713 21:04:46.108" endtime="20230713 21:04:46.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:04:37.940" endtime="20230713 21:04:46.121"/>
</test>
<test id="s1-s13-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:46.128" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:04:51.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:51.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:46.125" endtime="20230713 21:04:51.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:51.364" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:51.363" endtime="20230713 21:04:51.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:51.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:51.365" endtime="20230713 21:04:51.365"/>
</kw>
<status status="PASS" starttime="20230713 21:04:46.124" endtime="20230713 21:04:51.366"/>
</kw>
<msg timestamp="20230713 21:04:51.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:46.124" endtime="20230713 21:04:51.366"/>
</kw>
<msg timestamp="20230713 21:04:51.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:46.123" endtime="20230713 21:04:51.366"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:04:51.366" endtime="20230713 21:04:51.367"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:04:46.122" endtime="20230713 21:04:51.367"/>
</test>
<test id="s1-s13-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:51.374" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:04:51.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:04:51.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:51.369" endtime="20230713 21:04:51.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:04:51.378" level="INFO"/>
<status status="PASS" starttime="20230713 21:04:51.377" endtime="20230713 21:04:51.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:04:51.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:04:51.378" endtime="20230713 21:04:51.379"/>
</kw>
<status status="PASS" starttime="20230713 21:04:51.369" endtime="20230713 21:04:51.379"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:04:51.385" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:00.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:00.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:51.381" endtime="20230713 21:05:00.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:00.220" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:00.219" endtime="20230713 21:05:00.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:00.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:00.220" endtime="20230713 21:05:00.221"/>
</kw>
<status status="PASS" starttime="20230713 21:04:51.381" endtime="20230713 21:05:00.221"/>
</kw>
<msg timestamp="20230713 21:05:00.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:04:51.380" endtime="20230713 21:05:00.222"/>
</kw>
<msg timestamp="20230713 21:05:00.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:04:51.380" endtime="20230713 21:05:00.222"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:00.222" endtime="20230713 21:05:00.222"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:00.227" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:00.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:00.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:00.223" endtime="20230713 21:05:00.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:00.232" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:00.231" endtime="20230713 21:05:00.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:00.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:00.232" endtime="20230713 21:05:00.233"/>
</kw>
<status status="PASS" starttime="20230713 21:05:00.223" endtime="20230713 21:05:00.233"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:04:51.368" endtime="20230713 21:05:00.234"/>
</test>
<test id="s1-s13-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:00.243" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:00.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:00.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:00.239" endtime="20230713 21:05:00.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:00.948" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:00.947" endtime="20230713 21:05:00.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:00.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:00.948" endtime="20230713 21:05:00.949"/>
</kw>
<status status="PASS" starttime="20230713 21:05:00.239" endtime="20230713 21:05:00.949"/>
</kw>
<msg timestamp="20230713 21:05:00.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:00.238" endtime="20230713 21:05:00.949"/>
</kw>
<status status="PASS" starttime="20230713 21:05:00.237" endtime="20230713 21:05:00.949"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:00.954" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:01.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:01.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:00.951" endtime="20230713 21:05:01.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:01.635" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:01.634" endtime="20230713 21:05:01.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:01.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:01.635" endtime="20230713 21:05:01.636"/>
</kw>
<status status="PASS" starttime="20230713 21:05:00.950" endtime="20230713 21:05:01.636"/>
</kw>
<msg timestamp="20230713 21:05:01.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:00.950" endtime="20230713 21:05:01.636"/>
</kw>
<status status="PASS" starttime="20230713 21:05:00.949" endtime="20230713 21:05:01.637"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:01.641" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:02.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:02.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:01.638" endtime="20230713 21:05:02.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:02.364" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:02.363" endtime="20230713 21:05:02.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:02.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:02.364" endtime="20230713 21:05:02.365"/>
</kw>
<status status="PASS" starttime="20230713 21:05:01.638" endtime="20230713 21:05:02.365"/>
</kw>
<msg timestamp="20230713 21:05:02.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:01.637" endtime="20230713 21:05:02.366"/>
</kw>
<status status="PASS" starttime="20230713 21:05:01.637" endtime="20230713 21:05:02.366"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:02.371" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:03.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:03.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:02.367" endtime="20230713 21:05:03.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:03.050" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:03.049" endtime="20230713 21:05:03.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:03.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:03.051" endtime="20230713 21:05:03.051"/>
</kw>
<status status="PASS" starttime="20230713 21:05:02.367" endtime="20230713 21:05:03.052"/>
</kw>
<msg timestamp="20230713 21:05:03.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:02.366" endtime="20230713 21:05:03.052"/>
</kw>
<status status="PASS" starttime="20230713 21:05:02.366" endtime="20230713 21:05:03.052"/>
</kw>
<status status="PASS" starttime="20230713 21:05:00.237" endtime="20230713 21:05:03.052"/>
</kw>
<status status="PASS" starttime="20230713 21:05:00.236" endtime="20230713 21:05:03.052"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:05:00.235" endtime="20230713 21:05:03.053"/>
</test>
<test id="s1-s13-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:03.061" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:03.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:03.987" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:05:03.058" endtime="20230713 21:05:03.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:03.989" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:05:03.988" endtime="20230713 21:05:03.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:03.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:03.989" endtime="20230713 21:05:03.990"/>
</kw>
<status status="PASS" starttime="20230713 21:05:03.057" endtime="20230713 21:05:03.990"/>
</kw>
<msg timestamp="20230713 21:05:03.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:03.057" endtime="20230713 21:05:03.991"/>
</kw>
<msg timestamp="20230713 21:05:03.991" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:05:03.056" endtime="20230713 21:05:03.991"/>
</kw>
<msg timestamp="20230713 21:05:03.991" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230713 21:05:03.055" endtime="20230713 21:05:03.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:03.992" endtime="20230713 21:05:03.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:03.992" endtime="20230713 21:05:03.993"/>
</kw>
<msg timestamp="20230713 21:05:03.993" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230713 21:05:03.054" endtime="20230713 21:05:03.993"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230713 21:05:03.993" endtime="20230713 21:05:03.994"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:05:03.054" endtime="20230713 21:05:03.994"/>
</test>
<test id="s1-s13-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:04.000" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230713 21:05:04.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:04.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:03.997" endtime="20230713 21:05:04.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:04.005" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:04.004" endtime="20230713 21:05:04.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:04.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:04.005" endtime="20230713 21:05:04.006"/>
</kw>
<status status="PASS" starttime="20230713 21:05:03.996" endtime="20230713 21:05:04.006"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:04.012" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:05.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:05.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:04.008" endtime="20230713 21:05:05.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:05.215" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:05.214" endtime="20230713 21:05:05.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:05.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:05.215" endtime="20230713 21:05:05.216"/>
</kw>
<msg timestamp="20230713 21:05:05.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:04.007" endtime="20230713 21:05:05.217"/>
</kw>
<msg timestamp="20230713 21:05:05.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:04.006" endtime="20230713 21:05:05.217"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:05.217" endtime="20230713 21:05:05.218"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:05.222" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:05.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:05.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:05.219" endtime="20230713 21:05:05.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:05.227" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:05.226" endtime="20230713 21:05:05.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:05.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:05.227" endtime="20230713 21:05:05.228"/>
</kw>
<status status="PASS" starttime="20230713 21:05:05.218" endtime="20230713 21:05:05.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:05:03.995" endtime="20230713 21:05:05.228"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230713 21:04:28.017" endtime="20230713 21:05:05.230"/>
</suite>
<suite id="s1-s14" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s14-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230713 21:05:09.480" level="INFO">${random} = 54539</msg>
<status status="PASS" starttime="20230713 21:05:09.463" endtime="20230713 21:05:09.480"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:09.501" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-54539 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:16.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:16.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:09.494" endtime="20230713 21:05:16.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:16.976" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:16.974" endtime="20230713 21:05:16.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:16.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:16.977" endtime="20230713 21:05:16.978"/>
</kw>
<status status="PASS" starttime="20230713 21:05:09.486" endtime="20230713 21:05:16.978"/>
</kw>
<msg timestamp="20230713 21:05:16.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:09.485" endtime="20230713 21:05:16.978"/>
</kw>
<msg timestamp="20230713 21:05:16.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:09.484" endtime="20230713 21:05:16.978"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:16.979" endtime="20230713 21:05:16.979"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:16.984" level="INFO">Running command 'cat /tmp/key-54539 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:16.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:16.990" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:05:16.980" endtime="20230713 21:05:16.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:16.992" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:05:16.991" endtime="20230713 21:05:16.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:16.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:16.993" endtime="20230713 21:05:16.993"/>
</kw>
<msg timestamp="20230713 21:05:16.994" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:05:16.980" endtime="20230713 21:05:16.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:16.994" endtime="20230713 21:05:16.995"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:16.998" level="INFO">Running command 'rm /tmp/key-54539 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:17.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:17.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:16.995" endtime="20230713 21:05:17.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:17.004" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:17.003" endtime="20230713 21:05:17.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:17.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:17.005" endtime="20230713 21:05:17.005"/>
</kw>
<status status="PASS" starttime="20230713 21:05:16.995" endtime="20230713 21:05:17.006"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:05:09.462" endtime="20230713 21:05:17.006"/>
</test>
<test id="s1-s14-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:17.014" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:17.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:17.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:17.011" endtime="20230713 21:05:17.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:17.861" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:17.860" endtime="20230713 21:05:17.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:17.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:17.862" endtime="20230713 21:05:17.862"/>
</kw>
<status status="PASS" starttime="20230713 21:05:17.010" endtime="20230713 21:05:17.863"/>
</kw>
<msg timestamp="20230713 21:05:17.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:17.010" endtime="20230713 21:05:17.863"/>
</kw>
<status status="PASS" starttime="20230713 21:05:17.009" endtime="20230713 21:05:17.863"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:17.869" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:18.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:18.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:17.865" endtime="20230713 21:05:18.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:18.582" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:18.581" endtime="20230713 21:05:18.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:18.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:18.582" endtime="20230713 21:05:18.583"/>
</kw>
<status status="PASS" starttime="20230713 21:05:17.865" endtime="20230713 21:05:18.583"/>
</kw>
<msg timestamp="20230713 21:05:18.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:17.864" endtime="20230713 21:05:18.583"/>
</kw>
<status status="PASS" starttime="20230713 21:05:17.863" endtime="20230713 21:05:18.583"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:18.589" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:19.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:19.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:18.585" endtime="20230713 21:05:19.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:19.394" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:19.393" endtime="20230713 21:05:19.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:19.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:19.395" endtime="20230713 21:05:19.395"/>
</kw>
<status status="PASS" starttime="20230713 21:05:18.584" endtime="20230713 21:05:19.396"/>
</kw>
<msg timestamp="20230713 21:05:19.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:18.584" endtime="20230713 21:05:19.396"/>
</kw>
<status status="PASS" starttime="20230713 21:05:18.583" endtime="20230713 21:05:19.396"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:19.402" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:20.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:20.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:19.399" endtime="20230713 21:05:20.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:20.114" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:20.113" endtime="20230713 21:05:20.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:20.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:20.114" endtime="20230713 21:05:20.115"/>
</kw>
<status status="PASS" starttime="20230713 21:05:19.398" endtime="20230713 21:05:20.115"/>
</kw>
<msg timestamp="20230713 21:05:20.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:19.397" endtime="20230713 21:05:20.115"/>
</kw>
<status status="PASS" starttime="20230713 21:05:19.396" endtime="20230713 21:05:20.116"/>
</kw>
<status status="PASS" starttime="20230713 21:05:17.009" endtime="20230713 21:05:20.116"/>
</kw>
<status status="PASS" starttime="20230713 21:05:17.008" endtime="20230713 21:05:20.116"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:05:17.007" endtime="20230713 21:05:20.116"/>
</test>
<test id="s1-s14-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:20.125" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:21.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:21.014" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:05:20.121" endtime="20230713 21:05:21.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:21.017" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:05:20 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:05:21.015" endtime="20230713 21:05:21.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:21.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:21.017" endtime="20230713 21:05:21.018"/>
</kw>
<msg timestamp="20230713 21:05:21.019" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:05:20.120" endtime="20230713 21:05:21.019"/>
</kw>
<msg timestamp="20230713 21:05:21.019" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:04:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:05:20.119" endtime="20230713 21:05:21.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:21.019" endtime="20230713 21:05:21.020"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:21.025" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:21.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:21.030" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:05:21.021" endtime="20230713 21:05:21.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:21.031" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:05:21.030" endtime="20230713 21:05:21.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:21.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:21.032" endtime="20230713 21:05:21.032"/>
</kw>
<msg timestamp="20230713 21:05:21.033" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:05:21.020" endtime="20230713 21:05:21.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:21.033" endtime="20230713 21:05:21.034"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:21.038" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:21.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:21.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:21.035" endtime="20230713 21:05:21.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:21.045" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:21.043" endtime="20230713 21:05:21.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:21.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:21.045" endtime="20230713 21:05:21.046"/>
</kw>
<status status="PASS" starttime="20230713 21:05:21.034" endtime="20230713 21:05:21.046"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:05:20.118" endtime="20230713 21:05:21.047"/>
</test>
<test id="s1-s14-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:21.054" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:21.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:21.889" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:05:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:05:21.051" endtime="20230713 21:05:21.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:21.890" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:05:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:05:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:05:21.889" endtime="20230713 21:05:21.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:21.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:21.891" endtime="20230713 21:05:21.892"/>
</kw>
<msg timestamp="20230713 21:05:21.892" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:05:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:05:21.050" endtime="20230713 21:05:21.892"/>
</kw>
<msg timestamp="20230713 21:05:21.892" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:05:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:05:21.050" endtime="20230713 21:05:21.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:21.892" endtime="20230713 21:05:21.893"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:21.897" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:21.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:21.901" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:05:21.894" endtime="20230713 21:05:21.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:21.902" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:05:21.902" endtime="20230713 21:05:21.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:21.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:21.903" endtime="20230713 21:05:21.903"/>
</kw>
<msg timestamp="20230713 21:05:21.904" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:05:21.893" endtime="20230713 21:05:21.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:21.904" endtime="20230713 21:05:21.905"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:21.909" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:21.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:21.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:21.905" endtime="20230713 21:05:21.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:21.914" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:21.913" endtime="20230713 21:05:21.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:21.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:21.914" endtime="20230713 21:05:21.915"/>
</kw>
<status status="PASS" starttime="20230713 21:05:21.905" endtime="20230713 21:05:21.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:05:21.049" endtime="20230713 21:05:21.915"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230713 21:05:09.300" endtime="20230713 21:05:21.917"/>
</suite>
<suite id="s1-s15" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s15-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230713 21:05:26.036" endtime="20230713 21:05:26.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:26.042" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:31.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:31.383" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230713 21:05:26.038" endtime="20230713 21:05:31.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:31.385" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230713 21:05:31.384" endtime="20230713 21:05:31.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:31.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:31.386" endtime="20230713 21:05:31.386"/>
</kw>
<status status="PASS" starttime="20230713 21:05:26.037" endtime="20230713 21:05:31.387"/>
</kw>
<msg timestamp="20230713 21:05:31.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:26.037" endtime="20230713 21:05:31.387"/>
</kw>
<msg timestamp="20230713 21:05:31.387" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230713 21:05:26.037" endtime="20230713 21:05:31.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:31.388" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230713 21:05:31.388" endtime="20230713 21:05:31.388"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230713 21:05:31.389" endtime="20230713 21:05:31.389"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230713 21:05:26.034" endtime="20230713 21:05:31.389"/>
</test>
<test id="s1-s15-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230713 21:05:31.391" endtime="20230713 21:05:31.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:31.397" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:36.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:36.326" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230713 21:05:31.394" endtime="20230713 21:05:36.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:36.328" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230713 21:05:36.327" endtime="20230713 21:05:36.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:36.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:36.329" endtime="20230713 21:05:36.330"/>
</kw>
<status status="PASS" starttime="20230713 21:05:31.393" endtime="20230713 21:05:36.330"/>
</kw>
<msg timestamp="20230713 21:05:36.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:05:31.393" endtime="20230713 21:05:36.330"/>
</kw>
<msg timestamp="20230713 21:05:36.330" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230713 21:05:31.392" endtime="20230713 21:05:36.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:36.331" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230713 21:05:36.331" endtime="20230713 21:05:36.331"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230713 21:05:36.332" endtime="20230713 21:05:36.332"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230713 21:05:31.390" endtime="20230713 21:05:36.333"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230713 21:05:25.966" endtime="20230713 21:05:36.335"/>
</suite>
<suite id="s1-s16" name="Upgrade-Snapshot-Check" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<test id="s1-s16-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="28">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:40.402" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:45.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:45.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:40.399" endtime="20230713 21:05:45.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:45.405" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:45.404" endtime="20230713 21:05:45.405"/>
</kw>
<msg timestamp="20230713 21:05:45.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:40.398" endtime="20230713 21:05:45.406"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:45.406" endtime="20230713 21:05:45.407"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:45.412" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:50.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:05:50.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:45.408" endtime="20230713 21:05:50.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:50.836" level="INFO"/>
<status status="PASS" starttime="20230713 21:05:50.835" endtime="20230713 21:05:50.836"/>
</kw>
<msg timestamp="20230713 21:05:50.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:05:45.407" endtime="20230713 21:05:50.836"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:50.837" endtime="20230713 21:05:50.837"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:50.843" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:05:55.604" level="INFO">${rc} = 255</msg>
<msg timestamp="20230713 21:05:55.604" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230713 21:05:50.838" endtime="20230713 21:05:55.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:05:55.606" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230713 21:05:55.605" endtime="20230713 21:05:55.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:05:55.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:05:55.607" endtime="20230713 21:05:55.608"/>
</kw>
<msg timestamp="20230713 21:05:55.608" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230713 21:05:50.837" endtime="20230713 21:05:55.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:05:55.608" endtime="20230713 21:05:55.609"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:05:40.397" endtime="20230713 21:05:55.609"/>
</test>
<test id="s1-s16-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="36">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:05:55.616" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:06:00.931" level="INFO">${rc} = 255</msg>
<msg timestamp="20230713 21:06:00.931" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230713 21:05:55.612" endtime="20230713 21:06:00.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:06:00.932" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230713 21:06:00.932" endtime="20230713 21:06:00.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:06:00.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:06:00.933" endtime="20230713 21:06:00.933"/>
</kw>
<msg timestamp="20230713 21:06:00.934" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230713 21:05:55.612" endtime="20230713 21:06:00.934"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:06:00.934" endtime="20230713 21:06:00.934"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:05:55.610" endtime="20230713 21:06:00.935"/>
</test>
<test id="s1-s16-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="40">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:06:00.942" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:06:05.463" level="INFO">${rc} = 255</msg>
<msg timestamp="20230713 21:06:05.463" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230713 21:06:00.939" endtime="20230713 21:06:05.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:06:05.465" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230713 21:06:05.464" endtime="20230713 21:06:05.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:06:05.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:06:05.465" endtime="20230713 21:06:05.466"/>
</kw>
<msg timestamp="20230713 21:06:05.466" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230713 21:06:00.938" endtime="20230713 21:06:05.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:06:05.466" endtime="20230713 21:06:05.467"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:06:00.937" endtime="20230713 21:06:05.467"/>
</test>
<test id="s1-s16-t4" name="Attempt to delete when snapshot feature is disabled" line="44">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:06:05.473" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:06:10.018" level="INFO">${rc} = 255</msg>
<msg timestamp="20230713 21:06:10.018" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230713 21:06:05.470" endtime="20230713 21:06:10.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:06:10.020" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230713 21:06:10.019" endtime="20230713 21:06:10.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:06:10.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:06:10.021" endtime="20230713 21:06:10.021"/>
</kw>
<msg timestamp="20230713 21:06:10.022" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230713 21:06:05.469" endtime="20230713 21:06:10.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:06:10.022" endtime="20230713 21:06:10.022"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:06:05.468" endtime="20230713 21:06:10.023"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20230713 21:05:40.324" endtime="20230713 21:06:10.025"/>
</suite>
<suite id="s1-s17" name="Prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s17-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230713 21:06:13.996" endtime="20230713 21:06:13.996"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230713 21:06:13.996" endtime="20230713 21:06:13.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:06:14.002" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:06:24.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:06:24.166" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [67].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230713 21:06:13.998" endtime="20230713 21:06:24.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:06:24.168" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [67].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [67]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [67]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [67]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230713 21:06:24.167" endtime="20230713 21:06:24.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:06:24.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:06:24.168" endtime="20230713 21:06:24.169"/>
</kw>
<status status="PASS" starttime="20230713 21:06:13.998" endtime="20230713 21:06:24.169"/>
</kw>
<msg timestamp="20230713 21:06:24.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:06:13.997" endtime="20230713 21:06:24.169"/>
</kw>
<msg timestamp="20230713 21:06:24.169" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [67].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230713 21:06:13.997" endtime="20230713 21:06:24.170"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:06:24.170" endtime="20230713 21:06:24.171"/>
</kw>
<status status="PASS" starttime="20230713 21:06:24.170" endtime="20230713 21:06:24.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:06:13.995" endtime="20230713 21:06:24.171"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230713 21:06:13.930" endtime="20230713 21:06:24.174"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230713 21:03:35.838" level="INFO">${random} = 99759</msg>
<status status="PASS" starttime="20230713 21:03:35.838" endtime="20230713 21:03:35.839"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:35.845" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-99759 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:44.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:44.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:35.841" endtime="20230713 21:03:44.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:44.612" level="INFO"/>
<status status="PASS" starttime="20230713 21:03:44.611" endtime="20230713 21:03:44.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:44.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:44.613" endtime="20230713 21:03:44.613"/>
</kw>
<status status="PASS" starttime="20230713 21:03:35.840" endtime="20230713 21:03:44.613"/>
</kw>
<msg timestamp="20230713 21:03:44.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:03:35.840" endtime="20230713 21:03:44.614"/>
</kw>
<msg timestamp="20230713 21:03:44.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:35.839" endtime="20230713 21:03:44.614"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:03:44.614" endtime="20230713 21:03:44.615"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:44.619" level="INFO">Running command 'cat /tmp/key-99759 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:44.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:44.624" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:03:44.616" endtime="20230713 21:03:44.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:44.625" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:03:44.625" endtime="20230713 21:03:44.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:44.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:44.626" endtime="20230713 21:03:44.626"/>
</kw>
<msg timestamp="20230713 21:03:44.627" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:03:44.615" endtime="20230713 21:03:44.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:03:44.627" endtime="20230713 21:03:44.627"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:44.633" level="INFO">Running command 'rm /tmp/key-99759 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:44.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:44.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:44.628" endtime="20230713 21:03:44.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:44.638" level="INFO"/>
<status status="PASS" starttime="20230713 21:03:44.637" endtime="20230713 21:03:44.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:44.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:44.638" endtime="20230713 21:03:44.639"/>
</kw>
<status status="PASS" starttime="20230713 21:03:44.628" endtime="20230713 21:03:44.639"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:03:35.837" endtime="20230713 21:03:44.640"/>
</test>
<test id="s1-s18-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:44.646" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:45.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:45.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:44.644" endtime="20230713 21:03:45.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:45.949" level="INFO"/>
<status status="PASS" starttime="20230713 21:03:45.947" endtime="20230713 21:03:45.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:45.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:45.949" endtime="20230713 21:03:45.950"/>
</kw>
<status status="PASS" starttime="20230713 21:03:44.643" endtime="20230713 21:03:45.951"/>
</kw>
<msg timestamp="20230713 21:03:45.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:03:44.643" endtime="20230713 21:03:45.951"/>
</kw>
<status status="PASS" starttime="20230713 21:03:44.642" endtime="20230713 21:03:45.951"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:45.958" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:46.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:46.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:45.955" endtime="20230713 21:03:46.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:46.832" level="INFO"/>
<status status="PASS" starttime="20230713 21:03:46.831" endtime="20230713 21:03:46.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:46.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:46.832" endtime="20230713 21:03:46.833"/>
</kw>
<status status="PASS" starttime="20230713 21:03:45.954" endtime="20230713 21:03:46.834"/>
</kw>
<msg timestamp="20230713 21:03:46.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:03:45.953" endtime="20230713 21:03:46.834"/>
</kw>
<status status="PASS" starttime="20230713 21:03:45.951" endtime="20230713 21:03:46.834"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:46.840" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:47.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:47.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:46.837" endtime="20230713 21:03:47.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:47.830" level="INFO"/>
<status status="PASS" starttime="20230713 21:03:47.829" endtime="20230713 21:03:47.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:47.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:47.831" endtime="20230713 21:03:47.832"/>
</kw>
<status status="PASS" starttime="20230713 21:03:46.836" endtime="20230713 21:03:47.832"/>
</kw>
<msg timestamp="20230713 21:03:47.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:03:46.835" endtime="20230713 21:03:47.832"/>
</kw>
<status status="PASS" starttime="20230713 21:03:46.835" endtime="20230713 21:03:47.832"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:47.841" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:48.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:48.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:47.836" endtime="20230713 21:03:48.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:48.500" level="INFO"/>
<status status="PASS" starttime="20230713 21:03:48.499" endtime="20230713 21:03:48.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:48.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:48.500" endtime="20230713 21:03:48.501"/>
</kw>
<status status="PASS" starttime="20230713 21:03:47.836" endtime="20230713 21:03:48.501"/>
</kw>
<msg timestamp="20230713 21:03:48.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230713 21:03:47.835" endtime="20230713 21:03:48.501"/>
</kw>
<status status="PASS" starttime="20230713 21:03:47.833" endtime="20230713 21:03:48.501"/>
</kw>
<status status="PASS" starttime="20230713 21:03:44.642" endtime="20230713 21:03:48.501"/>
</kw>
<status status="PASS" starttime="20230713 21:03:44.641" endtime="20230713 21:03:48.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:03:44.640" endtime="20230713 21:03:48.502"/>
</test>
<test id="s1-s18-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:48.509" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:54.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:54.125" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:03:48.506" endtime="20230713 21:03:54.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:54.127" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:03:49 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:03:54.126" endtime="20230713 21:03:54.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:54.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:54.128" endtime="20230713 21:03:54.128"/>
</kw>
<msg timestamp="20230713 21:03:54.129" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:03:48.505" endtime="20230713 21:03:54.129"/>
</kw>
<msg timestamp="20230713 21:03:54.129" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:03:48.504" endtime="20230713 21:03:54.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:03:54.129" endtime="20230713 21:03:54.130"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:54.135" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:54.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:54.137" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:03:54.131" endtime="20230713 21:03:54.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:54.138" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:03:54.138" endtime="20230713 21:03:54.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:54.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:54.139" endtime="20230713 21:03:54.139"/>
</kw>
<msg timestamp="20230713 21:03:54.140" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230713 21:03:54.130" endtime="20230713 21:03:54.140"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:03:54.140" endtime="20230713 21:03:54.140"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:54.144" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:54.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:54.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:54.141" endtime="20230713 21:03:54.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:54.148" level="INFO"/>
<status status="PASS" starttime="20230713 21:03:54.147" endtime="20230713 21:03:54.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:54.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:54.148" endtime="20230713 21:03:54.149"/>
</kw>
<status status="PASS" starttime="20230713 21:03:54.140" endtime="20230713 21:03:54.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:03:48.503" endtime="20230713 21:03:54.149"/>
</test>
<test id="s1-s18-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:54.155" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:55.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:55.213" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:17 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:03:54.153" endtime="20230713 21:03:55.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:55.215" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:17 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 13 Jul 2023 21:03:54 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230713 21:03:55.214" endtime="20230713 21:03:55.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:55.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:55.215" endtime="20230713 21:03:55.216"/>
</kw>
<msg timestamp="20230713 21:03:55.218" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:17 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:03:54.152" endtime="20230713 21:03:55.218"/>
</kw>
<msg timestamp="20230713 21:03:55.218" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 13 Jul 2023 21:00:17 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230713 21:03:54.152" endtime="20230713 21:03:55.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:03:55.218" endtime="20230713 21:03:55.222"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:55.230" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:55.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:55.235" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:03:55.225" endtime="20230713 21:03:55.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:55.237" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:03:55.236" endtime="20230713 21:03:55.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:55.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:55.237" endtime="20230713 21:03:55.238"/>
</kw>
<msg timestamp="20230713 21:03:55.239" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230713 21:03:55.222" endtime="20230713 21:03:55.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230713 21:03:55.239" endtime="20230713 21:03:55.240"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230713 21:03:55.244" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230713 21:03:55.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20230713 21:03:55.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230713 21:03:55.241" endtime="20230713 21:03:55.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230713 21:03:55.252" level="INFO"/>
<status status="PASS" starttime="20230713 21:03:55.251" endtime="20230713 21:03:55.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230713 21:03:55.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230713 21:03:55.252" endtime="20230713 21:03:55.253"/>
</kw>
<status status="PASS" starttime="20230713 21:03:55.240" endtime="20230713 21:03:55.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230713 21:03:54.150" endtime="20230713 21:03:55.254"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230713 21:03:35.686" endtime="20230713 21:03:55.258"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="576826"/>
</suite>
<statistics>
<total>
<stat pass="67" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="4" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="3" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="67" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5" name="Generate">upgrade.Generate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s6" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s8" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s9" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s11" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="5" fail="0" skip="0" id="s1-s12" name="Generate">upgrade.Generate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s13" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s14" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s15" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s16" name="Upgrade-Snapshot-Check">upgrade.Upgrade-Snapshot-Check</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Prepare">upgrade.Prepare</stat>
<stat pass="4" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
