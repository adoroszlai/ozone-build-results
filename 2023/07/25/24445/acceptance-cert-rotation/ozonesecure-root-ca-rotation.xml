<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230725 09:26:57.765" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:24:10.946" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:24:10.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:24:10.950" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230725 09:24:10.943" endtime="20230725 09:24:10.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:24:10.951" level="INFO">scm</msg>
<status status="PASS" starttime="20230725 09:24:10.951" endtime="20230725 09:24:10.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:24:10.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:24:10.952" endtime="20230725 09:24:10.952"/>
</kw>
<status status="PASS" starttime="20230725 09:24:10.942" endtime="20230725 09:24:10.952"/>
</kw>
<msg timestamp="20230725 09:24:10.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:24:10.942" endtime="20230725 09:24:10.953"/>
</kw>
<msg timestamp="20230725 09:24:10.953" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230725 09:24:10.942" endtime="20230725 09:24:10.953"/>
</kw>
<msg timestamp="20230725 09:24:10.953" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230725 09:24:10.941" endtime="20230725 09:24:10.953"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230725 09:24:10.954" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230725 09:24:10.953" endtime="20230725 09:24:10.954"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:24:10.958" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:24:10.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:24:10.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:10.956" endtime="20230725 09:24:10.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:24:10.990" level="INFO"/>
<status status="PASS" starttime="20230725 09:24:10.989" endtime="20230725 09:24:10.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:24:10.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:24:10.990" endtime="20230725 09:24:10.991"/>
</kw>
<status status="PASS" starttime="20230725 09:24:10.955" endtime="20230725 09:24:10.991"/>
</kw>
<msg timestamp="20230725 09:24:10.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:24:10.955" endtime="20230725 09:24:10.992"/>
</kw>
<status status="PASS" starttime="20230725 09:24:10.954" endtime="20230725 09:24:10.992"/>
</kw>
<status status="PASS" starttime="20230725 09:24:10.954" endtime="20230725 09:24:10.992"/>
</kw>
<status status="PASS" starttime="20230725 09:24:10.940" endtime="20230725 09:24:10.992"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230725 09:24:10.940" endtime="20230725 09:24:10.992"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230725 09:24:10.885" endtime="20230725 09:24:10.993"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:24:32.606" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:24:38.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:24:38.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:32.603" endtime="20230725 09:24:38.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:24:38.701" level="INFO"/>
<status status="PASS" starttime="20230725 09:24:38.701" endtime="20230725 09:24:38.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:24:38.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:24:38.702" endtime="20230725 09:24:38.702"/>
</kw>
<status status="PASS" starttime="20230725 09:24:32.602" endtime="20230725 09:24:38.703"/>
</kw>
<msg timestamp="20230725 09:24:38.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:24:32.602" endtime="20230725 09:24:38.703"/>
</kw>
<msg timestamp="20230725 09:24:38.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:32.601" endtime="20230725 09:24:38.703"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:24:38.703" endtime="20230725 09:24:38.704"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:24:38.712" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:24:45.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:24:45.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:38.708" endtime="20230725 09:24:45.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:24:45.526" level="INFO"/>
<status status="PASS" starttime="20230725 09:24:45.525" endtime="20230725 09:24:45.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:24:45.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:24:45.526" endtime="20230725 09:24:45.527"/>
</kw>
<status status="PASS" starttime="20230725 09:24:38.705" endtime="20230725 09:24:45.527"/>
</kw>
<msg timestamp="20230725 09:24:45.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:24:38.704" endtime="20230725 09:24:45.527"/>
</kw>
<msg timestamp="20230725 09:24:45.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:38.704" endtime="20230725 09:24:45.527"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:24:45.528" endtime="20230725 09:24:45.528"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230725 09:24:32.601" endtime="20230725 09:24:45.528"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:24:45.535" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230725 09:24:45.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:24:45.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:45.532" endtime="20230725 09:24:45.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:24:45.539" level="INFO"/>
<status status="PASS" starttime="20230725 09:24:45.538" endtime="20230725 09:24:45.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:24:45.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:24:45.539" endtime="20230725 09:24:45.540"/>
</kw>
<status status="PASS" starttime="20230725 09:24:45.531" endtime="20230725 09:24:45.540"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:24:45.545" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:24:58.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:24:58.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:45.542" endtime="20230725 09:24:58.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:24:58.717" level="INFO"/>
<status status="PASS" starttime="20230725 09:24:58.716" endtime="20230725 09:24:58.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:24:58.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:24:58.718" endtime="20230725 09:24:58.718"/>
</kw>
<status status="PASS" starttime="20230725 09:24:45.542" endtime="20230725 09:24:58.719"/>
</kw>
<msg timestamp="20230725 09:24:58.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:24:45.541" endtime="20230725 09:24:58.719"/>
</kw>
<msg timestamp="20230725 09:24:58.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:45.541" endtime="20230725 09:24:58.719"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:24:58.719" endtime="20230725 09:24:58.719"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:24:58.723" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:24:58.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:24:58.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:58.720" endtime="20230725 09:24:58.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:24:58.728" level="INFO"/>
<status status="PASS" starttime="20230725 09:24:58.727" endtime="20230725 09:24:58.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:24:58.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:24:58.728" endtime="20230725 09:24:58.728"/>
</kw>
<status status="PASS" starttime="20230725 09:24:58.720" endtime="20230725 09:24:58.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230725 09:24:45.530" endtime="20230725 09:24:58.729"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230725 09:24:58.732" level="INFO">${random} = 23485</msg>
<status status="PASS" starttime="20230725 09:24:58.731" endtime="20230725 09:24:58.732"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:24:58.736" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-23485 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:25:08.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:25:08.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:58.734" endtime="20230725 09:25:08.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:25:08.450" level="INFO"/>
<status status="PASS" starttime="20230725 09:25:08.449" endtime="20230725 09:25:08.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:25:08.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:25:08.450" endtime="20230725 09:25:08.450"/>
</kw>
<status status="PASS" starttime="20230725 09:24:58.733" endtime="20230725 09:25:08.451"/>
</kw>
<msg timestamp="20230725 09:25:08.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:24:58.733" endtime="20230725 09:25:08.451"/>
</kw>
<msg timestamp="20230725 09:25:08.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:24:58.732" endtime="20230725 09:25:08.451"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:25:08.451" endtime="20230725 09:25:08.452"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:25:08.455" level="INFO">Running command 'cat /tmp/key-23485 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:25:08.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:25:08.468" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230725 09:25:08.453" endtime="20230725 09:25:08.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:25:08.469" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230725 09:25:08.468" endtime="20230725 09:25:08.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:25:08.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:25:08.469" endtime="20230725 09:25:08.473"/>
</kw>
<msg timestamp="20230725 09:25:08.473" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230725 09:25:08.452" endtime="20230725 09:25:08.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:25:08.474" endtime="20230725 09:25:08.474"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:25:08.481" level="INFO">Running command 'rm /tmp/key-23485 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:25:08.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:25:08.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:25:08.475" endtime="20230725 09:25:08.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:25:08.489" level="INFO"/>
<status status="PASS" starttime="20230725 09:25:08.488" endtime="20230725 09:25:08.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:25:08.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:25:08.489" endtime="20230725 09:25:08.490"/>
</kw>
<status status="PASS" starttime="20230725 09:25:08.474" endtime="20230725 09:25:08.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230725 09:24:58.730" endtime="20230725 09:25:08.491"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230725 09:24:32.544" endtime="20230725 09:25:08.492"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:25:59.168" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:26:06.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:26:06.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:25:59.165" endtime="20230725 09:26:06.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:06.857" level="INFO"/>
<status status="PASS" starttime="20230725 09:26:06.856" endtime="20230725 09:26:06.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:26:06.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:26:06.857" endtime="20230725 09:26:06.858"/>
</kw>
<status status="PASS" starttime="20230725 09:25:59.165" endtime="20230725 09:26:06.858"/>
</kw>
<msg timestamp="20230725 09:26:06.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:25:59.164" endtime="20230725 09:26:06.858"/>
</kw>
<msg timestamp="20230725 09:26:06.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:25:59.164" endtime="20230725 09:26:06.858"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:26:06.859" endtime="20230725 09:26:06.859"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:26:06.864" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:26:12.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:26:12.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:26:06.861" endtime="20230725 09:26:12.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:12.751" level="INFO"/>
<status status="PASS" starttime="20230725 09:26:12.750" endtime="20230725 09:26:12.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:26:12.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:26:12.751" endtime="20230725 09:26:12.752"/>
</kw>
<status status="PASS" starttime="20230725 09:26:06.860" endtime="20230725 09:26:12.752"/>
</kw>
<msg timestamp="20230725 09:26:12.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:26:06.860" endtime="20230725 09:26:12.753"/>
</kw>
<msg timestamp="20230725 09:26:12.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:26:06.859" endtime="20230725 09:26:12.753"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:26:12.753" endtime="20230725 09:26:12.754"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230725 09:25:59.163" endtime="20230725 09:26:12.754"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:26:12.760" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230725 09:26:12.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:26:12.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:26:12.757" endtime="20230725 09:26:12.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:12.765" level="INFO"/>
<status status="PASS" starttime="20230725 09:26:12.764" endtime="20230725 09:26:12.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:26:12.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:26:12.765" endtime="20230725 09:26:12.766"/>
</kw>
<status status="PASS" starttime="20230725 09:26:12.756" endtime="20230725 09:26:12.766"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:26:12.771" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:26:22.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:26:22.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:26:12.769" endtime="20230725 09:26:22.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:22.149" level="INFO"/>
<status status="PASS" starttime="20230725 09:26:22.148" endtime="20230725 09:26:22.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:26:22.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:26:22.150" endtime="20230725 09:26:22.150"/>
</kw>
<status status="PASS" starttime="20230725 09:26:12.768" endtime="20230725 09:26:22.151"/>
</kw>
<msg timestamp="20230725 09:26:22.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:26:12.767" endtime="20230725 09:26:22.151"/>
</kw>
<msg timestamp="20230725 09:26:22.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:26:12.766" endtime="20230725 09:26:22.151"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:26:22.151" endtime="20230725 09:26:22.152"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:26:22.156" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:26:22.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:26:22.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:26:22.153" endtime="20230725 09:26:22.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:22.161" level="INFO"/>
<status status="PASS" starttime="20230725 09:26:22.160" endtime="20230725 09:26:22.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:26:22.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:26:22.161" endtime="20230725 09:26:22.162"/>
</kw>
<status status="PASS" starttime="20230725 09:26:22.152" endtime="20230725 09:26:22.162"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230725 09:26:12.755" endtime="20230725 09:26:22.163"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230725 09:26:22.166" level="INFO">${random} = 12320</msg>
<status status="PASS" starttime="20230725 09:26:22.165" endtime="20230725 09:26:22.166"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:26:22.170" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-12320 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:26:31.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:26:31.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:26:22.168" endtime="20230725 09:26:31.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:31.255" level="INFO"/>
<status status="PASS" starttime="20230725 09:26:31.253" endtime="20230725 09:26:31.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:26:31.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:26:31.256" endtime="20230725 09:26:31.257"/>
</kw>
<status status="PASS" starttime="20230725 09:26:22.167" endtime="20230725 09:26:31.257"/>
</kw>
<msg timestamp="20230725 09:26:31.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:26:22.167" endtime="20230725 09:26:31.258"/>
</kw>
<msg timestamp="20230725 09:26:31.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:26:22.166" endtime="20230725 09:26:31.258"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:26:31.258" endtime="20230725 09:26:31.263"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:26:31.334" level="INFO">Running command 'cat /tmp/key-12320 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:26:31.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:26:31.344" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230725 09:26:31.273" endtime="20230725 09:26:31.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:31.346" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230725 09:26:31.345" endtime="20230725 09:26:31.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:26:31.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:26:31.346" endtime="20230725 09:26:31.347"/>
</kw>
<msg timestamp="20230725 09:26:31.347" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230725 09:26:31.265" endtime="20230725 09:26:31.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230725 09:26:31.347" endtime="20230725 09:26:31.348"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:26:31.352" level="INFO">Running command 'rm /tmp/key-12320 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:26:31.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:26:31.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230725 09:26:31.349" endtime="20230725 09:26:31.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:31.358" level="INFO"/>
<status status="PASS" starttime="20230725 09:26:31.357" endtime="20230725 09:26:31.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:26:31.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:26:31.358" endtime="20230725 09:26:31.359"/>
</kw>
<status status="PASS" starttime="20230725 09:26:31.348" endtime="20230725 09:26:31.360"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230725 09:26:22.164" endtime="20230725 09:26:31.360"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230725 09:25:59.107" endtime="20230725 09:26:31.362"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230725 09:26:35.860" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230725 09:26:36.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230725 09:26:36.465" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230725 09:26:35.856" endtime="20230725 09:26:36.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:36.466" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230725 09:26:36.465" endtime="20230725 09:26:36.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230725 09:26:36.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230725 09:26:36.467" endtime="20230725 09:26:36.468"/>
</kw>
<status status="PASS" starttime="20230725 09:26:35.856" endtime="20230725 09:26:36.468"/>
</kw>
<msg timestamp="20230725 09:26:36.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230725 09:26:35.855" endtime="20230725 09:26:36.468"/>
</kw>
<msg timestamp="20230725 09:26:36.468" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230725 09:26:35.855" endtime="20230725 09:26:36.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230725 09:26:36.469" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230725 09:26:36.469" endtime="20230725 09:26:36.469"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230725 09:26:36.470" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230725 09:26:36.469" endtime="20230725 09:26:36.470"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230725 09:26:36.475" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230725 09:26:36.470" endtime="20230725 09:26:36.475"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230725 09:26:36.475" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230725 09:26:36.475" endtime="20230725 09:26:36.475"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230725 09:26:36.477" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230725 09:26:36.476" endtime="20230725 09:26:36.477"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230725 09:26:36.478" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230725 09:26:36.477" endtime="20230725 09:26:36.478"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230725 09:26:36.478" endtime="20230725 09:26:36.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230725 09:26:35.854" endtime="20230725 09:26:36.479"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230725 09:26:35.799" endtime="20230725 09:26:36.481"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="68993"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
