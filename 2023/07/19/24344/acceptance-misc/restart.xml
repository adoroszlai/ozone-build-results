<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230719 07:46:25.471" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:43:02.600" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:43:09.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:43:09.264" level="INFO">${output} = 2023-07-19 07:43:04,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:43:04,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:43:02.597" endtime="20230719 07:43:09.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:43:09.266" level="INFO">2023-07-19 07:43:04,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:43:04,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:43:04,999 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:43:05,073 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-07-19 07:43:05,126 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:43:06,128 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:43:06,832 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:43:07,129 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:43:08,130 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:43:08,892 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=73.970495, max=73.970495, mean=73.970495, stddev=0.0, median=73.970495, p75=73.970495, p95=73.970495, p98=73.970495, p99=73.970495, p999=73.970495, mean_rate=0.968355970629593, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:43:08,893 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-07-19 07:43:08,893 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:43:08,893 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:43:09.265" endtime="20230719 07:43:09.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:43:09.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:43:09.266" endtime="20230719 07:43:09.267"/>
</kw>
<status status="PASS" starttime="20230719 07:43:02.596" endtime="20230719 07:43:09.267"/>
</kw>
<msg timestamp="20230719 07:43:09.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:43:02.596" endtime="20230719 07:43:09.267"/>
</kw>
<msg timestamp="20230719 07:43:09.268" level="INFO">${result} = 2023-07-19 07:43:04,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:43:04,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:43:02.595" endtime="20230719 07:43:09.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:43:09.268" endtime="20230719 07:43:09.269"/>
</kw>
<status status="PASS" starttime="20230719 07:43:02.593" endtime="20230719 07:43:09.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:43:02.592" endtime="20230719 07:43:09.269"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230719 07:43:02.496" endtime="20230719 07:43:09.270"/>
</suite>
<suite id="s1-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:43:12.796" endtime="20230719 07:43:12.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:43:12.801" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:43:22.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:43:22.753" level="INFO">${output} = 2023-07-19 07:43:15,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:43:15,327 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:43:12.798" endtime="20230719 07:43:22.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:43:22.754" level="INFO">2023-07-19 07:43:15,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:43:15,327 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:43:15,328 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:43:16,220 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-07-19 07:43:16,303 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:43:17,031 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:43:17,305 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:43:17,465 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-19 07:43:18,311 [Thread-4] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-07-19 07:43:19,313 [Thread-4] INFO freon.ProgressBar: Progress: 28.00 % (28 out of 100)
2023-07-19 07:43:20,314 [Thread-4] INFO freon.ProgressBar: Progress: 60.00 % (60 out of 100)
2023-07-19 07:43:21,315 [Thread-4] INFO freon.ProgressBar: Progress: 99.00 % (99 out of 100)
2023-07-19 07:43:22,315 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-19 07:43:22,365 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=12.204111, max=884.987825, mean=38.947210275347, stddev=84.54868318268511, median=28.284558, p75=36.24613, p95=46.469822, p98=56.875217, p99=61.485259, p999=884.987825, mean_rate=19.774789060322895, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:43:22,366 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-07-19 07:43:22,366 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:43:22,366 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230719 07:43:22.753" endtime="20230719 07:43:22.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:43:22.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:43:22.754" endtime="20230719 07:43:22.755"/>
</kw>
<status status="PASS" starttime="20230719 07:43:12.797" endtime="20230719 07:43:22.755"/>
</kw>
<msg timestamp="20230719 07:43:22.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:43:12.797" endtime="20230719 07:43:22.755"/>
</kw>
<msg timestamp="20230719 07:43:22.756" level="INFO">${result} = 2023-07-19 07:43:15,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:43:15,327 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:43:12.796" endtime="20230719 07:43:22.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:43:22.756" endtime="20230719 07:43:22.757"/>
</kw>
<status status="PASS" starttime="20230719 07:43:12.794" endtime="20230719 07:43:22.757"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:43:12.793" endtime="20230719 07:43:22.757"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230719 07:43:12.675" endtime="20230719 07:43:22.759"/>
</suite>
<suite id="s1-s3" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:43:25.986" endtime="20230719 07:43:25.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:43:25.997" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:43:32.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:43:32.745" level="INFO">${output} = 2023-07-19 07:43:28,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:43:28,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:43:25.988" endtime="20230719 07:43:32.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:43:32.747" level="INFO">2023-07-19 07:43:28,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:43:28,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:43:28,204 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:43:28,289 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-07-19 07:43:28,335 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:43:28,908 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=fe55af7c-1285-47f2-94cf-14f67747c794
2023-07-19 07:43:29,337 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:43:29,597 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:43:30,208 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-19 07:43:30,338 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:43:31,339 [Thread-3] INFO freon.ProgressBar: Progress: 55.00 % (55 out of 100)
2023-07-19 07:43:32,340 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-19 07:43:32,393 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.068219, max=9.827988, mean=3.9512926000000035, stddev=1.7384850839025914, median=3.36223, p75=4.311439, p95=8.199774, p98=8.766579, p99=8.91778, p999=9.827988, mean_rate=76.16677941419218, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:43:32,393 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-07-19 07:43:32,394 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:43:32,394 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230719 07:43:32.746" endtime="20230719 07:43:32.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:43:32.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:43:32.747" endtime="20230719 07:43:32.748"/>
</kw>
<status status="PASS" starttime="20230719 07:43:25.987" endtime="20230719 07:43:32.748"/>
</kw>
<msg timestamp="20230719 07:43:32.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:43:25.987" endtime="20230719 07:43:32.749"/>
</kw>
<msg timestamp="20230719 07:43:32.749" level="INFO">${result} = 2023-07-19 07:43:28,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:43:28,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:43:25.986" endtime="20230719 07:43:32.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:43:32.749" endtime="20230719 07:43:32.750"/>
</kw>
<status status="PASS" starttime="20230719 07:43:25.984" endtime="20230719 07:43:32.750"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:43:25.983" endtime="20230719 07:43:32.750"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230719 07:43:25.914" endtime="20230719 07:43:32.752"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:44:57.333" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:45:07.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:45:07.866" level="INFO">${output} = 2023-07-19 07:45:00,443 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:00,657 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:44:57.329" endtime="20230719 07:45:07.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:45:07.867" level="INFO">2023-07-19 07:45:00,443 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:00,657 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:45:00,657 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:45:00,765 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-07-19 07:45:00,870 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:01,871 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:02,872 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:03,873 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:04,873 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:05,255 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:45:05,873 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:06,874 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:45:07,515 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=73.113059, max=73.113059, mean=73.113059, stddev=0.0, median=73.113059, p75=73.113059, p95=73.113059, p98=73.113059, p99=73.113059, p999=73.113059, mean_rate=0.9704606434101661, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:45:07,516 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-07-19 07:45:07,516 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:45:07,516 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:45:07.867" endtime="20230719 07:45:07.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:45:07.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:45:07.868" endtime="20230719 07:45:07.868"/>
</kw>
<status status="PASS" starttime="20230719 07:44:57.326" endtime="20230719 07:45:07.869"/>
</kw>
<msg timestamp="20230719 07:45:07.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:44:57.326" endtime="20230719 07:45:07.869"/>
</kw>
<msg timestamp="20230719 07:45:07.869" level="INFO">${result} = 2023-07-19 07:45:00,443 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:00,657 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:44:57.323" endtime="20230719 07:45:07.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:45:07.869" endtime="20230719 07:45:07.870"/>
</kw>
<status status="PASS" starttime="20230719 07:44:57.318" endtime="20230719 07:45:07.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:44:57.315" endtime="20230719 07:45:07.870"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230719 07:44:57.182" endtime="20230719 07:45:07.875"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:45:11.255" endtime="20230719 07:45:11.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:45:11.261" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:45:18.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:45:18.423" level="INFO">${output} = 2023-07-19 07:45:13,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:13,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:11.258" endtime="20230719 07:45:18.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:45:18.424" level="INFO">2023-07-19 07:45:13,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:13,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:45:13,831 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:45:13,907 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-07-19 07:45:13,959 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:45:14,623 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=fe55af7c-1285-47f2-94cf-14f67747c794
2023-07-19 07:45:14,968 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:45:15,339 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:45:15,855 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-19 07:45:15,968 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:45:16,969 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:45:17,970 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-19 07:45:18,042 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.458524, max=17.479971, mean=4.830641131422328, stddev=2.4510038844453166, median=4.07844, p75=5.591455, p95=9.795596, p98=11.464612, p99=17.479971, p999=17.479971, mean_rate=92.27961755435977, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:45:18,043 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-07-19 07:45:18,043 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:45:18,043 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230719 07:45:18.423" endtime="20230719 07:45:18.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:45:18.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:45:18.425" endtime="20230719 07:45:18.426"/>
</kw>
<status status="PASS" starttime="20230719 07:45:11.257" endtime="20230719 07:45:18.428"/>
</kw>
<msg timestamp="20230719 07:45:18.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:45:11.257" endtime="20230719 07:45:18.428"/>
</kw>
<msg timestamp="20230719 07:45:18.429" level="INFO">${result} = 2023-07-19 07:45:13,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:13,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:11.256" endtime="20230719 07:45:18.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:45:18.429" endtime="20230719 07:45:18.430"/>
</kw>
<status status="PASS" starttime="20230719 07:45:11.252" endtime="20230719 07:45:18.430"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:45:11.251" endtime="20230719 07:45:18.430"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230719 07:45:11.178" endtime="20230719 07:45:18.437"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:45:21.550" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:45:29.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:45:29.711" level="INFO">${output} = 2023-07-19 07:45:23,768 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:23,945 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:21.548" endtime="20230719 07:45:29.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:45:29.712" level="INFO">2023-07-19 07:45:23,768 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:23,945 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:45:23,945 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:45:24,033 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-07-19 07:45:24,165 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:25,177 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:26,178 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:26,509 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:45:26,872 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-19 07:45:27,179 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:28,179 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:29,180 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:45:29,343 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3277.973042, max=3277.973042, mean=3277.973042, stddev=0.0, median=3277.973042, p75=3277.973042, p95=3277.973042, p98=3277.973042, p99=3277.973042, p999=3277.973042, mean_rate=0.24343910855350287, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:45:29,343 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-07-19 07:45:29,344 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:45:29,344 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:45:29.711" endtime="20230719 07:45:29.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:45:29.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:45:29.712" endtime="20230719 07:45:29.713"/>
</kw>
<status status="PASS" starttime="20230719 07:45:21.547" endtime="20230719 07:45:29.713"/>
</kw>
<msg timestamp="20230719 07:45:29.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:45:21.547" endtime="20230719 07:45:29.714"/>
</kw>
<msg timestamp="20230719 07:45:29.714" level="INFO">${result} = 2023-07-19 07:45:23,768 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:23,945 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:21.546" endtime="20230719 07:45:29.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:45:29.714" endtime="20230719 07:45:29.715"/>
</kw>
<status status="PASS" starttime="20230719 07:45:21.544" endtime="20230719 07:45:29.715"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:45:21.544" endtime="20230719 07:45:29.715"/>
</test>
<test id="s1-s6-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:45:29.725" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:45:33.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:45:33.937" level="INFO">${output} = 2023-07-19 07:45:31,754 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:31,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:29.721" endtime="20230719 07:45:33.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:45:33.939" level="INFO">2023-07-19 07:45:31,754 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:31,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:45:31,898 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:45:31,995 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2023-07-19 07:45:32,055 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:33,071 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:45:33,885 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=95.597172, max=95.597172, mean=95.597172, stddev=0.0, median=95.597172, p75=95.597172, p95=95.597172, p98=95.597172, p99=95.597172, p999=95.597172, mean_rate=0.9835765621617126, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:45:33,887 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-19 07:45:33,887 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:45:33,887 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:45:33.938" endtime="20230719 07:45:33.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:45:33.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:45:33.939" endtime="20230719 07:45:33.940"/>
</kw>
<status status="PASS" starttime="20230719 07:45:29.721" endtime="20230719 07:45:33.940"/>
</kw>
<msg timestamp="20230719 07:45:33.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:45:29.720" endtime="20230719 07:45:33.940"/>
</kw>
<msg timestamp="20230719 07:45:33.941" level="INFO">${result} = 2023-07-19 07:45:31,754 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:31,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:29.719" endtime="20230719 07:45:33.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:45:33.941" endtime="20230719 07:45:33.942"/>
</kw>
<status status="PASS" starttime="20230719 07:45:29.718" endtime="20230719 07:45:33.942"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:45:29.717" endtime="20230719 07:45:33.943"/>
</test>
<test id="s1-s6-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:45:33.950" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:45:38.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:45:38.504" level="INFO">${output} = 2023-07-19 07:45:36,287 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:36,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:33.947" endtime="20230719 07:45:38.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:45:38.505" level="INFO">2023-07-19 07:45:36,287 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:36,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:45:36,462 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:45:36,555 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2023-07-19 07:45:36,614 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:37,615 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:45:38,448 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=25.457531, max=25.457531, mean=25.457531, stddev=0.0, median=25.457531, p75=25.457531, p95=25.457531, p98=25.457531, p99=25.457531, p999=25.457531, mean_rate=0.9826648709199873, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:45:38,449 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-19 07:45:38,449 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:45:38,449 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:45:38.504" endtime="20230719 07:45:38.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:45:38.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:45:38.505" endtime="20230719 07:45:38.506"/>
</kw>
<status status="PASS" starttime="20230719 07:45:33.947" endtime="20230719 07:45:38.506"/>
</kw>
<msg timestamp="20230719 07:45:38.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:45:33.947" endtime="20230719 07:45:38.506"/>
</kw>
<msg timestamp="20230719 07:45:38.507" level="INFO">${result} = 2023-07-19 07:45:36,287 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:36,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:33.946" endtime="20230719 07:45:38.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:45:38.507" endtime="20230719 07:45:38.508"/>
</kw>
<status status="PASS" starttime="20230719 07:45:33.945" endtime="20230719 07:45:38.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:45:33.944" endtime="20230719 07:45:38.508"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230719 07:45:21.480" endtime="20230719 07:45:38.510"/>
</suite>
<suite id="s1-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:45:41.585" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:45:48.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:45:48.486" level="INFO">${output} = 2023-07-19 07:45:43,556 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:43,774 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:41.583" endtime="20230719 07:45:48.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:45:48.487" level="INFO">2023-07-19 07:45:43,556 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:43,774 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:45:43,775 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:45:43,883 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-07-19 07:45:43,936 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:44,941 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:45,481 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:45:45,941 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:46,941 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:45:47,942 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:45:48,117 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=55.941218, max=55.941218, mean=55.941218, stddev=0.0, median=55.941218, p75=55.941218, p95=55.941218, p98=55.941218, p99=55.941218, p999=55.941218, mean_rate=0.9671671212326345, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:45:48,118 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-07-19 07:45:48,118 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:45:48,118 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:45:48.486" endtime="20230719 07:45:48.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:45:48.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:45:48.487" endtime="20230719 07:45:48.488"/>
</kw>
<status status="PASS" starttime="20230719 07:45:41.582" endtime="20230719 07:45:48.488"/>
</kw>
<msg timestamp="20230719 07:45:48.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:45:41.582" endtime="20230719 07:45:48.488"/>
</kw>
<msg timestamp="20230719 07:45:48.489" level="INFO">${result} = 2023-07-19 07:45:43,556 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:43,774 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:41.582" endtime="20230719 07:45:48.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:45:48.489" endtime="20230719 07:45:48.489"/>
</kw>
<status status="PASS" starttime="20230719 07:45:41.580" endtime="20230719 07:45:48.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:45:41.579" endtime="20230719 07:45:48.490"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230719 07:45:41.524" endtime="20230719 07:45:48.492"/>
</suite>
<suite id="s1-s8" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s8-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:45:51.474" endtime="20230719 07:45:51.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:45:51.479" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:46:00.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:46:00.131" level="INFO">${output} = 2023-07-19 07:45:53,590 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:53,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:51.476" endtime="20230719 07:46:00.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:46:00.132" level="INFO">2023-07-19 07:45:53,590 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:53,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:45:53,738 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:45:54,663 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-07-19 07:45:54,702 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:45:55,155 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:45:55,580 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-19 07:45:55,705 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:45:56,706 [Thread-4] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2023-07-19 07:45:57,706 [Thread-4] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2023-07-19 07:45:58,706 [Thread-4] INFO freon.ProgressBar: Progress: 78.00 % (78 out of 100)
2023-07-19 07:45:59,707 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-19 07:45:59,773 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=15.057032, max=1017.37704, mean=37.78164176746972, stddev=97.72524465134337, median=26.850536, p75=32.130582, p95=41.061561, p98=43.973887, p99=80.257306, p999=1017.37704, mean_rate=22.846222498560383, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:45:59,774 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-07-19 07:45:59,774 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:45:59,774 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230719 07:46:00.131" endtime="20230719 07:46:00.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:46:00.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:46:00.133" endtime="20230719 07:46:00.134"/>
</kw>
<status status="PASS" starttime="20230719 07:45:51.476" endtime="20230719 07:46:00.134"/>
</kw>
<msg timestamp="20230719 07:46:00.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:45:51.475" endtime="20230719 07:46:00.134"/>
</kw>
<msg timestamp="20230719 07:46:00.135" level="INFO">${result} = 2023-07-19 07:45:53,590 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:45:53,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:45:51.475" endtime="20230719 07:46:00.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:46:00.135" endtime="20230719 07:46:00.136"/>
</kw>
<status status="PASS" starttime="20230719 07:45:51.473" endtime="20230719 07:46:00.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:45:51.472" endtime="20230719 07:46:00.136"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230719 07:45:51.411" endtime="20230719 07:46:00.138"/>
</suite>
<suite id="s1-s9" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:46:03.152" endtime="20230719 07:46:03.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:46:03.159" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:46:09.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:46:09.325" level="INFO">${output} = 2023-07-19 07:46:05,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:46:05,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:46:03.154" endtime="20230719 07:46:09.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:46:09.334" level="INFO">2023-07-19 07:46:05,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:46:05,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:46:05,585 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:46:05,663 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-07-19 07:46:05,721 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:46:06,279 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=fe55af7c-1285-47f2-94cf-14f67747c794
2023-07-19 07:46:06,725 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:46:06,776 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:46:07,129 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-19 07:46:07,725 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-19 07:46:08,726 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-19 07:46:08,970 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.076518, max=31.633672, mean=4.75242952848789, stddev=3.411647925332851, median=4.085835, p75=5.229945, p95=8.952276, p98=13.95552, p99=31.633672, p999=31.633672, mean_rate=94.37353470282525, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:46:08,970 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-07-19 07:46:08,970 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:46:08,970 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230719 07:46:09.325" endtime="20230719 07:46:09.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:46:09.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:46:09.334" endtime="20230719 07:46:09.336"/>
</kw>
<status status="PASS" starttime="20230719 07:46:03.153" endtime="20230719 07:46:09.336"/>
</kw>
<msg timestamp="20230719 07:46:09.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:46:03.153" endtime="20230719 07:46:09.336"/>
</kw>
<msg timestamp="20230719 07:46:09.336" level="INFO">${result} = 2023-07-19 07:46:05,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:46:05,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:46:03.152" endtime="20230719 07:46:09.336"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:46:09.337" endtime="20230719 07:46:09.337"/>
</kw>
<status status="PASS" starttime="20230719 07:46:03.150" endtime="20230719 07:46:09.337"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:46:03.149" endtime="20230719 07:46:09.338"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230719 07:46:03.091" endtime="20230719 07:46:09.339"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s10-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:42:28.842" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:42:50.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:42:50.334" level="INFO">${output} = 2023-07-19 07:42:33,999 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:42:34,509 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:42:28.838" endtime="20230719 07:42:50.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:42:50.337" level="INFO">2023-07-19 07:42:33,999 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:42:34,509 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:42:34,509 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:42:34,760 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-07-19 07:42:34,899 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:35,908 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:36,908 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:37,909 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:38,909 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:39,194 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy24.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-07-19 07:42:39,910 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:40,910 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:41,911 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:42,911 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:43,468 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-07-19 07:42:43,581 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-07-19 07:42:43,912 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:44,667 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:42:44,912 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:45,065 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-19 07:42:45,913 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:46,914 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:47,914 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:48,915 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:49,916 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:42:49,981 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5721.904085, max=5721.904085, mean=5721.904085, stddev=0.0, median=5721.904085, p75=5721.904085, p95=5721.904085, p98=5721.904085, p99=5721.904085, p999=5721.904085, mean_rate=0.15837822840455487, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:42:49,981 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 15
2023-07-19 07:42:49,982 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:42:49,983 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:42:50.335" endtime="20230719 07:42:50.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:42:50.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:42:50.337" endtime="20230719 07:42:50.338"/>
</kw>
<status status="PASS" starttime="20230719 07:42:28.836" endtime="20230719 07:42:50.338"/>
</kw>
<msg timestamp="20230719 07:42:50.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:42:28.835" endtime="20230719 07:42:50.339"/>
</kw>
<msg timestamp="20230719 07:42:50.339" level="INFO">${result} = 2023-07-19 07:42:33,999 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:42:34,509 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:42:28.834" endtime="20230719 07:42:50.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:42:50.339" endtime="20230719 07:42:50.340"/>
</kw>
<status status="PASS" starttime="20230719 07:42:28.831" endtime="20230719 07:42:50.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:42:28.830" endtime="20230719 07:42:50.340"/>
</test>
<test id="s1-s10-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:42:50.348" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:42:54.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:42:54.912" level="INFO">${output} = 2023-07-19 07:42:52,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:42:52,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:42:50.346" endtime="20230719 07:42:54.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:42:54.913" level="INFO">2023-07-19 07:42:52,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:42:52,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:42:52,643 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:42:52,761 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2023-07-19 07:42:52,814 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:53,822 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:54,823 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:42:54,841 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=87.037677, max=87.037677, mean=87.037677, stddev=0.0, median=87.037677, p75=87.037677, p95=87.037677, p98=87.037677, p99=87.037677, p999=87.037677, mean_rate=0.8867266905855575, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:42:54,846 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-19 07:42:54,846 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:42:54,846 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:42:54.913" endtime="20230719 07:42:54.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:42:54.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:42:54.914" endtime="20230719 07:42:54.915"/>
</kw>
<status status="PASS" starttime="20230719 07:42:50.345" endtime="20230719 07:42:54.915"/>
</kw>
<msg timestamp="20230719 07:42:54.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:42:50.345" endtime="20230719 07:42:54.915"/>
</kw>
<msg timestamp="20230719 07:42:54.915" level="INFO">${result} = 2023-07-19 07:42:52,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:42:52,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:42:50.344" endtime="20230719 07:42:54.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:42:54.915" endtime="20230719 07:42:54.916"/>
</kw>
<status status="PASS" starttime="20230719 07:42:50.343" endtime="20230719 07:42:54.916"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:42:50.342" endtime="20230719 07:42:54.916"/>
</test>
<test id="s1-s10-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:42:54.926" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:42:59.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:42:59.444" level="INFO">${output} = 2023-07-19 07:42:57,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:42:57,343 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:42:54.922" endtime="20230719 07:42:59.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:42:59.445" level="INFO">2023-07-19 07:42:57,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:42:57,343 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:42:57,343 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:42:57,433 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2023-07-19 07:42:57,489 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:42:58,491 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:42:59,360 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=26.442953, max=26.442953, mean=26.442953, stddev=0.0, median=26.442953, p75=26.442953, p95=26.442953, p98=26.442953, p99=26.442953, p999=26.442953, mean_rate=0.9698761708368169, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:42:59,361 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-19 07:42:59,361 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:42:59,361 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:42:59.444" endtime="20230719 07:42:59.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:42:59.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:42:59.445" endtime="20230719 07:42:59.446"/>
</kw>
<status status="PASS" starttime="20230719 07:42:54.922" endtime="20230719 07:42:59.446"/>
</kw>
<msg timestamp="20230719 07:42:59.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:42:54.921" endtime="20230719 07:42:59.447"/>
</kw>
<msg timestamp="20230719 07:42:59.447" level="INFO">${result} = 2023-07-19 07:42:57,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:42:57,343 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:42:54.920" endtime="20230719 07:42:59.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:42:59.447" endtime="20230719 07:42:59.448"/>
</kw>
<status status="PASS" starttime="20230719 07:42:54.919" endtime="20230719 07:42:59.448"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:42:54.918" endtime="20230719 07:42:59.448"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230719 07:42:28.706" endtime="20230719 07:42:59.450"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="111365"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s10" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
