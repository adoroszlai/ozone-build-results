<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230719 07:30:49.772" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:26:04.749" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:09.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:09.840" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230719 07:26:04.746" endtime="20230719 07:26:09.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:09.841" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230719 07:26:09.840" endtime="20230719 07:26:09.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:09.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:09.841" endtime="20230719 07:26:09.842"/>
</kw>
<status status="PASS" starttime="20230719 07:26:04.745" endtime="20230719 07:26:09.842"/>
</kw>
<msg timestamp="20230719 07:26:09.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:26:04.745" endtime="20230719 07:26:09.843"/>
</kw>
<msg timestamp="20230719 07:26:09.843" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230719 07:26:04.745" endtime="20230719 07:26:09.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:26:09.843" endtime="20230719 07:26:09.844"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:26:04.744" endtime="20230719 07:26:09.844"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:26:09.849" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:14.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:14.903" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230719 07:26:09.847" endtime="20230719 07:26:14.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:14.905" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230719 07:26:14.904" endtime="20230719 07:26:14.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:14.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:14.905" endtime="20230719 07:26:14.906"/>
</kw>
<status status="PASS" starttime="20230719 07:26:09.846" endtime="20230719 07:26:14.906"/>
</kw>
<msg timestamp="20230719 07:26:14.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:26:09.846" endtime="20230719 07:26:14.907"/>
</kw>
<msg timestamp="20230719 07:26:14.907" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20230719 07:26:09.846" endtime="20230719 07:26:14.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:26:14.907" endtime="20230719 07:26:14.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:26:14.908" endtime="20230719 07:26:14.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:26:09.845" endtime="20230719 07:26:14.908"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:26:14.914" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:20.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:20.265" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230719 07:26:14.912" endtime="20230719 07:26:20.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:20.266" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230719 07:26:20.265" endtime="20230719 07:26:20.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:20.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:20.266" endtime="20230719 07:26:20.267"/>
</kw>
<status status="PASS" starttime="20230719 07:26:14.912" endtime="20230719 07:26:20.267"/>
</kw>
<msg timestamp="20230719 07:26:20.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:26:14.911" endtime="20230719 07:26:20.268"/>
</kw>
<msg timestamp="20230719 07:26:20.268" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230719 07:26:14.911" endtime="20230719 07:26:20.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:26:20.268" endtime="20230719 07:26:20.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:26:14.910" endtime="20230719 07:26:20.269"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:26:20.276" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:25.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:25.560" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230719 07:26:20.273" endtime="20230719 07:26:25.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:25.562" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20230719 07:26:25.561" endtime="20230719 07:26:25.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:25.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:25.562" endtime="20230719 07:26:25.563"/>
</kw>
<status status="PASS" starttime="20230719 07:26:20.273" endtime="20230719 07:26:25.563"/>
</kw>
<msg timestamp="20230719 07:26:25.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:26:20.272" endtime="20230719 07:26:25.563"/>
</kw>
<msg timestamp="20230719 07:26:25.564" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230719 07:26:20.272" endtime="20230719 07:26:25.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:26:25.564" endtime="20230719 07:26:25.564"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:26:20.270" endtime="20230719 07:26:25.565"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230719 07:26:04.673" endtime="20230719 07:26:25.567"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:26:28.919" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:34.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:34.441" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:26:28.917" endtime="20230719 07:26:34.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:34.442" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:26:34.441" endtime="20230719 07:26:34.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:34.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:34.442" endtime="20230719 07:26:34.443"/>
</kw>
<status status="PASS" starttime="20230719 07:26:28.916" endtime="20230719 07:26:34.443"/>
</kw>
<msg timestamp="20230719 07:26:34.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:26:28.916" endtime="20230719 07:26:34.444"/>
</kw>
<status status="PASS" starttime="20230719 07:26:28.915" endtime="20230719 07:26:34.444"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:26:34.449" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:40.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:40.035" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:26:34.447" endtime="20230719 07:26:40.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:40.036" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:26:40.035" endtime="20230719 07:26:40.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:40.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:40.037" endtime="20230719 07:26:40.037"/>
</kw>
<status status="PASS" starttime="20230719 07:26:34.445" endtime="20230719 07:26:40.038"/>
</kw>
<msg timestamp="20230719 07:26:40.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:26:34.444" endtime="20230719 07:26:40.038"/>
</kw>
<status status="PASS" starttime="20230719 07:26:34.444" endtime="20230719 07:26:40.038"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:26:40.046" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:52.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:52.260" level="INFO">${output} = 2023-07-19 07:26:43,093 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:26:43,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:26:40.043" endtime="20230719 07:26:52.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:52.261" level="INFO">2023-07-19 07:26:43,093 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:26:43,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:26:43,286 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:26:43,459 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-07-19 07:26:43,543 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-19 07:26:44,549 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-19 07:26:45,549 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-19 07:26:45,950 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:26:46,453 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-19 07:26:46,550 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-19 07:26:47,551 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-19 07:26:48,553 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2023-07-19 07:26:49,553 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2023-07-19 07:26:50,554 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2023-07-19 07:26:51,554 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-07-19 07:26:51,651 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=106.911072, max=3067.917678, mean=567.8333794414241, stddev=888.6849614204696, median=141.407785, p75=312.927444, p95=3067.917678, p98=3067.917678, p99=3067.917678, p999=3067.917678, mean_rate=1.5217497959821245, m1=1.0, m5=1.0, m15=1.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:26:51,652 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-07-19 07:26:51,652 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:26:51,652 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230719 07:26:52.260" endtime="20230719 07:26:52.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:52.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:52.262" endtime="20230719 07:26:52.263"/>
</kw>
<status status="PASS" starttime="20230719 07:26:40.042" endtime="20230719 07:26:52.264"/>
</kw>
<msg timestamp="20230719 07:26:52.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:26:40.040" endtime="20230719 07:26:52.264"/>
</kw>
<msg timestamp="20230719 07:26:52.264" level="INFO">${result} = 2023-07-19 07:26:43,093 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:26:43,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:26:40.039" endtime="20230719 07:26:52.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:26:52.265" endtime="20230719 07:26:52.265"/>
</kw>
<status status="PASS" starttime="20230719 07:26:40.039" endtime="20230719 07:26:52.265"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:26:52.268" endtime="20230719 07:26:52.268"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:26:52.279" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:52.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:52.728" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230719 07:26:52.271" endtime="20230719 07:26:52.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:52.730" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230719 07:26:52.729" endtime="20230719 07:26:52.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:52.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:52.730" endtime="20230719 07:26:52.731"/>
</kw>
<status status="PASS" starttime="20230719 07:26:52.270" endtime="20230719 07:26:52.732"/>
</kw>
<msg timestamp="20230719 07:26:52.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:26:52.269" endtime="20230719 07:26:52.732"/>
</kw>
<msg timestamp="20230719 07:26:52.732" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230719 07:26:52.269" endtime="20230719 07:26:52.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:26:52.732" endtime="20230719 07:26:52.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:26:52.738" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:52.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:52.780" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230719 07:26:52.735" endtime="20230719 07:26:52.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:52.781" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230719 07:26:52.780" endtime="20230719 07:26:52.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:52.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:52.781" endtime="20230719 07:26:52.782"/>
</kw>
<status status="PASS" starttime="20230719 07:26:52.734" endtime="20230719 07:26:52.782"/>
</kw>
<msg timestamp="20230719 07:26:52.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:26:52.734" endtime="20230719 07:26:52.783"/>
</kw>
<msg timestamp="20230719 07:26:52.783" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230719 07:26:52.733" endtime="20230719 07:26:52.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230719 07:26:52.784" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230719 07:26:52.783" endtime="20230719 07:26:52.784"/>
</kw>
<status status="FAIL" starttime="20230719 07:26:52.267" endtime="20230719 07:26:52.784"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:02.787" endtime="20230719 07:27:02.788"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:02.792" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:02.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:02.814" level="INFO">${output} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230719 07:27:02.790" endtime="20230719 07:27:02.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:02.816" level="INFO">{"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null},{"ContainerID":4,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230719 07:27:02.815" endtime="20230719 07:27:02.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:02.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:02.816" endtime="20230719 07:27:02.817"/>
</kw>
<status status="PASS" starttime="20230719 07:27:02.789" endtime="20230719 07:27:02.817"/>
</kw>
<msg timestamp="20230719 07:27:02.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:02.789" endtime="20230719 07:27:02.817"/>
</kw>
<msg timestamp="20230719 07:27:02.817" level="INFO">${result} = {"data":{"totalCount":4,"prevKey":4,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20230719 07:27:02.788" endtime="20230719 07:27:02.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.818" endtime="20230719 07:27:02.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:02.823" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:02.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:02.841" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230719 07:27:02.820" endtime="20230719 07:27:02.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:02.842" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230719 07:27:02.841" endtime="20230719 07:27:02.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:02.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:02.849" endtime="20230719 07:27:02.850"/>
</kw>
<status status="PASS" starttime="20230719 07:27:02.820" endtime="20230719 07:27:02.850"/>
</kw>
<msg timestamp="20230719 07:27:02.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:02.819" endtime="20230719 07:27:02.850"/>
</kw>
<msg timestamp="20230719 07:27:02.850" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230719 07:27:02.818" endtime="20230719 07:27:02.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.855" endtime="20230719 07:27:02.855"/>
</kw>
<status status="PASS" starttime="20230719 07:27:02.787" endtime="20230719 07:27:02.855"/>
</kw>
<status status="PASS" starttime="20230719 07:26:52.266" endtime="20230719 07:27:02.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:26:28.915" endtime="20230719 07:27:02.856"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:02.864" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:02.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:02.916" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230719 07:27:02.861" endtime="20230719 07:27:02.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:02.917" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":19623018496},"pipelines":[{"pipelineID":"4964bfd5-c0e2-46bd-b9f9-3af42430ec50","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"ae04d1e6-3b42-4651-bcfb-f9a77647419f","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"0287dab7-ecac-4186-9650-c8c694d7191c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1689751434467,"revision":"96333857ee921f43d327609f117047fbb3a7b745","buildDate":"2023-07-19T06:43Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":19623018496},"pipelines":[{"pipelineID":"4964bfd5-c0e2-46bd-b9f9-3af42430ec50","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"81ae8059-fe51-4660-a14a-fb66ad8ada7a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"8ee138ea-dfb1-4721-af4b-cda4d5368c4d","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1689751433759,"revision":"96333857ee921f43d327609f117047fbb3a7b745","buildDate":"2023-07-19T06:43Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"6321120b-03c6-409f-9ba2-f2131802ba43","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":19622948864},"pipelines":[{"pipelineID":"4964bfd5-c0e2-46bd-b9f9-3af42430ec50","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"81ae8059-fe51-4660-a14a-fb66ad8ada7a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"e02a20c6-b697-4ea8-a7f5-dafb2dd3d731","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1689751436802,"revision":"96333857ee921f43d327609f117047fbb3a7b745","buildDate":"2023-07-19T06:43Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":19622948864},"pipelines":[{"pipelineID":"0287dab7-ecac-4186-9650-c8c694d7191c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"6e47e031-b78f-4ad0-aa04-3a05384458b4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"070cfb95-9396-4cad-be3b-49ac9b087e32","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1689751435675,"revision":"96333857ee921f43d327609f117047fbb3a7b745","buildDate":"2023-07-19T06:43Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"01476878-fe8f-4f93-b593-a75f273b634e","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":18432,"remaining":19622948864},"pipelines":[{"pipelineID":"0287dab7-ecac-4186-9650-c8c694d7191c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"6e47e031-b78f-4ad0-aa04-3a05384458b4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"10d9c196-ffa2-4368-963e-58a05832afc3","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1689751434746,"revision":"96333857ee921f43d327609f117047fbb3a7b745","buildDate":"2023-07-19T06:43Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"5f4e7d19-f95f-4595-ae47-4967a63e645e","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":19622981632},"pipelines":[{"pipelineID":"6e47e031-b78f-4ad0-aa04-3a05384458b4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"81ae8059-fe51-4660-a14a-fb66ad8ada7a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"51833c1d-70ff-4c37-afab-fceb9d9cee45","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1689751435008,"revision":"96333857ee921f43d327609f117047fbb3a7b745","buildDate":"2023-07-19T06:43Z","layoutVersion":7,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20230719 07:27:02.916" endtime="20230719 07:27:02.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:02.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:02.918" endtime="20230719 07:27:02.918"/>
</kw>
<status status="PASS" starttime="20230719 07:27:02.860" endtime="20230719 07:27:02.919"/>
</kw>
<msg timestamp="20230719 07:27:02.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:02.860" endtime="20230719 07:27:02.919"/>
</kw>
<msg timestamp="20230719 07:27:02.919" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230719 07:27:02.859" endtime="20230719 07:27:02.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.919" endtime="20230719 07:27:02.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.920" endtime="20230719 07:27:02.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.921" endtime="20230719 07:27:02.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.923" endtime="20230719 07:27:02.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:02.928" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:02.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:02.977" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"4964bfd5-c0e2-46bd-b9f9-3af42430ec50","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230719 07:27:02.925" endtime="20230719 07:27:02.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:02.978" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"4964bfd5-c0e2-46bd-b9f9-3af42430ec50","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","uuidString":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1184983246,"maintenance":false,"decommissioned":false,"networkName":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","networkLocation":"/rack2","networkFullPath":"/rack2/c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"6321120b-03c6-409f-9ba2-f2131802ba43","uuidString":"6321120b-03c6-409f-9ba2-f2131802ba43","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2068790559,"maintenance":false,"decommissioned":false,"networkName":"6321120b-03c6-409f-9ba2-f2131802ba43","networkLocation":"/rack1","networkFullPath":"/rack1/6321120b-03c6-409f-9ba2-f2131802ba43","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","uuidString":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-535670420,"maintenance":false,"decommissioned":false,"networkName":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","networkLocation":"/rack2","networkFullPath":"/rack2/1d97e320-ecdc-468b-9e5f-6f019bea0ab6","numOfLeaves":1}],"lastLeaderElection":0,"duration":117178,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"ae04d1e6-3b42-4651-bcfb-f9a77647419f","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","uuidString":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1184983246,"maintenance":false,"decommissioned":false,"networkName":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","networkLocation":"/rack2","networkFullPath":"/rack2/c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","numOfLeaves":1}],"lastLeaderElection":0,"duration":118467,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"0287dab7-ecac-4186-9650-c8c694d7191c","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","uuidString":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":135632193,"maintenance":false,"decommissioned":false,"networkName":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","networkLocation":"/rack2","networkFullPath":"/rack2/55dc9e79-4c6c-465e-aed8-6578a7e078e3","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"01476878-fe8f-4f93-b593-a75f273b634e","uuidString":"01476878-fe8f-4f93-b593-a75f273b634e","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":171980492,"maintenance":false,"decommissioned":false,"networkName":"01476878-fe8f-4f93-b593-a75f273b634e","networkLocation":"/rack1","networkFullPath":"/rack1/01476878-fe8f-4f93-b593-a75f273b634e","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","uuidString":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1184983246,"maintenance":false,"decommissioned":false,"networkName":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","networkLocation":"/rack2","networkFullPath":"/rack2/c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","numOfLeaves":1}],"lastLeaderElection":0,"duration":117123,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"6e47e031-b78f-4ad0-aa04-3a05384458b4","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","uuidString":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":135632193,"maintenance":false,"decommissioned":false,"networkName":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","networkLocation":"/rack2","networkFullPath":"/rack2/55dc9e79-4c6c-465e-aed8-6578a7e078e3","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"01476878-fe8f-4f93-b593-a75f273b634e","uuidString":"01476878-fe8f-4f93-b593-a75f273b634e","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":171980492,"maintenance":false,"decommissioned":false,"networkName":"01476878-fe8f-4f93-b593-a75f273b634e","networkLocation":"/rack1","networkFullPath":"/rack1/01476878-fe8f-4f93-b593-a75f273b634e","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"5f4e7d19-f95f-4595-ae47-4967a63e645e","uuidString":"5f4e7d19-f95f-4595-ae47-4967a63e645e","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":520373781,"maintenance":false,"decommissioned":false,"networkName":"5f4e7d19-f95f-4595-ae47-4967a63e645e","networkLocation":"/rack1","networkFullPath":"/rack1/5f4e7d19-f95f-4595-ae47-4967a63e645e","numOfLeaves":1}],"lastLeaderElection":0,"duration":116816,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"81ae8059-fe51-4660-a14a-fb66ad8ada7a","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"5f4e7d19-f95f-4595-ae47-4967a63e645e","uuidString":"5f4e7d19-f95f-4595-ae47-4967a63e645e","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":520373781,"maintenance":false,"decommissioned":false,"networkName":"5f4e7d19-f95f-4595-ae47-4967a63e645e","networkLocation":"/rack1","networkFullPath":"/rack1/5f4e7d19-f95f-4595-ae47-4967a63e645e","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","uuidString":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-535670420,"maintenance":false,"decommissioned":false,"networkName":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","networkLocation":"/rack2","networkFullPath":"/rack2/1d97e320-ecdc-468b-9e5f-6f019bea0ab6","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"6321120b-03c6-409f-9ba2-f2131802ba43","uuidString":"6321120b-03c6-409f-9ba2-f2131802ba43","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2068790559,"maintenance":false,"decommissioned":false,"networkName":"6321120b-03c6-409f-9ba2-f2131802ba43","networkLocation":"/rack1","networkFullPath":"/rack1/6321120b-03c6-409f-9ba2-f2131802ba43","numOfLeaves":1}],"lastLeaderElection":0,"duration":117066,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"10d9c196-ffa2-4368-963e-58a05832afc3","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"01476878-fe8f-4f93-b593-a75f273b634e","uuidString":"01476878-fe8f-4f93-b593-a75f273b634e","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":171980492,"maintenance":false,"decommissioned":false,"networkName":"01476878-fe8f-4f93-b593-a75f273b634e","networkLocation":"/rack1","networkFullPath":"/rack1/01476878-fe8f-4f93-b593-a75f273b634e","numOfLeaves":1}],"lastLeaderElection":0,"duration":116805,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"070cfb95-9396-4cad-be3b-49ac9b087e32","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","uuidString":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":135632193,"maintenance":false,"decommissioned":false,"networkName":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","networkLocation":"/rack2","networkFullPath":"/rack2/55dc9e79-4c6c-465e-aed8-6578a7e078e3","numOfLeaves":1}],"lastLeaderElection":0,"duration":116858,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"51833c1d-70ff-4c37-afab-fceb9d9cee45","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"5f4e7d19-f95f-4595-ae47-4967a63e645e","uuidString":"5f4e7d19-f95f-4595-ae47-4967a63e645e","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":520373781,"maintenance":false,"decommissioned":false,"networkName":"5f4e7d19-f95f-4595-ae47-4967a63e645e","networkLocation":"/rack1","networkFullPath":"/rack1/5f4e7d19-f95f-4595-ae47-4967a63e645e","numOfLeaves":1}],"lastLeaderElection":0,"duration":116776,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"8ee138ea-dfb1-4721-af4b-cda4d5368c4d","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","uuidString":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-535670420,"maintenance":false,"decommissioned":false,"networkName":"1d97e320-ecdc-468b-9e5f-6f019bea0ab6","networkLocation":"/rack2","networkFullPath":"/rack2/1d97e320-ecdc-468b-9e5f-6f019bea0ab6","numOfLeaves":1}],"lastLeaderElection":0,"duration":117152,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"e02a20c6-b697-4ea8-a7f5-dafb2dd3d731","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"6321120b-03c6-409f-9ba2-f2131802ba43","uuidString":"6321120b-03c6-409f-9ba2-f2131802ba43","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2068790559,"maintenance":false,"decommissioned":false,"networkName":"6321120b-03c6-409f-9ba2-f2131802ba43","networkLocation":"/rack1","networkFullPath":"/rack1/6321120b-03c6-409f-9ba2-f2131802ba43","numOfLeaves":1}],"lastLeaderElection":0,"duration":117094,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230719 07:27:02.977" endtime="20230719 07:27:02.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:02.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:02.979" endtime="20230719 07:27:02.980"/>
</kw>
<status status="PASS" starttime="20230719 07:27:02.925" endtime="20230719 07:27:02.980"/>
</kw>
<msg timestamp="20230719 07:27:02.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:02.924" endtime="20230719 07:27:02.981"/>
</kw>
<msg timestamp="20230719 07:27:02.981" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"4964bfd5-c0e2-46bd-b9f9-3af42430ec50","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20230719 07:27:02.923" endtime="20230719 07:27:02.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.981" endtime="20230719 07:27:02.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.982" endtime="20230719 07:27:02.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.988" endtime="20230719 07:27:02.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.991" endtime="20230719 07:27:02.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.992" endtime="20230719 07:27:02.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:02.992" endtime="20230719 07:27:02.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:02.997" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.077" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":117737865216},"containers":4,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20230719 07:27:02.995" endtime="20230719 07:27:03.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.078" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":117737865216},"containers":4,"missingContainers":0,"openContainers":4,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230719 07:27:03.077" endtime="20230719 07:27:03.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.078" endtime="20230719 07:27:03.079"/>
</kw>
<status status="PASS" starttime="20230719 07:27:02.994" endtime="20230719 07:27:03.079"/>
</kw>
<msg timestamp="20230719 07:27:03.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:02.994" endtime="20230719 07:27:03.079"/>
</kw>
<msg timestamp="20230719 07:27:03.080" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":59392,"remaining":117737865216},"containers":4,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20230719 07:27:02.993" endtime="20230719 07:27:03.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.080" endtime="20230719 07:27:03.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.081" endtime="20230719 07:27:03.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.082" endtime="20230719 07:27:03.082"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.088" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.122" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1689751547512,"lastSeenTime":1689751547512,"stat...</msg>
<status status="PASS" starttime="20230719 07:27:03.085" endtime="20230719 07:27:03.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.124" level="INFO">[{"containerId":1,"datanodeUuid":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1689751547512,"lastSeenTime":1689751547512,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"55dc9e79-4c6c-465e-aed8-6578a7e078e3","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1689751547451,"lastSeenTime":1689751547451,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"01476878-fe8f-4f93-b593-a75f273b634e","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1689751547528,"lastSeenTime":1689751547528,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230719 07:27:03.123" endtime="20230719 07:27:03.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.124" endtime="20230719 07:27:03.125"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.084" endtime="20230719 07:27:03.125"/>
</kw>
<msg timestamp="20230719 07:27:03.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.083" endtime="20230719 07:27:03.125"/>
</kw>
<msg timestamp="20230719 07:27:03.126" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"c4aa62ec-86a8-4adb-9eba-fa4fe7fcc99d","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1689751547512,"lastSeenTime":1689751547512,"stat...</msg>
<status status="PASS" starttime="20230719 07:27:03.083" endtime="20230719 07:27:03.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.126" endtime="20230719 07:27:03.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:02.858" endtime="20230719 07:27:03.127"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.129" endtime="20230719 07:27:03.129"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.139" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.168" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230719 07:27:03.136" endtime="20230719 07:27:03.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.169" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.a0dcc6a4.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.169d2276.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.b03bfeb4.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.e03e2f5a.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.168" endtime="20230719 07:27:03.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.170" endtime="20230719 07:27:03.170"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.135" endtime="20230719 07:27:03.170"/>
</kw>
<msg timestamp="20230719 07:27:03.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.135" endtime="20230719 07:27:03.171"/>
</kw>
<msg timestamp="20230719 07:27:03.171" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230719 07:27:03.129" endtime="20230719 07:27:03.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.172" endtime="20230719 07:27:03.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:03.128" endtime="20230719 07:27:03.173"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.181" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.189" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.178" endtime="20230719 07:27:03.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.191" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.190" endtime="20230719 07:27:03.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.191" endtime="20230719 07:27:03.193"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.177" endtime="20230719 07:27:03.193"/>
</kw>
<msg timestamp="20230719 07:27:03.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.176" endtime="20230719 07:27:03.193"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.175" endtime="20230719 07:27:03.193"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.199" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.213" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.197" endtime="20230719 07:27:03.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.214" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.214" endtime="20230719 07:27:03.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.215" endtime="20230719 07:27:03.220"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.196" endtime="20230719 07:27:03.220"/>
</kw>
<msg timestamp="20230719 07:27:03.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.195" endtime="20230719 07:27:03.220"/>
</kw>
<msg timestamp="20230719 07:27:03.220" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.195" endtime="20230719 07:27:03.221"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.221" endtime="20230719 07:27:03.221"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.221" endtime="20230719 07:27:03.221"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.222" endtime="20230719 07:27:03.225"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.222" endtime="20230719 07:27:03.225"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.221" endtime="20230719 07:27:03.225"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.194" endtime="20230719 07:27:03.226"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.227" endtime="20230719 07:27:03.227"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.226" endtime="20230719 07:27:03.227"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.233" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.252" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.230" endtime="20230719 07:27:03.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.255" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.254" endtime="20230719 07:27:03.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.255" endtime="20230719 07:27:03.258"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.229" endtime="20230719 07:27:03.258"/>
</kw>
<msg timestamp="20230719 07:27:03.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.229" endtime="20230719 07:27:03.259"/>
</kw>
<msg timestamp="20230719 07:27:03.259" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.228" endtime="20230719 07:27:03.259"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.260" endtime="20230719 07:27:03.260"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.259" endtime="20230719 07:27:03.260"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.260" endtime="20230719 07:27:03.261"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.260" endtime="20230719 07:27:03.261"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.259" endtime="20230719 07:27:03.261"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.227" endtime="20230719 07:27:03.261"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:03.174" endtime="20230719 07:27:03.261"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.272" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.279" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.269" endtime="20230719 07:27:03.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.280" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.279" endtime="20230719 07:27:03.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.280" endtime="20230719 07:27:03.281"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.268" endtime="20230719 07:27:03.281"/>
</kw>
<msg timestamp="20230719 07:27:03.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.268" endtime="20230719 07:27:03.282"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.266" endtime="20230719 07:27:03.282"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.288" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.308" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.285" endtime="20230719 07:27:03.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.310" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.309" endtime="20230719 07:27:03.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.310" endtime="20230719 07:27:03.311"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.285" endtime="20230719 07:27:03.311"/>
</kw>
<msg timestamp="20230719 07:27:03.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.284" endtime="20230719 07:27:03.311"/>
</kw>
<msg timestamp="20230719 07:27:03.311" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.283" endtime="20230719 07:27:03.312"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.312" endtime="20230719 07:27:03.313"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.312" endtime="20230719 07:27:03.313"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.313" endtime="20230719 07:27:03.314"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.313" endtime="20230719 07:27:03.314"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.312" endtime="20230719 07:27:03.314"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.282" endtime="20230719 07:27:03.314"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.315" endtime="20230719 07:27:03.317"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.314" endtime="20230719 07:27:03.317"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.322" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.358" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.319" endtime="20230719 07:27:03.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.359" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.358" endtime="20230719 07:27:03.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.359" endtime="20230719 07:27:03.360"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.319" endtime="20230719 07:27:03.360"/>
</kw>
<msg timestamp="20230719 07:27:03.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.318" endtime="20230719 07:27:03.360"/>
</kw>
<msg timestamp="20230719 07:27:03.361" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.318" endtime="20230719 07:27:03.361"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.363" endtime="20230719 07:27:03.363"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.363" endtime="20230719 07:27:03.363"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.364" endtime="20230719 07:27:03.364"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.364" endtime="20230719 07:27:03.364"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.362" endtime="20230719 07:27:03.365"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.317" endtime="20230719 07:27:03.365"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.366" endtime="20230719 07:27:03.366"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.365" endtime="20230719 07:27:03.366"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.374" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.401" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.371" endtime="20230719 07:27:03.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.404" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.402" endtime="20230719 07:27:03.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.404" endtime="20230719 07:27:03.405"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.370" endtime="20230719 07:27:03.405"/>
</kw>
<msg timestamp="20230719 07:27:03.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.369" endtime="20230719 07:27:03.406"/>
</kw>
<msg timestamp="20230719 07:27:03.406" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.367" endtime="20230719 07:27:03.406"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.407" endtime="20230719 07:27:03.407"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.406" endtime="20230719 07:27:03.408"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.408" endtime="20230719 07:27:03.408"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.408" endtime="20230719 07:27:03.408"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.406" endtime="20230719 07:27:03.409"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.366" endtime="20230719 07:27:03.409"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.410" endtime="20230719 07:27:03.410"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.409" endtime="20230719 07:27:03.410"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.419" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.445" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.416" endtime="20230719 07:27:03.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.447" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.446" endtime="20230719 07:27:03.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.452" endtime="20230719 07:27:03.453"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.415" endtime="20230719 07:27:03.453"/>
</kw>
<msg timestamp="20230719 07:27:03.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.412" endtime="20230719 07:27:03.454"/>
</kw>
<msg timestamp="20230719 07:27:03.454" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.411" endtime="20230719 07:27:03.454"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.455" endtime="20230719 07:27:03.455"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.454" endtime="20230719 07:27:03.455"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.456" endtime="20230719 07:27:03.456"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.455" endtime="20230719 07:27:03.456"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.454" endtime="20230719 07:27:03.456"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.410" endtime="20230719 07:27:03.457"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:03.265" endtime="20230719 07:27:03.457"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.470" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.482" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.467" endtime="20230719 07:27:03.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.485" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.483" endtime="20230719 07:27:03.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.486" endtime="20230719 07:27:03.486"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.466" endtime="20230719 07:27:03.488"/>
</kw>
<msg timestamp="20230719 07:27:03.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.465" endtime="20230719 07:27:03.488"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.464" endtime="20230719 07:27:03.488"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.502" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.576" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.492" endtime="20230719 07:27:03.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.578" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.577" endtime="20230719 07:27:03.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.578" endtime="20230719 07:27:03.579"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.491" endtime="20230719 07:27:03.579"/>
</kw>
<msg timestamp="20230719 07:27:03.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.490" endtime="20230719 07:27:03.580"/>
</kw>
<msg timestamp="20230719 07:27:03.580" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.490" endtime="20230719 07:27:03.580"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.581" endtime="20230719 07:27:03.581"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.580" endtime="20230719 07:27:03.581"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.581" endtime="20230719 07:27:03.582"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.581" endtime="20230719 07:27:03.582"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.580" endtime="20230719 07:27:03.582"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.489" endtime="20230719 07:27:03.582"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.583" endtime="20230719 07:27:03.583"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.582" endtime="20230719 07:27:03.583"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.591" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.610" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.587" endtime="20230719 07:27:03.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.611" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.611" endtime="20230719 07:27:03.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.612" endtime="20230719 07:27:03.614"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.586" endtime="20230719 07:27:03.614"/>
</kw>
<msg timestamp="20230719 07:27:03.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.586" endtime="20230719 07:27:03.614"/>
</kw>
<msg timestamp="20230719 07:27:03.615" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.584" endtime="20230719 07:27:03.615"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.616" endtime="20230719 07:27:03.616"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.615" endtime="20230719 07:27:03.616"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.616" endtime="20230719 07:27:03.616"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.616" endtime="20230719 07:27:03.617"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.615" endtime="20230719 07:27:03.617"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.584" endtime="20230719 07:27:03.624"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.624" endtime="20230719 07:27:03.625"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.624" endtime="20230719 07:27:03.625"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.642" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.676" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.632" endtime="20230719 07:27:03.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.677" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.676" endtime="20230719 07:27:03.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.678" endtime="20230719 07:27:03.679"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.631" endtime="20230719 07:27:03.679"/>
</kw>
<msg timestamp="20230719 07:27:03.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.630" endtime="20230719 07:27:03.680"/>
</kw>
<msg timestamp="20230719 07:27:03.680" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.629" endtime="20230719 07:27:03.680"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.681" endtime="20230719 07:27:03.681"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.680" endtime="20230719 07:27:03.681"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.681" endtime="20230719 07:27:03.682"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.681" endtime="20230719 07:27:03.682"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.680" endtime="20230719 07:27:03.682"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.629" endtime="20230719 07:27:03.682"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.683" endtime="20230719 07:27:03.684"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.683" endtime="20230719 07:27:03.684"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.695" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.718" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.690" endtime="20230719 07:27:03.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.720" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.719" endtime="20230719 07:27:03.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.721" endtime="20230719 07:27:03.723"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.686" endtime="20230719 07:27:03.723"/>
</kw>
<msg timestamp="20230719 07:27:03.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.686" endtime="20230719 07:27:03.723"/>
</kw>
<msg timestamp="20230719 07:27:03.726" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.685" endtime="20230719 07:27:03.726"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.727" endtime="20230719 07:27:03.727"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.727" endtime="20230719 07:27:03.727"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.728" endtime="20230719 07:27:03.728"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.727" endtime="20230719 07:27:03.728"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.726" endtime="20230719 07:27:03.728"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.684" endtime="20230719 07:27:03.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:03.459" endtime="20230719 07:27:03.729"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.737" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.741" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.733" endtime="20230719 07:27:03.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.742" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.741" endtime="20230719 07:27:03.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.742" endtime="20230719 07:27:03.743"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.732" endtime="20230719 07:27:03.743"/>
</kw>
<msg timestamp="20230719 07:27:03.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.732" endtime="20230719 07:27:03.744"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.731" endtime="20230719 07:27:03.744"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.749" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.788" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.747" endtime="20230719 07:27:03.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.789" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.789" endtime="20230719 07:27:03.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.790" endtime="20230719 07:27:03.791"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.746" endtime="20230719 07:27:03.791"/>
</kw>
<msg timestamp="20230719 07:27:03.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.745" endtime="20230719 07:27:03.791"/>
</kw>
<msg timestamp="20230719 07:27:03.792" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.745" endtime="20230719 07:27:03.792"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.792" endtime="20230719 07:27:03.793"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.792" endtime="20230719 07:27:03.793"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.793" endtime="20230719 07:27:03.793"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.793" endtime="20230719 07:27:03.793"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.792" endtime="20230719 07:27:03.793"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.744" endtime="20230719 07:27:03.794"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.797" endtime="20230719 07:27:03.798"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.794" endtime="20230719 07:27:03.798"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.806" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.836" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.803" endtime="20230719 07:27:03.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.839" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:03.837" endtime="20230719 07:27:03.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.839" endtime="20230719 07:27:03.840"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.802" endtime="20230719 07:27:03.840"/>
</kw>
<msg timestamp="20230719 07:27:03.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.802" endtime="20230719 07:27:03.840"/>
</kw>
<msg timestamp="20230719 07:27:03.840" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:03.800" endtime="20230719 07:27:03.840"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:03.841" endtime="20230719 07:27:03.841"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:03.841" endtime="20230719 07:27:03.841"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:03.842" endtime="20230719 07:27:03.842"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.841" endtime="20230719 07:27:03.842"/>
</branch>
<status status="PASS" starttime="20230719 07:27:03.841" endtime="20230719 07:27:03.842"/>
</if>
<status status="PASS" starttime="20230719 07:27:03.798" endtime="20230719 07:27:03.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:03.730" endtime="20230719 07:27:03.843"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230719 07:26:28.869" endtime="20230719 07:27:03.845"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.867" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:03.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:03.872" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.865" endtime="20230719 07:27:03.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:03.873" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:03.872" endtime="20230719 07:27:03.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:03.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:03.874" endtime="20230719 07:27:03.874"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.864" endtime="20230719 07:27:03.874"/>
</kw>
<msg timestamp="20230719 07:27:03.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.863" endtime="20230719 07:27:03.875"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.863" endtime="20230719 07:27:03.875"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:03.876" endtime="20230719 07:27:03.876"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.875" endtime="20230719 07:27:03.877"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230719 07:27:03.879" level="INFO">${random} = jjjix</msg>
<status status="PASS" starttime="20230719 07:27:03.878" endtime="20230719 07:27:03.879"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230719 07:27:03.880" level="INFO">${VOLUME} = vol-jjjix</msg>
<status status="PASS" starttime="20230719 07:27:03.879" endtime="20230719 07:27:03.880"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:03.885" level="INFO">Running command 'ozone sh volume create /vol-jjjix 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:09.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:09.045" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:03.883" endtime="20230719 07:27:09.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:09.047" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:09.046" endtime="20230719 07:27:09.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:09.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:09.047" endtime="20230719 07:27:09.048"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.882" endtime="20230719 07:27:09.048"/>
</kw>
<msg timestamp="20230719 07:27:09.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:03.882" endtime="20230719 07:27:09.049"/>
</kw>
<msg timestamp="20230719 07:27:09.049" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:03.880" endtime="20230719 07:27:09.049"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:09.049" endtime="20230719 07:27:09.050"/>
</kw>
<status status="PASS" starttime="20230719 07:27:03.877" endtime="20230719 07:27:09.050"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:03.862" endtime="20230719 07:27:09.050"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230719 07:27:09.053" level="INFO">${random} = rrltg</msg>
<status status="PASS" starttime="20230719 07:27:09.053" endtime="20230719 07:27:09.053"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230719 07:27:09.054" level="INFO">${BUCKET} = buc-rrltg</msg>
<status status="PASS" starttime="20230719 07:27:09.053" endtime="20230719 07:27:09.054"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:09.058" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-jjjix/buc-rrltg 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:14.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:14.293" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:09.056" endtime="20230719 07:27:14.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:14.295" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:14.294" endtime="20230719 07:27:14.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:14.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:14.295" endtime="20230719 07:27:14.296"/>
</kw>
<status status="PASS" starttime="20230719 07:27:09.055" endtime="20230719 07:27:14.296"/>
</kw>
<msg timestamp="20230719 07:27:14.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:09.055" endtime="20230719 07:27:14.297"/>
</kw>
<msg timestamp="20230719 07:27:14.297" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:09.054" endtime="20230719 07:27:14.297"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:14.297" endtime="20230719 07:27:14.298"/>
</kw>
<status status="PASS" starttime="20230719 07:27:09.052" endtime="20230719 07:27:14.298"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:09.051" endtime="20230719 07:27:14.298"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:14.305" level="INFO">Running command 'ozone sh key put /vol-jjjix/buc-rrltg/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:22.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:22.414" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:14.302" endtime="20230719 07:27:22.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:22.417" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:22.415" endtime="20230719 07:27:22.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:22.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:22.417" endtime="20230719 07:27:22.418"/>
</kw>
<status status="PASS" starttime="20230719 07:27:14.302" endtime="20230719 07:27:22.419"/>
</kw>
<msg timestamp="20230719 07:27:22.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:14.301" endtime="20230719 07:27:22.420"/>
</kw>
<msg timestamp="20230719 07:27:22.420" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:14.300" endtime="20230719 07:27:22.420"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:22.420" endtime="20230719 07:27:22.422"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:22.427" level="INFO">Running command 'ozone sh key put /vol-jjjix/buc-rrltg/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:30.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:30.846" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:22.424" endtime="20230719 07:27:30.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:30.847" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:30.846" endtime="20230719 07:27:30.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:30.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:30.848" endtime="20230719 07:27:30.849"/>
</kw>
<status status="PASS" starttime="20230719 07:27:22.424" endtime="20230719 07:27:30.849"/>
</kw>
<msg timestamp="20230719 07:27:30.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:22.423" endtime="20230719 07:27:30.849"/>
</kw>
<msg timestamp="20230719 07:27:30.849" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:27:22.422" endtime="20230719 07:27:30.849"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:30.850" endtime="20230719 07:27:30.850"/>
</kw>
<status status="PASS" starttime="20230719 07:27:14.300" endtime="20230719 07:27:30.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:14.299" endtime="20230719 07:27:30.851"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:30.858" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:30.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:30.862" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:30.856" endtime="20230719 07:27:30.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:30.864" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:30.863" endtime="20230719 07:27:30.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:30.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:30.864" endtime="20230719 07:27:30.865"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.855" endtime="20230719 07:27:30.865"/>
</kw>
<msg timestamp="20230719 07:27:30.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:30.854" endtime="20230719 07:27:30.865"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.854" endtime="20230719 07:27:30.865"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:30.870" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:30.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:30.925" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:30.868" endtime="20230719 07:27:30.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:30.926" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:30.926" endtime="20230719 07:27:30.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:30.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:30.927" endtime="20230719 07:27:30.927"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.867" endtime="20230719 07:27:30.928"/>
</kw>
<msg timestamp="20230719 07:27:30.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:30.867" endtime="20230719 07:27:30.928"/>
</kw>
<msg timestamp="20230719 07:27:30.928" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:30.866" endtime="20230719 07:27:30.928"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:30.929" endtime="20230719 07:27:30.929"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:30.929" endtime="20230719 07:27:30.929"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:30.929" endtime="20230719 07:27:30.931"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.929" endtime="20230719 07:27:30.931"/>
</branch>
<status status="PASS" starttime="20230719 07:27:30.928" endtime="20230719 07:27:30.931"/>
</if>
<status status="PASS" starttime="20230719 07:27:30.866" endtime="20230719 07:27:30.931"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:30.932" endtime="20230719 07:27:30.933"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.932" endtime="20230719 07:27:30.933"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:30.939" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:30.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:30.957" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:30.935" endtime="20230719 07:27:30.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:30.959" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:30.959" endtime="20230719 07:27:30.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:30.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:30.960" endtime="20230719 07:27:30.961"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.935" endtime="20230719 07:27:30.961"/>
</kw>
<msg timestamp="20230719 07:27:30.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:30.934" endtime="20230719 07:27:30.961"/>
</kw>
<msg timestamp="20230719 07:27:30.962" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:30.934" endtime="20230719 07:27:30.962"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:30.963" endtime="20230719 07:27:30.963"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:30.962" endtime="20230719 07:27:30.963"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:30.963" endtime="20230719 07:27:30.964"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.963" endtime="20230719 07:27:30.964"/>
</branch>
<status status="PASS" starttime="20230719 07:27:30.962" endtime="20230719 07:27:30.964"/>
</if>
<status status="PASS" starttime="20230719 07:27:30.933" endtime="20230719 07:27:30.964"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:30.965" endtime="20230719 07:27:30.965"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.964" endtime="20230719 07:27:30.965"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:30.970" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:30.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:30.989" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:30.968" endtime="20230719 07:27:30.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:30.990" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:30.989" endtime="20230719 07:27:30.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:30.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:30.990" endtime="20230719 07:27:30.991"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.967" endtime="20230719 07:27:30.991"/>
</kw>
<msg timestamp="20230719 07:27:30.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:30.967" endtime="20230719 07:27:30.992"/>
</kw>
<msg timestamp="20230719 07:27:30.992" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:30.966" endtime="20230719 07:27:30.992"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:30.993" endtime="20230719 07:27:30.993"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:30.993" endtime="20230719 07:27:30.993"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:30.994" endtime="20230719 07:27:30.994"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.994" endtime="20230719 07:27:30.994"/>
</branch>
<status status="PASS" starttime="20230719 07:27:30.992" endtime="20230719 07:27:30.994"/>
</if>
<status status="PASS" starttime="20230719 07:27:30.966" endtime="20230719 07:27:30.995"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:30.995" endtime="20230719 07:27:30.996"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.995" endtime="20230719 07:27:30.996"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.014" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.031" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:30.998" endtime="20230719 07:27:31.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.033" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.032" endtime="20230719 07:27:31.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.033" endtime="20230719 07:27:31.034"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.998" endtime="20230719 07:27:31.034"/>
</kw>
<msg timestamp="20230719 07:27:31.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:30.997" endtime="20230719 07:27:31.035"/>
</kw>
<msg timestamp="20230719 07:27:31.035" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:30.997" endtime="20230719 07:27:31.035"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.035" endtime="20230719 07:27:31.036"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.035" endtime="20230719 07:27:31.036"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.036" endtime="20230719 07:27:31.036"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.036" endtime="20230719 07:27:31.036"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.035" endtime="20230719 07:27:31.036"/>
</if>
<status status="PASS" starttime="20230719 07:27:30.996" endtime="20230719 07:27:31.037"/>
</kw>
<status status="PASS" starttime="20230719 07:27:30.853" endtime="20230719 07:27:31.037"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:30.852" endtime="20230719 07:27:31.037"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.044" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.048" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:31.041" endtime="20230719 07:27:31.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.049" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:31.048" endtime="20230719 07:27:31.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.049" endtime="20230719 07:27:31.050"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.041" endtime="20230719 07:27:31.050"/>
</kw>
<msg timestamp="20230719 07:27:31.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.040" endtime="20230719 07:27:31.051"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.040" endtime="20230719 07:27:31.051"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.058" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.091" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.054" endtime="20230719 07:27:31.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.092" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.091" endtime="20230719 07:27:31.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.093" endtime="20230719 07:27:31.095"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.053" endtime="20230719 07:27:31.096"/>
</kw>
<msg timestamp="20230719 07:27:31.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.053" endtime="20230719 07:27:31.096"/>
</kw>
<msg timestamp="20230719 07:27:31.096" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.052" endtime="20230719 07:27:31.096"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.097" endtime="20230719 07:27:31.097"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.096" endtime="20230719 07:27:31.097"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.097" endtime="20230719 07:27:31.098"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.097" endtime="20230719 07:27:31.098"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.096" endtime="20230719 07:27:31.098"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.051" endtime="20230719 07:27:31.099"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:31.099" endtime="20230719 07:27:31.100"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.099" endtime="20230719 07:27:31.100"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.105" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.123" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.102" endtime="20230719 07:27:31.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.125" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.124" endtime="20230719 07:27:31.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.125" endtime="20230719 07:27:31.126"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.102" endtime="20230719 07:27:31.126"/>
</kw>
<msg timestamp="20230719 07:27:31.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.101" endtime="20230719 07:27:31.126"/>
</kw>
<msg timestamp="20230719 07:27:31.127" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.100" endtime="20230719 07:27:31.127"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.127" endtime="20230719 07:27:31.128"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.127" endtime="20230719 07:27:31.128"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.128" endtime="20230719 07:27:31.128"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.128" endtime="20230719 07:27:31.128"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.127" endtime="20230719 07:27:31.128"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.100" endtime="20230719 07:27:31.129"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:31.129" endtime="20230719 07:27:31.130"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.129" endtime="20230719 07:27:31.130"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.136" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.154" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.133" endtime="20230719 07:27:31.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.155" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.154" endtime="20230719 07:27:31.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.155" endtime="20230719 07:27:31.156"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.132" endtime="20230719 07:27:31.156"/>
</kw>
<msg timestamp="20230719 07:27:31.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.131" endtime="20230719 07:27:31.156"/>
</kw>
<msg timestamp="20230719 07:27:31.157" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.131" endtime="20230719 07:27:31.157"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.157" endtime="20230719 07:27:31.157"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.157" endtime="20230719 07:27:31.157"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.158" endtime="20230719 07:27:31.159"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.157" endtime="20230719 07:27:31.159"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.157" endtime="20230719 07:27:31.159"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.130" endtime="20230719 07:27:31.159"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:31.160" endtime="20230719 07:27:31.160"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.159" endtime="20230719 07:27:31.160"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.166" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.188" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.163" endtime="20230719 07:27:31.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.189" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.189" endtime="20230719 07:27:31.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.190" endtime="20230719 07:27:31.190"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.162" endtime="20230719 07:27:31.191"/>
</kw>
<msg timestamp="20230719 07:27:31.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.162" endtime="20230719 07:27:31.191"/>
</kw>
<msg timestamp="20230719 07:27:31.191" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.161" endtime="20230719 07:27:31.191"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.192" endtime="20230719 07:27:31.192"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.191" endtime="20230719 07:27:31.192"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.192" endtime="20230719 07:27:31.193"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.192" endtime="20230719 07:27:31.193"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.191" endtime="20230719 07:27:31.193"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.161" endtime="20230719 07:27:31.193"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.039" endtime="20230719 07:27:31.193"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:31.038" endtime="20230719 07:27:31.193"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.200" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.204" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:31.197" endtime="20230719 07:27:31.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.205" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:31.204" endtime="20230719 07:27:31.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.205" endtime="20230719 07:27:31.206"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.197" endtime="20230719 07:27:31.206"/>
</kw>
<msg timestamp="20230719 07:27:31.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.196" endtime="20230719 07:27:31.206"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.196" endtime="20230719 07:27:31.207"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.212" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.240" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.209" endtime="20230719 07:27:31.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.241" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.241" endtime="20230719 07:27:31.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.242" endtime="20230719 07:27:31.242"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.209" endtime="20230719 07:27:31.242"/>
</kw>
<msg timestamp="20230719 07:27:31.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.208" endtime="20230719 07:27:31.243"/>
</kw>
<msg timestamp="20230719 07:27:31.243" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.208" endtime="20230719 07:27:31.243"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.244" endtime="20230719 07:27:31.244"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.244" endtime="20230719 07:27:31.244"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.245" endtime="20230719 07:27:31.245"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.244" endtime="20230719 07:27:31.245"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.243" endtime="20230719 07:27:31.245"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.207" endtime="20230719 07:27:31.245"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:31.246" endtime="20230719 07:27:31.247"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.246" endtime="20230719 07:27:31.247"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.253" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.277" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.250" endtime="20230719 07:27:31.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.279" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.277" endtime="20230719 07:27:31.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.279" endtime="20230719 07:27:31.280"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.249" endtime="20230719 07:27:31.280"/>
</kw>
<msg timestamp="20230719 07:27:31.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.249" endtime="20230719 07:27:31.280"/>
</kw>
<msg timestamp="20230719 07:27:31.281" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.248" endtime="20230719 07:27:31.281"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.281" endtime="20230719 07:27:31.282"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.281" endtime="20230719 07:27:31.282"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.282" endtime="20230719 07:27:31.283"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.282" endtime="20230719 07:27:31.283"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.281" endtime="20230719 07:27:31.283"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.247" endtime="20230719 07:27:31.283"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:31.284" endtime="20230719 07:27:31.285"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.284" endtime="20230719 07:27:31.285"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.290" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.313" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.288" endtime="20230719 07:27:31.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.315" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.314" endtime="20230719 07:27:31.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.316" endtime="20230719 07:27:31.316"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.287" endtime="20230719 07:27:31.317"/>
</kw>
<msg timestamp="20230719 07:27:31.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.286" endtime="20230719 07:27:31.317"/>
</kw>
<msg timestamp="20230719 07:27:31.317" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.286" endtime="20230719 07:27:31.317"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.318" endtime="20230719 07:27:31.318"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.318" endtime="20230719 07:27:31.318"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.318" endtime="20230719 07:27:31.319"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.318" endtime="20230719 07:27:31.319"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.317" endtime="20230719 07:27:31.319"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.285" endtime="20230719 07:27:31.319"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:31.320" endtime="20230719 07:27:31.321"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.319" endtime="20230719 07:27:31.321"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.327" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.355" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.324" endtime="20230719 07:27:31.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.356" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.355" endtime="20230719 07:27:31.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.357" endtime="20230719 07:27:31.357"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.324" endtime="20230719 07:27:31.357"/>
</kw>
<msg timestamp="20230719 07:27:31.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.323" endtime="20230719 07:27:31.358"/>
</kw>
<msg timestamp="20230719 07:27:31.358" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.322" endtime="20230719 07:27:31.358"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.359" endtime="20230719 07:27:31.359"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.358" endtime="20230719 07:27:31.359"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.359" endtime="20230719 07:27:31.360"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.359" endtime="20230719 07:27:31.360"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.358" endtime="20230719 07:27:31.360"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.322" endtime="20230719 07:27:31.361"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.195" endtime="20230719 07:27:31.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:31.194" endtime="20230719 07:27:31.361"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.369" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.373" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:31.366" endtime="20230719 07:27:31.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.375" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230719 07:27:31.374" endtime="20230719 07:27:31.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.376" endtime="20230719 07:27:31.377"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.365" endtime="20230719 07:27:31.377"/>
</kw>
<msg timestamp="20230719 07:27:31.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.365" endtime="20230719 07:27:31.377"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.364" endtime="20230719 07:27:31.377"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.382" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.410" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.380" endtime="20230719 07:27:31.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.411" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.410" endtime="20230719 07:27:31.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.412" endtime="20230719 07:27:31.412"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.379" endtime="20230719 07:27:31.413"/>
</kw>
<msg timestamp="20230719 07:27:31.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.379" endtime="20230719 07:27:31.413"/>
</kw>
<msg timestamp="20230719 07:27:31.413" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.378" endtime="20230719 07:27:31.413"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.414" endtime="20230719 07:27:31.414"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.413" endtime="20230719 07:27:31.414"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.414" endtime="20230719 07:27:31.415"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.414" endtime="20230719 07:27:31.415"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.413" endtime="20230719 07:27:31.415"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.378" endtime="20230719 07:27:31.415"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:31.416" endtime="20230719 07:27:31.417"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.415" endtime="20230719 07:27:31.417"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.422" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.438" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.419" endtime="20230719 07:27:31.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.440" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.439" endtime="20230719 07:27:31.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.440" endtime="20230719 07:27:31.441"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.419" endtime="20230719 07:27:31.441"/>
</kw>
<msg timestamp="20230719 07:27:31.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.418" endtime="20230719 07:27:31.441"/>
</kw>
<msg timestamp="20230719 07:27:31.442" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.418" endtime="20230719 07:27:31.442"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.442" endtime="20230719 07:27:31.442"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.442" endtime="20230719 07:27:31.442"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.443" endtime="20230719 07:27:31.443"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.443" endtime="20230719 07:27:31.443"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.442" endtime="20230719 07:27:31.444"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.417" endtime="20230719 07:27:31.444"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:31.444" endtime="20230719 07:27:31.445"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.444" endtime="20230719 07:27:31.445"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.450" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.473" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.448" endtime="20230719 07:27:31.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.475" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.474" endtime="20230719 07:27:31.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.475" endtime="20230719 07:27:31.476"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.448" endtime="20230719 07:27:31.476"/>
</kw>
<msg timestamp="20230719 07:27:31.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.447" endtime="20230719 07:27:31.477"/>
</kw>
<msg timestamp="20230719 07:27:31.477" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.446" endtime="20230719 07:27:31.477"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.478" endtime="20230719 07:27:31.478"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.478" endtime="20230719 07:27:31.478"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.478" endtime="20230719 07:27:31.479"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.478" endtime="20230719 07:27:31.479"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.478" endtime="20230719 07:27:31.479"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.445" endtime="20230719 07:27:31.479"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:27:31.480" endtime="20230719 07:27:31.481"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.479" endtime="20230719 07:27:31.481"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.486" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.502" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.483" endtime="20230719 07:27:31.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.504" level="INFO">200</msg>
<status status="PASS" starttime="20230719 07:27:31.503" endtime="20230719 07:27:31.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.504" endtime="20230719 07:27:31.505"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.482" endtime="20230719 07:27:31.505"/>
</kw>
<msg timestamp="20230719 07:27:31.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.482" endtime="20230719 07:27:31.506"/>
</kw>
<msg timestamp="20230719 07:27:31.506" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230719 07:27:31.481" endtime="20230719 07:27:31.506"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.506" endtime="20230719 07:27:31.507"/>
</kw>
<status status="NOT RUN" starttime="20230719 07:27:31.506" endtime="20230719 07:27:31.507"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.507" endtime="20230719 07:27:31.508"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.507" endtime="20230719 07:27:31.508"/>
</branch>
<status status="PASS" starttime="20230719 07:27:31.506" endtime="20230719 07:27:31.508"/>
</if>
<status status="PASS" starttime="20230719 07:27:31.481" endtime="20230719 07:27:31.508"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.363" endtime="20230719 07:27:31.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:31.362" endtime="20230719 07:27:31.508"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.515" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.537" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230719 07:27:31.513" endtime="20230719 07:27:31.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.539" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:27:31.538" endtime="20230719 07:27:31.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.539" endtime="20230719 07:27:31.541"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.513" endtime="20230719 07:27:31.541"/>
</kw>
<msg timestamp="20230719 07:27:31.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.512" endtime="20230719 07:27:31.541"/>
</kw>
<msg timestamp="20230719 07:27:31.541" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230719 07:27:31.512" endtime="20230719 07:27:31.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.541" endtime="20230719 07:27:31.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:27:31.542" endtime="20230719 07:27:31.543"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.511" endtime="20230719 07:27:31.543"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.511" endtime="20230719 07:27:31.543"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.510" endtime="20230719 07:27:31.543"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:31.509" endtime="20230719 07:27:31.543"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:31.551" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jjjix 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:31.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:31.566" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230719 07:27:31.548" endtime="20230719 07:27:31.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:31.567" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230719 07:27:31.566" endtime="20230719 07:27:31.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:31.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:31.567" endtime="20230719 07:27:31.568"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.547" endtime="20230719 07:27:31.568"/>
</kw>
<msg timestamp="20230719 07:27:31.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:31.547" endtime="20230719 07:27:31.569"/>
</kw>
<msg timestamp="20230719 07:27:31.569" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230719 07:27:31.546" endtime="20230719 07:27:31.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230719 07:27:31.570" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230719 07:27:31.569" endtime="20230719 07:27:31.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:31.570" endtime="20230719 07:27:31.570"/>
</kw>
<status status="FAIL" starttime="20230719 07:27:31.546" endtime="20230719 07:27:31.570"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:41.578" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jjjix 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:41.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:41.594" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230719 07:27:41.574" endtime="20230719 07:27:41.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:41.596" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230719 07:27:41.595" endtime="20230719 07:27:41.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:41.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:41.596" endtime="20230719 07:27:41.597"/>
</kw>
<status status="PASS" starttime="20230719 07:27:41.573" endtime="20230719 07:27:41.597"/>
</kw>
<msg timestamp="20230719 07:27:41.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:41.573" endtime="20230719 07:27:41.597"/>
</kw>
<msg timestamp="20230719 07:27:41.597" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230719 07:27:41.572" endtime="20230719 07:27:41.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230719 07:27:41.598" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230719 07:27:41.598" endtime="20230719 07:27:41.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:41.599" endtime="20230719 07:27:41.599"/>
</kw>
<status status="FAIL" starttime="20230719 07:27:41.571" endtime="20230719 07:27:41.599"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:27:51.607" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jjjix 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:27:51.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:27:51.627" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230719 07:27:51.604" endtime="20230719 07:27:51.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:27:51.629" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230719 07:27:51.628" endtime="20230719 07:27:51.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:27:51.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:27:51.629" endtime="20230719 07:27:51.630"/>
</kw>
<status status="PASS" starttime="20230719 07:27:51.604" endtime="20230719 07:27:51.630"/>
</kw>
<msg timestamp="20230719 07:27:51.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:27:51.603" endtime="20230719 07:27:51.631"/>
</kw>
<msg timestamp="20230719 07:27:51.631" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230719 07:27:51.603" endtime="20230719 07:27:51.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230719 07:27:51.632" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230719 07:27:51.631" endtime="20230719 07:27:51.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230719 07:27:51.632" endtime="20230719 07:27:51.632"/>
</kw>
<status status="FAIL" starttime="20230719 07:27:51.602" endtime="20230719 07:27:51.633"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:01.639" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jjjix 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:01.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:01.673" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-jjjix","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230719 07:28:01.636" endtime="20230719 07:28:01.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:01.675" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-jjjix","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1689751628817,"modificationTime":1689751628817,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-jjjix"},"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:01.674" endtime="20230719 07:28:01.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:01.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:01.675" endtime="20230719 07:28:01.676"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.636" endtime="20230719 07:28:01.676"/>
</kw>
<msg timestamp="20230719 07:28:01.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:01.635" endtime="20230719 07:28:01.676"/>
</kw>
<msg timestamp="20230719 07:28:01.676" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-jjjix","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230719 07:28:01.635" endtime="20230719 07:28:01.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.677" endtime="20230719 07:28:01.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.679" endtime="20230719 07:28:01.679"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.633" endtime="20230719 07:28:01.679"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.545" endtime="20230719 07:28:01.680"/>
</kw>
<status status="PASS" starttime="20230719 07:27:31.545" endtime="20230719 07:28:01.680"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:27:31.544" endtime="20230719 07:28:01.680"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:01.690" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jjjix/buc-rrltg 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:01.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:01.726" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-rrltg","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230719 07:28:01.686" endtime="20230719 07:28:01.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:01.728" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-rrltg","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1689751634153,"modificationTime":1689751634153,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-jjjix","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:01.727" endtime="20230719 07:28:01.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:01.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:01.728" endtime="20230719 07:28:01.730"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.686" endtime="20230719 07:28:01.730"/>
</kw>
<msg timestamp="20230719 07:28:01.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:01.686" endtime="20230719 07:28:01.731"/>
</kw>
<msg timestamp="20230719 07:28:01.731" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-rrltg","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230719 07:28:01.685" endtime="20230719 07:28:01.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.731" endtime="20230719 07:28:01.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.732" endtime="20230719 07:28:01.733"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.684" endtime="20230719 07:28:01.733"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.683" endtime="20230719 07:28:01.733"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.682" endtime="20230719 07:28:01.733"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:28:01.681" endtime="20230719 07:28:01.733"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:01.744" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jjjix/buc-rrltg/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:01.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:01.851" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230719 07:28:01.740" endtime="20230719 07:28:01.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:01.853" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1689751639506,"modificationTime":1689751641987,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-jjjix","bucketName":"buc-rrltg","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationList":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":10,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":10}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":10,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":10}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":10,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":10}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:01.852" endtime="20230719 07:28:01.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:01.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:01.853" endtime="20230719 07:28:01.854"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.739" endtime="20230719 07:28:01.854"/>
</kw>
<msg timestamp="20230719 07:28:01.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:01.739" endtime="20230719 07:28:01.854"/>
</kw>
<msg timestamp="20230719 07:28:01.855" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230719 07:28:01.738" endtime="20230719 07:28:01.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.855" endtime="20230719 07:28:01.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.856" endtime="20230719 07:28:01.859"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.737" endtime="20230719 07:28:01.859"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.737" endtime="20230719 07:28:01.860"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.736" endtime="20230719 07:28:01.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:28:01.735" endtime="20230719 07:28:01.860"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:28:01.863" endtime="20230719 07:28:01.863"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:01.874" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jjjix/buc-rrltg/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:01.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:01.897" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230719 07:28:01.870" endtime="20230719 07:28:01.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:01.899" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1689751647786,"modificationTime":1689751647786,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:01.898" endtime="20230719 07:28:01.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:01.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:01.900" endtime="20230719 07:28:01.900"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.869" endtime="20230719 07:28:01.901"/>
</kw>
<msg timestamp="20230719 07:28:01.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:01.868" endtime="20230719 07:28:01.901"/>
</kw>
<msg timestamp="20230719 07:28:01.901" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230719 07:28:01.867" endtime="20230719 07:28:01.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.901" endtime="20230719 07:28:01.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.902" endtime="20230719 07:28:01.903"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.866" endtime="20230719 07:28:01.903"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.865" endtime="20230719 07:28:01.904"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.864" endtime="20230719 07:28:01.904"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.864" endtime="20230719 07:28:01.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:28:01.862" endtime="20230719 07:28:01.904"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:01.918" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-jjjix/buc-rrltg&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:01.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:01.941" level="INFO">${output} = {"status":"OK","path":"/vol-jjjix/buc-rrltg","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-jjjix/buc-rrltg/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230719 07:28:01.912" endtime="20230719 07:28:01.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:01.944" level="INFO">{"status":"OK","path":"/vol-jjjix/buc-rrltg","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-jjjix/buc-rrltg/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230719 07:28:01.941" endtime="20230719 07:28:01.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:01.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:01.945" endtime="20230719 07:28:01.945"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.911" endtime="20230719 07:28:01.946"/>
</kw>
<msg timestamp="20230719 07:28:01.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:01.911" endtime="20230719 07:28:01.946"/>
</kw>
<msg timestamp="20230719 07:28:01.946" level="INFO">${result} = {"status":"OK","path":"/vol-jjjix/buc-rrltg","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-jjjix/buc-rrltg/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230719 07:28:01.910" endtime="20230719 07:28:01.946"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.946" endtime="20230719 07:28:01.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.947" endtime="20230719 07:28:01.948"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.910" endtime="20230719 07:28:01.948"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.909" endtime="20230719 07:28:01.948"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.908" endtime="20230719 07:28:01.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:28:01.907" endtime="20230719 07:28:01.949"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:01.958" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-jjjix 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:01.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:01.974" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:01.955" endtime="20230719 07:28:01.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:01.975" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:01.975" endtime="20230719 07:28:01.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:01.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:01.976" endtime="20230719 07:28:01.976"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.954" endtime="20230719 07:28:01.977"/>
</kw>
<msg timestamp="20230719 07:28:01.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:01.954" endtime="20230719 07:28:01.977"/>
</kw>
<msg timestamp="20230719 07:28:01.977" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:01.953" endtime="20230719 07:28:01.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.977" endtime="20230719 07:28:01.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:01.978" endtime="20230719 07:28:01.978"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.952" endtime="20230719 07:28:01.979"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.951" endtime="20230719 07:28:01.979"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.950" endtime="20230719 07:28:01.979"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:28:01.949" endtime="20230719 07:28:01.979"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:01.991" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-jjjix/buc-rrltg 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:02.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:02.009" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:01.988" endtime="20230719 07:28:02.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:02.010" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:02.009" endtime="20230719 07:28:02.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:02.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:02.010" endtime="20230719 07:28:02.011"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.988" endtime="20230719 07:28:02.012"/>
</kw>
<msg timestamp="20230719 07:28:02.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:01.984" endtime="20230719 07:28:02.012"/>
</kw>
<msg timestamp="20230719 07:28:02.012" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:01.983" endtime="20230719 07:28:02.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:02.013" endtime="20230719 07:28:02.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:02.014" endtime="20230719 07:28:02.014"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.982" endtime="20230719 07:28:02.014"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.981" endtime="20230719 07:28:02.014"/>
</kw>
<status status="PASS" starttime="20230719 07:28:01.981" endtime="20230719 07:28:02.014"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:28:01.980" endtime="20230719 07:28:02.015"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:02.026" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:02.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:02.043" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:02.023" endtime="20230719 07:28:02.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:02.045" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:02.044" endtime="20230719 07:28:02.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:02.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:02.045" endtime="20230719 07:28:02.046"/>
</kw>
<status status="PASS" starttime="20230719 07:28:02.022" endtime="20230719 07:28:02.046"/>
</kw>
<msg timestamp="20230719 07:28:02.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:02.022" endtime="20230719 07:28:02.046"/>
</kw>
<msg timestamp="20230719 07:28:02.046" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230719 07:28:02.021" endtime="20230719 07:28:02.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:02.047" endtime="20230719 07:28:02.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:02.047" endtime="20230719 07:28:02.048"/>
</kw>
<status status="PASS" starttime="20230719 07:28:02.020" endtime="20230719 07:28:02.048"/>
</kw>
<status status="PASS" starttime="20230719 07:28:02.019" endtime="20230719 07:28:02.048"/>
</kw>
<status status="PASS" starttime="20230719 07:28:02.018" endtime="20230719 07:28:02.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:28:02.017" endtime="20230719 07:28:02.048"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230719 07:27:03.848" endtime="20230719 07:28:02.051"/>
</suite>
<status status="PASS" starttime="20230719 07:26:28.831" endtime="20230719 07:28:02.056"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:05.713" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:11.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:11.118" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:05.710" endtime="20230719 07:28:11.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:11.120" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:11.119" endtime="20230719 07:28:11.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:11.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:11.120" endtime="20230719 07:28:11.121"/>
</kw>
<status status="PASS" starttime="20230719 07:28:05.709" endtime="20230719 07:28:11.121"/>
</kw>
<msg timestamp="20230719 07:28:11.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:05.709" endtime="20230719 07:28:11.121"/>
</kw>
<msg timestamp="20230719 07:28:11.121" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:05.708" endtime="20230719 07:28:11.121"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:11.122" endtime="20230719 07:28:11.122"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:11.135" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:16.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:16.826" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:11.129" endtime="20230719 07:28:16.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:16.827" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:16.827" endtime="20230719 07:28:16.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:16.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:16.828" endtime="20230719 07:28:16.829"/>
</kw>
<status status="PASS" starttime="20230719 07:28:11.128" endtime="20230719 07:28:16.829"/>
</kw>
<msg timestamp="20230719 07:28:16.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:11.127" endtime="20230719 07:28:16.829"/>
</kw>
<msg timestamp="20230719 07:28:16.829" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:11.122" endtime="20230719 07:28:16.829"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:16.830" endtime="20230719 07:28:16.830"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:16.835" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:24.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:24.910" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:16.832" endtime="20230719 07:28:24.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:24.912" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:24.911" endtime="20230719 07:28:24.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:24.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:24.912" endtime="20230719 07:28:24.913"/>
</kw>
<status status="PASS" starttime="20230719 07:28:16.831" endtime="20230719 07:28:24.913"/>
</kw>
<msg timestamp="20230719 07:28:24.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:16.831" endtime="20230719 07:28:24.914"/>
</kw>
<msg timestamp="20230719 07:28:24.914" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:16.830" endtime="20230719 07:28:24.914"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:24.914" endtime="20230719 07:28:24.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:28:05.707" endtime="20230719 07:28:24.915"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230719 07:28:05.619" endtime="20230719 07:28:24.917"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230719 07:28:33.602" level="INFO">${random} = 62132</msg>
<status status="PASS" starttime="20230719 07:28:33.602" endtime="20230719 07:28:33.602"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:28:33.606" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-62132 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:28:41.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:28:41.384" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:33.604" endtime="20230719 07:28:41.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:28:41.385" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:41.384" endtime="20230719 07:28:41.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:28:41.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:28:41.385" endtime="20230719 07:28:41.386"/>
</kw>
<status status="PASS" starttime="20230719 07:28:33.603" endtime="20230719 07:28:41.386"/>
</kw>
<msg timestamp="20230719 07:28:41.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:28:33.603" endtime="20230719 07:28:41.386"/>
</kw>
<msg timestamp="20230719 07:28:41.387" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:28:33.602" endtime="20230719 07:28:41.387"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:28:41.387" endtime="20230719 07:28:41.387"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:28:33.601" endtime="20230719 07:28:41.388"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230719 07:28:33.531" endtime="20230719 07:28:41.390"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230719 07:29:36.430" level="INFO">${random} = 90719</msg>
<status status="PASS" starttime="20230719 07:29:36.429" endtime="20230719 07:29:36.430"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:29:36.434" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-90719 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:30:32.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:30:32.337" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:29:36.432" endtime="20230719 07:30:32.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:30:32.338" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:30:32.338" endtime="20230719 07:30:32.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:30:32.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:30:32.339" endtime="20230719 07:30:32.339"/>
</kw>
<status status="PASS" starttime="20230719 07:29:36.431" endtime="20230719 07:30:32.340"/>
</kw>
<msg timestamp="20230719 07:30:32.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:29:36.431" endtime="20230719 07:30:32.340"/>
</kw>
<msg timestamp="20230719 07:30:32.340" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230719 07:29:36.430" endtime="20230719 07:30:32.340"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:30:32.340" endtime="20230719 07:30:32.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:29:36.428" endtime="20230719 07:30:32.341"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230719 07:29:36.361" endtime="20230719 07:30:32.342"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:25:24.298" endtime="20230719 07:25:24.301"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:25:24.317" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:25:24.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:25:24.782" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 19 Jul 2023 07:25:24 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 19 Jul 2023 06:43:48 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230719 07:25:24.307" endtime="20230719 07:25:24.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:25:24.786" level="INFO">HTTP/1.1 200 OK
Date: Wed, 19 Jul 2023 07:25:24 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 19 Jul 2023 06:43:48 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230719 07:25:24.784" endtime="20230719 07:25:24.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:25:24.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:25:24.786" endtime="20230719 07:25:24.788"/>
</kw>
<status status="PASS" starttime="20230719 07:25:24.306" endtime="20230719 07:25:24.789"/>
</kw>
<msg timestamp="20230719 07:25:24.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:25:24.305" endtime="20230719 07:25:24.789"/>
</kw>
<msg timestamp="20230719 07:25:24.790" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 19 Jul 2023 07:25:24 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 19 Jul 2023 06:43:48 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230719 07:25:24.302" endtime="20230719 07:25:24.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:25:24.790" endtime="20230719 07:25:24.792"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:25:24.287" endtime="20230719 07:25:24.792"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230719 07:25:24.794" endtime="20230719 07:25:24.795"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230719 07:25:24.796" level="INFO">${random} = z35GYfqGSc</msg>
<status status="PASS" starttime="20230719 07:25:24.795" endtime="20230719 07:25:24.796"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:25:24.803" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p z35GYfqGSc  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:25:50.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:25:50.047" level="INFO">${output} = 2023-07-19 07:25:30,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:25:31,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:25:24.800" endtime="20230719 07:25:50.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:25:50.049" level="INFO">2023-07-19 07:25:30,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:25:31,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:25:31,411 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:25:31,643 [main] INFO freon.BaseFreonGenerator: Executing test with prefix z35GYfqGSc and number-of-tests 1
2023-07-19 07:25:31,846 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:32,850 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:33,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:34,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:35,853 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:36,853 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:37,781 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:246)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:234)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:227)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:179)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:148)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-07-19 07:25:37,854 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:38,854 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:39,855 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:40,855 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:41,856 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:42,856 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:43,003 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-07-19 07:25:43,285 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-07-19 07:25:43,857 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:44,857 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:45,206 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:25:45,694 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-19 07:25:45,858 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:46,859 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:47,860 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:48,860 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:25:49,682 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5172.785232, max=5172.785232, mean=5172.785232, stddev=0.0, median=5172.785232, p75=5172.785232, p95=5172.785232, p98=5172.785232, p99=5172.785232, p999=5172.785232, mean_rate=0.15957997465526907, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:25:49,682 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 18
2023-07-19 07:25:49,682 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:25:49,682 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:25:50.048" endtime="20230719 07:25:50.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:25:50.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:25:50.049" endtime="20230719 07:25:50.050"/>
</kw>
<status status="PASS" starttime="20230719 07:25:24.800" endtime="20230719 07:25:50.050"/>
</kw>
<msg timestamp="20230719 07:25:50.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:25:24.799" endtime="20230719 07:25:50.050"/>
</kw>
<msg timestamp="20230719 07:25:50.051" level="INFO">${result} = 2023-07-19 07:25:30,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:25:31,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:25:24.798" endtime="20230719 07:25:50.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:25:50.051" endtime="20230719 07:25:50.051"/>
</kw>
<status status="PASS" starttime="20230719 07:25:24.796" endtime="20230719 07:25:50.051"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230719 07:25:50.058" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p z35GYfqGSc  2&gt;&amp;1'.</msg>
<msg timestamp="20230719 07:26:01.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230719 07:26:01.220" level="INFO">${output} = 2023-07-19 07:25:53,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:25:53,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:25:50.055" endtime="20230719 07:26:01.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230719 07:26:01.221" level="INFO">2023-07-19 07:25:53,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:25:53,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-19 07:25:53,661 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-19 07:25:53,761 [main] INFO freon.BaseFreonGenerator: Executing test with prefix z35GYfqGSc and number-of-tests 1
2023-07-19 07:25:53,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:54,854 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:55,855 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:56,855 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:57,375 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-19 07:25:57,868 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:58,869 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-19 07:25:59,871 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-19 07:26:00,838 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=88.168002, max=88.168002, mean=88.168002, stddev=0.0, median=88.168002, p75=88.168002, p95=88.168002, p98=88.168002, p99=88.168002, p999=88.168002, mean_rate=0.9192023818041205, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-19 07:26:00,839 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-07-19 07:26:00,840 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-19 07:26:00,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230719 07:26:01.221" endtime="20230719 07:26:01.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230719 07:26:01.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230719 07:26:01.222" endtime="20230719 07:26:01.222"/>
</kw>
<status status="PASS" starttime="20230719 07:25:50.054" endtime="20230719 07:26:01.223"/>
</kw>
<msg timestamp="20230719 07:26:01.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230719 07:25:50.054" endtime="20230719 07:26:01.223"/>
</kw>
<msg timestamp="20230719 07:26:01.223" level="INFO">${result} = 2023-07-19 07:25:53,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-19 07:25:53,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230719 07:25:50.053" endtime="20230719 07:26:01.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230719 07:26:01.224" endtime="20230719 07:26:01.224"/>
</kw>
<status status="PASS" starttime="20230719 07:25:50.052" endtime="20230719 07:26:01.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230719 07:25:24.793" endtime="20230719 07:26:01.225"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230719 07:25:23.952" endtime="20230719 07:26:01.227"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="234532"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
