<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230718 19:43:57.023" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230718 19:36:23.500" level="INFO">${random} = 95285</msg>
<status status="PASS" starttime="20230718 19:36:23.500" endtime="20230718 19:36:23.500"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:23.505" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-95285 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:28.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:28.015" level="INFO">${output} = 2023-07-18 19:36:26,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:36:26,776 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:36:23.502" endtime="20230718 19:36:28.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:28.017" level="INFO">2023-07-18 19:36:26,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:36:26,776 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:36:26,777 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230718 19:36:28.016" endtime="20230718 19:36:28.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:28.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:28.018" endtime="20230718 19:36:28.018"/>
</kw>
<status status="PASS" starttime="20230718 19:36:23.502" endtime="20230718 19:36:28.019"/>
</kw>
<msg timestamp="20230718 19:36:28.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:23.501" endtime="20230718 19:36:28.021"/>
</kw>
<msg timestamp="20230718 19:36:28.021" level="INFO">${output} = 2023-07-18 19:36:26,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:36:26,776 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:36:23.500" endtime="20230718 19:36:28.021"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:28.021" endtime="20230718 19:36:28.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:28.025" level="INFO">Running command 'cat /tmp/key-95285 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:28.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:28.027" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:28.023" endtime="20230718 19:36:28.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:28.028" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:28.028" endtime="20230718 19:36:28.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:28.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:28.029" endtime="20230718 19:36:28.029"/>
</kw>
<msg timestamp="20230718 19:36:28.030" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:28.022" endtime="20230718 19:36:28.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:28.030" endtime="20230718 19:36:28.030"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:28.040" level="INFO">Running command 'rm /tmp/key-95285 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:28.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:28.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:28.032" endtime="20230718 19:36:28.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:28.044" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:28.043" endtime="20230718 19:36:28.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:28.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:28.044" endtime="20230718 19:36:28.045"/>
</kw>
<status status="PASS" starttime="20230718 19:36:28.030" endtime="20230718 19:36:28.045"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:23.499" endtime="20230718 19:36:28.045"/>
</test>
<test id="s1-s1-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:28.052" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:28.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:28.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:28.050" endtime="20230718 19:36:28.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:28.769" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:28.768" endtime="20230718 19:36:28.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:28.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:28.769" endtime="20230718 19:36:28.770"/>
</kw>
<status status="PASS" starttime="20230718 19:36:28.049" endtime="20230718 19:36:28.770"/>
</kw>
<msg timestamp="20230718 19:36:28.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:28.049" endtime="20230718 19:36:28.771"/>
</kw>
<status status="PASS" starttime="20230718 19:36:28.049" endtime="20230718 19:36:28.771"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:28.774" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:29.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:29.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:28.772" endtime="20230718 19:36:29.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:29.251" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:29.250" endtime="20230718 19:36:29.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:29.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:29.251" endtime="20230718 19:36:29.252"/>
</kw>
<status status="PASS" starttime="20230718 19:36:28.772" endtime="20230718 19:36:29.252"/>
</kw>
<msg timestamp="20230718 19:36:29.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:28.771" endtime="20230718 19:36:29.252"/>
</kw>
<status status="PASS" starttime="20230718 19:36:28.771" endtime="20230718 19:36:29.253"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:29.256" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:29.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:29.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:29.254" endtime="20230718 19:36:29.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:29.709" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:29.709" endtime="20230718 19:36:29.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:29.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:29.710" endtime="20230718 19:36:29.710"/>
</kw>
<status status="PASS" starttime="20230718 19:36:29.253" endtime="20230718 19:36:29.710"/>
</kw>
<msg timestamp="20230718 19:36:29.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:29.253" endtime="20230718 19:36:29.711"/>
</kw>
<status status="PASS" starttime="20230718 19:36:29.253" endtime="20230718 19:36:29.711"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:29.715" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:30.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:30.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:29.712" endtime="20230718 19:36:30.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:30.201" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:30.200" endtime="20230718 19:36:30.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:30.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:30.201" endtime="20230718 19:36:30.202"/>
</kw>
<status status="PASS" starttime="20230718 19:36:29.712" endtime="20230718 19:36:30.202"/>
</kw>
<msg timestamp="20230718 19:36:30.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:29.712" endtime="20230718 19:36:30.202"/>
</kw>
<status status="PASS" starttime="20230718 19:36:29.711" endtime="20230718 19:36:30.203"/>
</kw>
<status status="PASS" starttime="20230718 19:36:28.048" endtime="20230718 19:36:30.203"/>
</kw>
<status status="PASS" starttime="20230718 19:36:28.048" endtime="20230718 19:36:30.203"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:28.047" endtime="20230718 19:36:30.203"/>
</test>
<test id="s1-s1-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:30.209" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:32.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:32.858" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:32:35 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:30.207" endtime="20230718 19:36:32.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:32.859" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:32:35 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:36:30 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:36:32.858" endtime="20230718 19:36:32.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:32.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:32.859" endtime="20230718 19:36:32.860"/>
</kw>
<msg timestamp="20230718 19:36:32.861" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:32:35 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:30.206" endtime="20230718 19:36:32.861"/>
</kw>
<msg timestamp="20230718 19:36:32.861" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:32:35 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:30.206" endtime="20230718 19:36:32.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:32.861" endtime="20230718 19:36:32.863"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:32.867" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:32.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:32.869" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:32.864" endtime="20230718 19:36:32.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:32.870" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:32.869" endtime="20230718 19:36:32.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:32.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:32.870" endtime="20230718 19:36:32.871"/>
</kw>
<msg timestamp="20230718 19:36:32.871" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:32.864" endtime="20230718 19:36:32.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:32.871" endtime="20230718 19:36:32.872"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:32.875" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:32.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:32.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:32.872" endtime="20230718 19:36:32.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:32.879" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:32.878" endtime="20230718 19:36:32.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:32.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:32.879" endtime="20230718 19:36:32.880"/>
</kw>
<status status="PASS" starttime="20230718 19:36:32.872" endtime="20230718 19:36:32.880"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:30.205" endtime="20230718 19:36:32.880"/>
</test>
<test id="s1-s1-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:32.885" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:33.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:33.512" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:32:39 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:32.883" endtime="20230718 19:36:33.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:33.513" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:32:39 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:36:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:36:33.512" endtime="20230718 19:36:33.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:33.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:33.513" endtime="20230718 19:36:33.514"/>
</kw>
<msg timestamp="20230718 19:36:33.514" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:32:39 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:32.883" endtime="20230718 19:36:33.514"/>
</kw>
<msg timestamp="20230718 19:36:33.515" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:32:39 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:32.882" endtime="20230718 19:36:33.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:33.515" endtime="20230718 19:36:33.515"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:33.518" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:33.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:33.521" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:36:33.516" endtime="20230718 19:36:33.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:33.522" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:36:33.521" endtime="20230718 19:36:33.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:33.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:33.522" endtime="20230718 19:36:33.522"/>
</kw>
<msg timestamp="20230718 19:36:33.523" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:36:33.515" endtime="20230718 19:36:33.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:33.523" endtime="20230718 19:36:33.523"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:33.526" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:33.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:33.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:33.524" endtime="20230718 19:36:33.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:33.529" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:33.529" endtime="20230718 19:36:33.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:33.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:33.530" endtime="20230718 19:36:33.530"/>
</kw>
<status status="PASS" starttime="20230718 19:36:33.524" endtime="20230718 19:36:33.530"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:32.881" endtime="20230718 19:36:33.531"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230718 19:36:23.423" endtime="20230718 19:36:33.533"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230718 19:36:36.678" level="INFO">${random} = 04278</msg>
<status status="PASS" starttime="20230718 19:36:36.678" endtime="20230718 19:36:36.678"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:36.684" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-04278 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:40.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:40.919" level="INFO">${output} = 2023-07-18 19:36:39,620 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:36:39,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:36:36.680" endtime="20230718 19:36:40.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:40.921" level="INFO">2023-07-18 19:36:39,620 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:36:39,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:36:39,748 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230718 19:36:40.920" endtime="20230718 19:36:40.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:40.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:40.921" endtime="20230718 19:36:40.921"/>
</kw>
<status status="PASS" starttime="20230718 19:36:36.680" endtime="20230718 19:36:40.921"/>
</kw>
<msg timestamp="20230718 19:36:40.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:36.679" endtime="20230718 19:36:40.923"/>
</kw>
<msg timestamp="20230718 19:36:40.923" level="INFO">${output} = 2023-07-18 19:36:39,620 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:36:39,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:36:36.678" endtime="20230718 19:36:40.923"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:40.923" endtime="20230718 19:36:40.923"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:40.926" level="INFO">Running command 'cat /tmp/key-04278 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:40.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:40.929" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:40.924" endtime="20230718 19:36:40.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:40.930" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:40.929" endtime="20230718 19:36:40.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:40.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:40.930" endtime="20230718 19:36:40.931"/>
</kw>
<msg timestamp="20230718 19:36:40.931" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:40.924" endtime="20230718 19:36:40.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:40.931" endtime="20230718 19:36:40.932"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:40.934" level="INFO">Running command 'rm /tmp/key-04278 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:40.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:40.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:40.932" endtime="20230718 19:36:40.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:40.938" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:40.937" endtime="20230718 19:36:40.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:40.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:40.938" endtime="20230718 19:36:40.938"/>
</kw>
<status status="PASS" starttime="20230718 19:36:40.932" endtime="20230718 19:36:40.939"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:36.677" endtime="20230718 19:36:40.939"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:40.944" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:41.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:41.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:40.942" endtime="20230718 19:36:41.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:41.403" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:41.402" endtime="20230718 19:36:41.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:41.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:41.403" endtime="20230718 19:36:41.404"/>
</kw>
<status status="PASS" starttime="20230718 19:36:40.941" endtime="20230718 19:36:41.404"/>
</kw>
<msg timestamp="20230718 19:36:41.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:40.941" endtime="20230718 19:36:41.405"/>
</kw>
<status status="PASS" starttime="20230718 19:36:40.941" endtime="20230718 19:36:41.405"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:41.408" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:41.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:41.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:41.406" endtime="20230718 19:36:41.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:41.854" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:41.853" endtime="20230718 19:36:41.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:41.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:41.854" endtime="20230718 19:36:41.854"/>
</kw>
<status status="PASS" starttime="20230718 19:36:41.406" endtime="20230718 19:36:41.855"/>
</kw>
<msg timestamp="20230718 19:36:41.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:41.405" endtime="20230718 19:36:41.855"/>
</kw>
<status status="PASS" starttime="20230718 19:36:41.405" endtime="20230718 19:36:41.855"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:41.859" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:42.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:42.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:41.857" endtime="20230718 19:36:42.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:42.314" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:42.313" endtime="20230718 19:36:42.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:42.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:42.314" endtime="20230718 19:36:42.315"/>
</kw>
<status status="PASS" starttime="20230718 19:36:41.856" endtime="20230718 19:36:42.315"/>
</kw>
<msg timestamp="20230718 19:36:42.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:41.856" endtime="20230718 19:36:42.315"/>
</kw>
<status status="PASS" starttime="20230718 19:36:41.856" endtime="20230718 19:36:42.316"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:42.319" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:42.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:42.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:42.317" endtime="20230718 19:36:42.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:42.792" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:42.792" endtime="20230718 19:36:42.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:42.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:42.793" endtime="20230718 19:36:42.793"/>
</kw>
<status status="PASS" starttime="20230718 19:36:42.316" endtime="20230718 19:36:42.794"/>
</kw>
<msg timestamp="20230718 19:36:42.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:42.316" endtime="20230718 19:36:42.794"/>
</kw>
<status status="PASS" starttime="20230718 19:36:42.316" endtime="20230718 19:36:42.794"/>
</kw>
<status status="PASS" starttime="20230718 19:36:40.940" endtime="20230718 19:36:42.794"/>
</kw>
<status status="PASS" starttime="20230718 19:36:40.940" endtime="20230718 19:36:42.795"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:40.939" endtime="20230718 19:36:42.795"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:42.799" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:43.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:43.470" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:06 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:42.797" endtime="20230718 19:36:43.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:43.472" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:06 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:36:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:36:43.471" endtime="20230718 19:36:43.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:43.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:43.472" endtime="20230718 19:36:43.472"/>
</kw>
<msg timestamp="20230718 19:36:43.473" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:06 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:42.796" endtime="20230718 19:36:43.473"/>
</kw>
<msg timestamp="20230718 19:36:43.473" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:06 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:42.796" endtime="20230718 19:36:43.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:43.473" endtime="20230718 19:36:43.473"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:43.476" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:43.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:43.479" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:43.474" endtime="20230718 19:36:43.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:43.480" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:43.479" endtime="20230718 19:36:43.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:43.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:43.480" endtime="20230718 19:36:43.480"/>
</kw>
<msg timestamp="20230718 19:36:43.481" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:36:43.473" endtime="20230718 19:36:43.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:43.481" endtime="20230718 19:36:43.481"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:43.484" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:43.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:43.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:43.482" endtime="20230718 19:36:43.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:43.487" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:43.486" endtime="20230718 19:36:43.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:43.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:43.487" endtime="20230718 19:36:43.488"/>
</kw>
<status status="PASS" starttime="20230718 19:36:43.481" endtime="20230718 19:36:43.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:42.795" endtime="20230718 19:36:43.488"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:43.493" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:44.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:44.087" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:43.491" endtime="20230718 19:36:44.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:44.088" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:36:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:36:44.088" endtime="20230718 19:36:44.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:44.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:44.089" endtime="20230718 19:36:44.089"/>
</kw>
<msg timestamp="20230718 19:36:44.089" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:43.490" endtime="20230718 19:36:44.089"/>
</kw>
<msg timestamp="20230718 19:36:44.090" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:36:43.490" endtime="20230718 19:36:44.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:44.090" endtime="20230718 19:36:44.090"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:44.093" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:44.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:44.096" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:36:44.091" endtime="20230718 19:36:44.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:44.097" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:36:44.096" endtime="20230718 19:36:44.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:44.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:44.097" endtime="20230718 19:36:44.097"/>
</kw>
<msg timestamp="20230718 19:36:44.098" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:36:44.090" endtime="20230718 19:36:44.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:44.098" endtime="20230718 19:36:44.098"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:44.101" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:44.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:44.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:44.099" endtime="20230718 19:36:44.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:44.104" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:44.104" endtime="20230718 19:36:44.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:44.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:44.104" endtime="20230718 19:36:44.105"/>
</kw>
<status status="PASS" starttime="20230718 19:36:44.098" endtime="20230718 19:36:44.105"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:43.489" endtime="20230718 19:36:44.105"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230718 19:36:36.597" endtime="20230718 19:36:44.107"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:47.046" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:49.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:49.606" level="INFO">${output} = 2023-07-18 19:36:49,460 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230718 19:36:47.042" endtime="20230718 19:36:49.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:49.607" level="INFO">2023-07-18 19:36:49,460 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230718 19:36:49.606" endtime="20230718 19:36:49.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:49.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:49.607" endtime="20230718 19:36:49.608"/>
</kw>
<status status="PASS" starttime="20230718 19:36:47.042" endtime="20230718 19:36:49.608"/>
</kw>
<msg timestamp="20230718 19:36:49.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:47.042" endtime="20230718 19:36:49.609"/>
</kw>
<msg timestamp="20230718 19:36:49.609" level="INFO">${output} = 2023-07-18 19:36:49,460 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230718 19:36:47.041" endtime="20230718 19:36:49.609"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:49.609" endtime="20230718 19:36:49.610"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:49.619" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:52.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:52.614" level="INFO">${output} = 2023-07-18 19:36:52,539 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230718 19:36:49.614" endtime="20230718 19:36:52.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:52.615" level="INFO">2023-07-18 19:36:52,539 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230718 19:36:52.614" endtime="20230718 19:36:52.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:52.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:52.615" endtime="20230718 19:36:52.616"/>
</kw>
<status status="PASS" starttime="20230718 19:36:49.611" endtime="20230718 19:36:52.616"/>
</kw>
<msg timestamp="20230718 19:36:52.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:49.610" endtime="20230718 19:36:52.617"/>
</kw>
<msg timestamp="20230718 19:36:52.617" level="INFO">${output} = 2023-07-18 19:36:52,539 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230718 19:36:49.610" endtime="20230718 19:36:52.617"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:52.617" endtime="20230718 19:36:52.618"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:47.040" endtime="20230718 19:36:52.618"/>
</test>
<test id="s1-s3-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:52.623" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:36:52.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:52.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:52.621" endtime="20230718 19:36:52.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:52.626" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:52.625" endtime="20230718 19:36:52.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:52.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:52.626" endtime="20230718 19:36:52.626"/>
</kw>
<status status="PASS" starttime="20230718 19:36:52.620" endtime="20230718 19:36:52.627"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:52.630" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:57.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:57.810" level="INFO">${output} = 2023-07-18 19:36:56,013 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:36:56,141 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:36:52.628" endtime="20230718 19:36:57.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:57.811" level="INFO">2023-07-18 19:36:56,013 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:36:56,141 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:36:56,141 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-18 19:36:56,396 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230718 19:36:57.811" endtime="20230718 19:36:57.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:57.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:57.812" endtime="20230718 19:36:57.812"/>
</kw>
<status status="PASS" starttime="20230718 19:36:52.628" endtime="20230718 19:36:57.812"/>
</kw>
<msg timestamp="20230718 19:36:57.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:52.627" endtime="20230718 19:36:57.813"/>
</kw>
<msg timestamp="20230718 19:36:57.813" level="INFO">${output} = 2023-07-18 19:36:56,013 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:36:56,141 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:36:52.627" endtime="20230718 19:36:57.813"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:36:57.813" endtime="20230718 19:36:57.814"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:57.816" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:57.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:57.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:36:57.814" endtime="20230718 19:36:57.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:57.820" level="INFO"/>
<status status="PASS" starttime="20230718 19:36:57.819" endtime="20230718 19:36:57.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:57.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:57.820" endtime="20230718 19:36:57.820"/>
</kw>
<status status="PASS" starttime="20230718 19:36:57.814" endtime="20230718 19:36:57.821"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:52.619" endtime="20230718 19:36:57.821"/>
</test>
<test id="s1-s3-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:57.826" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:00.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:00.444" level="INFO">${output} = 2023-07-18 19:37:00,387 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230718 19:36:57.824" endtime="20230718 19:37:00.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:00.446" level="INFO">2023-07-18 19:37:00,387 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230718 19:37:00.445" endtime="20230718 19:37:00.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:00.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:00.446" endtime="20230718 19:37:00.446"/>
</kw>
<status status="PASS" starttime="20230718 19:36:57.824" endtime="20230718 19:37:00.447"/>
</kw>
<msg timestamp="20230718 19:37:00.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:57.823" endtime="20230718 19:37:00.447"/>
</kw>
<msg timestamp="20230718 19:37:00.447" level="INFO">${output} = 2023-07-18 19:37:00,387 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230718 19:36:57.823" endtime="20230718 19:37:00.448"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:00.448" endtime="20230718 19:37:00.448"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:36:57.822" endtime="20230718 19:37:00.448"/>
</test>
<test id="s1-s3-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:00.452" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:37:00.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:00.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:00.450" endtime="20230718 19:37:00.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:00.456" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:00.455" endtime="20230718 19:37:00.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:00.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:00.456" endtime="20230718 19:37:00.456"/>
</kw>
<status status="PASS" starttime="20230718 19:37:00.450" endtime="20230718 19:37:00.456"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:00.460" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:05.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:05.080" level="INFO">${output} = 2023-07-18 19:37:03,709 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:03,783 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:37:00.458" endtime="20230718 19:37:05.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:05.081" level="INFO">2023-07-18 19:37:03,709 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:03,783 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:37:03,783 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-18 19:37:04,013 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230718 19:37:05.080" endtime="20230718 19:37:05.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:05.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:05.081" endtime="20230718 19:37:05.082"/>
</kw>
<status status="PASS" starttime="20230718 19:37:00.457" endtime="20230718 19:37:05.082"/>
</kw>
<msg timestamp="20230718 19:37:05.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:00.457" endtime="20230718 19:37:05.083"/>
</kw>
<msg timestamp="20230718 19:37:05.083" level="INFO">${output} = 2023-07-18 19:37:03,709 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:03,783 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:37:00.457" endtime="20230718 19:37:05.083"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:05.083" endtime="20230718 19:37:05.084"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:05.086" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:05.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:05.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:05.084" endtime="20230718 19:37:05.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:05.090" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:05.089" endtime="20230718 19:37:05.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:05.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:05.090" endtime="20230718 19:37:05.091"/>
</kw>
<status status="PASS" starttime="20230718 19:37:05.084" endtime="20230718 19:37:05.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:00.449" endtime="20230718 19:37:05.091"/>
</test>
<test id="s1-s3-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:05.097" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:05.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:05.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:05.095" endtime="20230718 19:37:05.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:05.628" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:05.628" endtime="20230718 19:37:05.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:05.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:05.629" endtime="20230718 19:37:05.629"/>
</kw>
<status status="PASS" starttime="20230718 19:37:05.094" endtime="20230718 19:37:05.629"/>
</kw>
<msg timestamp="20230718 19:37:05.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:05.094" endtime="20230718 19:37:05.630"/>
</kw>
<status status="PASS" starttime="20230718 19:37:05.094" endtime="20230718 19:37:05.630"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:05.634" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:06.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:06.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:05.632" endtime="20230718 19:37:06.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:06.109" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:06.109" endtime="20230718 19:37:06.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:06.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:06.110" endtime="20230718 19:37:06.110"/>
</kw>
<status status="PASS" starttime="20230718 19:37:05.631" endtime="20230718 19:37:06.110"/>
</kw>
<msg timestamp="20230718 19:37:06.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:05.631" endtime="20230718 19:37:06.111"/>
</kw>
<status status="PASS" starttime="20230718 19:37:05.630" endtime="20230718 19:37:06.111"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:06.115" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:06.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:06.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:06.113" endtime="20230718 19:37:06.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:06.570" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:06.569" endtime="20230718 19:37:06.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:06.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:06.570" endtime="20230718 19:37:06.571"/>
</kw>
<status status="PASS" starttime="20230718 19:37:06.112" endtime="20230718 19:37:06.571"/>
</kw>
<msg timestamp="20230718 19:37:06.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:06.112" endtime="20230718 19:37:06.571"/>
</kw>
<status status="PASS" starttime="20230718 19:37:06.111" endtime="20230718 19:37:06.572"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:06.575" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:07.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:07.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:06.573" endtime="20230718 19:37:07.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:07.066" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:07.065" endtime="20230718 19:37:07.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:07.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:07.066" endtime="20230718 19:37:07.067"/>
</kw>
<status status="PASS" starttime="20230718 19:37:06.572" endtime="20230718 19:37:07.067"/>
</kw>
<msg timestamp="20230718 19:37:07.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:06.572" endtime="20230718 19:37:07.068"/>
</kw>
<status status="PASS" starttime="20230718 19:37:06.572" endtime="20230718 19:37:07.068"/>
</kw>
<status status="PASS" starttime="20230718 19:37:05.093" endtime="20230718 19:37:07.068"/>
</kw>
<status status="PASS" starttime="20230718 19:37:05.093" endtime="20230718 19:37:07.068"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:05.092" endtime="20230718 19:37:07.069"/>
</test>
<test id="s1-s3-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:07.075" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:07.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:07.704" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:37:07.073" endtime="20230718 19:37:07.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:07.705" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:37:07.704" endtime="20230718 19:37:07.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:07.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:07.705" endtime="20230718 19:37:07.706"/>
</kw>
<status status="PASS" starttime="20230718 19:37:07.072" endtime="20230718 19:37:07.706"/>
</kw>
<msg timestamp="20230718 19:37:07.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:07.072" endtime="20230718 19:37:07.707"/>
</kw>
<msg timestamp="20230718 19:37:07.707" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:37:07.071" endtime="20230718 19:37:07.707"/>
</kw>
<msg timestamp="20230718 19:37:07.708" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:37:07.071" endtime="20230718 19:37:07.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:07.708" endtime="20230718 19:37:07.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:07.709" endtime="20230718 19:37:07.709"/>
</kw>
<msg timestamp="20230718 19:37:07.709" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230718 19:37:07.071" endtime="20230718 19:37:07.709"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230718 19:37:07.709" endtime="20230718 19:37:07.710"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:07.070" endtime="20230718 19:37:07.710"/>
</test>
<test id="s1-s3-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:07.715" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:37:07.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:07.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:07.712" endtime="20230718 19:37:07.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:07.718" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:07.717" endtime="20230718 19:37:07.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:07.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:07.720" endtime="20230718 19:37:07.720"/>
</kw>
<status status="PASS" starttime="20230718 19:37:07.712" endtime="20230718 19:37:07.721"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:07.724" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:08.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:08.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:07.722" endtime="20230718 19:37:08.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:08.731" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:08.730" endtime="20230718 19:37:08.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:08.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:08.731" endtime="20230718 19:37:08.732"/>
</kw>
<msg timestamp="20230718 19:37:08.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:07.721" endtime="20230718 19:37:08.732"/>
</kw>
<msg timestamp="20230718 19:37:08.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:07.721" endtime="20230718 19:37:08.732"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:08.733" endtime="20230718 19:37:08.733"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:08.736" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:08.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:08.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:08.734" endtime="20230718 19:37:08.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:08.740" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:08.739" endtime="20230718 19:37:08.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:08.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:08.740" endtime="20230718 19:37:08.741"/>
</kw>
<status status="PASS" starttime="20230718 19:37:08.733" endtime="20230718 19:37:08.741"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:07.711" endtime="20230718 19:37:08.741"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230718 19:36:46.965" endtime="20230718 19:37:08.742"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230718 19:37:11.836" level="INFO">${random} = 05855</msg>
<status status="PASS" starttime="20230718 19:37:11.836" endtime="20230718 19:37:11.836"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:11.842" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-05855 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:15.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:15.896" level="INFO">${output} = 2023-07-18 19:37:14,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:14,791 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:37:11.839" endtime="20230718 19:37:15.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:15.898" level="INFO">2023-07-18 19:37:14,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:14,791 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:37:14,791 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230718 19:37:15.897" endtime="20230718 19:37:15.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:15.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:15.898" endtime="20230718 19:37:15.898"/>
</kw>
<status status="PASS" starttime="20230718 19:37:11.838" endtime="20230718 19:37:15.899"/>
</kw>
<msg timestamp="20230718 19:37:15.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:11.837" endtime="20230718 19:37:15.900"/>
</kw>
<msg timestamp="20230718 19:37:15.900" level="INFO">${output} = 2023-07-18 19:37:14,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:14,791 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:37:11.837" endtime="20230718 19:37:15.900"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:15.900" endtime="20230718 19:37:15.901"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:15.903" level="INFO">Running command 'cat /tmp/key-05855 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:15.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:15.906" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:37:15.901" endtime="20230718 19:37:15.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:15.907" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:37:15.906" endtime="20230718 19:37:15.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:15.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:15.907" endtime="20230718 19:37:15.908"/>
</kw>
<msg timestamp="20230718 19:37:15.908" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:37:15.901" endtime="20230718 19:37:15.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:15.908" endtime="20230718 19:37:15.909"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:15.911" level="INFO">Running command 'rm /tmp/key-05855 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:15.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:15.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:15.910" endtime="20230718 19:37:15.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:15.915" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:15.914" endtime="20230718 19:37:15.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:15.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:15.915" endtime="20230718 19:37:15.916"/>
</kw>
<status status="PASS" starttime="20230718 19:37:15.909" endtime="20230718 19:37:15.916"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:11.835" endtime="20230718 19:37:15.916"/>
</test>
<test id="s1-s4-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:15.921" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:16.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:16.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:15.920" endtime="20230718 19:37:16.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:16.395" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:16.394" endtime="20230718 19:37:16.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:16.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:16.395" endtime="20230718 19:37:16.395"/>
</kw>
<status status="PASS" starttime="20230718 19:37:15.919" endtime="20230718 19:37:16.396"/>
</kw>
<msg timestamp="20230718 19:37:16.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:15.919" endtime="20230718 19:37:16.396"/>
</kw>
<status status="PASS" starttime="20230718 19:37:15.919" endtime="20230718 19:37:16.397"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:16.400" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:16.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:16.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:16.398" endtime="20230718 19:37:16.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:16.867" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:16.866" endtime="20230718 19:37:16.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:16.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:16.867" endtime="20230718 19:37:16.867"/>
</kw>
<status status="PASS" starttime="20230718 19:37:16.397" endtime="20230718 19:37:16.868"/>
</kw>
<msg timestamp="20230718 19:37:16.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:16.397" endtime="20230718 19:37:16.868"/>
</kw>
<status status="PASS" starttime="20230718 19:37:16.397" endtime="20230718 19:37:16.868"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:16.872" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:17.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:17.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:16.870" endtime="20230718 19:37:17.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:17.347" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:17.346" endtime="20230718 19:37:17.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:17.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:17.347" endtime="20230718 19:37:17.348"/>
</kw>
<status status="PASS" starttime="20230718 19:37:16.869" endtime="20230718 19:37:17.348"/>
</kw>
<msg timestamp="20230718 19:37:17.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:16.869" endtime="20230718 19:37:17.349"/>
</kw>
<status status="PASS" starttime="20230718 19:37:16.869" endtime="20230718 19:37:17.349"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:17.353" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:17.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:17.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:17.350" endtime="20230718 19:37:17.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:17.801" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:17.800" endtime="20230718 19:37:17.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:17.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:17.801" endtime="20230718 19:37:17.801"/>
</kw>
<status status="PASS" starttime="20230718 19:37:17.350" endtime="20230718 19:37:17.801"/>
</kw>
<msg timestamp="20230718 19:37:17.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:17.350" endtime="20230718 19:37:17.802"/>
</kw>
<status status="PASS" starttime="20230718 19:37:17.349" endtime="20230718 19:37:17.802"/>
</kw>
<status status="PASS" starttime="20230718 19:37:15.918" endtime="20230718 19:37:17.802"/>
</kw>
<status status="PASS" starttime="20230718 19:37:15.918" endtime="20230718 19:37:17.802"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:15.917" endtime="20230718 19:37:17.803"/>
</test>
<test id="s1-s4-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:17.807" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:18.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:18.420" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:37:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:37:17.805" endtime="20230718 19:37:18.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:18.422" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:37:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:37:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:37:18.421" endtime="20230718 19:37:18.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:18.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:18.422" endtime="20230718 19:37:18.423"/>
</kw>
<msg timestamp="20230718 19:37:18.423" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:37:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:37:17.805" endtime="20230718 19:37:18.423"/>
</kw>
<msg timestamp="20230718 19:37:18.423" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:37:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:37:17.804" endtime="20230718 19:37:18.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:18.423" endtime="20230718 19:37:18.424"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:18.426" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:18.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:18.429" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:37:18.424" endtime="20230718 19:37:18.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:18.430" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:37:18.429" endtime="20230718 19:37:18.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:18.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:18.430" endtime="20230718 19:37:18.431"/>
</kw>
<msg timestamp="20230718 19:37:18.431" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:37:18.424" endtime="20230718 19:37:18.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:18.431" endtime="20230718 19:37:18.431"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:18.434" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:18.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:18.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:18.432" endtime="20230718 19:37:18.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:18.437" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:18.437" endtime="20230718 19:37:18.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:18.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:18.437" endtime="20230718 19:37:18.438"/>
</kw>
<status status="PASS" starttime="20230718 19:37:18.432" endtime="20230718 19:37:18.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:17.803" endtime="20230718 19:37:18.438"/>
</test>
<test id="s1-s4-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:18.443" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:19.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:19.096" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:37:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:37:18.441" endtime="20230718 19:37:19.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:19.098" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:37:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:37:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:37:19.097" endtime="20230718 19:37:19.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:19.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:19.098" endtime="20230718 19:37:19.098"/>
</kw>
<msg timestamp="20230718 19:37:19.105" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:37:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:37:18.441" endtime="20230718 19:37:19.106"/>
</kw>
<msg timestamp="20230718 19:37:19.106" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:37:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:37:18.440" endtime="20230718 19:37:19.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:19.106" endtime="20230718 19:37:19.107"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:19.109" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:19.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:19.112" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:37:19.107" endtime="20230718 19:37:19.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:19.113" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:37:19.113" endtime="20230718 19:37:19.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:19.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:19.113" endtime="20230718 19:37:19.114"/>
</kw>
<msg timestamp="20230718 19:37:19.114" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:37:19.107" endtime="20230718 19:37:19.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:19.115" endtime="20230718 19:37:19.115"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:19.117" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:19.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:19.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:19.116" endtime="20230718 19:37:19.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:19.121" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:19.120" endtime="20230718 19:37:19.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:19.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:19.121" endtime="20230718 19:37:19.122"/>
</kw>
<status status="PASS" starttime="20230718 19:37:19.115" endtime="20230718 19:37:19.122"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:18.440" endtime="20230718 19:37:19.122"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230718 19:37:11.761" endtime="20230718 19:37:19.123"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s5-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:22.144" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:37:22.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:22.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:22.140" endtime="20230718 19:37:22.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:22.146" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:22.146" endtime="20230718 19:37:22.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:22.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:22.147" endtime="20230718 19:37:22.147"/>
</kw>
<status status="PASS" starttime="20230718 19:37:22.139" endtime="20230718 19:37:22.147"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:22.151" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:26.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:26.615" level="INFO">${output} = 2023-07-18 19:37:25,108 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:25,223 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:37:22.149" endtime="20230718 19:37:26.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:26.616" level="INFO">2023-07-18 19:37:25,108 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:25,223 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:37:25,223 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-18 19:37:25,530 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230718 19:37:26.615" endtime="20230718 19:37:26.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:26.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:26.616" endtime="20230718 19:37:26.617"/>
</kw>
<status status="PASS" starttime="20230718 19:37:22.148" endtime="20230718 19:37:26.617"/>
</kw>
<msg timestamp="20230718 19:37:26.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:22.148" endtime="20230718 19:37:26.618"/>
</kw>
<msg timestamp="20230718 19:37:26.618" level="INFO">${output} = 2023-07-18 19:37:25,108 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:25,223 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:37:22.147" endtime="20230718 19:37:26.618"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:26.619" endtime="20230718 19:37:26.619"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:26.622" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:26.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:26.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:26.620" endtime="20230718 19:37:26.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:26.625" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:26.625" endtime="20230718 19:37:26.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:26.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:26.625" endtime="20230718 19:37:26.626"/>
</kw>
<status status="PASS" starttime="20230718 19:37:26.619" endtime="20230718 19:37:26.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:22.138" endtime="20230718 19:37:26.626"/>
</test>
<test id="s1-s5-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:26.631" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:37:26.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:26.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:26.629" endtime="20230718 19:37:26.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:26.633" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:26.633" endtime="20230718 19:37:26.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:26.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:26.634" endtime="20230718 19:37:26.634"/>
</kw>
<status status="PASS" starttime="20230718 19:37:26.628" endtime="20230718 19:37:26.634"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:26.638" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:31.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:31.532" level="INFO">${output} = 2023-07-18 19:37:29,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:29,988 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:37:26.636" endtime="20230718 19:37:31.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:31.533" level="INFO">2023-07-18 19:37:29,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:29,988 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:37:29,988 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-18 19:37:30,283 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230718 19:37:31.532" endtime="20230718 19:37:31.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:31.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:31.534" endtime="20230718 19:37:31.534"/>
</kw>
<status status="PASS" starttime="20230718 19:37:26.635" endtime="20230718 19:37:31.534"/>
</kw>
<msg timestamp="20230718 19:37:31.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:26.635" endtime="20230718 19:37:31.535"/>
</kw>
<msg timestamp="20230718 19:37:31.535" level="INFO">${output} = 2023-07-18 19:37:29,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:37:29,988 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:37:26.634" endtime="20230718 19:37:31.535"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:31.535" endtime="20230718 19:37:31.536"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:31.538" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:31.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:31.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:31.536" endtime="20230718 19:37:31.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:31.541" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:31.541" endtime="20230718 19:37:31.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:31.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:31.542" endtime="20230718 19:37:31.542"/>
</kw>
<status status="PASS" starttime="20230718 19:37:31.536" endtime="20230718 19:37:31.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:26.627" endtime="20230718 19:37:31.543"/>
</test>
<test id="s1-s5-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:31.548" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:32.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:32.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:31.546" endtime="20230718 19:37:32.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:32.011" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:32.010" endtime="20230718 19:37:32.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:32.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:32.011" endtime="20230718 19:37:32.012"/>
</kw>
<status status="PASS" starttime="20230718 19:37:31.546" endtime="20230718 19:37:32.012"/>
</kw>
<msg timestamp="20230718 19:37:32.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:31.546" endtime="20230718 19:37:32.013"/>
</kw>
<status status="PASS" starttime="20230718 19:37:31.545" endtime="20230718 19:37:32.013"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:32.016" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:32.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:32.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:32.014" endtime="20230718 19:37:32.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:32.487" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:32.486" endtime="20230718 19:37:32.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:32.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:32.487" endtime="20230718 19:37:32.488"/>
</kw>
<status status="PASS" starttime="20230718 19:37:32.014" endtime="20230718 19:37:32.488"/>
</kw>
<msg timestamp="20230718 19:37:32.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:32.013" endtime="20230718 19:37:32.489"/>
</kw>
<status status="PASS" starttime="20230718 19:37:32.013" endtime="20230718 19:37:32.489"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:32.493" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:32.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:32.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:32.491" endtime="20230718 19:37:32.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:32.958" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:32.958" endtime="20230718 19:37:32.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:32.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:32.959" endtime="20230718 19:37:32.959"/>
</kw>
<status status="PASS" starttime="20230718 19:37:32.491" endtime="20230718 19:37:32.959"/>
</kw>
<msg timestamp="20230718 19:37:32.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:32.489" endtime="20230718 19:37:32.960"/>
</kw>
<status status="PASS" starttime="20230718 19:37:32.489" endtime="20230718 19:37:32.960"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:32.963" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:33.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:33.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:32.961" endtime="20230718 19:37:33.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:33.425" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:33.424" endtime="20230718 19:37:33.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:33.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:33.425" endtime="20230718 19:37:33.426"/>
</kw>
<status status="PASS" starttime="20230718 19:37:32.961" endtime="20230718 19:37:33.426"/>
</kw>
<msg timestamp="20230718 19:37:33.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:32.961" endtime="20230718 19:37:33.427"/>
</kw>
<status status="PASS" starttime="20230718 19:37:32.960" endtime="20230718 19:37:33.427"/>
</kw>
<status status="PASS" starttime="20230718 19:37:31.545" endtime="20230718 19:37:33.427"/>
</kw>
<status status="PASS" starttime="20230718 19:37:31.545" endtime="20230718 19:37:33.427"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:31.544" endtime="20230718 19:37:33.427"/>
</test>
<test id="s1-s5-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:33.433" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:34.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:34.010" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:37:33.431" endtime="20230718 19:37:34.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:34.012" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:37:34.011" endtime="20230718 19:37:34.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:34.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:34.012" endtime="20230718 19:37:34.013"/>
</kw>
<status status="PASS" starttime="20230718 19:37:33.431" endtime="20230718 19:37:34.013"/>
</kw>
<msg timestamp="20230718 19:37:34.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:37:33.430" endtime="20230718 19:37:34.013"/>
</kw>
<msg timestamp="20230718 19:37:34.014" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:37:33.430" endtime="20230718 19:37:34.014"/>
</kw>
<msg timestamp="20230718 19:37:34.014" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:37:33.429" endtime="20230718 19:37:34.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:34.014" endtime="20230718 19:37:34.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:34.015" endtime="20230718 19:37:34.015"/>
</kw>
<msg timestamp="20230718 19:37:34.016" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230718 19:37:33.429" endtime="20230718 19:37:34.016"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230718 19:37:34.016" endtime="20230718 19:37:34.016"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:33.428" endtime="20230718 19:37:34.016"/>
</test>
<test id="s1-s5-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:34.021" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:37:34.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:34.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:34.019" endtime="20230718 19:37:34.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:34.024" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:34.023" endtime="20230718 19:37:34.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:34.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:34.024" endtime="20230718 19:37:34.025"/>
</kw>
<status status="PASS" starttime="20230718 19:37:34.018" endtime="20230718 19:37:34.025"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:34.030" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:34.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:34.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:34.027" endtime="20230718 19:37:34.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:34.749" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:34.748" endtime="20230718 19:37:34.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:34.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:34.749" endtime="20230718 19:37:34.749"/>
</kw>
<msg timestamp="20230718 19:37:34.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:34.026" endtime="20230718 19:37:34.750"/>
</kw>
<msg timestamp="20230718 19:37:34.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:34.025" endtime="20230718 19:37:34.750"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:37:34.750" endtime="20230718 19:37:34.750"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:34.753" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:37:34.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:37:34.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:37:34.751" endtime="20230718 19:37:34.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:37:34.757" level="INFO"/>
<status status="PASS" starttime="20230718 19:37:34.756" endtime="20230718 19:37:34.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:37:34.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:37:34.757" endtime="20230718 19:37:34.758"/>
</kw>
<status status="PASS" starttime="20230718 19:37:34.751" endtime="20230718 19:37:34.758"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:37:34.017" endtime="20230718 19:37:34.758"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230718 19:37:22.064" endtime="20230718 19:37:34.760"/>
</suite>
<suite id="s1-s6" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s6-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230718 19:37:37.854" endtime="20230718 19:37:37.855"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230718 19:37:37.855" endtime="20230718 19:37:37.855"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:37:37.860" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:42:37.853" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230718 19:37:37.856" endtime="20230718 19:42:37.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230718 19:42:37.854" endtime="20230718 19:42:37.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230718 19:42:37.854" endtime="20230718 19:42:37.854"/>
</kw>
<status status="FAIL" starttime="20230718 19:37:37.856" endtime="20230718 19:42:37.855"/>
</kw>
<msg timestamp="20230718 19:42:37.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230718 19:37:37.856" endtime="20230718 19:42:37.856"/>
</kw>
<status status="FAIL" starttime="20230718 19:37:37.855" endtime="20230718 19:42:37.856"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230718 19:42:37.857" endtime="20230718 19:42:37.857"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230718 19:37:37.853" endtime="20230718 19:42:37.857">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230718 19:37:37.808" endtime="20230718 19:42:37.858"/>
</suite>
<suite id="s1-s7" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s7-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230718 19:36:14.811" endtime="20230718 19:36:14.812"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:14.818" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:14.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:14.820" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=d34e185bef88
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230718 19:36:14.813" endtime="20230718 19:36:14.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:14.821" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=d34e185bef88
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230718 19:36:14.821" endtime="20230718 19:36:14.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:14.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:14.821" endtime="20230718 19:36:14.822"/>
</kw>
<status status="PASS" starttime="20230718 19:36:14.813" endtime="20230718 19:36:14.822"/>
</kw>
<msg timestamp="20230718 19:36:14.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:14.813" endtime="20230718 19:36:14.823"/>
</kw>
<msg timestamp="20230718 19:36:14.824" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=d34e185bef88
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230718 19:36:14.812" endtime="20230718 19:36:14.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:14.824" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=d34e185bef88
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230718 19:36:14.824" endtime="20230718 19:36:14.824"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230718 19:36:14.824" endtime="20230718 19:36:14.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:14.828" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:17.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:17.573" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230718 19:36:14.826" endtime="20230718 19:36:17.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:17.574" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230718 19:36:17.573" endtime="20230718 19:36:17.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:17.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:17.574" endtime="20230718 19:36:17.575"/>
</kw>
<status status="PASS" starttime="20230718 19:36:14.825" endtime="20230718 19:36:17.575"/>
</kw>
<msg timestamp="20230718 19:36:17.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:14.825" endtime="20230718 19:36:17.575"/>
</kw>
<msg timestamp="20230718 19:36:17.576" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230718 19:36:14.825" endtime="20230718 19:36:17.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:17.576" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230718 19:36:17.576" endtime="20230718 19:36:17.576"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230718 19:36:17.576" endtime="20230718 19:36:17.576"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230718 19:36:14.810" endtime="20230718 19:36:17.577"/>
</test>
<test id="s1-s7-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230718 19:36:17.579" endtime="20230718 19:36:17.580"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230718 19:36:17.580" endtime="20230718 19:36:17.580"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:36:17.584" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:36:20.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:36:20.441" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230718 19:36:17.581" endtime="20230718 19:36:20.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:20.442" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230718 19:36:20.441" endtime="20230718 19:36:20.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:36:20.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:36:20.442" endtime="20230718 19:36:20.443"/>
</kw>
<status status="PASS" starttime="20230718 19:36:17.581" endtime="20230718 19:36:20.443"/>
</kw>
<msg timestamp="20230718 19:36:20.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:36:17.581" endtime="20230718 19:36:20.443"/>
</kw>
<msg timestamp="20230718 19:36:20.444" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230718 19:36:17.580" endtime="20230718 19:36:20.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:36:20.444" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230718 19:36:20.444" endtime="20230718 19:36:20.444"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230718 19:36:20.444" endtime="20230718 19:36:20.445"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230718 19:36:17.578" endtime="20230718 19:36:20.445"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230718 19:36:14.761" endtime="20230718 19:36:20.446"/>
</suite>
<suite id="s1-s8" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s8-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:28:58.848" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:01.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:01.189" level="INFO">${output} = 2023-07-18 19:29:00,977 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230718 19:28:58.844" endtime="20230718 19:29:01.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:01.190" level="INFO">2023-07-18 19:29:00,977 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230718 19:29:01.189" endtime="20230718 19:29:01.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:01.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:01.190" endtime="20230718 19:29:01.191"/>
</kw>
<status status="PASS" starttime="20230718 19:28:58.843" endtime="20230718 19:29:01.191"/>
</kw>
<msg timestamp="20230718 19:29:01.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:28:58.842" endtime="20230718 19:29:01.192"/>
</kw>
<msg timestamp="20230718 19:29:01.199" level="INFO">${output} = 2023-07-18 19:29:00,977 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230718 19:28:58.842" endtime="20230718 19:29:01.199"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:01.200" endtime="20230718 19:29:01.200"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:01.214" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:03.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:03.821" level="INFO">${output} = 2023-07-18 19:29:03,749 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230718 19:29:01.201" endtime="20230718 19:29:03.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:03.822" level="INFO">2023-07-18 19:29:03,749 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230718 19:29:03.822" endtime="20230718 19:29:03.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:03.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:03.822" endtime="20230718 19:29:03.823"/>
</kw>
<status status="PASS" starttime="20230718 19:29:01.201" endtime="20230718 19:29:03.823"/>
</kw>
<msg timestamp="20230718 19:29:03.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:01.201" endtime="20230718 19:29:03.824"/>
</kw>
<msg timestamp="20230718 19:29:03.824" level="INFO">${output} = 2023-07-18 19:29:03,749 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230718 19:29:01.200" endtime="20230718 19:29:03.824"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:03.824" endtime="20230718 19:29:03.825"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:28:58.841" endtime="20230718 19:29:03.825"/>
</test>
<test id="s1-s8-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:03.830" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:29:03.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:03.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:03.827" endtime="20230718 19:29:03.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:03.833" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:03.832" endtime="20230718 19:29:03.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:03.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:03.833" endtime="20230718 19:29:03.833"/>
</kw>
<status status="PASS" starttime="20230718 19:29:03.826" endtime="20230718 19:29:03.834"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:03.837" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:09.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:09.185" level="INFO">${output} = 2023-07-18 19:29:07,190 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:29:07,268 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:29:03.835" endtime="20230718 19:29:09.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:09.186" level="INFO">2023-07-18 19:29:07,190 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:29:07,268 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:29:07,268 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-18 19:29:07,542 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230718 19:29:09.186" endtime="20230718 19:29:09.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:09.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:09.187" endtime="20230718 19:29:09.187"/>
</kw>
<status status="PASS" starttime="20230718 19:29:03.835" endtime="20230718 19:29:09.187"/>
</kw>
<msg timestamp="20230718 19:29:09.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:03.834" endtime="20230718 19:29:09.188"/>
</kw>
<msg timestamp="20230718 19:29:09.188" level="INFO">${output} = 2023-07-18 19:29:07,190 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:29:07,268 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:29:03.834" endtime="20230718 19:29:09.188"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:09.188" endtime="20230718 19:29:09.189"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:09.191" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:09.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:09.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:09.189" endtime="20230718 19:29:09.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:09.195" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:09.194" endtime="20230718 19:29:09.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:09.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:09.195" endtime="20230718 19:29:09.196"/>
</kw>
<status status="PASS" starttime="20230718 19:29:09.189" endtime="20230718 19:29:09.196"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:03.826" endtime="20230718 19:29:09.196"/>
</test>
<test id="s1-s8-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:09.201" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:11.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:11.736" level="INFO">${output} = 2023-07-18 19:29:11,694 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230718 19:29:09.199" endtime="20230718 19:29:11.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:11.738" level="INFO">2023-07-18 19:29:11,694 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230718 19:29:11.737" endtime="20230718 19:29:11.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:11.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:11.738" endtime="20230718 19:29:11.739"/>
</kw>
<status status="PASS" starttime="20230718 19:29:09.198" endtime="20230718 19:29:11.739"/>
</kw>
<msg timestamp="20230718 19:29:11.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:09.198" endtime="20230718 19:29:11.739"/>
</kw>
<msg timestamp="20230718 19:29:11.740" level="INFO">${output} = 2023-07-18 19:29:11,694 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230718 19:29:09.198" endtime="20230718 19:29:11.740"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:11.740" endtime="20230718 19:29:11.740"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:09.197" endtime="20230718 19:29:11.740"/>
</test>
<test id="s1-s8-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:11.744" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:29:11.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:11.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:11.742" endtime="20230718 19:29:11.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:11.747" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:11.746" endtime="20230718 19:29:11.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:11.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:11.747" endtime="20230718 19:29:11.748"/>
</kw>
<status status="PASS" starttime="20230718 19:29:11.742" endtime="20230718 19:29:11.748"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:11.751" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:16.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:16.022" level="INFO">${output} = 2023-07-18 19:29:14,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:29:14,745 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:29:11.750" endtime="20230718 19:29:16.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:16.023" level="INFO">2023-07-18 19:29:14,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:29:14,745 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:29:14,745 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-18 19:29:14,972 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230718 19:29:16.023" endtime="20230718 19:29:16.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:16.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:16.024" endtime="20230718 19:29:16.024"/>
</kw>
<status status="PASS" starttime="20230718 19:29:11.749" endtime="20230718 19:29:16.024"/>
</kw>
<msg timestamp="20230718 19:29:16.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:11.749" endtime="20230718 19:29:16.025"/>
</kw>
<msg timestamp="20230718 19:29:16.025" level="INFO">${output} = 2023-07-18 19:29:14,681 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:29:14,745 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:29:11.748" endtime="20230718 19:29:16.025"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:16.025" endtime="20230718 19:29:16.026"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:16.028" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:16.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:16.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:16.026" endtime="20230718 19:29:16.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:16.032" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:16.031" endtime="20230718 19:29:16.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:16.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:16.032" endtime="20230718 19:29:16.032"/>
</kw>
<status status="PASS" starttime="20230718 19:29:16.026" endtime="20230718 19:29:16.033"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:11.741" endtime="20230718 19:29:16.033"/>
</test>
<test id="s1-s8-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:16.038" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:16.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:16.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:16.036" endtime="20230718 19:29:16.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:16.626" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:16.626" endtime="20230718 19:29:16.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:16.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:16.627" endtime="20230718 19:29:16.627"/>
</kw>
<status status="PASS" starttime="20230718 19:29:16.036" endtime="20230718 19:29:16.627"/>
</kw>
<msg timestamp="20230718 19:29:16.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:16.036" endtime="20230718 19:29:16.628"/>
</kw>
<status status="PASS" starttime="20230718 19:29:16.035" endtime="20230718 19:29:16.628"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:16.632" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:17.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:17.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:16.630" endtime="20230718 19:29:17.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:17.076" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:17.075" endtime="20230718 19:29:17.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:17.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:17.076" endtime="20230718 19:29:17.077"/>
</kw>
<status status="PASS" starttime="20230718 19:29:16.629" endtime="20230718 19:29:17.077"/>
</kw>
<msg timestamp="20230718 19:29:17.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:16.629" endtime="20230718 19:29:17.078"/>
</kw>
<status status="PASS" starttime="20230718 19:29:16.628" endtime="20230718 19:29:17.078"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:17.082" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:17.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:17.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:17.080" endtime="20230718 19:29:17.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:17.538" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:17.537" endtime="20230718 19:29:17.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:17.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:17.538" endtime="20230718 19:29:17.538"/>
</kw>
<status status="PASS" starttime="20230718 19:29:17.079" endtime="20230718 19:29:17.539"/>
</kw>
<msg timestamp="20230718 19:29:17.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:17.079" endtime="20230718 19:29:17.539"/>
</kw>
<status status="PASS" starttime="20230718 19:29:17.078" endtime="20230718 19:29:17.539"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:17.543" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:17.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:17.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:17.541" endtime="20230718 19:29:17.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:17.986" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:17.986" endtime="20230718 19:29:17.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:17.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:17.987" endtime="20230718 19:29:17.987"/>
</kw>
<status status="PASS" starttime="20230718 19:29:17.540" endtime="20230718 19:29:17.987"/>
</kw>
<msg timestamp="20230718 19:29:17.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:17.540" endtime="20230718 19:29:17.988"/>
</kw>
<status status="PASS" starttime="20230718 19:29:17.539" endtime="20230718 19:29:17.988"/>
</kw>
<status status="PASS" starttime="20230718 19:29:16.035" endtime="20230718 19:29:17.988"/>
</kw>
<status status="PASS" starttime="20230718 19:29:16.035" endtime="20230718 19:29:17.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:16.034" endtime="20230718 19:29:17.988"/>
</test>
<test id="s1-s8-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:17.994" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:20.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:20.245" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:29:17.992" endtime="20230718 19:29:20.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:20.246" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:29:20.246" endtime="20230718 19:29:20.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:20.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:20.247" endtime="20230718 19:29:20.247"/>
</kw>
<status status="PASS" starttime="20230718 19:29:17.992" endtime="20230718 19:29:20.248"/>
</kw>
<msg timestamp="20230718 19:29:20.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:17.991" endtime="20230718 19:29:20.248"/>
</kw>
<msg timestamp="20230718 19:29:20.249" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:29:17.991" endtime="20230718 19:29:20.249"/>
</kw>
<msg timestamp="20230718 19:29:20.249" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:29:17.991" endtime="20230718 19:29:20.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:20.249" endtime="20230718 19:29:20.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:20.250" endtime="20230718 19:29:20.250"/>
</kw>
<msg timestamp="20230718 19:29:20.250" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230718 19:29:17.990" endtime="20230718 19:29:20.250"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230718 19:29:20.250" endtime="20230718 19:29:20.251"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:17.989" endtime="20230718 19:29:20.251"/>
</test>
<test id="s1-s8-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:20.261" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:29:20.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:20.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:20.259" endtime="20230718 19:29:20.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:20.264" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:20.263" endtime="20230718 19:29:20.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:20.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:20.264" endtime="20230718 19:29:20.265"/>
</kw>
<status status="PASS" starttime="20230718 19:29:20.258" endtime="20230718 19:29:20.265"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:20.268" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:21.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:21.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:20.267" endtime="20230718 19:29:21.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:21.769" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:21.769" endtime="20230718 19:29:21.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:21.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:21.769" endtime="20230718 19:29:21.770"/>
</kw>
<msg timestamp="20230718 19:29:21.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:20.266" endtime="20230718 19:29:21.771"/>
</kw>
<msg timestamp="20230718 19:29:21.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:20.265" endtime="20230718 19:29:21.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:21.771" endtime="20230718 19:29:21.771"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:21.774" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:21.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:21.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:21.772" endtime="20230718 19:29:21.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:21.777" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:21.777" endtime="20230718 19:29:21.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:21.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:21.777" endtime="20230718 19:29:21.778"/>
</kw>
<status status="PASS" starttime="20230718 19:29:21.771" endtime="20230718 19:29:21.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:20.257" endtime="20230718 19:29:21.778"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230718 19:28:58.767" endtime="20230718 19:29:21.780"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s9-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230718 19:29:24.798" level="INFO">${random} = 46953</msg>
<status status="PASS" starttime="20230718 19:29:24.797" endtime="20230718 19:29:24.798"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:24.804" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-46953 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:29.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:29.210" level="INFO">${output} = 2023-07-18 19:29:27,976 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:29:28,077 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:29:24.800" endtime="20230718 19:29:29.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:29.212" level="INFO">2023-07-18 19:29:27,976 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:29:28,077 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-18 19:29:28,077 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230718 19:29:29.211" endtime="20230718 19:29:29.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:29.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:29.212" endtime="20230718 19:29:29.212"/>
</kw>
<status status="PASS" starttime="20230718 19:29:24.800" endtime="20230718 19:29:29.213"/>
</kw>
<msg timestamp="20230718 19:29:29.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:24.799" endtime="20230718 19:29:29.214"/>
</kw>
<msg timestamp="20230718 19:29:29.214" level="INFO">${output} = 2023-07-18 19:29:27,976 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-18 19:29:28,077 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230718 19:29:24.798" endtime="20230718 19:29:29.214"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:29.214" endtime="20230718 19:29:29.215"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:29.218" level="INFO">Running command 'cat /tmp/key-46953 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:29.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:29.220" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:29:29.215" endtime="20230718 19:29:29.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:29.221" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:29:29.221" endtime="20230718 19:29:29.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:29.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:29.221" endtime="20230718 19:29:29.222"/>
</kw>
<msg timestamp="20230718 19:29:29.222" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:29:29.215" endtime="20230718 19:29:29.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:29.223" endtime="20230718 19:29:29.223"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:29.226" level="INFO">Running command 'rm /tmp/key-46953 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:29.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:29.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:29.224" endtime="20230718 19:29:29.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:29.230" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:29.229" endtime="20230718 19:29:29.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:29.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:29.230" endtime="20230718 19:29:29.230"/>
</kw>
<status status="PASS" starttime="20230718 19:29:29.223" endtime="20230718 19:29:29.231"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:24.796" endtime="20230718 19:29:29.231"/>
</test>
<test id="s1-s9-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:29.236" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:29.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:29.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:29.235" endtime="20230718 19:29:29.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:29.703" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:29.702" endtime="20230718 19:29:29.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:29.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:29.704" endtime="20230718 19:29:29.704"/>
</kw>
<status status="PASS" starttime="20230718 19:29:29.234" endtime="20230718 19:29:29.704"/>
</kw>
<msg timestamp="20230718 19:29:29.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:29.234" endtime="20230718 19:29:29.705"/>
</kw>
<status status="PASS" starttime="20230718 19:29:29.234" endtime="20230718 19:29:29.705"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:29.708" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:30.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:30.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:29.706" endtime="20230718 19:29:30.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:30.180" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:30.179" endtime="20230718 19:29:30.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:30.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:30.180" endtime="20230718 19:29:30.181"/>
</kw>
<status status="PASS" starttime="20230718 19:29:29.706" endtime="20230718 19:29:30.181"/>
</kw>
<msg timestamp="20230718 19:29:30.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:29.706" endtime="20230718 19:29:30.181"/>
</kw>
<status status="PASS" starttime="20230718 19:29:29.705" endtime="20230718 19:29:30.182"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:30.185" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:30.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:30.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:30.183" endtime="20230718 19:29:30.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:30.641" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:30.640" endtime="20230718 19:29:30.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:30.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:30.641" endtime="20230718 19:29:30.642"/>
</kw>
<status status="PASS" starttime="20230718 19:29:30.182" endtime="20230718 19:29:30.642"/>
</kw>
<msg timestamp="20230718 19:29:30.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:30.182" endtime="20230718 19:29:30.642"/>
</kw>
<status status="PASS" starttime="20230718 19:29:30.182" endtime="20230718 19:29:30.643"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:30.646" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:31.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:31.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:30.644" endtime="20230718 19:29:31.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:31.098" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:31.097" endtime="20230718 19:29:31.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:31.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:31.098" endtime="20230718 19:29:31.099"/>
</kw>
<status status="PASS" starttime="20230718 19:29:30.643" endtime="20230718 19:29:31.099"/>
</kw>
<msg timestamp="20230718 19:29:31.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:30.643" endtime="20230718 19:29:31.100"/>
</kw>
<status status="PASS" starttime="20230718 19:29:30.643" endtime="20230718 19:29:31.100"/>
</kw>
<status status="PASS" starttime="20230718 19:29:29.233" endtime="20230718 19:29:31.100"/>
</kw>
<status status="PASS" starttime="20230718 19:29:29.233" endtime="20230718 19:29:31.100"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:29.232" endtime="20230718 19:29:31.100"/>
</test>
<test id="s1-s9-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:31.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:31.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:31.826" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:29:31.103" endtime="20230718 19:29:31.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:31.827" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:29:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:29:31.827" endtime="20230718 19:29:31.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:31.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:31.828" endtime="20230718 19:29:31.828"/>
</kw>
<msg timestamp="20230718 19:29:31.829" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:29:31.102" endtime="20230718 19:29:31.829"/>
</kw>
<msg timestamp="20230718 19:29:31.829" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:29:31.102" endtime="20230718 19:29:31.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:31.829" endtime="20230718 19:29:31.830"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:31.832" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:31.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:31.835" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:29:31.830" endtime="20230718 19:29:31.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:31.836" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:29:31.835" endtime="20230718 19:29:31.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:31.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:31.836" endtime="20230718 19:29:31.836"/>
</kw>
<msg timestamp="20230718 19:29:31.837" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:29:31.830" endtime="20230718 19:29:31.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:31.837" endtime="20230718 19:29:31.837"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:31.840" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:31.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:31.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:31.838" endtime="20230718 19:29:31.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:31.843" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:31.843" endtime="20230718 19:29:31.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:31.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:31.844" endtime="20230718 19:29:31.844"/>
</kw>
<status status="PASS" starttime="20230718 19:29:31.837" endtime="20230718 19:29:31.844"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:31.101" endtime="20230718 19:29:31.845"/>
</test>
<test id="s1-s9-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:31.849" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:32.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:32.457" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:21 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:29:31.847" endtime="20230718 19:29:32.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:32.459" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:21 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:29:32 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:29:32.458" endtime="20230718 19:29:32.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:32.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:32.459" endtime="20230718 19:29:32.459"/>
</kw>
<msg timestamp="20230718 19:29:32.460" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:21 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:29:31.846" endtime="20230718 19:29:32.460"/>
</kw>
<msg timestamp="20230718 19:29:32.460" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:21 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:29:31.846" endtime="20230718 19:29:32.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:32.460" endtime="20230718 19:29:32.461"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:32.464" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:32.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:32.466" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:29:32.462" endtime="20230718 19:29:32.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:32.467" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:29:32.466" endtime="20230718 19:29:32.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:32.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:32.467" endtime="20230718 19:29:32.468"/>
</kw>
<msg timestamp="20230718 19:29:32.468" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:29:32.461" endtime="20230718 19:29:32.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:32.468" endtime="20230718 19:29:32.469"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:32.471" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:32.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:32.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:29:32.469" endtime="20230718 19:29:32.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:32.474" level="INFO"/>
<status status="PASS" starttime="20230718 19:29:32.474" endtime="20230718 19:29:32.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:32.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:32.475" endtime="20230718 19:29:32.475"/>
</kw>
<status status="PASS" starttime="20230718 19:29:32.469" endtime="20230718 19:29:32.475"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:31.845" endtime="20230718 19:29:32.476"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230718 19:29:24.715" endtime="20230718 19:29:32.477"/>
</suite>
<suite id="s1-s10" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s10-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230718 19:29:35.512" endtime="20230718 19:29:35.513"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230718 19:29:35.513" endtime="20230718 19:29:35.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:29:35.518" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:29:43.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:29:43.219" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230718 19:29:35.514" endtime="20230718 19:29:43.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:29:43.224" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230718 19:29:43.222" endtime="20230718 19:29:43.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:29:43.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:29:43.225" endtime="20230718 19:29:43.225"/>
</kw>
<status status="PASS" starttime="20230718 19:29:35.514" endtime="20230718 19:29:43.225"/>
</kw>
<msg timestamp="20230718 19:29:43.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:29:35.514" endtime="20230718 19:29:43.227"/>
</kw>
<msg timestamp="20230718 19:29:43.227" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230718 19:29:35.513" endtime="20230718 19:29:43.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:29:43.227" endtime="20230718 19:29:43.228"/>
</kw>
<status status="PASS" starttime="20230718 19:29:43.227" endtime="20230718 19:29:43.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:29:35.511" endtime="20230718 19:29:43.229"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230718 19:29:35.465" endtime="20230718 19:29:43.230"/>
</suite>
<suite id="s1-s11" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s11-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230718 19:28:50.570" endtime="20230718 19:28:50.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:28:50.575" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:28:50.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:28:50.578" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=955f72ff7c16
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230718 19:28:50.571" endtime="20230718 19:28:50.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:28:50.579" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=955f72ff7c16
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230718 19:28:50.579" endtime="20230718 19:28:50.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:28:50.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:28:50.579" endtime="20230718 19:28:50.580"/>
</kw>
<status status="PASS" starttime="20230718 19:28:50.571" endtime="20230718 19:28:50.580"/>
</kw>
<msg timestamp="20230718 19:28:50.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:28:50.571" endtime="20230718 19:28:50.581"/>
</kw>
<msg timestamp="20230718 19:28:50.581" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=955f72ff7c16
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230718 19:28:50.570" endtime="20230718 19:28:50.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:28:50.582" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=955f72ff7c16
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230718 19:28:50.582" endtime="20230718 19:28:50.582"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230718 19:28:50.582" endtime="20230718 19:28:50.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:28:50.586" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:28:53.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:28:53.434" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230718 19:28:50.584" endtime="20230718 19:28:53.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:28:53.435" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230718 19:28:53.435" endtime="20230718 19:28:53.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:28:53.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:28:53.436" endtime="20230718 19:28:53.436"/>
</kw>
<status status="PASS" starttime="20230718 19:28:50.584" endtime="20230718 19:28:53.436"/>
</kw>
<msg timestamp="20230718 19:28:53.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:28:50.583" endtime="20230718 19:28:53.437"/>
</kw>
<msg timestamp="20230718 19:28:53.437" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230718 19:28:50.583" endtime="20230718 19:28:53.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:28:53.438" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230718 19:28:53.437" endtime="20230718 19:28:53.438"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230718 19:28:53.438" endtime="20230718 19:28:53.438"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230718 19:28:50.569" endtime="20230718 19:28:53.438"/>
</test>
<test id="s1-s11-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230718 19:28:53.442" endtime="20230718 19:28:53.443"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230718 19:28:53.443" endtime="20230718 19:28:53.443"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:28:53.448" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:28:55.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:28:55.899" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230718 19:28:53.445" endtime="20230718 19:28:55.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:28:55.900" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230718 19:28:55.900" endtime="20230718 19:28:55.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:28:55.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:28:55.900" endtime="20230718 19:28:55.901"/>
</kw>
<status status="PASS" starttime="20230718 19:28:53.444" endtime="20230718 19:28:55.901"/>
</kw>
<msg timestamp="20230718 19:28:55.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:28:53.444" endtime="20230718 19:28:55.902"/>
</kw>
<msg timestamp="20230718 19:28:55.902" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230718 19:28:53.443" endtime="20230718 19:28:55.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:28:55.902" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230718 19:28:55.902" endtime="20230718 19:28:55.902"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230718 19:28:55.902" endtime="20230718 19:28:55.903"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230718 19:28:53.440" endtime="20230718 19:28:55.903"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230718 19:28:50.520" endtime="20230718 19:28:55.905"/>
</suite>
<suite id="s1-s12" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s12-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:20.160" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:32:20.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:20.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:20.157" endtime="20230718 19:32:20.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:20.163" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:20.162" endtime="20230718 19:32:20.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:20.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:20.163" endtime="20230718 19:32:20.163"/>
</kw>
<status status="PASS" starttime="20230718 19:32:20.156" endtime="20230718 19:32:20.164"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:20.168" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:28.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:28.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:20.165" endtime="20230718 19:32:28.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:28.794" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:28.794" endtime="20230718 19:32:28.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:28.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:28.795" endtime="20230718 19:32:28.795"/>
</kw>
<status status="PASS" starttime="20230718 19:32:20.165" endtime="20230718 19:32:28.795"/>
</kw>
<msg timestamp="20230718 19:32:28.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:20.164" endtime="20230718 19:32:28.796"/>
</kw>
<msg timestamp="20230718 19:32:28.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:20.164" endtime="20230718 19:32:28.796"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:28.796" endtime="20230718 19:32:28.796"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:28.800" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:28.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:28.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:28.797" endtime="20230718 19:32:28.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:28.804" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:28.803" endtime="20230718 19:32:28.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:28.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:28.804" endtime="20230718 19:32:28.805"/>
</kw>
<status status="PASS" starttime="20230718 19:32:28.797" endtime="20230718 19:32:28.805"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:20.156" endtime="20230718 19:32:28.805"/>
</test>
<test id="s1-s12-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:28.810" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:32:28.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:28.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:28.808" endtime="20230718 19:32:28.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:28.813" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:28.813" endtime="20230718 19:32:28.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:28.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:28.813" endtime="20230718 19:32:28.814"/>
</kw>
<status status="PASS" starttime="20230718 19:32:28.808" endtime="20230718 19:32:28.814"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:28.818" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:35.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:35.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:28.816" endtime="20230718 19:32:35.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:35.738" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:35.737" endtime="20230718 19:32:35.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:35.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:35.738" endtime="20230718 19:32:35.739"/>
</kw>
<status status="PASS" starttime="20230718 19:32:28.815" endtime="20230718 19:32:35.739"/>
</kw>
<msg timestamp="20230718 19:32:35.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:28.815" endtime="20230718 19:32:35.739"/>
</kw>
<msg timestamp="20230718 19:32:35.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:28.814" endtime="20230718 19:32:35.739"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:35.739" endtime="20230718 19:32:35.740"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:35.743" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:35.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:35.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:35.740" endtime="20230718 19:32:35.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:35.749" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:35.749" endtime="20230718 19:32:35.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:35.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:35.749" endtime="20230718 19:32:35.750"/>
</kw>
<status status="PASS" starttime="20230718 19:32:35.740" endtime="20230718 19:32:35.750"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:28.807" endtime="20230718 19:32:35.750"/>
</test>
<test id="s1-s12-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:35.757" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:36.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:36.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:35.754" endtime="20230718 19:32:36.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:36.287" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:36.286" endtime="20230718 19:32:36.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:36.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:36.288" endtime="20230718 19:32:36.288"/>
</kw>
<status status="PASS" starttime="20230718 19:32:35.754" endtime="20230718 19:32:36.288"/>
</kw>
<msg timestamp="20230718 19:32:36.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:35.753" endtime="20230718 19:32:36.289"/>
</kw>
<status status="PASS" starttime="20230718 19:32:35.753" endtime="20230718 19:32:36.289"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:36.294" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:36.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:36.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:36.291" endtime="20230718 19:32:36.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:36.816" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:36.815" endtime="20230718 19:32:36.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:36.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:36.816" endtime="20230718 19:32:36.817"/>
</kw>
<status status="PASS" starttime="20230718 19:32:36.290" endtime="20230718 19:32:36.817"/>
</kw>
<msg timestamp="20230718 19:32:36.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:36.290" endtime="20230718 19:32:36.818"/>
</kw>
<status status="PASS" starttime="20230718 19:32:36.289" endtime="20230718 19:32:36.818"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:36.823" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:37.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:37.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:36.820" endtime="20230718 19:32:37.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:37.333" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:37.332" endtime="20230718 19:32:37.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:37.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:37.334" endtime="20230718 19:32:37.335"/>
</kw>
<status status="PASS" starttime="20230718 19:32:36.819" endtime="20230718 19:32:37.335"/>
</kw>
<msg timestamp="20230718 19:32:37.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:36.819" endtime="20230718 19:32:37.335"/>
</kw>
<status status="PASS" starttime="20230718 19:32:36.818" endtime="20230718 19:32:37.335"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:37.340" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:37.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:37.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:37.337" endtime="20230718 19:32:37.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:37.838" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:37.837" endtime="20230718 19:32:37.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:37.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:37.838" endtime="20230718 19:32:37.839"/>
</kw>
<status status="PASS" starttime="20230718 19:32:37.337" endtime="20230718 19:32:37.839"/>
</kw>
<msg timestamp="20230718 19:32:37.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:37.336" endtime="20230718 19:32:37.839"/>
</kw>
<status status="PASS" starttime="20230718 19:32:37.336" endtime="20230718 19:32:37.839"/>
</kw>
<status status="PASS" starttime="20230718 19:32:35.752" endtime="20230718 19:32:37.839"/>
</kw>
<status status="PASS" starttime="20230718 19:32:35.752" endtime="20230718 19:32:37.839"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:35.751" endtime="20230718 19:32:37.840"/>
</test>
<test id="s1-s12-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:37.850" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:38.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:38.605" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:32:37.847" endtime="20230718 19:32:38.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:38.606" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:32:38.605" endtime="20230718 19:32:38.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:38.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:38.606" endtime="20230718 19:32:38.607"/>
</kw>
<status status="PASS" starttime="20230718 19:32:37.847" endtime="20230718 19:32:38.607"/>
</kw>
<msg timestamp="20230718 19:32:38.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:37.846" endtime="20230718 19:32:38.608"/>
</kw>
<msg timestamp="20230718 19:32:38.608" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:32:37.846" endtime="20230718 19:32:38.608"/>
</kw>
<msg timestamp="20230718 19:32:38.608" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:32:37.845" endtime="20230718 19:32:38.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:38.608" endtime="20230718 19:32:38.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:38.609" endtime="20230718 19:32:38.609"/>
</kw>
<msg timestamp="20230718 19:32:38.610" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230718 19:32:37.845" endtime="20230718 19:32:38.610"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230718 19:32:38.610" endtime="20230718 19:32:38.610"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:37.841" endtime="20230718 19:32:38.610"/>
</test>
<test id="s1-s12-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:38.615" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:32:38.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:38.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:38.612" endtime="20230718 19:32:38.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:38.619" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:38.618" endtime="20230718 19:32:38.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:38.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:38.619" endtime="20230718 19:32:38.620"/>
</kw>
<status status="PASS" starttime="20230718 19:32:38.612" endtime="20230718 19:32:38.620"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:38.625" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:39.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:39.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:38.621" endtime="20230718 19:32:39.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:39.778" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:39.777" endtime="20230718 19:32:39.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:39.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:39.778" endtime="20230718 19:32:39.779"/>
</kw>
<msg timestamp="20230718 19:32:39.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:38.621" endtime="20230718 19:32:39.779"/>
</kw>
<msg timestamp="20230718 19:32:39.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:38.620" endtime="20230718 19:32:39.780"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:39.780" endtime="20230718 19:32:39.780"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:39.784" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:39.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:39.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:39.781" endtime="20230718 19:32:39.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:39.788" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:39.787" endtime="20230718 19:32:39.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:39.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:39.789" endtime="20230718 19:32:39.789"/>
</kw>
<status status="PASS" starttime="20230718 19:32:39.781" endtime="20230718 19:32:39.789"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:38.611" endtime="20230718 19:32:39.790"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230718 19:32:20.070" endtime="20230718 19:32:39.792"/>
</suite>
<suite id="s1-s13" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s13-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:43.144" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:46.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:46.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:43.141" endtime="20230718 19:32:46.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:46.911" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:46.910" endtime="20230718 19:32:46.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:46.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:46.912" endtime="20230718 19:32:46.912"/>
</kw>
<status status="PASS" starttime="20230718 19:32:43.141" endtime="20230718 19:32:46.913"/>
</kw>
<msg timestamp="20230718 19:32:46.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:43.141" endtime="20230718 19:32:46.913"/>
</kw>
<msg timestamp="20230718 19:32:46.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:43.140" endtime="20230718 19:32:46.913"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:46.913" endtime="20230718 19:32:46.914"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:46.919" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:50.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:50.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:46.916" endtime="20230718 19:32:50.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:50.504" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:50.501" endtime="20230718 19:32:50.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:50.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:50.505" endtime="20230718 19:32:50.508"/>
</kw>
<status status="PASS" starttime="20230718 19:32:46.915" endtime="20230718 19:32:50.508"/>
</kw>
<msg timestamp="20230718 19:32:50.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:46.915" endtime="20230718 19:32:50.508"/>
</kw>
<msg timestamp="20230718 19:32:50.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:46.914" endtime="20230718 19:32:50.511"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:50.511" endtime="20230718 19:32:50.511"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:43.140" endtime="20230718 19:32:50.513"/>
</test>
<test id="s1-s13-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:50.521" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:32:50.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:50.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:50.518" endtime="20230718 19:32:50.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:50.525" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:50.524" endtime="20230718 19:32:50.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:50.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:50.525" endtime="20230718 19:32:50.526"/>
</kw>
<status status="PASS" starttime="20230718 19:32:50.517" endtime="20230718 19:32:50.526"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:50.531" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:57.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:57.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:50.528" endtime="20230718 19:32:57.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:57.026" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:57.025" endtime="20230718 19:32:57.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:57.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:57.026" endtime="20230718 19:32:57.026"/>
</kw>
<status status="PASS" starttime="20230718 19:32:50.528" endtime="20230718 19:32:57.027"/>
</kw>
<msg timestamp="20230718 19:32:57.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:50.527" endtime="20230718 19:32:57.027"/>
</kw>
<msg timestamp="20230718 19:32:57.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:50.526" endtime="20230718 19:32:57.027"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:57.027" endtime="20230718 19:32:57.027"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:57.030" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:57.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:57.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:57.028" endtime="20230718 19:32:57.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:57.036" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:57.035" endtime="20230718 19:32:57.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:57.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:57.037" endtime="20230718 19:32:57.037"/>
</kw>
<status status="PASS" starttime="20230718 19:32:57.028" endtime="20230718 19:32:57.038"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:50.516" endtime="20230718 19:32:57.038"/>
</test>
<test id="s1-s13-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:57.044" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:00.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:00.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:57.041" endtime="20230718 19:33:00.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:00.265" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:00.264" endtime="20230718 19:33:00.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:00.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:00.265" endtime="20230718 19:33:00.266"/>
</kw>
<status status="PASS" starttime="20230718 19:32:57.041" endtime="20230718 19:33:00.266"/>
</kw>
<msg timestamp="20230718 19:33:00.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:57.040" endtime="20230718 19:33:00.266"/>
</kw>
<msg timestamp="20230718 19:33:00.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:57.040" endtime="20230718 19:33:00.267"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:00.267" endtime="20230718 19:33:00.267"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:57.039" endtime="20230718 19:33:00.267"/>
</test>
<test id="s1-s13-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:00.272" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:33:00.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:00.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:00.269" endtime="20230718 19:33:00.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:00.276" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:00.275" endtime="20230718 19:33:00.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:00.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:00.276" endtime="20230718 19:33:00.277"/>
</kw>
<status status="PASS" starttime="20230718 19:33:00.269" endtime="20230718 19:33:00.277"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:00.281" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:06.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:06.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:00.279" endtime="20230718 19:33:06.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:06.740" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:06.739" endtime="20230718 19:33:06.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:06.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:06.740" endtime="20230718 19:33:06.741"/>
</kw>
<status status="PASS" starttime="20230718 19:33:00.278" endtime="20230718 19:33:06.741"/>
</kw>
<msg timestamp="20230718 19:33:06.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:00.278" endtime="20230718 19:33:06.741"/>
</kw>
<msg timestamp="20230718 19:33:06.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:00.277" endtime="20230718 19:33:06.741"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:06.742" endtime="20230718 19:33:06.742"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:06.745" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:06.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:06.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:06.743" endtime="20230718 19:33:06.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:06.752" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:06.751" endtime="20230718 19:33:06.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:06.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:06.753" endtime="20230718 19:33:06.753"/>
</kw>
<status status="PASS" starttime="20230718 19:33:06.742" endtime="20230718 19:33:06.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:00.268" endtime="20230718 19:33:06.754"/>
</test>
<test id="s1-s13-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:06.762" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:07.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:07.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:06.759" endtime="20230718 19:33:07.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:07.314" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:07.313" endtime="20230718 19:33:07.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:07.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:07.314" endtime="20230718 19:33:07.314"/>
</kw>
<status status="PASS" starttime="20230718 19:33:06.758" endtime="20230718 19:33:07.315"/>
</kw>
<msg timestamp="20230718 19:33:07.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:06.758" endtime="20230718 19:33:07.315"/>
</kw>
<status status="PASS" starttime="20230718 19:33:06.757" endtime="20230718 19:33:07.315"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:07.320" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:07.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:07.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:07.317" endtime="20230718 19:33:07.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:07.820" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:07.819" endtime="20230718 19:33:07.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:07.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:07.820" endtime="20230718 19:33:07.821"/>
</kw>
<status status="PASS" starttime="20230718 19:33:07.317" endtime="20230718 19:33:07.821"/>
</kw>
<msg timestamp="20230718 19:33:07.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:07.316" endtime="20230718 19:33:07.821"/>
</kw>
<status status="PASS" starttime="20230718 19:33:07.315" endtime="20230718 19:33:07.821"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:07.825" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:08.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:08.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:07.823" endtime="20230718 19:33:08.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:08.342" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:08.341" endtime="20230718 19:33:08.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:08.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:08.342" endtime="20230718 19:33:08.342"/>
</kw>
<status status="PASS" starttime="20230718 19:33:07.822" endtime="20230718 19:33:08.343"/>
</kw>
<msg timestamp="20230718 19:33:08.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:07.822" endtime="20230718 19:33:08.343"/>
</kw>
<status status="PASS" starttime="20230718 19:33:07.821" endtime="20230718 19:33:08.343"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:08.348" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:08.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:08.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:08.345" endtime="20230718 19:33:08.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:08.855" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:08.855" endtime="20230718 19:33:08.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:08.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:08.856" endtime="20230718 19:33:08.856"/>
</kw>
<status status="PASS" starttime="20230718 19:33:08.344" endtime="20230718 19:33:08.856"/>
</kw>
<msg timestamp="20230718 19:33:08.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:08.344" endtime="20230718 19:33:08.856"/>
</kw>
<status status="PASS" starttime="20230718 19:33:08.343" endtime="20230718 19:33:08.856"/>
</kw>
<status status="PASS" starttime="20230718 19:33:06.757" endtime="20230718 19:33:08.857"/>
</kw>
<status status="PASS" starttime="20230718 19:33:06.756" endtime="20230718 19:33:08.857"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:06.755" endtime="20230718 19:33:08.857"/>
</test>
<test id="s1-s13-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:08.869" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:09.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:09.597" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:33:08.861" endtime="20230718 19:33:09.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:09.599" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:33:09.598" endtime="20230718 19:33:09.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:09.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:09.599" endtime="20230718 19:33:09.600"/>
</kw>
<status status="PASS" starttime="20230718 19:33:08.860" endtime="20230718 19:33:09.600"/>
</kw>
<msg timestamp="20230718 19:33:09.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:08.860" endtime="20230718 19:33:09.600"/>
</kw>
<msg timestamp="20230718 19:33:09.601" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:33:08.859" endtime="20230718 19:33:09.601"/>
</kw>
<msg timestamp="20230718 19:33:09.601" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230718 19:33:08.859" endtime="20230718 19:33:09.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:09.601" endtime="20230718 19:33:09.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:09.602" endtime="20230718 19:33:09.602"/>
</kw>
<msg timestamp="20230718 19:33:09.602" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230718 19:33:08.858" endtime="20230718 19:33:09.602"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230718 19:33:09.602" endtime="20230718 19:33:09.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:08.858" endtime="20230718 19:33:09.603"/>
</test>
<test id="s1-s13-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:09.608" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230718 19:33:09.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:09.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:09.605" endtime="20230718 19:33:09.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:09.612" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:09.611" endtime="20230718 19:33:09.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:09.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:09.612" endtime="20230718 19:33:09.613"/>
</kw>
<status status="PASS" starttime="20230718 19:33:09.605" endtime="20230718 19:33:09.613"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:09.617" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:10.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:10.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:09.614" endtime="20230718 19:33:10.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:10.459" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:10.458" endtime="20230718 19:33:10.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:10.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:10.459" endtime="20230718 19:33:10.459"/>
</kw>
<msg timestamp="20230718 19:33:10.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:09.614" endtime="20230718 19:33:10.460"/>
</kw>
<msg timestamp="20230718 19:33:10.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:09.613" endtime="20230718 19:33:10.460"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:10.460" endtime="20230718 19:33:10.460"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:10.464" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:10.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:10.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:10.461" endtime="20230718 19:33:10.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:10.469" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:10.468" endtime="20230718 19:33:10.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:10.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:10.469" endtime="20230718 19:33:10.470"/>
</kw>
<status status="PASS" starttime="20230718 19:33:10.461" endtime="20230718 19:33:10.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:09.604" endtime="20230718 19:33:10.470"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230718 19:32:43.050" endtime="20230718 19:33:10.472"/>
</suite>
<suite id="s1-s14" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s14-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230718 19:33:14.011" level="INFO">${random} = 82309</msg>
<status status="PASS" starttime="20230718 19:33:14.011" endtime="20230718 19:33:14.011"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:14.016" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-82309 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:19.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:19.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:14.013" endtime="20230718 19:33:19.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:19.371" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:19.370" endtime="20230718 19:33:19.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:19.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:19.371" endtime="20230718 19:33:19.372"/>
</kw>
<status status="PASS" starttime="20230718 19:33:14.013" endtime="20230718 19:33:19.372"/>
</kw>
<msg timestamp="20230718 19:33:19.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:14.012" endtime="20230718 19:33:19.372"/>
</kw>
<msg timestamp="20230718 19:33:19.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:14.012" endtime="20230718 19:33:19.373"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:19.373" endtime="20230718 19:33:19.373"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:19.377" level="INFO">Running command 'cat /tmp/key-82309 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:19.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:19.380" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:33:19.374" endtime="20230718 19:33:19.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:19.381" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:33:19.380" endtime="20230718 19:33:19.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:19.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:19.381" endtime="20230718 19:33:19.382"/>
</kw>
<msg timestamp="20230718 19:33:19.382" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:33:19.373" endtime="20230718 19:33:19.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:19.382" endtime="20230718 19:33:19.383"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:19.386" level="INFO">Running command 'rm /tmp/key-82309 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:19.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:19.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:19.384" endtime="20230718 19:33:19.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:19.391" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:19.389" endtime="20230718 19:33:19.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:19.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:19.391" endtime="20230718 19:33:19.391"/>
</kw>
<status status="PASS" starttime="20230718 19:33:19.383" endtime="20230718 19:33:19.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:14.010" endtime="20230718 19:33:19.392"/>
</test>
<test id="s1-s14-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:19.398" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:19.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:19.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:19.396" endtime="20230718 19:33:19.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:19.922" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:19.921" endtime="20230718 19:33:19.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:19.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:19.922" endtime="20230718 19:33:19.923"/>
</kw>
<status status="PASS" starttime="20230718 19:33:19.395" endtime="20230718 19:33:19.923"/>
</kw>
<msg timestamp="20230718 19:33:19.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:19.395" endtime="20230718 19:33:19.923"/>
</kw>
<status status="PASS" starttime="20230718 19:33:19.394" endtime="20230718 19:33:19.923"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:19.928" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:20.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:20.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:19.925" endtime="20230718 19:33:20.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:20.477" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:20.477" endtime="20230718 19:33:20.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:20.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:20.478" endtime="20230718 19:33:20.478"/>
</kw>
<status status="PASS" starttime="20230718 19:33:19.924" endtime="20230718 19:33:20.479"/>
</kw>
<msg timestamp="20230718 19:33:20.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:19.924" endtime="20230718 19:33:20.479"/>
</kw>
<status status="PASS" starttime="20230718 19:33:19.923" endtime="20230718 19:33:20.479"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:20.483" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:21.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:21.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:20.481" endtime="20230718 19:33:21.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:21.032" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:21.031" endtime="20230718 19:33:21.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:21.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:21.032" endtime="20230718 19:33:21.033"/>
</kw>
<status status="PASS" starttime="20230718 19:33:20.480" endtime="20230718 19:33:21.033"/>
</kw>
<msg timestamp="20230718 19:33:21.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:20.480" endtime="20230718 19:33:21.033"/>
</kw>
<status status="PASS" starttime="20230718 19:33:20.479" endtime="20230718 19:33:21.033"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:21.038" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:21.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:21.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:21.035" endtime="20230718 19:33:21.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:21.647" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:21.646" endtime="20230718 19:33:21.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:21.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:21.647" endtime="20230718 19:33:21.648"/>
</kw>
<status status="PASS" starttime="20230718 19:33:21.034" endtime="20230718 19:33:21.648"/>
</kw>
<msg timestamp="20230718 19:33:21.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:21.034" endtime="20230718 19:33:21.650"/>
</kw>
<status status="PASS" starttime="20230718 19:33:21.033" endtime="20230718 19:33:21.650"/>
</kw>
<status status="PASS" starttime="20230718 19:33:19.394" endtime="20230718 19:33:21.650"/>
</kw>
<status status="PASS" starttime="20230718 19:33:19.394" endtime="20230718 19:33:21.650"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:19.393" endtime="20230718 19:33:21.650"/>
</test>
<test id="s1-s14-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:21.656" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:22.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:22.411" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:06 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:33:21.653" endtime="20230718 19:33:22.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:22.412" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:06 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:33:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:33:22.411" endtime="20230718 19:33:22.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:22.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:22.413" endtime="20230718 19:33:22.413"/>
</kw>
<msg timestamp="20230718 19:33:22.413" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:06 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:33:21.652" endtime="20230718 19:33:22.413"/>
</kw>
<msg timestamp="20230718 19:33:22.413" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:06 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:33:21.652" endtime="20230718 19:33:22.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:22.414" endtime="20230718 19:33:22.414"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:22.417" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:22.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:22.420" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:33:22.415" endtime="20230718 19:33:22.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:22.421" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:33:22.421" endtime="20230718 19:33:22.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:22.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:22.422" endtime="20230718 19:33:22.422"/>
</kw>
<msg timestamp="20230718 19:33:22.422" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:33:22.414" endtime="20230718 19:33:22.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:22.423" endtime="20230718 19:33:22.427"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:22.431" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:22.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:22.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:22.428" endtime="20230718 19:33:22.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:22.435" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:22.434" endtime="20230718 19:33:22.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:22.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:22.435" endtime="20230718 19:33:22.436"/>
</kw>
<status status="PASS" starttime="20230718 19:33:22.428" endtime="20230718 19:33:22.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:21.651" endtime="20230718 19:33:22.436"/>
</test>
<test id="s1-s14-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:22.443" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:23.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:23.130" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:33:22.440" endtime="20230718 19:33:23.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:23.132" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:33:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:33:23.131" endtime="20230718 19:33:23.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:23.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:23.132" endtime="20230718 19:33:23.133"/>
</kw>
<msg timestamp="20230718 19:33:23.133" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:33:22.440" endtime="20230718 19:33:23.133"/>
</kw>
<msg timestamp="20230718 19:33:23.133" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:33:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:33:22.439" endtime="20230718 19:33:23.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:23.133" endtime="20230718 19:33:23.134"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:23.137" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:23.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:23.141" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:33:23.135" endtime="20230718 19:33:23.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:23.142" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:33:23.141" endtime="20230718 19:33:23.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:23.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:23.142" endtime="20230718 19:33:23.143"/>
</kw>
<msg timestamp="20230718 19:33:23.143" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:33:23.134" endtime="20230718 19:33:23.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:23.143" endtime="20230718 19:33:23.144"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:23.147" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:23.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:23.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:23.144" endtime="20230718 19:33:23.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:23.151" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:23.150" endtime="20230718 19:33:23.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:23.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:23.152" endtime="20230718 19:33:23.152"/>
</kw>
<status status="PASS" starttime="20230718 19:33:23.144" endtime="20230718 19:33:23.153"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:22.438" endtime="20230718 19:33:23.153"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230718 19:33:13.915" endtime="20230718 19:33:23.155"/>
</suite>
<suite id="s1-s15" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s15-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230718 19:33:26.492" endtime="20230718 19:33:26.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:26.496" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:30.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:30.635" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230718 19:33:26.494" endtime="20230718 19:33:30.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:30.636" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230718 19:33:30.636" endtime="20230718 19:33:30.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:30.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:30.637" endtime="20230718 19:33:30.637"/>
</kw>
<status status="PASS" starttime="20230718 19:33:26.493" endtime="20230718 19:33:30.638"/>
</kw>
<msg timestamp="20230718 19:33:30.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:26.493" endtime="20230718 19:33:30.638"/>
</kw>
<msg timestamp="20230718 19:33:30.638" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230718 19:33:26.492" endtime="20230718 19:33:30.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:30.638" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230718 19:33:30.638" endtime="20230718 19:33:30.638"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230718 19:33:30.639" endtime="20230718 19:33:30.639"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230718 19:33:26.491" endtime="20230718 19:33:30.639"/>
</test>
<test id="s1-s15-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230718 19:33:30.641" endtime="20230718 19:33:30.642"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:30.646" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:34.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:34.795" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230718 19:33:30.643" endtime="20230718 19:33:34.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:34.796" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230718 19:33:34.795" endtime="20230718 19:33:34.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:34.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:34.796" endtime="20230718 19:33:34.797"/>
</kw>
<status status="PASS" starttime="20230718 19:33:30.642" endtime="20230718 19:33:34.797"/>
</kw>
<msg timestamp="20230718 19:33:34.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:33:30.642" endtime="20230718 19:33:34.797"/>
</kw>
<msg timestamp="20230718 19:33:34.797" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230718 19:33:30.642" endtime="20230718 19:33:34.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:34.798" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230718 19:33:34.798" endtime="20230718 19:33:34.798"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230718 19:33:34.798" endtime="20230718 19:33:34.798"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230718 19:33:30.640" endtime="20230718 19:33:34.799"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230718 19:33:26.439" endtime="20230718 19:33:34.800"/>
</suite>
<suite id="s1-s16" name="Upgrade-Snapshot-Check" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<test id="s1-s16-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="28">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:38.132" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:42.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:42.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:38.129" endtime="20230718 19:33:42.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:42.060" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:42.060" endtime="20230718 19:33:42.060"/>
</kw>
<msg timestamp="20230718 19:33:42.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:38.128" endtime="20230718 19:33:42.061"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:42.061" endtime="20230718 19:33:42.061"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:42.065" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:45.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:33:45.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:42.062" endtime="20230718 19:33:45.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:45.588" level="INFO"/>
<status status="PASS" starttime="20230718 19:33:45.587" endtime="20230718 19:33:45.588"/>
</kw>
<msg timestamp="20230718 19:33:45.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:33:42.062" endtime="20230718 19:33:45.588"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:45.588" endtime="20230718 19:33:45.589"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:45.592" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:49.006" level="INFO">${rc} = 255</msg>
<msg timestamp="20230718 19:33:49.006" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230718 19:33:45.590" endtime="20230718 19:33:49.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:49.008" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230718 19:33:49.007" endtime="20230718 19:33:49.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:49.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:49.008" endtime="20230718 19:33:49.009"/>
</kw>
<msg timestamp="20230718 19:33:49.009" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230718 19:33:45.589" endtime="20230718 19:33:49.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:49.009" endtime="20230718 19:33:49.010"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:38.127" endtime="20230718 19:33:49.010"/>
</test>
<test id="s1-s16-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="36">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:49.016" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:52.710" level="INFO">${rc} = 255</msg>
<msg timestamp="20230718 19:33:52.710" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230718 19:33:49.013" endtime="20230718 19:33:52.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:52.711" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230718 19:33:52.710" endtime="20230718 19:33:52.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:52.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:52.712" endtime="20230718 19:33:52.712"/>
</kw>
<msg timestamp="20230718 19:33:52.712" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230718 19:33:49.012" endtime="20230718 19:33:52.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:52.713" endtime="20230718 19:33:52.713"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:49.011" endtime="20230718 19:33:52.713"/>
</test>
<test id="s1-s16-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="40">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:52.718" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:55.983" level="INFO">${rc} = 255</msg>
<msg timestamp="20230718 19:33:55.983" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230718 19:33:52.716" endtime="20230718 19:33:55.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:55.985" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230718 19:33:55.984" endtime="20230718 19:33:55.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:55.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:55.985" endtime="20230718 19:33:55.986"/>
</kw>
<msg timestamp="20230718 19:33:55.986" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230718 19:33:52.715" endtime="20230718 19:33:55.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:55.986" endtime="20230718 19:33:55.987"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:52.714" endtime="20230718 19:33:55.987"/>
</test>
<test id="s1-s16-t4" name="Attempt to delete when snapshot feature is disabled" line="44">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:33:55.992" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:33:59.436" level="INFO">${rc} = 255</msg>
<msg timestamp="20230718 19:33:59.436" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230718 19:33:55.990" endtime="20230718 19:33:59.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:33:59.437" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230718 19:33:59.436" endtime="20230718 19:33:59.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:33:59.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:33:59.437" endtime="20230718 19:33:59.438"/>
</kw>
<msg timestamp="20230718 19:33:59.438" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230718 19:33:55.989" endtime="20230718 19:33:59.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:33:59.438" endtime="20230718 19:33:59.439"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:33:55.988" endtime="20230718 19:33:59.439"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20230718 19:33:38.071" endtime="20230718 19:33:59.441"/>
</suite>
<suite id="s1-s17" name="Prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s17-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230718 19:34:02.883" endtime="20230718 19:34:02.884"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230718 19:34:02.884" endtime="20230718 19:34:02.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:34:02.890" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:34:12.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:34:12.387" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [67].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230718 19:34:02.887" endtime="20230718 19:34:12.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:34:12.389" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [67].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [67]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [67]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [67]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230718 19:34:12.388" endtime="20230718 19:34:12.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:34:12.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:34:12.389" endtime="20230718 19:34:12.389"/>
</kw>
<status status="PASS" starttime="20230718 19:34:02.886" endtime="20230718 19:34:12.390"/>
</kw>
<msg timestamp="20230718 19:34:12.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:34:02.886" endtime="20230718 19:34:12.390"/>
</kw>
<msg timestamp="20230718 19:34:12.390" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [67].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230718 19:34:02.886" endtime="20230718 19:34:12.390"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:34:12.391" endtime="20230718 19:34:12.391"/>
</kw>
<status status="PASS" starttime="20230718 19:34:12.390" endtime="20230718 19:34:12.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:34:02.882" endtime="20230718 19:34:12.391"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230718 19:34:02.825" endtime="20230718 19:34:12.393"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230718 19:32:02.054" level="INFO">${random} = 36788</msg>
<status status="PASS" starttime="20230718 19:32:02.054" endtime="20230718 19:32:02.054"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:02.058" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-36788 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:08.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:08.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:02.056" endtime="20230718 19:32:08.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:08.594" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:08.594" endtime="20230718 19:32:08.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:08.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:08.595" endtime="20230718 19:32:08.595"/>
</kw>
<status status="PASS" starttime="20230718 19:32:02.055" endtime="20230718 19:32:08.595"/>
</kw>
<msg timestamp="20230718 19:32:08.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:02.055" endtime="20230718 19:32:08.596"/>
</kw>
<msg timestamp="20230718 19:32:08.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:02.054" endtime="20230718 19:32:08.596"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:08.596" endtime="20230718 19:32:08.596"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:08.600" level="INFO">Running command 'cat /tmp/key-36788 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:08.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:08.603" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:32:08.597" endtime="20230718 19:32:08.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:08.609" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:32:08.604" endtime="20230718 19:32:08.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:08.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:08.610" endtime="20230718 19:32:08.611"/>
</kw>
<msg timestamp="20230718 19:32:08.611" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:32:08.596" endtime="20230718 19:32:08.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:08.611" endtime="20230718 19:32:08.613"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:08.617" level="INFO">Running command 'rm /tmp/key-36788 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:08.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:08.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:08.613" endtime="20230718 19:32:08.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:08.625" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:08.623" endtime="20230718 19:32:08.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:08.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:08.625" endtime="20230718 19:32:08.625"/>
</kw>
<status status="PASS" starttime="20230718 19:32:08.613" endtime="20230718 19:32:08.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:02.053" endtime="20230718 19:32:08.626"/>
</test>
<test id="s1-s18-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:08.642" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:09.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:09.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:08.639" endtime="20230718 19:32:09.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:09.516" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:09.515" endtime="20230718 19:32:09.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:09.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:09.517" endtime="20230718 19:32:09.517"/>
</kw>
<status status="PASS" starttime="20230718 19:32:08.633" endtime="20230718 19:32:09.518"/>
</kw>
<msg timestamp="20230718 19:32:09.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:08.633" endtime="20230718 19:32:09.518"/>
</kw>
<status status="PASS" starttime="20230718 19:32:08.632" endtime="20230718 19:32:09.518"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:09.523" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:10.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:10.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:09.520" endtime="20230718 19:32:10.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:10.315" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:10.314" endtime="20230718 19:32:10.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:10.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:10.315" endtime="20230718 19:32:10.316"/>
</kw>
<status status="PASS" starttime="20230718 19:32:09.520" endtime="20230718 19:32:10.316"/>
</kw>
<msg timestamp="20230718 19:32:10.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:09.519" endtime="20230718 19:32:10.317"/>
</kw>
<status status="PASS" starttime="20230718 19:32:09.518" endtime="20230718 19:32:10.317"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:10.324" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:11.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:11.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:10.320" endtime="20230718 19:32:11.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:11.022" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:11.021" endtime="20230718 19:32:11.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:11.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:11.023" endtime="20230718 19:32:11.023"/>
</kw>
<status status="PASS" starttime="20230718 19:32:10.318" endtime="20230718 19:32:11.023"/>
</kw>
<msg timestamp="20230718 19:32:11.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:10.317" endtime="20230718 19:32:11.024"/>
</kw>
<status status="PASS" starttime="20230718 19:32:10.317" endtime="20230718 19:32:11.024"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:11.028" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:11.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:11.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:11.025" endtime="20230718 19:32:11.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:11.737" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:11.736" endtime="20230718 19:32:11.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:11.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:11.737" endtime="20230718 19:32:11.738"/>
</kw>
<status status="PASS" starttime="20230718 19:32:11.025" endtime="20230718 19:32:11.738"/>
</kw>
<msg timestamp="20230718 19:32:11.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230718 19:32:11.025" endtime="20230718 19:32:11.738"/>
</kw>
<status status="PASS" starttime="20230718 19:32:11.024" endtime="20230718 19:32:11.738"/>
</kw>
<status status="PASS" starttime="20230718 19:32:08.632" endtime="20230718 19:32:11.738"/>
</kw>
<status status="PASS" starttime="20230718 19:32:08.631" endtime="20230718 19:32:11.738"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:08.628" endtime="20230718 19:32:11.739"/>
</test>
<test id="s1-s18-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:11.744" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:15.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:15.912" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:32:11.742" endtime="20230718 19:32:15.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:15.913" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:32:12 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:32:15.912" endtime="20230718 19:32:15.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:15.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:15.914" endtime="20230718 19:32:15.914"/>
</kw>
<msg timestamp="20230718 19:32:15.915" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:32:11.741" endtime="20230718 19:32:15.915"/>
</kw>
<msg timestamp="20230718 19:32:15.915" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:32:11.741" endtime="20230718 19:32:15.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:15.915" endtime="20230718 19:32:15.915"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:15.919" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:15.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:15.922" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:32:15.916" endtime="20230718 19:32:15.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:15.923" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:32:15.923" endtime="20230718 19:32:15.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:15.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:15.924" endtime="20230718 19:32:15.924"/>
</kw>
<msg timestamp="20230718 19:32:15.924" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230718 19:32:15.916" endtime="20230718 19:32:15.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:15.925" endtime="20230718 19:32:15.925"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:15.928" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:15.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:15.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:15.926" endtime="20230718 19:32:15.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:15.933" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:15.932" endtime="20230718 19:32:15.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:15.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:15.933" endtime="20230718 19:32:15.934"/>
</kw>
<status status="PASS" starttime="20230718 19:32:15.925" endtime="20230718 19:32:15.934"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:11.740" endtime="20230718 19:32:15.934"/>
</test>
<test id="s1-s18-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:15.940" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:16.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:16.766" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:21 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:32:15.937" endtime="20230718 19:32:16.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:16.767" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:21 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 18 Jul 2023 19:32:16 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230718 19:32:16.766" endtime="20230718 19:32:16.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:16.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:16.768" endtime="20230718 19:32:16.768"/>
</kw>
<msg timestamp="20230718 19:32:16.769" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:21 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:32:15.937" endtime="20230718 19:32:16.769"/>
</kw>
<msg timestamp="20230718 19:32:16.769" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 18 Jul 2023 19:29:21 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230718 19:32:15.936" endtime="20230718 19:32:16.769"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:16.769" endtime="20230718 19:32:16.770"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:16.773" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:16.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:16.776" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:32:16.771" endtime="20230718 19:32:16.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:16.777" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:32:16.777" endtime="20230718 19:32:16.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:16.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:16.778" endtime="20230718 19:32:16.778"/>
</kw>
<msg timestamp="20230718 19:32:16.779" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230718 19:32:16.770" endtime="20230718 19:32:16.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230718 19:32:16.779" endtime="20230718 19:32:16.779"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230718 19:32:16.782" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230718 19:32:16.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230718 19:32:16.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230718 19:32:16.780" endtime="20230718 19:32:16.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230718 19:32:16.787" level="INFO"/>
<status status="PASS" starttime="20230718 19:32:16.786" endtime="20230718 19:32:16.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230718 19:32:16.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230718 19:32:16.787" endtime="20230718 19:32:16.787"/>
</kw>
<status status="PASS" starttime="20230718 19:32:16.780" endtime="20230718 19:32:16.788"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230718 19:32:15.935" endtime="20230718 19:32:16.788"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230718 19:32:01.963" endtime="20230718 19:32:16.790"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="519625"/>
</suite>
<statistics>
<total>
<stat pass="67" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="4" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="3" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="67" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5" name="Generate">upgrade.Generate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s6" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s8" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s9" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s11" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="5" fail="0" skip="0" id="s1-s12" name="Generate">upgrade.Generate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s13" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s14" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s15" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s16" name="Upgrade-Snapshot-Check">upgrade.Upgrade-Snapshot-Check</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Prepare">upgrade.Prepare</stat>
<stat pass="4" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
