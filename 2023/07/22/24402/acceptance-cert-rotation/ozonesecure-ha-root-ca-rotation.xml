<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230722 09:00:55.847" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:53:43.468" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 08:53:43.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 08:53:43.481" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230722 08:53:43.465" endtime="20230722 08:53:43.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:53:43.482" level="INFO">scm</msg>
<status status="PASS" starttime="20230722 08:53:43.481" endtime="20230722 08:53:43.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 08:53:43.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 08:53:43.483" endtime="20230722 08:53:43.484"/>
</kw>
<status status="PASS" starttime="20230722 08:53:43.464" endtime="20230722 08:53:43.484"/>
</kw>
<msg timestamp="20230722 08:53:43.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 08:53:43.463" endtime="20230722 08:53:43.484"/>
</kw>
<msg timestamp="20230722 08:53:43.485" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230722 08:53:43.463" endtime="20230722 08:53:43.485"/>
</kw>
<msg timestamp="20230722 08:53:43.485" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230722 08:53:43.462" endtime="20230722 08:53:43.485"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230722 08:53:43.486" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230722 08:53:43.485" endtime="20230722 08:53:43.486"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:53:43.493" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 08:53:43.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 08:53:43.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 08:53:43.488" endtime="20230722 08:53:43.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:53:43.713" level="INFO"/>
<status status="PASS" starttime="20230722 08:53:43.712" endtime="20230722 08:53:43.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 08:53:43.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 08:53:43.714" endtime="20230722 08:53:43.714"/>
</kw>
<status status="PASS" starttime="20230722 08:53:43.488" endtime="20230722 08:53:43.715"/>
</kw>
<msg timestamp="20230722 08:53:43.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 08:53:43.487" endtime="20230722 08:53:43.715"/>
</kw>
<status status="PASS" starttime="20230722 08:53:43.487" endtime="20230722 08:53:43.715"/>
</kw>
<status status="PASS" starttime="20230722 08:53:43.486" endtime="20230722 08:53:43.715"/>
</kw>
<status status="PASS" starttime="20230722 08:53:43.461" endtime="20230722 08:53:43.715"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230722 08:53:43.460" endtime="20230722 08:53:43.716"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230722 08:53:43.327" endtime="20230722 08:53:43.719"/>
</suite>
<suite id="s1-s2" name="Scm-Leader-Transfer" source="/opt/hadoop/smoketest/scmha/scm-leader-transfer.robot">
<test id="s1-s2-t1" name="Transfer Leadership" line="47">
<kw name="Get SCM Leader Node">
<var>${leaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:53:59.826" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 08:54:06.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 08:54:06.862" level="INFO">${output} = scm2.org:9894:FOLLOWER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:LEADER:629737d8-0cf9-4adb-8ab2-28210827a...</msg>
<status status="PASS" starttime="20230722 08:53:59.822" endtime="20230722 08:54:06.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:06.863" level="INFO">scm2.org:9894:FOLLOWER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:LEADER:629737d8-0cf9-4adb-8ab2-28210827a915:172.25.0.116</msg>
<status status="PASS" starttime="20230722 08:54:06.863" endtime="20230722 08:54:06.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 08:54:06.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 08:54:06.864" endtime="20230722 08:54:06.864"/>
</kw>
<status status="PASS" starttime="20230722 08:53:59.822" endtime="20230722 08:54:06.865"/>
</kw>
<msg timestamp="20230722 08:54:06.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 08:53:59.821" endtime="20230722 08:54:06.865"/>
</kw>
<msg timestamp="20230722 08:54:06.865" level="INFO">${result} = scm2.org:9894:FOLLOWER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:LEADER:629737d8-0cf9-4adb-8ab2-28210827a...</msg>
<status status="PASS" starttime="20230722 08:53:59.821" endtime="20230722 08:54:06.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:06.866" level="INFO">scm2.org:9894:FOLLOWER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:LEADER:629737d8-0cf9-4adb-8ab2-28210827a915:172.25.0.116</msg>
<status status="PASS" starttime="20230722 08:54:06.865" endtime="20230722 08:54:06.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 08:54:06.866" endtime="20230722 08:54:06.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 08:54:06.867" endtime="20230722 08:54:06.867"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230722 08:54:06.868" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230722 08:54:06.868" level="INFO">${scmLine} = scm1.org:9894:LEADER:629737d8-0cf9-4adb-8ab2-28210827a915:172.25.0.116</msg>
<status status="PASS" starttime="20230722 08:54:06.867" endtime="20230722 08:54:06.868"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230722 08:54:06.868" level="INFO">${splits} = ['scm1.org', '9894', 'LEADER', '629737d8-0cf9-4adb-8ab2-28210827a915', '172.25.0.116']</msg>
<status status="PASS" starttime="20230722 08:54:06.868" endtime="20230722 08:54:06.868"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230722 08:54:06.870" level="INFO">${leaderSCM} = 629737d8-0cf9-4adb-8ab2-28210827a915</msg>
<status status="PASS" starttime="20230722 08:54:06.869" endtime="20230722 08:54:06.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:06.870" level="INFO">Leader SCM: 629737d8-0cf9-4adb-8ab2-28210827a915</msg>
<status status="PASS" starttime="20230722 08:54:06.870" endtime="20230722 08:54:06.870"/>
</kw>
<msg timestamp="20230722 08:54:06.871" level="INFO">${leaderSCM} = 629737d8-0cf9-4adb-8ab2-28210827a915</msg>
<status status="PASS" starttime="20230722 08:53:59.820" endtime="20230722 08:54:06.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:06.871" level="INFO">Leader SCM: 629737d8-0cf9-4adb-8ab2-28210827a915</msg>
<status status="PASS" starttime="20230722 08:54:06.871" endtime="20230722 08:54:06.871"/>
</kw>
<kw name="Get SCM UUID">
<var>${target_scm_uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:54:06.877" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 08:54:14.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 08:54:14.256" level="INFO">${output} = scm2.org:9894:FOLLOWER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:LEADER:629737d8-0cf9-4adb-8ab2-28210827a...</msg>
<status status="PASS" starttime="20230722 08:54:06.873" endtime="20230722 08:54:14.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:14.258" level="INFO">scm2.org:9894:FOLLOWER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:LEADER:629737d8-0cf9-4adb-8ab2-28210827a915:172.25.0.116</msg>
<status status="PASS" starttime="20230722 08:54:14.257" endtime="20230722 08:54:14.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 08:54:14.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 08:54:14.258" endtime="20230722 08:54:14.259"/>
</kw>
<status status="PASS" starttime="20230722 08:54:06.873" endtime="20230722 08:54:14.259"/>
</kw>
<msg timestamp="20230722 08:54:14.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 08:54:06.872" endtime="20230722 08:54:14.260"/>
</kw>
<msg timestamp="20230722 08:54:14.260" level="INFO">${result} = scm2.org:9894:FOLLOWER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:LEADER:629737d8-0cf9-4adb-8ab2-28210827a...</msg>
<status status="PASS" starttime="20230722 08:54:06.872" endtime="20230722 08:54:14.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:14.260" level="INFO">scm2.org:9894:FOLLOWER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:LEADER:629737d8-0cf9-4adb-8ab2-28210827a915:172.25.0.116</msg>
<status status="PASS" starttime="20230722 08:54:14.260" endtime="20230722 08:54:14.260"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm_line}</var>
<arg>${result}</arg>
<arg>${TARGET_SCM}</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230722 08:54:14.270" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230722 08:54:14.271" level="INFO">${scm_line} = scm2.org:9894:FOLLOWER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117</msg>
<status status="PASS" starttime="20230722 08:54:14.261" endtime="20230722 08:54:14.271"/>
</kw>
<kw name="Split String" library="String">
<var>${scm_split}</var>
<arg>${scm_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230722 08:54:14.271" level="INFO">${scm_split} = ['scm2.org', '9894', 'FOLLOWER', 'b46082fe-fcb4-49cf-ba1f-839f72259af2', '172.25.0.117']</msg>
<status status="PASS" starttime="20230722 08:54:14.271" endtime="20230722 08:54:14.272"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm_uuid}</var>
<arg>${scm_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230722 08:54:14.273" level="INFO">${scm_uuid} = b46082fe-fcb4-49cf-ba1f-839f72259af2</msg>
<status status="PASS" starttime="20230722 08:54:14.272" endtime="20230722 08:54:14.273"/>
</kw>
<msg timestamp="20230722 08:54:14.273" level="INFO">${target_scm_uuid} = b46082fe-fcb4-49cf-ba1f-839f72259af2</msg>
<status status="PASS" starttime="20230722 08:54:06.872" endtime="20230722 08:54:14.273"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${target_scm_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:54:14.279" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n b46082fe-fcb4-49cf-ba1f-839f72259af2 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 08:54:29.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 08:54:29.636" level="INFO">${output} = Transfer leadership successfully to b46082fe-fcb4-49cf-ba1f-839f72259af2.</msg>
<status status="PASS" starttime="20230722 08:54:14.275" endtime="20230722 08:54:29.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:29.637" level="INFO">Transfer leadership successfully to b46082fe-fcb4-49cf-ba1f-839f72259af2.</msg>
<status status="PASS" starttime="20230722 08:54:29.637" endtime="20230722 08:54:29.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 08:54:29.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 08:54:29.638" endtime="20230722 08:54:29.638"/>
</kw>
<status status="PASS" starttime="20230722 08:54:14.275" endtime="20230722 08:54:29.639"/>
</kw>
<msg timestamp="20230722 08:54:29.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 08:54:14.274" endtime="20230722 08:54:29.639"/>
</kw>
<msg timestamp="20230722 08:54:29.639" level="INFO">${result} = Transfer leadership successfully to b46082fe-fcb4-49cf-ba1f-839f72259af2.</msg>
<status status="PASS" starttime="20230722 08:54:14.274" endtime="20230722 08:54:29.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:29.639" level="INFO">Transfer leadership successfully to b46082fe-fcb4-49cf-ba1f-839f72259af2.</msg>
<status status="PASS" starttime="20230722 08:54:29.639" endtime="20230722 08:54:29.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 08:54:29.640" endtime="20230722 08:54:29.640"/>
</kw>
<kw name="Get SCM Leader Node">
<var>${newLeaderSCM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:54:29.646" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 08:54:38.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 08:54:38.496" level="INFO">${output} = scm2.org:9894:LEADER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:FOLLOWER:629737d8-0cf9-4adb-8ab2-28210827a...</msg>
<status status="PASS" starttime="20230722 08:54:29.642" endtime="20230722 08:54:38.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:38.497" level="INFO">scm2.org:9894:LEADER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:FOLLOWER:629737d8-0cf9-4adb-8ab2-28210827a915:172.25.0.116</msg>
<status status="PASS" starttime="20230722 08:54:38.496" endtime="20230722 08:54:38.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 08:54:38.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 08:54:38.498" endtime="20230722 08:54:38.498"/>
</kw>
<status status="PASS" starttime="20230722 08:54:29.642" endtime="20230722 08:54:38.499"/>
</kw>
<msg timestamp="20230722 08:54:38.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 08:54:29.641" endtime="20230722 08:54:38.499"/>
</kw>
<msg timestamp="20230722 08:54:38.499" level="INFO">${result} = scm2.org:9894:LEADER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:FOLLOWER:629737d8-0cf9-4adb-8ab2-28210827a...</msg>
<status status="PASS" starttime="20230722 08:54:29.641" endtime="20230722 08:54:38.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:38.500" level="INFO">scm2.org:9894:LEADER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117
scm3.org:9894:FOLLOWER:d58dad75-6b41-4875-8252-27b865c35204:172.25.0.118
scm1.org:9894:FOLLOWER:629737d8-0cf9-4adb-8ab2-28210827a915:172.25.0.116</msg>
<status status="PASS" starttime="20230722 08:54:38.500" endtime="20230722 08:54:38.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 08:54:38.500" endtime="20230722 08:54:38.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 08:54:38.501" endtime="20230722 08:54:38.501"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scmLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230722 08:54:38.502" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230722 08:54:38.502" level="INFO">${scmLine} = scm2.org:9894:LEADER:b46082fe-fcb4-49cf-ba1f-839f72259af2:172.25.0.117</msg>
<status status="PASS" starttime="20230722 08:54:38.502" endtime="20230722 08:54:38.502"/>
</kw>
<kw name="Split String" library="String">
<var>${splits}</var>
<arg>${scmLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230722 08:54:38.503" level="INFO">${splits} = ['scm2.org', '9894', 'LEADER', 'b46082fe-fcb4-49cf-ba1f-839f72259af2', '172.25.0.117']</msg>
<status status="PASS" starttime="20230722 08:54:38.502" endtime="20230722 08:54:38.503"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderSCM}</var>
<arg>${splits[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230722 08:54:38.505" level="INFO">${leaderSCM} = b46082fe-fcb4-49cf-ba1f-839f72259af2</msg>
<status status="PASS" starttime="20230722 08:54:38.503" endtime="20230722 08:54:38.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader SCM: ${leaderSCM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:38.505" level="INFO">Leader SCM: b46082fe-fcb4-49cf-ba1f-839f72259af2</msg>
<status status="PASS" starttime="20230722 08:54:38.505" endtime="20230722 08:54:38.506"/>
</kw>
<msg timestamp="20230722 08:54:38.506" level="INFO">${newLeaderSCM} = b46082fe-fcb4-49cf-ba1f-839f72259af2</msg>
<status status="PASS" starttime="20230722 08:54:29.640" endtime="20230722 08:54:38.506"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderSCM}</arg>
<arg>${newLeaderSCM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230722 08:54:38.506" endtime="20230722 08:54:38.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230722 08:53:59.819" endtime="20230722 08:54:38.507"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230722 08:53:59.753" endtime="20230722 08:54:38.508"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:54:47.334" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 08:54:56.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 08:54:56.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 08:54:47.329" endtime="20230722 08:54:56.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:54:56.744" level="INFO"/>
<status status="PASS" starttime="20230722 08:54:56.743" endtime="20230722 08:54:56.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 08:54:56.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 08:54:56.745" endtime="20230722 08:54:56.746"/>
</kw>
<status status="PASS" starttime="20230722 08:54:47.329" endtime="20230722 08:54:56.746"/>
</kw>
<msg timestamp="20230722 08:54:56.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 08:54:47.328" endtime="20230722 08:54:56.747"/>
</kw>
<msg timestamp="20230722 08:54:56.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 08:54:47.327" endtime="20230722 08:54:56.747"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 08:54:56.747" endtime="20230722 08:54:56.748"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:54:56.755" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 08:55:05.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 08:55:05.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 08:54:56.751" endtime="20230722 08:55:05.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:55:05.972" level="INFO"/>
<status status="PASS" starttime="20230722 08:55:05.971" endtime="20230722 08:55:05.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 08:55:05.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 08:55:05.972" endtime="20230722 08:55:05.972"/>
</kw>
<status status="PASS" starttime="20230722 08:54:56.750" endtime="20230722 08:55:05.973"/>
</kw>
<msg timestamp="20230722 08:55:05.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 08:54:56.749" endtime="20230722 08:55:05.973"/>
</kw>
<msg timestamp="20230722 08:55:05.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 08:54:56.748" endtime="20230722 08:55:05.973"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 08:55:05.973" endtime="20230722 08:55:05.974"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230722 08:54:47.326" endtime="20230722 08:55:05.974"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:55:05.980" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230722 08:55:05.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 08:55:05.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 08:55:05.977" endtime="20230722 08:55:05.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 08:55:05.985" level="INFO"/>
<status status="PASS" starttime="20230722 08:55:05.983" endtime="20230722 08:55:05.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 08:55:05.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 08:55:05.985" endtime="20230722 08:55:05.985"/>
</kw>
<status status="PASS" starttime="20230722 08:55:05.976" endtime="20230722 08:55:05.986"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 08:55:05.991" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:00:05.976" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230722 08:55:05.988" endtime="20230722 09:00:05.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230722 09:00:05.977" endtime="20230722 09:00:05.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230722 09:00:05.977" endtime="20230722 09:00:05.977"/>
</kw>
<status status="FAIL" starttime="20230722 08:55:05.987" endtime="20230722 09:00:05.977"/>
</kw>
<msg timestamp="20230722 09:00:05.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230722 08:55:05.987" endtime="20230722 09:00:05.978"/>
</kw>
<status status="FAIL" starttime="20230722 08:55:05.986" endtime="20230722 09:00:05.978"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230722 09:00:05.978" endtime="20230722 09:00:05.978"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230722 09:00:05.978" endtime="20230722 09:00:05.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230722 08:55:05.975" endtime="20230722 09:00:05.979">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230722 09:00:05.982" level="INFO">${random} = 56051</msg>
<status status="PASS" starttime="20230722 09:00:05.981" endtime="20230722 09:00:05.982"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:00:05.987" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-56051 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:00:14.730" level="INFO">${rc} = 255</msg>
<msg timestamp="20230722 09:00:14.731" level="INFO">${output} = KEY_NOT_FOUND Key:rootca-key not found</msg>
<status status="PASS" starttime="20230722 09:00:05.984" endtime="20230722 09:00:14.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:00:14.732" level="INFO">KEY_NOT_FOUND Key:rootca-key not found</msg>
<status status="PASS" starttime="20230722 09:00:14.732" endtime="20230722 09:00:14.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:00:14.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230722 09:00:14.733" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20230722 09:00:14.733" endtime="20230722 09:00:14.734"/>
</kw>
<status status="FAIL" starttime="20230722 09:00:05.983" endtime="20230722 09:00:14.734"/>
</kw>
<msg timestamp="20230722 09:00:14.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230722 09:00:05.983" endtime="20230722 09:00:14.734"/>
</kw>
<status status="FAIL" starttime="20230722 09:00:05.982" endtime="20230722 09:00:14.734"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230722 09:00:14.734" endtime="20230722 09:00:14.734"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230722 09:00:14.735" endtime="20230722 09:00:14.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230722 09:00:14.735" endtime="20230722 09:00:14.735"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20230722 09:00:14.735" endtime="20230722 09:00:14.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230722 09:00:05.980" endtime="20230722 09:00:14.735">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20230722 08:54:47.262" endtime="20230722 09:00:14.737"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="366622"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="3" fail="2" skip="0" id="s1" name="ozonesecure-ha-root-ca-rotation">ozonesecure-ha-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Scm-Leader-Transfer">ozonesecure-ha-root-ca-rotation.Scm-Leader-Transfer</stat>
<stat pass="1" fail="2" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-ha-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
