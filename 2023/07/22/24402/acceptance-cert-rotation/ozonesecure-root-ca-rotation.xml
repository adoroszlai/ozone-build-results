<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230722 09:09:38.449" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:06:51.970" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:06:51.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:06:51.974" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230722 09:06:51.967" endtime="20230722 09:06:51.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:06:51.975" level="INFO">scm</msg>
<status status="PASS" starttime="20230722 09:06:51.974" endtime="20230722 09:06:51.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:06:51.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:06:51.975" endtime="20230722 09:06:51.975"/>
</kw>
<status status="PASS" starttime="20230722 09:06:51.967" endtime="20230722 09:06:51.976"/>
</kw>
<msg timestamp="20230722 09:06:51.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:06:51.966" endtime="20230722 09:06:51.976"/>
</kw>
<msg timestamp="20230722 09:06:51.976" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230722 09:06:51.966" endtime="20230722 09:06:51.976"/>
</kw>
<msg timestamp="20230722 09:06:51.976" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230722 09:06:51.966" endtime="20230722 09:06:51.976"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230722 09:06:51.977" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230722 09:06:51.976" endtime="20230722 09:06:51.977"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:06:51.980" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:06:52.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:06:52.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:06:51.978" endtime="20230722 09:06:52.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:06:52.085" level="INFO"/>
<status status="PASS" starttime="20230722 09:06:52.084" endtime="20230722 09:06:52.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:06:52.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:06:52.086" endtime="20230722 09:06:52.086"/>
</kw>
<status status="PASS" starttime="20230722 09:06:51.978" endtime="20230722 09:06:52.086"/>
</kw>
<msg timestamp="20230722 09:06:52.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:06:51.978" endtime="20230722 09:06:52.087"/>
</kw>
<status status="PASS" starttime="20230722 09:06:51.977" endtime="20230722 09:06:52.087"/>
</kw>
<status status="PASS" starttime="20230722 09:06:51.977" endtime="20230722 09:06:52.087"/>
</kw>
<status status="PASS" starttime="20230722 09:06:51.965" endtime="20230722 09:06:52.087"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230722 09:06:51.964" endtime="20230722 09:06:52.087"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230722 09:06:51.917" endtime="20230722 09:06:52.089"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:07:17.953" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:07:23.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:07:23.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:17.951" endtime="20230722 09:07:23.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:07:23.669" level="INFO"/>
<status status="PASS" starttime="20230722 09:07:23.668" endtime="20230722 09:07:23.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:07:23.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:07:23.669" endtime="20230722 09:07:23.670"/>
</kw>
<status status="PASS" starttime="20230722 09:07:17.950" endtime="20230722 09:07:23.670"/>
</kw>
<msg timestamp="20230722 09:07:23.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:07:17.950" endtime="20230722 09:07:23.670"/>
</kw>
<msg timestamp="20230722 09:07:23.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:17.949" endtime="20230722 09:07:23.671"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:07:23.671" endtime="20230722 09:07:23.671"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:07:23.678" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:07:30.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:07:30.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:23.673" endtime="20230722 09:07:30.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:07:30.932" level="INFO"/>
<status status="PASS" starttime="20230722 09:07:30.931" endtime="20230722 09:07:30.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:07:30.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:07:30.932" endtime="20230722 09:07:30.933"/>
</kw>
<status status="PASS" starttime="20230722 09:07:23.673" endtime="20230722 09:07:30.933"/>
</kw>
<msg timestamp="20230722 09:07:30.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:07:23.672" endtime="20230722 09:07:30.933"/>
</kw>
<msg timestamp="20230722 09:07:30.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:23.671" endtime="20230722 09:07:30.934"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:07:30.934" endtime="20230722 09:07:30.934"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230722 09:07:17.948" endtime="20230722 09:07:30.934"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:07:30.940" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230722 09:07:30.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:07:30.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:30.937" endtime="20230722 09:07:30.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:07:30.943" level="INFO"/>
<status status="PASS" starttime="20230722 09:07:30.943" endtime="20230722 09:07:30.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:07:30.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:07:30.944" endtime="20230722 09:07:30.944"/>
</kw>
<status status="PASS" starttime="20230722 09:07:30.937" endtime="20230722 09:07:30.944"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:07:30.949" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:07:41.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:07:41.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:30.946" endtime="20230722 09:07:41.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:07:41.365" level="INFO"/>
<status status="PASS" starttime="20230722 09:07:41.364" endtime="20230722 09:07:41.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:07:41.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:07:41.365" endtime="20230722 09:07:41.366"/>
</kw>
<status status="PASS" starttime="20230722 09:07:30.945" endtime="20230722 09:07:41.366"/>
</kw>
<msg timestamp="20230722 09:07:41.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:07:30.945" endtime="20230722 09:07:41.367"/>
</kw>
<msg timestamp="20230722 09:07:41.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:30.944" endtime="20230722 09:07:41.367"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:07:41.367" endtime="20230722 09:07:41.367"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:07:41.371" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:07:41.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:07:41.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:41.368" endtime="20230722 09:07:41.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:07:41.376" level="INFO"/>
<status status="PASS" starttime="20230722 09:07:41.375" endtime="20230722 09:07:41.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:07:41.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:07:41.376" endtime="20230722 09:07:41.377"/>
</kw>
<status status="PASS" starttime="20230722 09:07:41.367" endtime="20230722 09:07:41.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230722 09:07:30.936" endtime="20230722 09:07:41.377"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230722 09:07:41.380" level="INFO">${random} = 14316</msg>
<status status="PASS" starttime="20230722 09:07:41.380" endtime="20230722 09:07:41.380"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:07:41.385" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-14316 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:07:50.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:07:50.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:41.382" endtime="20230722 09:07:50.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:07:50.310" level="INFO"/>
<status status="PASS" starttime="20230722 09:07:50.309" endtime="20230722 09:07:50.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:07:50.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:07:50.310" endtime="20230722 09:07:50.310"/>
</kw>
<status status="PASS" starttime="20230722 09:07:41.381" endtime="20230722 09:07:50.310"/>
</kw>
<msg timestamp="20230722 09:07:50.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:07:41.381" endtime="20230722 09:07:50.311"/>
</kw>
<msg timestamp="20230722 09:07:50.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:41.380" endtime="20230722 09:07:50.311"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:07:50.311" endtime="20230722 09:07:50.311"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:07:50.315" level="INFO">Running command 'cat /tmp/key-14316 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:07:50.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:07:50.318" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230722 09:07:50.312" endtime="20230722 09:07:50.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:07:50.320" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230722 09:07:50.319" endtime="20230722 09:07:50.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:07:50.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:07:50.320" endtime="20230722 09:07:50.321"/>
</kw>
<msg timestamp="20230722 09:07:50.321" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230722 09:07:50.312" endtime="20230722 09:07:50.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:07:50.321" endtime="20230722 09:07:50.322"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:07:50.325" level="INFO">Running command 'rm /tmp/key-14316 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:07:50.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:07:50.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:07:50.323" endtime="20230722 09:07:50.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:07:50.330" level="INFO"/>
<status status="PASS" starttime="20230722 09:07:50.329" endtime="20230722 09:07:50.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:07:50.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:07:50.330" endtime="20230722 09:07:50.331"/>
</kw>
<status status="PASS" starttime="20230722 09:07:50.322" endtime="20230722 09:07:50.331"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230722 09:07:41.379" endtime="20230722 09:07:50.331"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230722 09:07:17.896" endtime="20230722 09:07:50.333"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:08:44.974" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:08:50.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:08:50.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:08:44.971" endtime="20230722 09:08:50.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:08:50.324" level="INFO"/>
<status status="PASS" starttime="20230722 09:08:50.323" endtime="20230722 09:08:50.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:08:50.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:08:50.324" endtime="20230722 09:08:50.325"/>
</kw>
<status status="PASS" starttime="20230722 09:08:44.970" endtime="20230722 09:08:50.325"/>
</kw>
<msg timestamp="20230722 09:08:50.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:08:44.970" endtime="20230722 09:08:50.325"/>
</kw>
<msg timestamp="20230722 09:08:50.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:08:44.969" endtime="20230722 09:08:50.326"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:08:50.326" endtime="20230722 09:08:50.326"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:08:50.331" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:08:55.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:08:55.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:08:50.328" endtime="20230722 09:08:55.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:08:55.934" level="INFO"/>
<status status="PASS" starttime="20230722 09:08:55.933" endtime="20230722 09:08:55.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:08:55.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:08:55.934" endtime="20230722 09:08:55.935"/>
</kw>
<status status="PASS" starttime="20230722 09:08:50.327" endtime="20230722 09:08:55.935"/>
</kw>
<msg timestamp="20230722 09:08:55.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:08:50.327" endtime="20230722 09:08:55.935"/>
</kw>
<msg timestamp="20230722 09:08:55.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:08:50.326" endtime="20230722 09:08:55.935"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:08:55.935" endtime="20230722 09:08:55.936"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230722 09:08:44.968" endtime="20230722 09:08:55.936"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:08:55.941" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230722 09:08:55.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:08:55.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:08:55.938" endtime="20230722 09:08:55.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:08:55.944" level="INFO"/>
<status status="PASS" starttime="20230722 09:08:55.943" endtime="20230722 09:08:55.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:08:55.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:08:55.944" endtime="20230722 09:08:55.945"/>
</kw>
<status status="PASS" starttime="20230722 09:08:55.937" endtime="20230722 09:08:55.945"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:08:55.949" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:09:05.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:09:05.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:08:55.947" endtime="20230722 09:09:05.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:09:05.127" level="INFO"/>
<status status="PASS" starttime="20230722 09:09:05.126" endtime="20230722 09:09:05.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:09:05.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:09:05.127" endtime="20230722 09:09:05.128"/>
</kw>
<status status="PASS" starttime="20230722 09:08:55.946" endtime="20230722 09:09:05.128"/>
</kw>
<msg timestamp="20230722 09:09:05.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:08:55.946" endtime="20230722 09:09:05.128"/>
</kw>
<msg timestamp="20230722 09:09:05.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:08:55.945" endtime="20230722 09:09:05.129"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:09:05.129" endtime="20230722 09:09:05.129"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:09:05.133" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:09:05.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:09:05.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:09:05.130" endtime="20230722 09:09:05.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:09:05.138" level="INFO"/>
<status status="PASS" starttime="20230722 09:09:05.137" endtime="20230722 09:09:05.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:09:05.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:09:05.139" endtime="20230722 09:09:05.139"/>
</kw>
<status status="PASS" starttime="20230722 09:09:05.129" endtime="20230722 09:09:05.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230722 09:08:55.937" endtime="20230722 09:09:05.140"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230722 09:09:05.142" level="INFO">${random} = 58908</msg>
<status status="PASS" starttime="20230722 09:09:05.142" endtime="20230722 09:09:05.142"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:09:05.147" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-58908 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:09:13.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:09:13.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:09:05.144" endtime="20230722 09:09:13.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:09:13.753" level="INFO"/>
<status status="PASS" starttime="20230722 09:09:13.752" endtime="20230722 09:09:13.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:09:13.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:09:13.753" endtime="20230722 09:09:13.753"/>
</kw>
<status status="PASS" starttime="20230722 09:09:05.144" endtime="20230722 09:09:13.754"/>
</kw>
<msg timestamp="20230722 09:09:13.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:09:05.143" endtime="20230722 09:09:13.754"/>
</kw>
<msg timestamp="20230722 09:09:13.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:09:05.143" endtime="20230722 09:09:13.754"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:09:13.754" endtime="20230722 09:09:13.755"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:09:13.758" level="INFO">Running command 'cat /tmp/key-58908 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:09:13.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:09:13.761" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230722 09:09:13.755" endtime="20230722 09:09:13.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:09:13.762" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230722 09:09:13.761" endtime="20230722 09:09:13.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:09:13.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:09:13.762" endtime="20230722 09:09:13.763"/>
</kw>
<msg timestamp="20230722 09:09:13.763" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230722 09:09:13.755" endtime="20230722 09:09:13.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230722 09:09:13.763" endtime="20230722 09:09:13.764"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:09:13.767" level="INFO">Running command 'rm /tmp/key-58908 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:09:13.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:09:13.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230722 09:09:13.764" endtime="20230722 09:09:13.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:09:13.770" level="INFO"/>
<status status="PASS" starttime="20230722 09:09:13.770" endtime="20230722 09:09:13.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:09:13.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:09:13.770" endtime="20230722 09:09:13.771"/>
</kw>
<status status="PASS" starttime="20230722 09:09:13.764" endtime="20230722 09:09:13.771"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230722 09:09:05.141" endtime="20230722 09:09:13.771"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230722 09:08:44.916" endtime="20230722 09:09:13.773"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230722 09:09:17.657" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230722 09:09:18.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230722 09:09:18.254" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230722 09:09:17.654" endtime="20230722 09:09:18.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:09:18.256" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230722 09:09:18.255" endtime="20230722 09:09:18.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230722 09:09:18.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230722 09:09:18.256" endtime="20230722 09:09:18.257"/>
</kw>
<status status="PASS" starttime="20230722 09:09:17.654" endtime="20230722 09:09:18.257"/>
</kw>
<msg timestamp="20230722 09:09:18.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230722 09:09:17.653" endtime="20230722 09:09:18.257"/>
</kw>
<msg timestamp="20230722 09:09:18.258" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230722 09:09:17.653" endtime="20230722 09:09:18.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230722 09:09:18.259" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230722 09:09:18.258" endtime="20230722 09:09:18.259"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230722 09:09:18.259" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230722 09:09:18.259" endtime="20230722 09:09:18.260"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230722 09:09:18.261" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230722 09:09:18.260" endtime="20230722 09:09:18.261"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230722 09:09:18.262" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230722 09:09:18.261" endtime="20230722 09:09:18.262"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230722 09:09:18.263" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230722 09:09:18.262" endtime="20230722 09:09:18.263"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230722 09:09:18.264" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230722 09:09:18.264" endtime="20230722 09:09:18.264"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230722 09:09:18.264" endtime="20230722 09:09:18.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230722 09:09:17.652" endtime="20230722 09:09:18.265"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230722 09:09:17.599" endtime="20230722 09:09:18.267"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="62134"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
