<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230726 04:52:11.377" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:49:25.490" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:49:25.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:49:25.495" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230726 04:49:25.487" endtime="20230726 04:49:25.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:49:25.496" level="INFO">scm</msg>
<status status="PASS" starttime="20230726 04:49:25.495" endtime="20230726 04:49:25.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:49:25.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:49:25.497" endtime="20230726 04:49:25.497"/>
</kw>
<status status="PASS" starttime="20230726 04:49:25.486" endtime="20230726 04:49:25.497"/>
</kw>
<msg timestamp="20230726 04:49:25.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:49:25.485" endtime="20230726 04:49:25.498"/>
</kw>
<msg timestamp="20230726 04:49:25.498" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230726 04:49:25.485" endtime="20230726 04:49:25.498"/>
</kw>
<msg timestamp="20230726 04:49:25.498" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230726 04:49:25.484" endtime="20230726 04:49:25.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230726 04:49:25.499" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230726 04:49:25.498" endtime="20230726 04:49:25.499"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:49:25.504" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:49:25.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:49:25.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:49:25.501" endtime="20230726 04:49:25.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:49:25.537" level="INFO"/>
<status status="PASS" starttime="20230726 04:49:25.536" endtime="20230726 04:49:25.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:49:25.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:49:25.537" endtime="20230726 04:49:25.538"/>
</kw>
<status status="PASS" starttime="20230726 04:49:25.501" endtime="20230726 04:49:25.538"/>
</kw>
<msg timestamp="20230726 04:49:25.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:49:25.500" endtime="20230726 04:49:25.539"/>
</kw>
<status status="PASS" starttime="20230726 04:49:25.500" endtime="20230726 04:49:25.539"/>
</kw>
<status status="PASS" starttime="20230726 04:49:25.499" endtime="20230726 04:49:25.539"/>
</kw>
<status status="PASS" starttime="20230726 04:49:25.483" endtime="20230726 04:49:25.539"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230726 04:49:25.482" endtime="20230726 04:49:25.539"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230726 04:49:25.412" endtime="20230726 04:49:25.541"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:49:50.575" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:49:56.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:49:56.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:49:50.571" endtime="20230726 04:49:56.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:49:56.855" level="INFO"/>
<status status="PASS" starttime="20230726 04:49:56.854" endtime="20230726 04:49:56.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:49:56.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:49:56.855" endtime="20230726 04:49:56.856"/>
</kw>
<status status="PASS" starttime="20230726 04:49:50.569" endtime="20230726 04:49:56.857"/>
</kw>
<msg timestamp="20230726 04:49:56.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:49:50.568" endtime="20230726 04:49:56.857"/>
</kw>
<msg timestamp="20230726 04:49:56.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:49:50.567" endtime="20230726 04:49:56.857"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:49:56.857" endtime="20230726 04:49:56.858"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:49:56.863" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:50:04.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:50:04.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:49:56.860" endtime="20230726 04:50:04.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:50:04.704" level="INFO"/>
<status status="PASS" starttime="20230726 04:50:04.703" endtime="20230726 04:50:04.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:50:04.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:50:04.705" endtime="20230726 04:50:04.705"/>
</kw>
<status status="PASS" starttime="20230726 04:49:56.860" endtime="20230726 04:50:04.706"/>
</kw>
<msg timestamp="20230726 04:50:04.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:49:56.859" endtime="20230726 04:50:04.706"/>
</kw>
<msg timestamp="20230726 04:50:04.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:49:56.858" endtime="20230726 04:50:04.706"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:50:04.706" endtime="20230726 04:50:04.707"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230726 04:49:50.566" endtime="20230726 04:50:04.707"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:50:04.712" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230726 04:50:04.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:50:04.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:50:04.710" endtime="20230726 04:50:04.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:50:04.716" level="INFO"/>
<status status="PASS" starttime="20230726 04:50:04.716" endtime="20230726 04:50:04.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:50:04.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:50:04.717" endtime="20230726 04:50:04.718"/>
</kw>
<status status="PASS" starttime="20230726 04:50:04.709" endtime="20230726 04:50:04.718"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:50:04.723" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:50:18.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:50:18.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:50:04.720" endtime="20230726 04:50:18.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:50:18.270" level="INFO"/>
<status status="PASS" starttime="20230726 04:50:18.269" endtime="20230726 04:50:18.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:50:18.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:50:18.270" endtime="20230726 04:50:18.271"/>
</kw>
<status status="PASS" starttime="20230726 04:50:04.719" endtime="20230726 04:50:18.271"/>
</kw>
<msg timestamp="20230726 04:50:18.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:50:04.719" endtime="20230726 04:50:18.271"/>
</kw>
<msg timestamp="20230726 04:50:18.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:50:04.718" endtime="20230726 04:50:18.272"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:50:18.272" endtime="20230726 04:50:18.273"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:50:18.277" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:50:18.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:50:18.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:50:18.274" endtime="20230726 04:50:18.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:50:18.281" level="INFO"/>
<status status="PASS" starttime="20230726 04:50:18.281" endtime="20230726 04:50:18.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:50:18.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:50:18.282" endtime="20230726 04:50:18.282"/>
</kw>
<status status="PASS" starttime="20230726 04:50:18.273" endtime="20230726 04:50:18.283"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230726 04:50:04.708" endtime="20230726 04:50:18.283"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230726 04:50:18.286" level="INFO">${random} = 79653</msg>
<status status="PASS" starttime="20230726 04:50:18.285" endtime="20230726 04:50:18.286"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:50:18.290" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-79653 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:50:27.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:50:27.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:50:18.288" endtime="20230726 04:50:27.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:50:27.122" level="INFO"/>
<status status="PASS" starttime="20230726 04:50:27.121" endtime="20230726 04:50:27.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:50:27.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:50:27.122" endtime="20230726 04:50:27.123"/>
</kw>
<status status="PASS" starttime="20230726 04:50:18.287" endtime="20230726 04:50:27.123"/>
</kw>
<msg timestamp="20230726 04:50:27.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:50:18.287" endtime="20230726 04:50:27.123"/>
</kw>
<msg timestamp="20230726 04:50:27.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:50:18.286" endtime="20230726 04:50:27.124"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:50:27.124" endtime="20230726 04:50:27.124"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:50:27.128" level="INFO">Running command 'cat /tmp/key-79653 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:50:27.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:50:27.132" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230726 04:50:27.125" endtime="20230726 04:50:27.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:50:27.134" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230726 04:50:27.133" endtime="20230726 04:50:27.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:50:27.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:50:27.134" endtime="20230726 04:50:27.135"/>
</kw>
<msg timestamp="20230726 04:50:27.135" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230726 04:50:27.124" endtime="20230726 04:50:27.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:50:27.135" endtime="20230726 04:50:27.136"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:50:27.139" level="INFO">Running command 'rm /tmp/key-79653 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:50:27.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:50:27.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:50:27.137" endtime="20230726 04:50:27.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:50:27.143" level="INFO"/>
<status status="PASS" starttime="20230726 04:50:27.143" endtime="20230726 04:50:27.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:50:27.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:50:27.143" endtime="20230726 04:50:27.144"/>
</kw>
<status status="PASS" starttime="20230726 04:50:27.136" endtime="20230726 04:50:27.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230726 04:50:18.284" endtime="20230726 04:50:27.145"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230726 04:49:50.498" endtime="20230726 04:50:27.147"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:51:12.924" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:51:20.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:51:20.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:12.921" endtime="20230726 04:51:20.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:20.017" level="INFO"/>
<status status="PASS" starttime="20230726 04:51:20.016" endtime="20230726 04:51:20.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:51:20.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:51:20.017" endtime="20230726 04:51:20.018"/>
</kw>
<status status="PASS" starttime="20230726 04:51:12.921" endtime="20230726 04:51:20.018"/>
</kw>
<msg timestamp="20230726 04:51:20.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:51:12.920" endtime="20230726 04:51:20.018"/>
</kw>
<msg timestamp="20230726 04:51:20.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:12.919" endtime="20230726 04:51:20.018"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:51:20.019" endtime="20230726 04:51:20.019"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:51:20.024" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:51:26.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:51:26.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:20.021" endtime="20230726 04:51:26.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:26.413" level="INFO"/>
<status status="PASS" starttime="20230726 04:51:26.412" endtime="20230726 04:51:26.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:51:26.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:51:26.413" endtime="20230726 04:51:26.414"/>
</kw>
<status status="PASS" starttime="20230726 04:51:20.021" endtime="20230726 04:51:26.414"/>
</kw>
<msg timestamp="20230726 04:51:26.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:51:20.020" endtime="20230726 04:51:26.414"/>
</kw>
<msg timestamp="20230726 04:51:26.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:20.019" endtime="20230726 04:51:26.414"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:51:26.414" endtime="20230726 04:51:26.415"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230726 04:51:12.918" endtime="20230726 04:51:26.415"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:51:26.422" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230726 04:51:26.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:51:26.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:26.417" endtime="20230726 04:51:26.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:26.426" level="INFO"/>
<status status="PASS" starttime="20230726 04:51:26.424" endtime="20230726 04:51:26.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:51:26.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:51:26.426" endtime="20230726 04:51:26.426"/>
</kw>
<status status="PASS" starttime="20230726 04:51:26.416" endtime="20230726 04:51:26.427"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:51:26.431" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:51:36.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:51:36.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:26.429" endtime="20230726 04:51:36.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:36.527" level="INFO"/>
<status status="PASS" starttime="20230726 04:51:36.527" endtime="20230726 04:51:36.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:51:36.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:51:36.528" endtime="20230726 04:51:36.529"/>
</kw>
<status status="PASS" starttime="20230726 04:51:26.428" endtime="20230726 04:51:36.529"/>
</kw>
<msg timestamp="20230726 04:51:36.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:51:26.428" endtime="20230726 04:51:36.529"/>
</kw>
<msg timestamp="20230726 04:51:36.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:26.427" endtime="20230726 04:51:36.529"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:51:36.530" endtime="20230726 04:51:36.530"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:51:36.534" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:51:36.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:51:36.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:36.531" endtime="20230726 04:51:36.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:36.538" level="INFO"/>
<status status="PASS" starttime="20230726 04:51:36.538" endtime="20230726 04:51:36.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:51:36.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:51:36.539" endtime="20230726 04:51:36.539"/>
</kw>
<status status="PASS" starttime="20230726 04:51:36.530" endtime="20230726 04:51:36.539"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230726 04:51:26.416" endtime="20230726 04:51:36.540"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230726 04:51:36.542" level="INFO">${random} = 71703</msg>
<status status="PASS" starttime="20230726 04:51:36.542" endtime="20230726 04:51:36.542"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:51:36.547" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-71703 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:51:45.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:51:45.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:36.545" endtime="20230726 04:51:45.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:45.386" level="INFO"/>
<status status="PASS" starttime="20230726 04:51:45.380" endtime="20230726 04:51:45.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:51:45.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:51:45.386" endtime="20230726 04:51:45.387"/>
</kw>
<status status="PASS" starttime="20230726 04:51:36.544" endtime="20230726 04:51:45.388"/>
</kw>
<msg timestamp="20230726 04:51:45.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:51:36.543" endtime="20230726 04:51:45.388"/>
</kw>
<msg timestamp="20230726 04:51:45.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:36.543" endtime="20230726 04:51:45.388"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:51:45.391" endtime="20230726 04:51:45.392"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:51:45.397" level="INFO">Running command 'cat /tmp/key-71703 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:51:45.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:51:45.404" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230726 04:51:45.393" endtime="20230726 04:51:45.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:45.413" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230726 04:51:45.410" endtime="20230726 04:51:45.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:51:45.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:51:45.414" endtime="20230726 04:51:45.415"/>
</kw>
<msg timestamp="20230726 04:51:45.416" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230726 04:51:45.392" endtime="20230726 04:51:45.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230726 04:51:45.417" endtime="20230726 04:51:45.418"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:51:45.427" level="INFO">Running command 'rm /tmp/key-71703 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:51:45.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:51:45.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230726 04:51:45.422" endtime="20230726 04:51:45.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:45.433" level="INFO"/>
<status status="PASS" starttime="20230726 04:51:45.432" endtime="20230726 04:51:45.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:51:45.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:51:45.434" endtime="20230726 04:51:45.435"/>
</kw>
<status status="PASS" starttime="20230726 04:51:45.418" endtime="20230726 04:51:45.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230726 04:51:36.541" endtime="20230726 04:51:45.435"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230726 04:51:12.852" endtime="20230726 04:51:45.437"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230726 04:51:49.616" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230726 04:51:50.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230726 04:51:50.254" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230726 04:51:49.613" endtime="20230726 04:51:50.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:50.255" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230726 04:51:50.254" endtime="20230726 04:51:50.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230726 04:51:50.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230726 04:51:50.256" endtime="20230726 04:51:50.257"/>
</kw>
<status status="PASS" starttime="20230726 04:51:49.612" endtime="20230726 04:51:50.257"/>
</kw>
<msg timestamp="20230726 04:51:50.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230726 04:51:49.611" endtime="20230726 04:51:50.257"/>
</kw>
<msg timestamp="20230726 04:51:50.258" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230726 04:51:49.611" endtime="20230726 04:51:50.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230726 04:51:50.258" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230726 04:51:50.258" endtime="20230726 04:51:50.258"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230726 04:51:50.259" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230726 04:51:50.259" endtime="20230726 04:51:50.259"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230726 04:51:50.261" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230726 04:51:50.260" endtime="20230726 04:51:50.261"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230726 04:51:50.262" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230726 04:51:50.261" endtime="20230726 04:51:50.262"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230726 04:51:50.265" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230726 04:51:50.263" endtime="20230726 04:51:50.266"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230726 04:51:50.267" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230726 04:51:50.266" endtime="20230726 04:51:50.267"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230726 04:51:50.267" endtime="20230726 04:51:50.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230726 04:51:49.610" endtime="20230726 04:51:50.269"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230726 04:51:49.544" endtime="20230726 04:51:50.272"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="70091"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
